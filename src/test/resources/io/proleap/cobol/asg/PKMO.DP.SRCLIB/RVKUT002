000100******************************************************************00010040
000200 IDENTIFICATION DIVISION.                                         00020040
000300******************************************************************00030040
000400                                                                  00040040
000500 PROGRAM-ID.    RVKUT002.                                         00050040
000600 AUTHOR.        MICHAEL WALTERS.                                  00060040
000700 INSTALLATION.  KOHLS.                                            00070040
000800 DATE-WRITTEN   AUGUST, 1995.                                     00080040
000900 DATE-COMPILED.                                                   00090040
001000                                                                  00100040
001100******************************************************************00110040
001200*  THIS PROGRAM CREATES THE EXTRACT FILE FOR THE MONTHLY RETURN TO00120040
001300*  VENDOR SUMMARY REPORTS.                                        00130040
001400******************************************************************00140040
001500                                                                  00150040
001600******************************************************************00160040
001700*  CHANGE LOG.                                                    00170040
001800*  DATE         CHANGED BY      DESC                              00180040
001900*  -----------  --------------  ----------------------------------00190040
002000* 10/30/2011   C. STRODTHOFF - GENCO / RTV UPGRADE. CHANGE        00200040
002100*                              MATCH TO FIND FACILITY NAME - USE  00210040
002200*                              RTV-LOC. PRJ ID 3219 - WR40134.    00220040
002300***************************************************************** 00230040
002400*  DATE         CHANGED BY      DESC                              00240040
002500*  -----------  --------------  ----------------------------------00250040
002600* 06/07/2020   GERMAN BANDA  - ADD NEW REPORT TYPE                00260040
002700*                              CC-WEEKLY-REPORT TO ALLOW CREATION 00270040
002800*              CHG0244919      OF WEEKLY REPORTS. ADDED LOGIC SO  00280040
002900*                              PROGRAM WILL NOT ABEND WHEN NOT    00290040
003000*                              WHEN THE DITEM_CURSOR DOES NOT     00300040
003100*                              RETURN ANY ROWS                    00310040
003200***************************************************************** 00320040
003300******************************************************************00330040
003400 ENVIRONMENT DIVISION.                                            00340040
003500******************************************************************00350040
003600                                                                  00360040
003700 CONFIGURATION SECTION.                                           00370040
003800                                                                  00380040
003900 SOURCE-COMPUTER.        IBM-3090.                                00390040
004000 OBJECT-COMPUTER.        IBM-3090.                                00400040
004100                                                                  00410040
004200 INPUT-OUTPUT SECTION.                                            00420040
004300                                                                  00430040
004400 FILE-CONTROL.                                                    00440040
004500                                                                  00450040
004600     SELECT RTV-REPORT-EXTRACT                                    00460040
004700         ASSIGN TO OUT01.                                         00470040
004800                                                                  00480040
004900******************************************************************00490040
005000 DATA DIVISION.                                                   00500040
005100******************************************************************00510040
005200                                                                  00520040
005300 FILE SECTION.                                                    00530040
005400                                                                  00540040
005500 FD  RTV-REPORT-EXTRACT                                           00550040
005600     RECORDING MODE IS F                                          00560040
005700     LABEL RECORDS ARE STANDARD                                   00570040
005800     BLOCK CONTAINS 0 RECORDS.                                    00580040
005900                                                                  00590040
006000 01  RTV-REPORT-EXTRACT-RECORD       PIC  X(200).                 00600040
006100*                                                                 00610040
006200*                                                                 00620040
006300******************************************************************00630040
006400 WORKING-STORAGE SECTION.                                         00640040
006500******************************************************************00650040
006600******************************************************************00660040
006700*  DB2 FORMATTED MESSAGE AREA                                     00670040
006800******************************************************************00680040
006900     COPY DPWS004.                                                00690040
007000                                                                  00700040
007100******************************************************************00710040
007200*  RTV REPORT EXTRACT RECORD LAYOUT                               00720040
007300******************************************************************00730040
007400     COPY RVWS010.                                                00740040
007500                                                                  00750040
007600******************************************************************00760040
007700*  PARAMETER LIST FOR CALLING THE MBS LOOKUP SUBROUTINE           00770040
007800******************************************************************00780040
007900     COPY DPWS003.                                                00790040
008000                                                                  00800040
008100******************************************************************00810040
008200*  WORK AREA FOR FISCAL CALENDAR ROUTINE.                         00820040
008300******************************************************************00830040
008400     COPY DPWS500.                                                00840040
008500                                                                  00850040
008600******************************************************************00860040
008700*  COPYBOOK FOR XLKUT001 - LOGISTICS DOMAIN ACCESS MODULE         00870040
008800******************************************************************00880040
008900     COPY XLWS001.                                                00890040
009000                                                                  00900040
009100******************************************************************00910040
009200*  COMMUNICATIONS AREA FOR DB2                                    00920040
009300******************************************************************00930040
009400     EXEC SQL                                                     00940040
009500          INCLUDE SQLCA                                           00950040
009600     END-EXEC.                                                    00960040
009700                                                                  00970040
009800******************************************************************00980040
009900*  DB2 TABLE DECLARATION - LOGISTICS LOCATION TABLE (XLT_LOC)     00990040
010000******************************************************************01000040
010100     EXEC SQL                                                     01010040
010200          INCLUDE XLT00010                                        01020040
010300     END-EXEC.                                                    01030040
010400                                                                  01040040
010500******************************************************************01050040
010600*  DB2 TABLE DECLARATION - DC LOC ASGMT TABLE (XLT_DC_LOC_ASGMT)  01060040
010700******************************************************************01070040
010800     EXEC SQL                                                     01080040
010900          INCLUDE XLT00014                                        01090040
011000     END-EXEC.                                                    01100040
011100                                                                  01110040
011200******************************************************************01120040
011300*  DB2 TABLE DECLARATION - DEFECTIVE ITEM HEADER TABLE (TDFCTOR)  01130040
011400******************************************************************01140040
011500     EXEC SQL                                                     01150040
011600          INCLUDE TDFCTOR                                         01160040
011700     END-EXEC.                                                    01170040
011800                                                                  01180040
011900******************************************************************01190040
012000*  DB2 TABLE DECLARATION - DEFECTIVE ITEM DETAIL TABLE (TDFMEIT)  01200040
012100******************************************************************01210040
012200     EXEC SQL                                                     01220040
012300          INCLUDE TDFMEIT                                         01230040
012400     END-EXEC.                                                    01240040
012500                                                                  01250040
012600******************************************************************01260040
012700*  DB2 TABLE DECLARATION - VENDOR/DEPT ASSOCIATION TABLE (TVNDDPT)01270040
012800******************************************************************01280040
012900     EXEC SQL                                                     01290040
013000          INCLUDE TVNDDPT                                         01300040
013100     END-EXEC.                                                    01310040
013200                                                                  01320040
013300******************************************************************01330040
013400*  DB2 TABLE DECLARATION - EXTERNAL ENTERPRISE TABLE (TEXTENT)    01340040
013500******************************************************************01350040
013600     EXEC SQL                                                     01360040
013700          INCLUDE TEXTENT                                         01370040
013800     END-EXEC.                                                    01380040
013900                                                                  01390040
014000******************************************************************01400040
014100*  DB2 TABLE DECLARATION - ENTITY NAME TABLE    (TENTNME)         01410040
014200******************************************************************01420040
014300     EXEC SQL                                                     01430040
014400          INCLUDE TENTNME                                         01440040
014500     END-EXEC.                                                    01450040
014600                                                                  01460040
014700                                                                  01470040
014800 01  ABEND-CODE                      PIC S9(04)    VALUE +0       01480040
014900                                                   COMP SYNC.     01490040
015000 01  PA-PROGRAM-ACCUMULATORS.                                     01500040
015100     05  PA-GRAND-TOTALS.                                         01510040
015200         10 PA-DR-TOTAL-QTY              PIC S9(06)  VALUE +0     01520040
015300                                                     COMP-3.      01530040
015400         10 PA-DR-TOTAL-RETAIL           PIC S9(08)V99            01540040
015500                                                     VALUE +0     01550040
015600                                                     COMP-3.      01560040
015700         10 PA-DR-TOTAL-COST             PIC S9(08)V99            01570040
015800                                                     VALUE +0     01580040
015900                                                     COMP-3.      01590040
016000         10 PA-DD-TOTAL-QTY              PIC S9(06)  VALUE +0     01600040
016100                                                     COMP-3.      01610040
016200         10 PA-DD-TOTAL-RETAIL           PIC S9(08)V99            01620040
016300                                                     VALUE +0     01630040
016400                                                     COMP-3.      01640040
016500         10 PA-DD-TOTAL-COST             PIC S9(08)V99            01650040
016600                                                     VALUE +0     01660040
016700                                                     COMP-3.      01670040
016800         10 PA-MO-TOTAL-QTY              PIC S9(06)  VALUE +0     01680040
016900                                                     COMP-3.      01690040
017000         10 PA-MO-TOTAL-RETAIL           PIC S9(08)V99            01700040
017100                                                     VALUE +0     01710040
017200                                                     COMP-3.      01720040
017300         10 PA-MO-TOTAL-COST             PIC S9(08)V99            01730040
017400                                                     VALUE +0     01740040
017500                                                     COMP-3.      01750040
017600 01  PS-PROGRAM-SWITCHES.                                         01760040
017700     05  PS-EOC-DRIVER-CURSOR-SW     PIC  X(01)    VALUE 'N'.     01770040
017800         88  PS-EOC-DRIVER-CURSOR                  VALUE 'Y'.     01780040
017900         88  PS-NOT-EOC-DRIVER-CURSOR              VALUE 'N'.     01790040
018000     05  PS-EOC-DC-CURSOR-SW         PIC  X(01)    VALUE 'N'.     01800040
018100         88  PS-EOC-DC-CURSOR                      VALUE 'Y'.     01810040
018200         88  PS-NOT-EOC-DC-CURSOR                  VALUE 'N'.     01820040
018300     05  PS-DEPT-NBR-FOUND-SW        PIC  X(01)    VALUE 'Y'.     01830040
018400         88  PS-DEPT-NBR-FOUND                     VALUE 'Y'.     01840040
018500         88  PS-DEPT-NBR-NOT-FOUND                 VALUE 'N'.     01850040
018600                                                                  01860040
018700 01  PC-PROGRAM-CONSTANTS.                                        01870040
018800     05  PC-PGM-DPKUT039             PIC  X(08)    VALUE          01880040
018900         'DPKUT039'.                                              01890040
019000                                                                  01900040
019100 01  PV-PROGRAM-VARIABLES.                                        01910040
019200     05  PV-BEGIN-DATE                   PIC  X(10)  VALUE SPACE. 01920040
019300     05  PV-END-DATE                     PIC  X(10)  VALUE SPACE. 01930040
019400     05  PV-CURRENT-DATE                 PIC  X(10).              01940040
019500     05  PV-CURRENT-DATE-RFMT REDEFINES PV-CURRENT-DATE.          01950040
019600         10 PV-CURRENT-DATE-CC           PIC  X(2).               01960040
019700         10 PV-CURRENT-DATE-YY           PIC  X(2).               01970040
019800         10 FILLER                       PIC  X.                  01980040
019900         10 PV-CURRENT-DATE-MM           PIC  X(2).               01990040
020000         10 FILLER                       PIC  X.                  02000040
020100         10 PV-CURRENT-DATE-DD           PIC  X(2).               02010040
020200     05  PV-WORK-DATE.                                            02020040
020300         10 PV-WORK-DATE-YY              PIC  X(2)  VALUE SPACES. 02030040
020400         10 PV-WORK-DATE-MM              PIC  X(2)  VALUE SPACES. 02040040
020500         10 PV-WORK-DATE-DD              PIC  X(2)  VALUE SPACES. 02050040
020600     05  PV-DB2-WORK-DATE.                                        02060040
020700         10 PV-DB2-CC                    PIC  9(2).               02070040
020800         10 PV-DB2-YY                    PIC  9(2).               02080040
020900         10 FILLER                       PIC  X.                  02090040
021000         10 PV-DB2-MM                    PIC  9(2).               02100040
021100         10 FILLER                       PIC  X.                  02110040
021200         10 PV-DB2-DD                    PIC  9(2).               02120040
021300     05  PV-HOLD-DPT-NBR                 PIC  X(10).              02130040
021400     05  PV-HOLD-ITEM-NBR                PIC S9(15)  COMP-3.      02140040
021500     05  PV-PREV-DAYS                    PIC  9(03).              02150040
021600     05  PV-HOLD-OPER-UNT-ID             PIC  9(04).              02160040
021700     05  FILLER REDEFINES PV-HOLD-OPER-UNT-ID.                    02170040
021800         10 PV-HOLD-OPER-UNT-ID-X        PIC  X(04).              02180040
021900                                                                  02190040
022000 01  DCW-DC-WORK-TABLE-VARIABLES.                                 02200040
022100     05  DCW-MAX-ITEMS                PIC S9(03)    VALUE +99     02210040
022200                                                    COMP-3.       02220040
022300     05  DCW-WORK-TABLE.                                          02230040
022400         10  DCW-ITEM-ENTRIES         OCCURS 99 TIMES             02240040
022500                                      INDEXED BY DCW-IDX.         02250040
022600             15  DCW-OPER-UNT-ID      PIC 9(04).                  02260040
022700             15  DCW-STR-NBR          PIC 9(04).                  02270040
022800             15  DCW-NAME             PIC X(25).                  02280040
022900             15  DCW-ABBR             PIC X(10).                  02290040
023000                                                                  02300040
023100 01  CC-CONTROL-CARD.                                             02310040
023200     05  CC-BEGIN-DATE                   PIC  X(10)  VALUE SPACE. 02320040
023300         88  CC-DEFAULT-BEGIN-DATE       VALUE 'DEFAULT   '.      02330040
023400     05  CC-END-DATE                     PIC  X(10)  VALUE SPACE. 02340040
023500         88  CC-DEFAULT-END-DATE         VALUE 'DEFAULT   '.      02350040
023600     05  CC-RPT-TYPE                     PIC  X(01)  VALUE SPACE. 02360040
023700         88  CC-VALID-RPT-TYPE           VALUE 'M', 'Y', 'W'.     02370040
023800         88  CC-MONTHLY-REPORT           VALUE 'M'.               02380040
023900         88  CC-YEAR-TO-DATE-REPORT      VALUE 'Y'.               02390040
024000         88  CC-WEEKLY-REPORT            VALUE 'W'.               02400040
024100                                                                  02410040
024200*  CURSOR DECLARATION FOR DEFECTIVE ITEMS THAT WERE "SHIPPED"     02420040
024300*  BETWEEN DATES ENTERED BY THE CONTROL CARD                      02430040
024400                                                                  02440040
024500     EXEC SQL                                                     02450040
024600          DECLARE DITEM_CURSOR CURSOR FOR                         02460040
024700           SELECT B.MDSE_DEPT_NBR                                 02470040
024800                , B.DFCT_ITEM_NBR                                 02480040
024900                , A.OPER_UNT_ID                                   02490040
025000                , A.DFCT_ORD_ID_CDE                               02500040
025100                , A.DFCT_ORD_STAT_CDE                             02510040
025200                , B.RTL_COST_AMT                                  02520040
025300                , B.UNIT_COST_AMT                                 02530040
025400             FROM TDFCTOR   A                                     02540040
025500                , TDFMEIT   B                                     02550040
025600            WHERE A.DFCT_ORD_STAT_CDE IN ('S','A','D')            02560040
025700             AND  A.STATUS_CHG_DTE BETWEEN :PV-BEGIN-DATE         02570040
025800                                       AND :PV-END-DATE           02580040
025900             AND  A.DFCT_ORD_ID    = B.DFCT_ORD_ID                02590040
026000             ORDER BY B.DFCT_ITEM_NBR                             02600040
026100                    , B.MDSE_DEPT_NBR                             02610040
026200     END-EXEC.                                                    02620040
026300                                                                  02630040
026400*  CURSOR DECLARATION TO GET ALL THE RTV FACILITIES IN THE COMPANY02640040
026500*  (CAN'T JOIN IN MAIN CURSOR BECAUSE OF DATA TYPE DIFFERENCES)   02650040
026600                                                                  02660040
026700     EXEC SQL                                                     02670040
026800          DECLARE DC_CURSOR CURSOR FOR                            02680040
026900           SELECT A.DC_NBR                                        02690040
027000                , B.LOC_NBR                                       02700040
027100                , B.LOC_NM                                        02710040
027200                , LOC_10_ABBR_NM                                  02720040
027300             FROM XLT_DC_LOC_ASGMT A                              02730040
027400                , XLT_LOC B                                       02740040
027500             WHERE A.LOC_NBR  = B.LOC_NBR                         02750040
027600               AND B.LOC_TYP_CDE = 'RV'                           02760040
027700               AND   (CHAR(CURRENT DATE, ISO)                     02770040
027800                      BETWEEN                                     02780040
027900                      CHAR(B.OPN_DTE,ISO)                         02790040
028000                          AND                                     02800040
028100                      CHAR(B.CLO_DTE,ISO))                        02810040
028200     END-EXEC.                                                    02820040
028300                                                                  02830040
028400******************************************************************02840040
028500 LINKAGE SECTION.                                                 02850040
028600******************************************************************02860040
028700                                                                  02870040
028800******************************************************************02880040
028900 PROCEDURE DIVISION.                                              02890040
029000******************************************************************02900040
029100******************************************************************02910040
029200*  0000-MAINLINE - CONTROLS THE MAIN PROCESSING OF THE PROGRAM    02920040
029300******************************************************************02930040
029400 0000-PROGRAM-MAINLINE.                                           02940040
029500     PERFORM 1000-INITIALIZE.                                     02950040
029600                                                                  02960040
029700     PERFORM 2000-CREATE-EXTRACT-FILE                             02970040
029800         UNTIL PS-EOC-DRIVER-CURSOR.                              02980040
029900                                                                  02990040
030000     PERFORM 9000-EOJ-ROUTINE.                                    03000040
030100     STOP RUN.                                                    03010040
030200                                                                  03020040
030300******************************************************************03030040
030400*  1000-INITIALIZE -  OPENS ALL THE REPORT FILE, ACCEPTS, EDITS,  03040040
030500*  AND DISPLAYS CONTROL CARD INFORMATION, OPENS AND FETCHES FIRST 03050040
030600*  OCCURANCE OF DB2 CURSOR, PRINTS INITIAL PAGE HEADING TO REPORT 03060040
030700*  FILE.                                                          03070040
030800******************************************************************03080040
030900 1000-INITIALIZE.                                                 03090040
031000     INITIALIZE RV010-EXTRACT-RECORD                              03100040
031100                PA-GRAND-TOTALS.                                  03110040
031200                                                                  03120040
031300     OPEN OUTPUT RTV-REPORT-EXTRACT.                              03130040
031400                                                                  03140040
031500     ACCEPT CC-CONTROL-CARD FROM SYSIN.                           03150040
031600     DISPLAY 'CONTROL CARD = ' CC-CONTROL-CARD.                   03160040
031700                                                                  03170040
031800     EXEC SQL                                                     03180040
031900         SELECT CURRENT DATE                                      03190040
032000         INTO :PV-CURRENT-DATE                                    03200040
032100         FROM SYSIBM.SYSDUMMY1                                    03210040
032200     END-EXEC.                                                    03220040
032300                                                                  03230040
032400     IF SQLCODE = 0                                               03240040
032500         CONTINUE                                                 03250040
032600     ELSE                                                         03260040
032700         DISPLAY '** ABEND **'                                    03270040
032800         DISPLAY '** PROGRAM = RVKUT002 **'                       03280040
032900         DISPLAY '** PARAGRAPH = 1000-INITIALIZE **'              03290040
033000         DISPLAY '** ERROR SETTING CURRENT DATE **'               03300040
033100         PERFORM 9100-SQL-ABEND                                   03310040
033200     END-IF.                                                      03320040
033300                                                                  03330040
033400                                                                  03340040
033500     PERFORM 1100-VALIDATE-CONTROL-CARD                           03350040
033600                                                                  03360040
033700     DISPLAY 'DATES: ' PV-BEGIN-DATE ' ' PV-END-DATE              03370040
033800     SET PS-NOT-EOC-DRIVER-CURSOR    TO TRUE.                     03380040
033900                                                                  03390040
034000     PERFORM 1200-INIT-DC-TABLE.                                  03400040
034100                                                                  03410040
034200     PERFORM 7000-OPEN-DRIVER-CURSOR.                             03420040
034300                                                                  03430040
034400     PERFORM 7200-FETCH-DRIVER-CURSOR.                            03440040
034500* GB 06/07/20                                                     03450040
034600* CHECK TO NOT ATTEMPT TO PROCESS DATA IF NO ROWS IN 7200-FETCH   03460040
034700*                                                                 03470040
034800     IF PS-EOC-DRIVER-CURSOR                                      03480040
034900        CONTINUE                                                  03490040
035000     ELSE                                                         03500040
035100        MOVE DFMEIT-DFCT-ITEM-NBR       TO PV-HOLD-ITEM-NBR       03510040
035200        PERFORM 7250-CALL-XLKUT001                                03520040
035300        IF PS-DEPT-NBR-NOT-FOUND                                  03530040
035400         IF DFMEIT-DFCT-ITEM-NBR = 0                              03540040
035500             MOVE 'ZERO SKU ITEMS' TO ENTNME-ENT-NAME-DESC        03550040
035600             MOVE '999999998'  TO EXTENT-DUN-NBR                  03560040
035700         ELSE                                                     03570040
035800             MOVE 'UNKNOWN VENDOR' TO ENTNME-ENT-NAME-DESC        03580040
035900             MOVE '999999999'  TO EXTENT-DUN-NBR                  03590040
036000         END-IF                                                   03600040
036100        ELSE                                                      03610040
036200         PERFORM 7300-SELECT-VENDOR-INFORMATION                   03620040
036300        END-IF                                                    03630040
036400                                                                  03640040
036500        MOVE DFMEIT-MDSE-DEPT-NBR      TO PV-HOLD-DPT-NBR         03650040
036600        PERFORM 2100-GET-DEPT-INFO                                03660040
036700        MOVE DFCTOR-OPER-UNT-ID        TO PV-HOLD-OPER-UNT-ID     03670040
036800        PERFORM 2200-GET-FACILITY-NAME                            03680040
036900                                                                  03690040
037000     END-IF.                                                      03700040
037100******************************************************************03710040
037200* 1100-VALIDATE-CONTROL-CARD - VERIFIES THAT THE DATE RANGE SUP-  03720040
037300* PLIED IS NUMERIC AND WITHIN VALID VALUES.                       03730040
037400******************************************************************03740040
037500 1100-VALIDATE-CONTROL-CARD.                                      03750040
037600     IF CC-VALID-RPT-TYPE                                         03760040
037700         CONTINUE                                                 03770040
037800     ELSE                                                         03780040
037900        DISPLAY '** ABEND **'                                     03790040
038000        DISPLAY '** PROGRAM = RVKUT002 ** '                       03800040
038100        DISPLAY                                                   03810040
038200        '** PARAGRAPH = 1100-VALIDATE-CONTROL-CARD **'            03820040
038300        DISPLAY '** INVALID RPT TYPE: ' CC-RPT-TYPE               03830040
038400        MOVE +4003 TO ABEND-CODE                                  03840040
038500        CALL 'ILBOABN0' USING ABEND-CODE                          03850040
038600     END-IF.                                                      03860040
038700                                                                  03870040
038800     INITIALIZE DPG51                                             03880040
038900                DPG52                                             03890040
039000                DPG53                                             03900040
039100                DPG54                                             03910040
039200                DPG55                                             03920040
039300                DPG56.                                            03930040
039400                                                                  03940040
039500     IF CC-DEFAULT-BEGIN-DATE AND                                 03950040
039600        CC-DEFAULT-END-DATE                                       03960040
039700             PERFORM 1110-GET-DEFAULT-DATES                       03970040
039800     ELSE                                                         03980040
039900         MOVE PV-CURRENT-DATE-YY     TO PV-WORK-DATE-YY           03990040
040000         MOVE PV-CURRENT-DATE-MM     TO PV-WORK-DATE-MM           04000040
040100         MOVE PV-CURRENT-DATE-DD     TO PV-WORK-DATE-DD           04010040
040200                                                                  04020040
040300         SET DPG51-ACTUAL-CALENDAR-ONLY TO TRUE                   04030040
040400                                                                  04040040
040500         MOVE CC-BEGIN-DATE          TO DPG52-LK-DATE-INPUT       04050040
040600         SET DPG52-LK-DTE-ISO-FMT    TO TRUE                      04060040
040700                                                                  04070040
040800         MOVE CC-END-DATE            TO DPG53-LK-CMPR-DATE-INPUT  04080040
040900         SET DPG53-LK-CMPR-DTE-ISO-FMT TO TRUE                    04090040
041000                                                                  04100040
041100         CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51            04110040
041200                                                 DPG52            04120040
041300                                                 DPG53            04130040
041400                                                 DPG54            04140040
041500                                                 DPG55            04150040
041600                                                 DPG56            04160040
041700                                                                  04170040
041800         EVALUATE TRUE                                            04180040
041900             WHEN DPG54-NO-ERROR                                  04190040
042000                 MOVE CC-BEGIN-DATE      TO PV-BEGIN-DATE         04200040
042100                 MOVE CC-END-DATE        TO PV-END-DATE           04210040
042200             WHEN DPG54-DATE-INVALID                              04220040
042300                 DISPLAY '** ABEND **'                            04230040
042400                 DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '04240040
042500                         'DPKUT500 **'                            04250040
042600                 DISPLAY                                          04260040
042700                       '** PARAGRAPH = 1100-VALIDATE-CONTROL-CARD'04270040
042800                 DISPLAY '** INVALID START DATE: ' CC-BEGIN-DATE  04280040
042900                 DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '04290040
043000                 DISPLAY DPG54-ERROR-MESSAGE                      04300040
043100                 MOVE +4003 TO ABEND-CODE                         04310040
043200                 CALL 'ILBOABN0' USING ABEND-CODE                 04320040
043300             WHEN DPG54-CMPR-DATE-INVALID                         04330040
043400                 DISPLAY '** ABEND **'                            04340040
043500                 DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '04350040
043600                         'DPKUT500 **'                            04360040
043700                 DISPLAY                                          04370040
043800                       '** PARAGRAPH = 1100-VALIDATE-CONTROL-CARD'04380040
043900                 DISPLAY '** INVALID END DATE: ' CC-END-DATE      04390040
044000                 DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '04400040
044100                 DISPLAY DPG54-ERROR-MESSAGE                      04410040
044200                 MOVE +4003 TO ABEND-CODE                         04420040
044300                 CALL 'ILBOABN0' USING ABEND-CODE                 04430040
044400             WHEN DPG55-DAYS-DIFFERENCE > ZERO                    04440040
044500                 DISPLAY '** ABEND **'                            04450040
044600                 DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '04460040
044700                         'DPKUT500 **'                            04470040
044800                 DISPLAY                                          04480040
044900                       '** PARAGRAPH = 1100-VALIDATE-CONTROL-CARD'04490040
045000                 DISPLAY '** END DATE IS NOT AFTER START DATE **' 04500040
045100                 DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '04510040
045200                 DISPLAY DPG54-ERROR-MESSAGE                      04520040
045300                 MOVE +4003 TO ABEND-CODE                         04530040
045400                 CALL 'ILBOABN0' USING ABEND-CODE                 04540040
045500             WHEN OTHER                                           04550040
045600                 DISPLAY DPG54-ERROR-MESSAGE                      04560040
045700         END-EVALUATE                                             04570040
045800     END-IF.                                                      04580040
045900                                                                  04590040
046000******************************************************************04600040
046100* 1110-GET-DEFAULT-DATES  -  RETRIEVES THE DEFAULT BEGIN AND END  04610040
046200* DATES DEPENDING ON THE REPORT TYPE CODE.                        04620040
046300******************************************************************04630040
046400 1110-GET-DEFAULT-DATES.                                          04640040
046500*    THE FIRST CALL TO THE UTILITY WILL BRING BACK THE CURRENT    04650040
046600*    FISCAL WEEK NUMBER...THIS WILL BE USED TO DETERMIN THE NUMBER04660040
046700*    OF DAYS TO GO BACK TO GET TO THE PREVIOUS FISCAL MONTH (IE.  04670040
046800*    IN THE 2ND WEEK, IT WILL GO BACK 14 DAYS, IN THE 5TH WEEK,   04680040
046900*    IT WILL GO BACK 35 DAYS ETC.  THIS WAY, WE ARE ALWAYS        04690040
047000*    GUARANTEED TO GET THE DATES FROM THE PREVIOUS MONTH.         04700040
047100                                                                  04710040
047200     MOVE PV-CURRENT-DATE-YY     TO PV-WORK-DATE-YY               04720040
047300     MOVE PV-CURRENT-DATE-MM     TO PV-WORK-DATE-MM               04730040
047400     MOVE PV-CURRENT-DATE-DD     TO PV-WORK-DATE-DD               04740040
047500                                                                  04750040
047600     SET DPG51-FISCAL-454-CALENDAR TO TRUE                        04760040
047700                                                                  04770040
047800     MOVE PV-CURRENT-DATE        TO DPG52-LK-DATE-INPUT           04780040
047900     SET DPG52-LK-DTE-ISO-FMT    TO TRUE                          04790040
048000                                                                  04800040
048100     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51                04810040
048200                                             DPG52                04820040
048300                                             DPG53                04830040
048400                                             DPG54                04840040
048500                                             DPG55                04850040
048600                                             DPG56                04860040
048700                                                                  04870040
048800     EVALUATE TRUE                                                04880040
048900         WHEN DPG54-NO-ERROR                                      04890040
049000             COMPUTE PV-PREV-DAYS =                               04900040
049100                 DPG56-FISCAL-PERIOD-WEEK * 7                     04910040
049200         WHEN DPG54-DATE-INVALID                                  04920040
049300             DISPLAY DPG54-ERROR-MESSAGE                          04930040
049400             DISPLAY '** ABEND **'                                04940040
049500             DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '    04950040
049600                     'DPKUT500 **'                                04960040
049700             DISPLAY '** PARAGRAPH = 1110-GET-DEFAULT-DATES **'   04970040
049800             DISPLAY '** DATE INVALID: ' PV-CURRENT-DATE          04980040
049900             DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '    04990040
050000             DISPLAY DPG54-ERROR-MESSAGE                          05000040
050100             MOVE +4003 TO ABEND-CODE                             05010040
050200             CALL 'ILBOABN0' USING ABEND-CODE                     05020040
050300         WHEN OTHER                                               05030040
050400             DISPLAY DPG54-ERROR-MESSAGE                          05040040
050500             DISPLAY '** ABEND **'                                05050040
050600             DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '    05060040
050700                     'DPKUT500 **'                                05070040
050800             DISPLAY '** PARAGRAPH = 1110-GET-DEFAULT-DATES **'   05080040
050900             DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '    05090040
051000             DISPLAY DPG54-ERROR-MESSAGE                          05100040
051100             MOVE +4003 TO ABEND-CODE                             05110040
051200             CALL 'ILBOABN0' USING ABEND-CODE                     05120040
051300     END-EVALUATE.                                                05130040
051400                                                                  05140040
051500*    THE SECOND CALL WILL ACTUALLY GET THE FISCAL YEAR START DATE,05150040
051600*    AND THE PREVIOUS FISCAL MONTH START AND END DATE...THESE DATE05160040
051700*    WILL BE MOVED TO THE WORKING STORAGE BEGIN AND END DATES     05170040
051800*    DEPENDING ON THE TYPE OF REPORT BEING CREATED.               05180040
051900                                                                  05190040
052000     INITIALIZE DPG51                                             05200040
052100                DPG52                                             05210040
052200                DPG53                                             05220040
052300                DPG54                                             05230040
052400                DPG55                                             05240040
052500                DPG56.                                            05250040
052600                                                                  05260040
052700     SET DPG51-FISCAL-454-CALENDAR TO TRUE                        05270040
052800                                                                  05280040
052900     MOVE PV-CURRENT-DATE        TO DPG52-LK-DATE-INPUT           05290040
053000     SET DPG52-LK-DTE-ISO-FMT    TO TRUE                          05300040
053100                                                                  05310040
053200     MOVE PV-PREV-DAYS           TO DPG51-INCR-DECR-DAYS-9        05320040
053300     SET DPG51-DECREMENT-DATE    TO TRUE                          05330040
053400                                                                  05340040
053500     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51                05350040
053600                                             DPG52                05360040
053700                                             DPG53                05370040
053800                                             DPG54                05380040
053900                                             DPG55                05390040
054000                                             DPG56                05400040
054100                                                                  05410040
054200     EVALUATE TRUE                                                05420040
054300         WHEN DPG54-NO-ERROR                                      05430040
054400             CONTINUE                                             05440040
054500         WHEN DPG54-DATE-INVALID                                  05450040
054600             DISPLAY DPG54-ERROR-MESSAGE                          05460040
054700             DISPLAY '** ABEND **'                                05470040
054800             DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '    05480040
054900                     'DPKUT500 **'                                05490040
055000             DISPLAY '** PARAGRAPH = 1110-GET-DEFAULT-DATES **'   05500040
055100             DISPLAY '** DATE INVALID: ' PV-CURRENT-DATE          05510040
055200             DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '    05520040
055300             DISPLAY DPG54-ERROR-MESSAGE                          05530040
055400             MOVE +4003 TO ABEND-CODE                             05540040
055500             CALL 'ILBOABN0' USING ABEND-CODE                     05550040
055600         WHEN OTHER                                               05560040
055700             DISPLAY DPG54-ERROR-MESSAGE                          05570040
055800             DISPLAY '** ABEND **'                                05580040
055900             DISPLAY '** PROGRAM = RVKUT002 -- CALLED MODULE '    05590040
056000                     'DPKUT500 **'                                05600040
056100             DISPLAY '** PARAGRAPH = 1110-GET-DEFAULT-DATES **'   05610040
056200             DISPLAY '** ERROR MESSAGE FROM CALLED MODULE:   '    05620040
056300             DISPLAY DPG54-ERROR-MESSAGE                          05630040
056400             MOVE +4003 TO ABEND-CODE                             05640040
056500             CALL 'ILBOABN0' USING ABEND-CODE                     05650040
056600     END-EVALUATE.                                                05660040
056700                                                                  05670040
056800*    IF IT IS A MONTHLY REPORT, MOVE THE PREVIOUS MONTH BEGIN AND 05680040
056900*    END DATE TO THE REPORT BEGIN AND END DATE.  OTHERWISE IT IS A05690040
057000*    YEAR-TO-DATE REPORT...IN THAT CASE MOVE THE FISCAL YEAR BEGIN05700040
057100*    DATE, AND THE PREVIOUS MONTH END DATE TO THE REPORT BEGIN AND05710040
057200*    END DATE.                                                    05720040
057300                                                                  05730040
057400     IF CC-MONTHLY-REPORT                                         05740040
057500         MOVE DPG56-FIRST-FP-DB2-ISO-FMT TO PV-BEGIN-DATE         05750040
057600         MOVE DPG56-LAST-FP-DB2-ISO-FMT  TO PV-END-DATE           05760040
057700     ELSE                                                         05770040
057800         MOVE DPG56-FIRST-FD-DB2-ISO-FMT TO PV-BEGIN-DATE         05780040
057900         MOVE DPG56-LAST-FP-DB2-ISO-FMT  TO PV-END-DATE           05790040
058000     END-IF.                                                      05800040
058100                                                                  05810040
058200******************************************************************05820040
058300* 1200-INIT-DC-TABLE.                                             05830040
058400* PROCESS:  THIS PARAGRAPH WILL SET UP THE DC TABLE               05840040
058500******************************************************************05850040
058600 1200-INIT-DC-TABLE.                                              05860040
058700     INITIALIZE DCW-WORK-TABLE.                                   05870040
058800     SET DCW-IDX                TO +1.                            05880040
058900                                                                  05890040
059000     PERFORM 7400-OPEN-DC-CURSOR.                                 05900040
059100                                                                  05910040
059200     PERFORM 7500-FETCH-DC-CURSOR.                                05920040
059300                                                                  05930040
059400     PERFORM VARYING DCW-IDX FROM 1 BY 1                          05940040
059500     UNTIL DCW-IDX > DCW-MAX-ITEMS                                05950040
059600     OR    PS-EOC-DC-CURSOR                                       05960040
059700         MOVE XLT00014-DC-NBR     TO DCW-OPER-UNT-ID (DCW-IDX)    05970040
059800         MOVE XLT00010-LOC-NBR    TO DCW-STR-NBR (DCW-IDX)        05980040
059900         MOVE XLT00010-LOC-NM     TO DCW-NAME (DCW-IDX)           05990040
060000         MOVE XLT00010-LOC-10-ABBR-NM TO DCW-ABBR (DCW-IDX)       06000040
060100         PERFORM 7500-FETCH-DC-CURSOR                             06010040
060200     END-PERFORM.                                                 06020040
060300                                                                  06030040
060400     PERFORM 7600-CLOSE-DC-CURSOR.                                06040040
060500                                                                  06050040
060600     IF DCW-IDX > DCW-MAX-ITEMS                                   06060040
060700         DISPLAY '** ABEND **'                                    06070040
060800         DISPLAY '** PROGRAM = RVKUT002 **'                       06080040
060900         DISPLAY '** PARAGRAPH = 1200-INIT-DC-TABLE **'           06090040
061000         DISPLAY '** TABLE OVERFLOW ON DC TABLE **'               06100040
061100         MOVE +4004 TO ABEND-CODE                                 06110040
061200         CALL 'ILBOABN0' USING ABEND-CODE                         06120040
061300     END-IF.                                                      06130040
061400                                                                  06140040
061500******************************************************************06150040
061600* 2000-CREATE-EXTRACT-FILE                                        06160040
061700* PROCESS:  THIS PARAGRAPH WILL SET UP AND WRITE EXTRACT RECORDS  06170040
061800******************************************************************06180040
061900 2000-CREATE-EXTRACT-FILE.                                        06190040
062000     INITIALIZE RV010-EXTRACT-RECORD                              06200040
062100     SET RV010-DETAIL-REC            TO TRUE.                     06210040
062200                                                                  06220040
062300     IF DFMEIT-DFCT-ITEM-NBR = PV-HOLD-ITEM-NBR                   06230040
062400         CONTINUE                                                 06240040
062500     ELSE                                                         06250040
062600         PERFORM 7250-CALL-XLKUT001                               06260040
062700         IF PS-DEPT-NBR-NOT-FOUND                                 06270040
062800             IF DFMEIT-DFCT-ITEM-NBR = 0                          06280040
062900                 MOVE 'ZERO SKU ITEMS' TO ENTNME-ENT-NAME-DESC    06290040
063000                 MOVE '999999998'  TO EXTENT-DUN-NBR              06300040
063100             ELSE                                                 06310040
063200                 MOVE 'UNKNOWN VENDOR' TO ENTNME-ENT-NAME-DESC    06320040
063300                 MOVE '999999999'  TO EXTENT-DUN-NBR              06330040
063400             END-IF                                               06340040
063500         ELSE                                                     06350040
063600             PERFORM 7300-SELECT-VENDOR-INFORMATION               06360040
063700         END-IF                                                   06370040
063800         MOVE DFMEIT-DFCT-ITEM-NBR       TO PV-HOLD-ITEM-NBR      06380040
063900     END-IF.                                                      06390040
064000                                                                  06400040
064100     IF DFMEIT-MDSE-DEPT-NBR = PV-HOLD-DPT-NBR                    06410040
064200         CONTINUE                                                 06420040
064300     ELSE                                                         06430040
064400         MOVE DFMEIT-MDSE-DEPT-NBR TO PV-HOLD-DPT-NBR             06440040
064500         PERFORM 2100-GET-DEPT-INFO                               06450040
064600     END-IF                                                       06460040
064700                                                                  06470040
064800     IF DFCTOR-OPER-UNT-ID   = PV-HOLD-OPER-UNT-ID                06480040
064900         CONTINUE                                                 06490040
065000     ELSE                                                         06500040
065100         MOVE DFCTOR-OPER-UNT-ID TO PV-HOLD-OPER-UNT-ID           06510040
065200         PERFORM 2200-GET-FACILITY-NAME                           06520040
065300     END-IF                                                       06530040
065400                                                                  06540040
065500     MOVE DFMEIT-MDSE-DEPT-NBR     TO  RV010-DPT-NBR.             06550040
065600     MOVE DFMEIT-DFCT-ITEM-NBR     TO  RV010-ITEM-NBR.            06560040
065700     MOVE DCW-NAME (DCW-IDX)       TO  RV010-FCLTY-NAME.          06570040
065800     MOVE DCW-ABBR (DCW-IDX)       TO  RV010-FCLTY-ABBR.          06580040
065900     MOVE DFCTOR-OPER-UNT-ID       TO  RV010-OPER-UNT-ID.         06590040
066000     MOVE DFCTOR-DFCT-ORD-ID-CDE   TO  RV010-LIST-TYPE-CDE.       06600040
066100     MOVE DFCTOR-DFCT-ORD-STAT-CDE TO  RV010-LIST-STAT-CDE.       06610040
066200     MOVE DFMEIT-RTL-COST-AMT      TO  RV010-RTL-COST-AMT.        06620040
066300     MOVE DFMEIT-UNIT-COST-AMT     TO  RV010-UNIT-COST-AMT.       06630040
066400                                                                  06640040
066500     MOVE DP003-DPT-DESCRIPTION    TO  RV010-DPT-DESC.            06650040
066600     MOVE DP003-DMM-NAME           TO  RV010-DMM-NAME.            06660040
066700     MOVE DP003-DMM-NMBR           TO  RV010-DMM-NBR.             06670040
066800                                                                  06680040
066900     MOVE EXTENT-DUN-NBR           TO  RV010-DUNS-NBR.            06690040
067000     MOVE ENTNME-ENT-NAME-DESC     TO  RV010-VND-NAME.            06700040
067100                                                                  06710040
067200     EVALUATE TRUE                                                06720040
067300         WHEN RV010-RTV-TYPE                                      06730040
067400             ADD DFMEIT-RTL-COST-AMT    TO PA-DR-TOTAL-RETAIL     06740040
067500             ADD DFMEIT-UNIT-COST-AMT   TO PA-DR-TOTAL-COST       06750040
067600             ADD +1                     TO PA-DR-TOTAL-QTY        06760040
067700         WHEN RV010-MO-TYPE                                       06770040
067800             ADD DFMEIT-RTL-COST-AMT    TO PA-MO-TOTAL-RETAIL     06780040
067900             ADD DFMEIT-UNIT-COST-AMT   TO PA-MO-TOTAL-COST       06790040
068000             ADD +1                     TO PA-MO-TOTAL-QTY        06800040
068100         WHEN RV010-DD-TYPE                                       06810040
068200             ADD DFMEIT-RTL-COST-AMT    TO PA-DD-TOTAL-RETAIL     06820040
068300             ADD DFMEIT-UNIT-COST-AMT   TO PA-DD-TOTAL-COST       06830040
068400             ADD +1                     TO PA-DD-TOTAL-QTY        06840040
068500     END-EVALUATE.                                                06850040
068600                                                                  06860040
068700     PERFORM 8000-WRITE-EXTRACT-RECORD.                           06870040
068800                                                                  06880040
068900     PERFORM 7200-FETCH-DRIVER-CURSOR.                            06890040
069000                                                                  06900040
069100******************************************************************06910040
069200*  CALL MBS SUBROUTINE TO GET DEPT DESC, AND DMM NAME.            06920040
069300******************************************************************06930040
069400 2100-GET-DEPT-INFO.                                              06940040
069500     INITIALIZE DP003-MBS-SUBROUTINE-FIELDS.                      06950040
069600     SET DP003-DMM-LOOKUP-NAME                                    06960040
069700         DP003-DMM-NAME-LAST-FIRST                                06970040
069800         DP003-DPT-LOOKUP            TO TRUE.                     06980040
069900     MOVE 'RV'                       TO DP003-SYSTEM-CODE.        06990040
070000     MOVE '03'                       TO DP003-OP-CO-NMBR.         07000040
070100     MOVE PV-CURRENT-DATE-YY         TO PV-WORK-DATE-YY.          07010040
070200     MOVE PV-CURRENT-DATE-MM         TO PV-WORK-DATE-MM.          07020040
070300     MOVE PV-CURRENT-DATE-DD         TO PV-WORK-DATE-DD.          07030040
070400     MOVE PV-WORK-DATE               TO DP003-CURRENT-DATE.       07040040
070500     MOVE PV-END-DATE                TO PV-DB2-WORK-DATE.         07050040
070600     MOVE PV-DB2-YY                  TO PV-WORK-DATE-YY.          07060040
070700     MOVE PV-DB2-MM                  TO PV-WORK-DATE-MM.          07070040
070800     MOVE PV-DB2-DD                  TO PV-WORK-DATE-DD.          07080040
070900     MOVE PV-WORK-DATE               TO DP003-EFF-DATE.           07090040
071000     MOVE PV-HOLD-DPT-NBR            TO DP003-DPT-INPUT.          07100040
071100                                                                  07110040
071200     CALL PC-PGM-DPKUT039 USING DP003-MBS-SUBROUTINE-FIELDS.      07120040
071300                                                                  07130040
071400     EVALUATE TRUE                                                07140040
071500         WHEN DP003-SUCCESSFUL                                    07150040
071600             CONTINUE                                             07160040
071700         WHEN DP003-DMM-NMBR-NOT-FOUND                            07170040
071800         WHEN DP003-DMM-NAME-NOT-FOUND                            07180040
071900            MOVE 'DMM NOT FOUND'    TO DP003-DMM-NAME             07190040
072000            MOVE HIGH-VALUES        TO DP003-DMM-NMBR             07200040
072100         WHEN DP003-DPT-NOT-FOUND                                 07210040
072200             MOVE 'DEPT NOT FOUND'  TO  DP003-DPT-DESCRIPTION     07220040
072300         WHEN OTHER                                               07230040
072400             DISPLAY '** ABEND **'                                07240040
072500             DISPLAY '** PROGRAM = RVKUT002 **'                   07250040
072600             DISPLAY '** PARAGRAPH = 2100-GET-DEPT-INFO **'       07260040
072700             DISPLAY '** INVALID RETURN CODE FROM DPKUT039 **'    07270040
072800             DISPLAY '** INPUT FIELDS: ' DP003-INPUT-FIELDS       07280040
072900             DISPLAY '**  RETURN DATA: ' DP003-RETURN-DATA        07290040
073000             DISPLAY '** SQLCA: ' DP003-SQLCA                     07300040
073100             DISPLAY '** SQLCODE: ' DP003-SQLCODE                 07310040
073200             MOVE +4008 TO ABEND-CODE                             07320040
073300             CALL 'ILBOABN0' USING ABEND-CODE                     07330040
073400     END-EVALUATE.                                                07340040
073500                                                                  07350040
073600******************************************************************07360040
073700* 2200-GET-FACILITY-NAME.                                        *07370040
073800******************************************************************07380040
073900 2200-GET-FACILITY-NAME.                                          07390040
074000     SET DCW-IDX               TO +1                              07400040
074100*    PERFORM                                                      07410040
074200*    UNTIL DCW-OPER-UNT-ID (DCW-IDX) = PV-HOLD-OPER-UNT-ID-X      07420040
074300*    OR    DCW-OPER-UNT-ID (DCW-IDX) = SPACES                     07430040
074400*    OR    DCW-IDX > DCW-MAX-ITEMS                                07440040
074500*        SET DCW-IDX        UP BY +1                              07450040
074600*    END-PERFORM.                                                 07460040
074700                                                                  07470040
074800***  USE THE RTV LOC TO MATCH AND FIND THE FACILITY NAME          07480040
074900     PERFORM                                                      07490040
075000     UNTIL DCW-STR-NBR (DCW-IDX) = PV-HOLD-OPER-UNT-ID-X          07500040
075100        OR DCW-STR-NBR (DCW-IDX) = SPACES                         07510040
075200        OR DCW-STR-NBR (DCW-IDX) = 0000                           07520040
075300        OR DCW-IDX > DCW-MAX-ITEMS                                07530040
075400         SET DCW-IDX        UP BY +1                              07540040
075500     END-PERFORM.                                                 07550040
075600                                                                  07560040
075700*    IF DCW-IDX > DCW-MAX-ITEMS                                   07570040
075800*    OR DCW-OPER-UNT-ID (DCW-IDX) = SPACES                        07580040
075900     IF DCW-IDX > DCW-MAX-ITEMS        OR                         07590040
076000        DCW-STR-NBR (DCW-IDX) = SPACES OR                         07600040
076100        DCW-STR-NBR (DCW-IDX) = 0000                              07610040
076200         DISPLAY '** ABEND **'                                    07620040
076300         DISPLAY '** PROGRAM = RVKUT002 **'                       07630040
076400         DISPLAY '** PARAGRAPH = 2200-GET-FACILITY-NAME **'       07640040
076500         DISPLAY '** OPER-UNT-ID WAS NOT FOUND  **'               07650040
076600         DISPLAY '** CURRENT OPER-UNT-ID: '                       07660040
076700                 PV-HOLD-OPER-UNT-ID-X ' ***'                     07670040
076800         DISPLAY '** DC WORKING TABLE DUMP: '                     07680040
076900         PERFORM VARYING DCW-IDX FROM 1 BY 1                      07690040
077000         UNTIL DCW-IDX > DCW-MAX-ITEMS                            07700040
077100         OR    DCW-OPER-UNT-ID (DCW-IDX) = SPACES                 07710040
077200             DISPLAY '** ' DCW-OPER-UNT-ID (DCW-IDX)              07720040
077300                     ' - ' DCW-STR-NBR (DCW-IDX)                  07730040
077400                     ' - ' DCW-NAME (DCW-IDX)                     07740040
077500                     ' - ' DCW-ABBR (DCW-IDX)                     07750040
077600         END-PERFORM                                              07760040
077700         MOVE +4008 TO ABEND-CODE                                 07770040
077800         CALL 'ILBOABN0' USING ABEND-CODE                         07780040
077900     END-IF.                                                      07790040
078000                                                                  07800040
078100******************************************************************07810040
078200* 7000-OPEN-DRIVER-CURSOR.                                       *07820040
078300******************************************************************07830040
078400 7000-OPEN-DRIVER-CURSOR.                                         07840040
078500     EXEC SQL                                                     07850040
078600          OPEN DITEM_CURSOR                                       07860040
078700     END-EXEC.                                                    07870040
078800                                                                  07880040
078900     EVALUATE TRUE                                                07890040
079000         WHEN SQLWARN0 NOT EQUAL SPACE                            07900040
079100         WHEN SQLCODE NOT EQUAL ZERO                              07910040
079200             DISPLAY '** ABEND **'                                07920040
079300             DISPLAY '** PROGRAM = RVKUT002 **'                   07930040
079400             DISPLAY '** PARAGRAPH = 7000-OPEN-DRIVER-CURSOR **'  07940040
079500             PERFORM 9100-SQL-ABEND                               07950040
079600     END-EVALUATE.                                                07960040
079700                                                                  07970040
079800******************************************************************07980040
079900* 7100-CLOSE-DRIVER-CURSOR.                                      *07990040
080000******************************************************************08000040
080100 7100-CLOSE-DRIVER-CURSOR.                                        08010040
080200     EXEC SQL                                                     08020040
080300         CLOSE DITEM_CURSOR                                       08030040
080400     END-EXEC.                                                    08040040
080500                                                                  08050040
080600     EVALUATE TRUE                                                08060040
080700         WHEN SQLWARN0 NOT EQUAL SPACE                            08070040
080800         WHEN SQLCODE NOT EQUAL ZERO                              08080040
080900             DISPLAY '** ABEND **'                                08090040
081000             DISPLAY '** PROGRAM = RVKUT002 **'                   08100040
081100             DISPLAY '** PARAGRAPH = 7000-CLOSE-DRIVER-CURSOR**'  08110040
081200             PERFORM 9100-SQL-ABEND                               08120040
081300     END-EVALUATE.                                                08130040
081400                                                                  08140040
081500******************************************************************08150040
081600* 7200-FETCH-DRIVER-CURSOR.                                      *08160040
081700******************************************************************08170040
081800 7200-FETCH-DRIVER-CURSOR.                                        08180040
081900     EXEC SQL                                                     08190040
082000          FETCH DITEM_CURSOR                                      08200040
082100          INTO    :DFMEIT-MDSE-DEPT-NBR                           08210040
082200                , :DFMEIT-DFCT-ITEM-NBR                           08220040
082300                , :DFCTOR-OPER-UNT-ID                             08230040
082400                , :DFCTOR-DFCT-ORD-ID-CDE                         08240040
082500                , :DFCTOR-DFCT-ORD-STAT-CDE                       08250040
082600                , :DFMEIT-RTL-COST-AMT                            08260040
082700                , :DFMEIT-UNIT-COST-AMT                           08270040
082800     END-EXEC.                                                    08280040
082900                                                                  08290040
083000     EVALUATE TRUE                                                08300040
083100         WHEN SQLCODE = ZERO                                      08310040
083200              CONTINUE                                            08320040
083300         WHEN SQLCODE = +100                                      08330040
083400              SET PS-EOC-DRIVER-CURSOR TO TRUE                    08340040
083500         WHEN SQLWARN0 NOT EQUAL SPACE                            08350040
083600         WHEN SQLCODE NOT EQUAL ZERO                              08360040
083700             DISPLAY '** ABEND **'                                08370040
083800             DISPLAY '** PROGRAM = RVKUT002 **'                   08380040
083900             DISPLAY '** PARAGRAPH = 7200-FETCH-DRIVER-CURSOR**'  08390040
084000             PERFORM 9100-SQL-ABEND                               08400040
084100     END-EVALUATE.                                                08410040
084200                                                                  08420040
084300******************************************************************08430040
084400* 7250-CALL-XLKUT001 - THIS CALL REPLACES THE USE OF TSK          08440040
084500* USE THE LOGISTICS DOMAIN MODULE TO FETCH THE 3-CHAR. VERSION    08450040
084600* OF THE DEPT. NBR AND ENT-ID.  THIS INFO WILL BE USED TO GET     08460040
084700* THE VENDOR NAME AND VENDOR DUNNS NBR                            08470040
084800******************************************************************08480040
084900 7250-CALL-XLKUT001.                                              08490040
085000     INITIALIZE XL001-ITEM-COMMAREA                               08500040
085100     SET XL001-BY-ITEM                                            08510040
085200         XL001-SELECT-SKU                                         08520040
085300         XL001-SELECT-VND-STYL TO TRUE                            08530040
085400     MOVE DFMEIT-DFCT-ITEM-NBR TO XL001-KEY-ITM-NBR               08540040
085500     CALL XL001-VSM-PGM USING XL001-ITEM-COMMAREA.                08550040
085501                                                                  08550140
085502     EVALUATE TRUE                                                08550240
085503        WHEN XL001-SUCCESSFUL                                     08550338
085504            SET PS-DEPT-NBR-FOUND  TO TRUE                        08550440
085505        WHEN XL001-SQL-ERROR                                      08550538
085506            EVALUATE TRUE                                         08550638
085507                WHEN XL001-SKU-SQLCODE NOT = 0                    08550738
085508                    IF XL001-SKU-NOT-FOUND                        08550838
085509                        SET PS-DEPT-NBR-NOT-FOUND TO TRUE         08550938
085510                    ELSE                                          08551038
085520                        DISPLAY '** ABEND **'                     08552040
085530                        DISPLAY '** PROGRAM = RVKUT002 **'        08553040
085540                        DISPLAY '** PARAGRAPH = '                 08554040
085550                                  '7250-CALL-XLKUT001'            08555040
085560                        DISPLAY '** SQL-CODE = ' XL001-SKU-SQLCODE08556040
085570                        DISPLAY '** TABLE = XLT_SKU'              08557040
085580                        DISPLAY '** ATTEMPT TO SELECT XLT_SKU '   08558040
085581                                   'INFO FOR ITEM '               08558140
085582                                  XL001-KEY-ITM-NBR               08558238
085583                        MOVE XL001-SQLCA TO SQLCA                 08558338
085584                        PERFORM 9100-SQL-ABEND                    08558440
085585                    END-IF                                        08558540
085586                WHEN XL001-VND-STYL-SQLCODE NOT = 0               08558638
085587                    IF XL001-VND-STYL-NOT-FOUND                   08558738
085588                        SET PS-DEPT-NBR-NOT-FOUND TO TRUE         08558838
085589                    ELSE                                          08558938
085590                        DISPLAY '** ABEND **'                     08559040
085600                        DISPLAY '** PROGRAM = RVKUT002 **'        08560040
085700                        DISPLAY '** PARAGRAPH = '                 08570040
085800                                  '7250-CALL-XLKUT001'            08580040
085900                        DISPLAY '** SQL-CODE = ' XL001-SKU-SQLCODE08590040
086000                                  XL001-VND-STYL-SQLCODE          08600040
086100                        DISPLAY '** TABLE = XLT_VND_STYL'         08610040
086200                       DISPLAY '** ATTEMPT TO SELECT XLT_VND_STYL'08620040
086201                                   'INFO FOR ITEM '               08620140
086202                                  XL001-KEY-ITM-NBR               08620238
086203                        MOVE XL001-SQLCA TO SQLCA                 08620338
086204                        PERFORM 9100-SQL-ABEND                    08620440
086205                    END-IF                                        08620540
086206        WHEN XL001-INVALID-ACCESS                                 08620638
086207            DISPLAY '** ABEND **'                                 08620740
086208            DISPLAY '** PROGRAM = RVKUT002 **'                    08620840
086209            DISPLAY '** PARAGRAPH = 7250-CALL-XLKUT001'           08620940
086210            DISPLAY '** INVALID ACCESS -- XLKUT001'               08621040
086211            DISPLAY '** ATTEMPT TO SELECT DEPT NBR INFO FOR ITEM '08621140
086212                     XL001-KEY-ITM-NBR                            08621238
086213            PERFORM 9200-NON-SQL-ABEND                            08621340
086214        WHEN OTHER                                                08621438
086215            DISPLAY '** PROGRAM = RVKUT002 **'                    08621540
086216            DISPLAY '** PARAGRAPH = 7250-CALL-XLKUT001'           08621640
086217            DISPLAY '** ERROR WITH XLKUT001'                      08621740
086218            DISPLAY '** ATTEMPT TO SELECT DEPT NBR INFO FOR ITEM '08621840
086219                     XL001-KEY-ITM-NBR                            08621938
086220            PERFORM 9200-NON-SQL-ABEND                            08622040
086221     END-EVALUATE.                                                08622138
086222                                                                  08622238
086223******************************************************************08622340
086224* 7300-SELECT-VENDOR-INFORMATION.                                *08622440
086225******************************************************************08622540
086226 7300-SELECT-VENDOR-INFORMATION.                                  08622640
086227     EXEC SQL                                                     08622740
086228         SELECT  C.ENT_NAME_DESC                                  08622840
086229            ,    B.DUN_NBR                                        08622940
086230           INTO  :ENTNME-ENT-NAME-DESC                            08623040
086240            ,    :EXTENT-DUN-NBR                                  08624040
086250           FROM  TVNDDPT A                                        08625040
086260            ,    TEXTENT B                                        08626040
086270            ,    TENTNME C                                        08627040
086280          WHERE (A.DEPT_NBR     =  :XL001-DEPT-NBR-3CH            08628040
086290            AND  A.ENT_ID       =  :XL001-ENT-ID                  08629040
086300            AND  A.ENT_ID       =  B.ENT_ID                       08630040
086400            AND  B.ENT_ID       =  C.ENT_ID                       08640040
086500            AND  C.TYPE_CDE     =  '01'  )                        08650040
086600     END-EXEC.                                                    08660040
086700                                                                  08670040
086800     EVALUATE TRUE                                                08680040
086900         WHEN SQLCODE = ZERO                                      08690040
087000         WHEN SQLCODE = +100                                      08700040
087100              CONTINUE                                            08710040
087200         WHEN SQLWARN0 NOT EQUAL SPACE                            08720040
087300         WHEN SQLCODE NOT EQUAL ZERO                              08730040
087400             DISPLAY '** ABEND **'                                08740040
087500             DISPLAY '** PROGRAM = RVKUT002 **'                   08750040
087600             DISPLAY '** PARAGRAPH = 7300-SELECT-VENDOR-INFO **'  08760040
087700             PERFORM 9100-SQL-ABEND                               08770040
087800     END-EVALUATE.                                                08780040
087900                                                                  08790040
088000     IF SQLCODE = +100                                            08800040
088100         IF DFMEIT-DFCT-ITEM-NBR = 0                              08810040
088200             MOVE 'ZERO SKU ITEMS' TO ENTNME-ENT-NAME-DESC        08820040
088300             MOVE '999999998'  TO EXTENT-DUN-NBR                  08830040
088400         ELSE                                                     08840040
088500             MOVE 'UNKNOWN VENDOR' TO ENTNME-ENT-NAME-DESC        08850040
088600             MOVE '999999999'  TO EXTENT-DUN-NBR                  08860040
088700         END-IF                                                   08870040
088800     END-IF.                                                      08880040
088900                                                                  08890040
089000******************************************************************08900040
089100* 7400-OPEN-DC-CURSOR.                                            08910040
089200******************************************************************08920040
089300 7400-OPEN-DC-CURSOR.                                             08930040
089400     EXEC SQL                                                     08940040
089500          OPEN DC_CURSOR                                          08950040
089600     END-EXEC.                                                    08960040
089700                                                                  08970040
089800     EVALUATE TRUE                                                08980040
089900         WHEN SQLWARN0 NOT EQUAL SPACE                            08990040
090000         WHEN SQLCODE NOT EQUAL ZERO                              09000040
090100             DISPLAY '** ABEND **'                                09010040
090200             DISPLAY '** PROGRAM = RVKUT002 **'                   09020040
090300             DISPLAY '** PARAGRAPH = 7400-OPEN-DC-CURSOR **'      09030040
090400             PERFORM 9100-SQL-ABEND                               09040040
090500     END-EVALUATE.                                                09050040
090600                                                                  09060040
090700******************************************************************09070040
090800* 7500-FETCH-DC-CURSOR.                                           09080040
090900******************************************************************09090040
091000 7500-FETCH-DC-CURSOR.                                            09100040
091100     EXEC SQL                                                     09110040
091200          FETCH DC_CURSOR                                         09120040
091300          INTO    :XLT00014-DC-NBR                                09130040
091400                , :XLT00010-LOC-NBR                               09140040
091500                , :XLT00010-LOC-NM                                09150040
091600                , :XLT00010-LOC-10-ABBR-NM                        09160040
091700     END-EXEC.                                                    09170040
091800                                                                  09180040
091900     EVALUATE TRUE                                                09190040
092000         WHEN SQLCODE = ZERO                                      09200040
092100              CONTINUE                                            09210040
092200         WHEN SQLCODE = +100                                      09220040
092300              SET PS-EOC-DC-CURSOR TO TRUE                        09230040
092400         WHEN SQLWARN0 NOT EQUAL SPACE                            09240040
092500         WHEN SQLCODE NOT EQUAL ZERO                              09250040
092600             DISPLAY '** ABEND **'                                09260040
092700             DISPLAY '** PROGRAM = RVKUT002 **'                   09270040
092800             DISPLAY '** PARAGRAPH = 7500-FETCH-DC-CURSOR**'      09280040
092900             PERFORM 9100-SQL-ABEND                               09290040
093000     END-EVALUATE.                                                09300040
093100                                                                  09310040
093200******************************************************************09320040
093300* 7600-CLOSE-DC-CURSOR.                                           09330040
093400******************************************************************09340040
093500 7600-CLOSE-DC-CURSOR.                                            09350040
093600     EXEC SQL                                                     09360040
093700         CLOSE DC_CURSOR                                          09370040
093800     END-EXEC.                                                    09380040
093900                                                                  09390040
094000     EVALUATE TRUE                                                09400040
094100         WHEN SQLWARN0 NOT EQUAL SPACE                            09410040
094200         WHEN SQLCODE NOT EQUAL ZERO                              09420040
094300             DISPLAY '** ABEND **'                                09430040
094400             DISPLAY '** PROGRAM = RVKUT002 **'                   09440040
094500             DISPLAY '** PARAGRAPH = 7600-CLOSE-DC-CURSOR**'      09450040
094600             PERFORM 9100-SQL-ABEND                               09460040
094700     END-EVALUATE.                                                09470040
094800                                                                  09480040
094900***************************************************************** 09490040
095000*  WRITE THE STYLE SUMMARY EXTRACT RECORD TO AN OUTPUT FILE.    * 09500040
095100***************************************************************** 09510040
095200 8000-WRITE-EXTRACT-RECORD.                                       09520040
095300     WRITE RTV-REPORT-EXTRACT-RECORD                              09530040
095400       FROM RV010-EXTRACT-RECORD.                                 09540040
095500                                                                  09550040
095600******************************************************************09560040
095700* 9000-EOJ-ROUTINE - PRINTS A GRAND TOTAL, AND CLOSES THE DRIVER  09570040
095800* CURSOR AND THE REPORT FILE.                                     09580040
095900******************************************************************09590040
096000 9000-EOJ-ROUTINE.                                                09600040
096100     INITIALIZE RV010-EXTRACT-RECORD.                             09610040
096200     SET RV010-HEADER-REC        TO TRUE.                         09620040
096300     MOVE PV-CURRENT-DATE        TO RV010-CURR-DATE.              09630040
096400                                                                  09640040
096500     MOVE PV-BEGIN-DATE          TO RV010-BEGIN-DATE.             09650040
096600     MOVE PV-END-DATE            TO RV010-END-DATE.               09660040
096700     MOVE CC-RPT-TYPE            TO RV010-RPT-TYPE.               09670040
096800                                                                  09680040
096900     MOVE PA-DR-TOTAL-RETAIL     TO RV010-DR-TOTAL-RETAIL         09690040
097000     MOVE PA-DR-TOTAL-COST       TO RV010-DR-TOTAL-COST           09700040
097100     MOVE PA-DR-TOTAL-QTY        TO RV010-DR-TOTAL-QTY            09710040
097200     MOVE PA-MO-TOTAL-RETAIL     TO RV010-MO-TOTAL-RETAIL         09720040
097300     MOVE PA-MO-TOTAL-COST       TO RV010-MO-TOTAL-COST           09730040
097400     MOVE PA-MO-TOTAL-QTY        TO RV010-MO-TOTAL-QTY            09740040
097500     MOVE PA-DD-TOTAL-RETAIL     TO RV010-DD-TOTAL-RETAIL         09750040
097600     MOVE PA-DD-TOTAL-COST       TO RV010-DD-TOTAL-COST           09760040
097700     MOVE PA-DD-TOTAL-QTY        TO RV010-DD-TOTAL-QTY.           09770040
097800                                                                  09780040
097900                                                                  09790040
098000* WRITE HEADER INFORMATION TO OUTPUT FILE.                        09800040
098100                                                                  09810040
098200     PERFORM 8000-WRITE-EXTRACT-RECORD.                           09820040
098300                                                                  09830040
098400     CLOSE RTV-REPORT-EXTRACT.                                    09840040
098500     PERFORM 7100-CLOSE-DRIVER-CURSOR.                            09850040
098600                                                                  09860040
098700******************************************************************09870040
098800* 9100-SQL-ABEND - PERFORMS THE ABEND FOR THE PROGRAM IN THE      09880040
098900* EVENT THAT AN SQL ERROR OR WARNING CODE OCCURS.                 09890040
099000******************************************************************09900040
099100 9100-SQL-ABEND.                                                  09910040
099200******************************************************************09920040
099300* THIS COPY BOOK MEMBER CONTAINS THE PROCEDURE DIVISION STATE-    09930040
099400* MENTS THAT ARE REQUIRED TO UTILIZE THE DB2 ABEND MODULE         09940040
099500* 'DSNTIAR' AND CONVERT THE SQLCA INFORMATION INTO A READABLE     09950040
099600* FORMAT.                                                         09960040
099700******************************************************************09970040
099800     COPY DPPD004.                                                09980040
099900                                                                  09990040
100000     MOVE +4013 TO ABEND-CODE.                                    10000040
100100     CALL 'ILBOABN0' USING ABEND-CODE.                            10010040
100200                                                                  10020040
100300******************************************************************10030040
100400* 9200-NON-SQL-ABEND - PERFORMS THE ABEND FOR THE PROGRAM IN THE  10040040
100500* EVENT THAT A NON SQL ERROR OCCURS.                              10050040
100600******************************************************************10060040
100700 9200-NON-SQL-ABEND.                                              10070040
100800     MOVE +4014 TO ABEND-CODE.                                    10080040
100900     CALL 'ILBOABN0' USING ABEND-CODE.                            10090040
