/* REXX */                                                                      
/* TRACE R */                                                                   
                                                                                
/****************************************************************/              
/* CMKRX001 - PRODUCTION DATA CHANGE AUDIT TRAIL COMPLETION     */              
/*                                                              */              
/* This REXX program carries out the steps required to          */              
/* complete the audit trail for a production data change,       */              
/* with the steps dependent on the success or failure of the    */              
/* execution of the staged SQL.  The passed parameters are      */              
/* validated before any action is taken.  The Dataset           */              
/* Definitions In Use indicator is used to set up the           */              
/* environment for the PDS names involved in the request.       */              
/* The production data change summary file dataset name is      */              
/* validated next, and among the fields on the file are the     */              
/* name of the staged SQL member that was executed, and an      */              
/* indication if any statement that could change data executed  */              
/* successfully.  To complete the evaluation of that parameter  */              
/* the presence of the staged SQL member of the same name, and  */              
/* the related control file member, are verified.  The new      */              
/* audit file dataset name is validated next, to ensure that    */              
/* the pre-formatted audit records that relate to the execution */              
/* of the production data change request are present.           */              
/* Regardless of the success of the request, the system ID-     */              
/* level production data change audit member is updated to      */              
/* show the new audit information as the first entry in that    */              
/* file.  All new audit records are written to a new version    */              
/* of the audit file, followed by all existing audit records    */              
/* for that system ID, after which the updated member replaces  */              
/* the existing audit.  If a statement that could change data   */              
/* executed successfully, the SQL member must be retained for   */              
/* permanent audit.  The SQL member is moved from the stage     */              
/* PDS to the production PDS for retention and to block any     */              
/* subsequent use of that member name.  If the move is          */              
/* successful, the related control file member is deleted to    */              
/* finalize the cleanup.                                        */              
/*                                                              */              
/* Parameter list:                                              */              
/*                                                              */              
/*     Dataset Definitions In Use                               */              
/*         "P" = Production DSNs, "T" = Test DSNs               */              
/*     Production Data Change Summary File DSN                  */              
/*     New Audit File DSN                                       */              
/*                                                              */              
/* Change History:                                              */              
/*                                                              */              
/* 07/09/2003 - Initial installation (WR25298).                 */              
/****************************************************************/              
                                                                                
/**********************************************************************/        
/* Accept parameters.                                                 */        
/**********************************************************************/        
ARG DSNDEFN SUMMDSN NWAUDDSN                                                    
/*********************************************************************/         
/* Initialize local variables.                                       */         
/*********************************************************************/         
DSNDEFN = STRIP(DSNDEFN)                                                        
SUMMDSN = STRIP(SUMMDSN)                                                        
NWAUDDSN = STRIP(NWAUDDSN)                                                      
DID1 = ''                                                                       
DID1_RC = 8                                                                     
SUMMRCD = ''                                                                    
SUMMLEN = 40                                                                    
STAGE_PDS = 'QKMO.CM.PRODDATA.SQL.STAGE'                                        
DID2 = ''                                                                       
DID2_RC = 8                                                                     
CNTL_PDS = 'QKMO.CM.PRODDATA.SQL.STAGE.CNTL'                                    
DID3 = ''                                                                       
DID3_RC = 8                                                                     
CNTLRCD = ''                                                                    
CNTLLEN = 120                                                                   
DID4 = ''                                                                       
DID4_RC = 8                                                                     
NWAUDRCD = ''                                                                   
NWAUDLEN = 80                                                                   
AUDIT_PDS = 'PKMO.CM.AUDIT.PRODDATA.SQL'                                        
DID5 = ''                                                                       
DID5_RC = 8                                                                     
DID6 = ''                                                                       
DID6_RC = 8                                                                     
AUDITRCD = ''                                                                   
AUDITLEN = 80                                                                   
PROD_PDS = 'PKMO.CM.PRODDATA.SQL'                                               
DID7 = ''                                                                       
DID7_RC = 8                                                                     
SQL_MBR = ''                                                                    
IF (DSNDEFN = 'T') THEN DO                                                      
    CNTL_PDS = 'TKMA.CM.PRODDATA.SQL.STAGE.CNTL'                                
    STAGE_PDS = 'TKMA.CM.PRODDATA.SQL.STAGE'                                    
    PROD_PDS = 'TKMA.CM.PRODDATA.SQL.PROD'                                      
    AUDIT_PDS = 'TKMA.CM.AUDIT.PRODDATA.SQL'                                    
END                                                                             
/*********************************************************************/         
/* Set values for constants.                                         */         
/*********************************************************************/         
PC_CURRENT_PROGRAM_NAME = 'CMKRX001'                                            
PC_MAXIMUM_RECORD_COUNT_STAT = 65535                                            
AC_WRITE_ERROR = 4001                                                           
AC_READ_ERROR = 4002                                                            
AC_CONTROL_CARD_ERROR = 4003                                                    
AC_FILE_SEQUENCE_ERROR = 4007                                                   
AC_INVLD_DATA_ON_DATASET_ERROR = 4008                                           
DSNDEFN_PRODUCTION_DSNS = 'P'                                                   
DSNDEFN_TEST_DSNS = 'T'                                                         
/**********************************************************************/        
/* Program Mainline.                                                  */        
/**********************************************************************/        
RETURN_CODE = 0                                                                 
ADDRESS(ISPEXEC)                                                                
                                                                                
SAY PC_CURRENT_PROGRAM_NAME '-',                                                
          'Completing Production Data Change Process'                           
                                                                                
SELECT                                                                          
    WHEN (DSNDEFN = DSNDEFN_PRODUCTION_DSNS) THEN nop                           
    WHEN (DSNDEFN = DSNDEFN_TEST_DSNS) THEN                                     
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  '*** TEST DATASET NAMES ARE IN EFFECT ***'                    
    OTHERWISE DO                                                                
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '- Invalid DSN definition',                 
                  'parameter of' DSNDEFN                                        
        RETURN_CODE = AC_CONTROL_CARD_ERROR                                     
    END                                                                         
END                                                                             
                                                                                
"VGET (ZDATESTD ZTIMEL) SHARED"                                                 
                                                                                
IF (RETURN_CODE = 0) THEN DO                                                    
    CALL VERIFY_GET_SUMMARY                                                     
    IF (RETURN_CODE = 0) THEN DO                                                
        SAY PC_CURRENT_PROGRAM_NAME '- Completing audit for' SQL_MBR            
        CALL VERIFY_SQL_MBR                                                     
        IF (RETURN_CODE = 0) THEN DO                                            
            CALL GET_CNTL                                                       
            IF (RETURN_CODE = 0) THEN DO                                        
                CALL VERIFY_NEW_AUDIT                                           
                IF (RETURN_CODE = 0) THEN DO                                    
                    CALL UPDATE_AUDIT                                           
                    IF (RETURN_CODE = 0) THEN DO                                
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  SUBSTR(SQL_MBR,1,2) 'System',                 
                                  'audit entry successfully updated'            
                        IF  (SUCCESSFUL_STMT = 'Y') THEN DO                     
                            CALL MOVE_SQL_TO_PROD                               
                            IF (RETURN_CODE = 0) THEN DO                        
                                SAY PC_CURRENT_PROGRAM_NAME '-' SQL_MBR,        
                                          'SQL successfully archived'           
                                CALL DELETE_CNTL                                
                                IF (RETURN_CODE = 0) THEN                       
                                    SAY PC_CURRENT_PROGRAM_NAME '-',            
                                              'Control information',            
                                              'successfully deleted'            
                            END                                                 
                        END                                                     
                        ELSE DO                                                 
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      '*** No successful SQL statement',        
                                      'was executed ***'                        
                            SAY PC_CURRENT_PROGRAM_NAME '-' SQL_MBR,            
                                      'SQL not archived'                        
                            SAY PC_CURRENT_PROGRAM_NAME '-' SQL_MBR,            
                                      'SQL remains staged and',                 
                                      'available for use'                       
                        END                                                     
                    END                                                         
                END                                                             
            END                                                                 
       END                                                                      
    END                                                                         
END                                                                             
                                                                                
TRACE(OFF)                                                                      
CALL CLEANUP                                                                    
EXIT RETURN_CODE                                                                
                                                                                
/* ----------------------------------------------------------------- */         
/* SUBROUTINES                                                       */         
/* ----------------------------------------------------------------- */         
                                                                                
/* ----------------------------------------------------------------- */         
/* VERIFY_GET_SUMMARY                                                */         
/*                                                                   */         
/* Verify the existence and characteristics of the file containing   */         
/* the record that summarizes the results of a production data       */         
/* change, read the record, and parse out the SQL member name, and   */         
/* indication of a successful SQL statement execution.  If a DID     */         
/* for the summary file has already been established, it will be     */         
/* used, otherwise establish the DID.  An invalid file name will     */         
/* fail on the LMINIT to establish a DID.  The specified file must   */         
/* carry the required DCB characteristics, or it will be flagged as  */         
/* an error.  After a successful get, the required summary           */         
/* information is parsed out of the summary record.  Success of all  */         
/* parts of this verification will also be treated as successful     */         
/* validation of the summary file dataset name parameter pased to    */         
/* this program.                                                     */         
/* ----------------------------------------------------------------- */         
                                                                                
VERIFY_GET_SUMMARY:                                                             
                                                                                
    IF (DID1 = '') THEN DO                                                      
        "LMINIT DATAID(DID1) DATASET('"SUMMDSN"')"                              
        DID1_RC = RC                                                            
    END                                                                         
    IF (DID1_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID1") LRECL(SUMLRECL) RECFM(SUMRECFM)",                
                  "ORG(SUMORG)"                                                 
        IF (RC = 0) THEN DO                                                     
            IF (SUMORG = 'PS') THEN                                             
                IF ((SUMRECFM = 'FB') & (SUMLRECL = '00000040')) THEN DO        
                    "LMGET DATAID("DID1") MODE(INVAR)",                         
                              "DATALOC(SUMMRCD)",                               
                              "DATALEN(SUMMLEN) MAXLEN(40)"                     
                    IF (RC = 0) THEN DO                                         
                        SQL_MBR = STRIP(SUBSTR(SUMMRCD,1,8))                    
                        SUCCESSFUL_STMT = STRIP(SUBSTR(SUMMRCD,9,1))            
                    END                                                         
                    ELSE DO                                                     
                        SAY '** ABEND **'                                       
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  'GET Error on' SUMMDSN ' RC =' || RC          
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  'Contact Change Management'                   
                        RETURN_CODE = AC_READ_ERROR                             
                    END                                                         
                END                                                             
                ELSE DO                                                         
                    SAY '** ABEND **'                                           
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              SUMMDSN 'does not have the correct DCB',          
                              'characteristics - RECFM(' || SUMRECFM ||,        
                              ') LRECL(' || SUMLRECL || ')'                     
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'Contact Change Management'                       
                    RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                
                END                                                             
            ELSE DO                                                             
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          SUMMDSN 'is not a flat file'                          
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                    
            END                                                                 
            "LMCLOSE DATAID("DID1")"                                            
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' SUMMDSN ' RC =' RC                        
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_READ_ERROR                                         
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' SUMMDSN ' RC =' DID1_RC                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID1_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      SUMMDSN 'likely does not exist'                           
        RETURN_CODE = AC_CONTROL_CARD_ERROR                                     
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* VERIFY_SQL_MBR                                                    */         
/*                                                                   */         
/* Verify the existence and characteristics of the SQL source member */         
/* that was staged for production data change execution.  If a DID   */         
/* for the SQL source PDS has already been established, it will be   */         
/* used, otherwise establish the DID.  An invalid PDS will fail on   */         
/* the LMINIT to establish a DID.  The specified PDS must carry the  */         
/* required DCB characteristics.  A LMMLIST will correctly return    */         
/* a return code of 0 or 8 if the member is found or not found.  The */         
/* position established in the list must be evaluated to determine   */         
/* if the member was actually found, or position was just established*/         
/* at the next member in alphabetic sequence.  A correct and existing*/         
/* member will ensure the presence of another component required for */         
/* completion of the production data change audit.                   */         
/* ----------------------------------------------------------------- */         
                                                                                
VERIFY_SQL_MBR:                                                                 
                                                                                
    IF (DID2 = '') THEN DO                                                      
        "LMINIT DATAID(DID2) DATASET('"STAGE_PDS"')"                            
        DID2_RC = RC                                                            
    END                                                                         
    IF (DID2_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID2") LRECL(PDSLRECL) RECFM(PDSRECFM)",                
                  "ORG(PDSORG)"                                                 
        IF (RC = 0) THEN DO                                                     
            IF (PDSORG = 'PO') THEN                                             
                IF ((PDSRECFM = 'FB') & (PDSLRECL = '00000080')) THEN DO        
                    MEMB = SQL_MBR                                              
                    "LMMLIST DATAID("DID2") OPTION(LIST) MEMBER(MEMB)"          
                    IF (RC > 8) THEN DO                                         
                        SAY '** ABEND **'                                       
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  'LIST Error on' STAGE_PDS ' RC =' RC          
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  'Contact Change Management'                   
                        RETURN_CODE = AC_READ_ERROR                             
                    END                                                         
                    ELSE                                                        
                        IF ((RC ^= 0) | (MEMB ^= SQL_MBR)) THEN DO              
                            SAY '** ABEND **'                                   
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'SQL member "' || SQL_MBR ||,             
                                      '" not found in' STAGE_PDS,               
                                      ' RC =' RC                                
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Contact Change Management'               
                            RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR        
                        END                                                     
                END                                                             
                ELSE DO                                                         
                    SAY '** ABEND **'                                           
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              STAGE_PDS 'does not have the correct DCB',        
                              'characteristics - RECFM(' || PDSRECFM ||,        
                              ') LRECL(' || PDSLRECL || ')'                     
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'Contact Change Management'                       
                    RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                
                END                                                             
            ELSE DO                                                             
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          STAGE_PDS 'is not a PDS'                              
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                    
            END                                                                 
            "LMCLOSE DATAID("DID2")"                                            
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' STAGE_PDS ' RC =' RC                      
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_READ_ERROR                                         
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' STAGE_PDS ' RC =' DID2_RC                     
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID2_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      STAGE_PDS 'likely does not exist'                         
        RETURN_CODE = AC_READ_ERROR                                             
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* GET_CNTL                                                          */         
/*                                                                   */         
/* Verify the existence and characteristics of the control record    */         
/* related to the SQL source member that was staged from production  */         
/* data change execution, and read the control record.  If a DID for */         
/* the control record PDS has already been established, it will be   */         
/* used, otherwise establish the DID.  An invalid PDS will fail on   */         
/* the LMINIT to establish a DID.  The specified PDS must carry the  */         
/* required DCB characteristics.  An LMMFIND will return a return    */         
/* code of 8 if the member is not found.  If found, the control      */         
/* record will be read for future parsing.  A correct and existing   */         
/* member will ensure the presence of another component required for */         
/* completion of the production data change audit.                   */         
/* ----------------------------------------------------------------- */         
                                                                                
GET_CNTL:                                                                       
                                                                                
    IF (DID3 = '') THEN DO                                                      
        "LMINIT DATAID(DID3) DATASET('"CNTL_PDS"')"                             
        DID3_RC = RC                                                            
    END                                                                         
    IF (DID3_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID3") LRECL(CTLLRECL) RECFM(CTLRECFM)",                
                  "ORG(CTLORG)"                                                 
        IF (RC = 0) THEN DO                                                     
            IF (CTLORG = 'PO') THEN                                             
                IF ((CTLRECFM = 'FB') & (CTLLRECL = '00000120')) THEN DO        
                    "LMMFIND DATAID("DID3") MEMBER("SQL_MBR")"                  
                    SELECT                                                      
                        WHEN (RC = 0) THEN DO                                   
                            "LMGET DATAID("DID3") MODE(INVAR)",                 
                                      "DATALOC(CNTLRCD)",                       
                                      "DATALEN(CNTLLEN) MAXLEN(120)"            
                            IF (RC ^= 0) THEN DO                                
                                SAY '** ABEND **'                               
                                SAY PC_CURRENT_PROGRAM_NAME '-',                
                                          'GET Error on' CNTL_PDS 'for',        
                                          'member "'|| SQL_MBR || '"',          
                                          ' RC =' RC                            
                                SAY PC_CURRENT_PROGRAM_NAME '-',                
                                          'Contact Change Management'           
                                RETURN_CODE = AC_READ_ERROR                     
                            END                                                 
                        END                                                     
                        WHEN (RC = 8) THEN DO                                   
                            SAY '** ABEND **'                                   
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Control member "' || SQL_MBR ||,         
                                      '" not found in' CNTL_PDS,                
                                      ' RC =' RC                                
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Contact Change Management'               
                            RETURN_CODE = AC_FILE_SEQUENCE_ERROR                
                        END                                                     
                        OTHERWISE DO                                            
                            SAY '** ABEND **'                                   
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'FIND Error on' CNTL_PDS ' RC =',         
                                      || RC                                     
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Contact Change Management'               
                            RETURN_CODE = AC_READ_ERROR                         
                        END                                                     
                    END                                                         
                END                                                             
                ELSE DO                                                         
                    SAY '** ABEND **'                                           
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              CNTL_PDS 'does not have the correct DCB',         
                              'characteristics - RECFM(' || CTLRECFM ||,        
                              ') LRECL(' || CTLLRECL || ')'                     
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'Contact Change Management'                       
                    RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                
                END                                                             
            ELSE DO                                                             
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          CNTL_PDS 'is not a PDS'                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                    
            END                                                                 
            "LMCLOSE DATAID("DID3")"                                            
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' CNTL_PDS ' RC =' RC                       
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_READ_ERROR                                         
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' CNTL_PDS ' RC =' DID3_RC                      
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID3_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      CNTL_PDS 'likely does not exist'                          
        RETURN_CODE = AC_READ_ERROR                                             
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* VERIFY_NEW_AUDIT                                                  */         
/*                                                                   */         
/* Verify the existence and characteristics of the file containing   */         
/* the formatted audit information detailing the execution of this   */         
/* production data change.  If a DID for the new audit file has      */         
/* already been established, it will be used, otherwise establish    */         
/* the DID.  An invalid file name will fail on the LMINIT to         */         
/* establish a DID.  The specified file must carry the required DCB  */         
/* characteristics, or it will be flagged as an error.  A priming    */         
/* read of the new audit file will be done to seed the audit update  */         
/* process.  Success of all parts of this verification will also be  */         
/* treated as successful validation of the new audit file dataset    */         
/* name parameter passed to this program.                            */         
/* ----------------------------------------------------------------- */         
                                                                                
VERIFY_NEW_AUDIT:                                                               
                                                                                
    IF (DID4 = '') THEN DO                                                      
        "LMINIT DATAID(DID4) DATASET('"NWAUDDSN"')"                             
        DID4_RC = RC                                                            
    END                                                                         
    IF (DID4_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID4") LRECL(NWALRECL) RECFM(NWARECFM)",                
                  "ORG(NWAORG)"                                                 
        IF (RC = 0) THEN DO                                                     
            IF (SUMORG = 'PS') THEN                                             
                IF ((NWARECFM = 'FB') & (NWALRECL = '00000080')) THEN DO        
                    "LMGET DATAID("DID4") MODE(INVAR)",                         
                              "DATALOC(NWAUDRCD)",                              
                              "DATALEN(NWAUDLEN) MAXLEN(80)"                    
                    IF (RC ^= 0) THEN DO                                        
                        SAY '** ABEND **'                                       
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  'GET Error on' NWAUDDSN ' RC =' || RC         
                        SAY PC_CURRENT_PROGRAM_NAME '-',                        
                                  'Contact Change Management'                   
                        RETURN_CODE = AC_READ_ERROR                             
                    END                                                         
                END                                                             
                ELSE DO                                                         
                    SAY '** ABEND **'                                           
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              NWAUDDSN 'does not have the correct DCB',         
                              'characteristics - RECFM(' || NWARECFM ||,        
                              ') LRECL(' || NWALRECL || ')'                     
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'Contact Change Management'                       
                    RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                
                END                                                             
            ELSE DO                                                             
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          NWAUDDSN 'is not a flat file'                         
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                    
            END                                                                 
            IF (RETURN_CODE ^= 0) THEN                                          
                "LMCLOSE DATAID("DID4")"                                        
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' NWAUDDSN ' RC =' RC                       
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_READ_ERROR                                         
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' NWAUDDSN ' RC =' DID4_RC                      
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID4_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      NEAUDDSN 'likely does not exist'                          
        RETURN_CODE = AC_READ_ERROR                                             
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* UPDATE_AUDIT                                                      */         
/*                                                                   */         
/* Create an updated version of the system-ID level production data  */         
/* change audit member for the impacted system ID.  Write out all    */         
/* audit information built during the evaluation of this production  */         
/* data change first, and then append the existing version of the    */         
/* system ID-level audit member, to maintain reverse chronology.     */         
/* Issue a replace, to make the new version and new statistics the   */         
/* current version of the member.  Close all audit files and free    */         
/* all DIDs to complete all audit activities.                        */         
/* ----------------------------------------------------------------- */         
                                                                                
UPDATE_AUDIT:                                                                   
                                                                                
    CALL WRITE_NEW_AUDIT                                                        
    IF (RETURN_CODE = 0) THEN DO                                                
        CALL VERIFY_OLD_AUDIT                                                   
        IF (RETURN_CODE = 0) THEN DO                                            
            CALL APPEND_OLD_AUDIT                                               
            IF (RETURN_CODE = 0) THEN DO                                        
                CALL REPLACE_AUDIT                                              
            END                                                                 
        END                                                                     
    END                                                                         
                                                                                
    IF (DID4 ^= '') THEN DO                                                     
        "LMCLOSE DATAID("DID4")"                                                
        "LMFREE DATAID("DID4")"                                                 
        DID4 = ''                                                               
    END                                                                         
                                                                                
    IF (DID5 ^= '') THEN DO                                                     
        "LMCLOSE DATAID("DID5")"                                                
        "LMFREE DATAID("DID5")"                                                 
        DID5 = ''                                                               
    END                                                                         
                                                                                
    IF (DID6 ^= '') THEN DO                                                     
        "LMCLOSE DATAID("DID6")"                                                
        "LMFREE DATAID("DID6")"                                                 
        DID6 = ''                                                               
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* WRITE_NEW_AUDIT                                                   */         
/*                                                                   */         
/* Verify the existence of the production data change audit PDS, and */         
/* open it for output.  If a DID for the audit PDS has already been  */         
/* established, it will be used, otherwise establish the DID.  An    */         
/* invalid PDS name will fail on the LMINIT to establish a DID.      */         
/* The new audit records will written to establish a new version of  */         
/* the audit file, and the next record read from the new audit file. */         
/* Record counts will be kept in order to properly set statistics.   */         
/* The new audit information is written first to keep the most       */         
/* current audit information at the top of the file for ease in      */         
/* browsing.                                                         */         
/* ----------------------------------------------------------------- */         
                                                                                
WRITE_NEW_AUDIT:                                                                
                                                                                
    IF (DID6 = '') THEN DO                                                      
        "LMINIT DATAID(DID6) DATASET('"AUDIT_PDS"') ENQ(SHRW)"                  
        DID6_RC = RC                                                            
    END                                                                         
    IF (DID6_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID6") OPTION(OUTPUT)"                                  
        IF (RC = 0) THEN DO                                                     
            ZLCNORC = 0                                                         
            ZLMNORC = 0                                                         
            PUT_ERROR = 'N'                                                     
            DO WHILE (RC = 0)                                                   
                AUDITRCD = LEFT(NWAUDRCD,80)                                    
                "LMPUT DATAID("DID6") MODE(INVAR) DATALOC(AUDITRCD)",           
                          "DATALEN(80)"                                         
                IF (RC = 0) THEN DO                                             
                    ZLCNORC = ZLCNORC + 1                                       
                    ZLMNORC = ZLMNORC + 1                                       
                    "LMGET DATAID("DID4") MODE(INVAR)",                         
                              "DATALOC(NWAUDRCD)",                              
                              "DATALEN(NWAUDLEN) MAXLEN(80)"                    
                END                                                             
                ELSE DO                                                         
                    SAY '** ABEND **'                                           
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'PUT Error on' AUDIT_PDS 'for',                   
                              'member "'|| SUBSTR(SQL_MBR,1,2) || '"',          
                              ' RC =' RC                                        
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'Contact Change Management'                       
                    RETURN_CODE = AC_WRITE_ERROR                                
                    PUT_ERROR = 'Y'                                             
                END                                                             
            END                                                                 
            IF ((RC > 8) & (PUT_ERROR = 'N')) THEN DO                           
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'GET Error on' NWAUDDSN ' RC =' || RC                 
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_READ_ERROR                                     
            END                                                                 
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' AUDIT_PDS 'for OUTPUT  RC =' RC           
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_WRITE_ERROR                                        
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' AUDIT_PDS 'for shared write  RC =',           
                  DID6_RC                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID6_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      AUDIT_PDS 'likely does not exist'                         
        RETURN_CODE = AC_WRITE_ERROR                                            
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* VERIFY_OLD_AUDIT                                                  */         
/*                                                                   */         
/* Verify the existence and characteristics of the existing system   */         
/* ID-level production data change audit member.  If a DID for       */         
/* for the audit PDS has already been established, it will be used,  */         
/* otherwise establish the DID.  An invalid PDS will fail on the     */         
/* LMINIT to establish a DID.  The specified PDS must carry the      */         
/* required DCB characteristics.  An LMMFIND will return a return    */         
/* code of 8 if the member is not found.  If found, a priming read   */         
/* the existing audit member will be done to seed the audit update   */         
/* process.                                                          */         
/* ----------------------------------------------------------------- */         
                                                                                
VERIFY_OLD_AUDIT:                                                               
                                                                                
    IF (DID5 = '') THEN DO                                                      
        "LMINIT DATAID(DID5) DATASET('"AUDIT_PDS"')"                            
        DID5_RC = RC                                                            
    END                                                                         
    IF (DID5_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID5") LRECL(AUDLRECL) RECFM(AUDRECFM)",                
                  "ORG(AUDORG)"                                                 
        IF (RC = 0) THEN DO                                                     
            IF (AUDORG = 'PO') THEN                                             
                IF ((AUDRECFM = 'FB') & (AUDLRECL = '00000080')) THEN DO        
                    MEMB = SUBSTR(SQL_MBR,1,2)                                  
                    "LMMFIND DATAID("DID5") MEMBER("MEMB")"                     
                    SELECT                                                      
                        WHEN (RC = 0) THEN DO                                   
                            "LMGET DATAID("DID5") MODE(INVAR)",                 
                                      "DATALOC(AUDITRCD)",                      
                                      "DATALEN(AUDITLEN) MAXLEN(80)"            
                            IF (RC ^= 0) THEN DO                                
                                SAY '** ABEND **'                               
                                SAY PC_CURRENT_PROGRAM_NAME '-',                
                                          'GET Error on' AUDIT_PDS,             
                                          'for member "'||,                     
                                          SUBSTR(SQL_MBR,1,2) ||,               
                                          '"  RC =' RC                          
                                SAY PC_CURRENT_PROGRAM_NAME '-',                
                                          'Contact Change Management'           
                                RETURN_CODE = AC_READ_ERROR                     
                            END                                                 
                        END                                                     
                        WHEN (RC = 8) THEN DO                                   
                            SAY '** ABEND **'                                   
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Audit member "' ||,                      
                                      SUBSTR(SQL_MBR,1,2) ||,                   
                                      '" not found in' AUDIT_PDS,               
                                      ' RC =' RC                                
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Contact Change Management'               
                            RETURN_CODE = AC_FILE_SEQUENCE_ERROR                
                        END                                                     
                        OTHERWISE DO                                            
                            SAY '** ABEND **'                                   
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'FIND Error on' AUDIT_PDS ' RC =',        
                                      || RC                                     
                            SAY PC_CURRENT_PROGRAM_NAME '-',                    
                                      'Contact Change Management'               
                            RETURN_CODE = AC_READ_ERROR                         
                        END                                                     
                    END                                                         
                END                                                             
                ELSE DO                                                         
                    SAY '** ABEND **'                                           
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              AUDIT_PDS 'does not have the correct DCB',        
                              'characteristics - RECFM(' || AUDRECFM ||,        
                              ') LRECL(' || AUDLRECL || ')'                     
                    SAY PC_CURRENT_PROGRAM_NAME '-',                            
                              'Contact Change Management'                       
                    RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                
                END                                                             
            ELSE DO                                                             
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          AUDIT_PDS 'is not a PDS'                              
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_INVLD_DATA_ON_DATASET_ERROR                    
            END                                                                 
            IF (RETURN_CODE ^= 0) THEN                                          
                "LMCLOSE DATAID("DID5")"                                        
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' AUDIT_PDS 'for existing audit',           
                      ' RC =' RC                                                
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_READ_ERROR                                         
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' AUDIT_PDS 'for existing audit  RC =',         
                  DID5_RC                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID5_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      AUDIT_PDS 'likely does not exist'                         
        RETURN_CODE = AC_READ_ERROR                                             
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* APPEND_OLD_AUDIT                                                  */         
/*                                                                   */         
/* Append the existing system ID-level production data change audit  */         
/* information to the end of the new version of the audit member,    */         
/* completing the creation of the updated audit member.  The         */         
/* existing audit records are written to the new version, and the    */         
/* next record read from the existing audit member.  Record counts   */         
/* continue to be kept in order to properly set statistics.          */         
/* ----------------------------------------------------------------- */         
                                                                                
APPEND_OLD_AUDIT:                                                               
                                                                                
    ZLINORC = 0                                                                 
    PUT_ERROR = 'N'                                                             
    DO WHILE (RC = 0)                                                           
        "LMPUT DATAID("DID6") MODE(INVAR) DATALOC(AUDITRCD)",                   
                  "DATALEN(80)"                                                 
        IF (RC = 0) THEN DO                                                     
            ZLCNORC = ZLCNORC + 1                                               
            ZLINORC = ZLINORC + 1                                               
            "LMGET DATAID("DID5") MODE(INVAR) DATALOC(AUDITRCD)",               
                      "DATALEN(AUDITLEN) MAXLEN(80)"                            
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'PUT Error on' AUDIT_PDS 'for',                           
                      'member "'|| SUBSTR(SQL_MBR,1,2) || '"',                  
                      ' RC =' RC                                                
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_WRITE_ERROR                                        
            PUT_ERROR = 'Y'                                                     
        END                                                                     
    END                                                                         
                                                                                
    IF ((RC > 8) & (PUT_ERROR = 'N')) THEN DO                                   
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'GET Error on' AUDIT_PDS 'for member "'||,                    
                  SUBSTR(SQL_MBR,1,2) ||,                                       
                  '"  RC =' RC                                                  
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        RETURN_CODE = AC_READ_ERROR                                             
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* REPLACE_AUDIT                                                     */         
/*                                                                   */         
/* Finish creating the statistics for the new version of the system  */         
/* ID-level production data change audit member, and then issue an   */         
/* LMMREP to make this version and the new statistics the current    */         
/* version of the audit.                                             */         
/* ----------------------------------------------------------------- */         
                                                                                
REPLACE_AUDIT:                                                                  
                                                                                
    ZLVERS = 1                                                                  
    ZLMOD = 0                                                                   
    ZLC4DATE = ZDATESTD                                                         
    ZLM4DATE = ZDATESTD                                                         
    ZLMTIME = LEFT(ZTIMEL,8)                                                    
    ZLUSER = STRIP(SUBSTR(CNTLRCD,10,8))                                        
    IF ZLCNORC > PC_MAXIMUM_RECORD_COUNT_STAT THEN                              
        ZLCNORC = PC_MAXIMUM_RECORD_COUNT_STAT                                  
    IF ZLINORC > PC_MAXIMUM_RECORD_COUNT_STAT THEN                              
        ZLINORC = PC_MAXIMUM_RECORD_COUNT_STAT                                  
    "LMMREP DATAID("DID6") MEMBER("SUBSTR(SQL_MBR,1,2)") STATS(YES)"            
    IF ((RC ^= 0) & (RC ^= 8)) THEN DO                                          
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'REPLACE Error on' AUDIT_PDS 'for',                           
                  'member "'|| SUBSTR(SQL_MBR,1,2) || '"',                      
                  ' RC =' RC                                                    
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'AUDIT NOT POSTED'                                            
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        RETURN_CODE = AC_WRITE_ERROR                                            
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* MOVE_SQL_TO_PROD                                                  */         
/*                                                                   */         
/* Move the staged SQL source member to production to preseve it for */         
/* permanent audit.  If a DID for production SQL PDS has already     */         
/* been established, it will be used, otherwise establish the DID.   */         
/* An invalid PDS will fail on the LMINIT to establish a DID.        */         
/* An LMMOVE will complete the move request, rather than an LMMREP,  */         
/* since the SQL member should not already exist in production, and  */         
/* if it does, it should be treated as an error.                     */         
/* ----------------------------------------------------------------- */         
                                                                                
MOVE_SQL_TO_PROD:                                                               
                                                                                
    IF (DID7 = '') THEN DO                                                      
        "LMINIT DATAID(DID7) DATASET('"PROD_PDS"')"                             
        DID7_RC = RC                                                            
    END                                                                         
    IF (DID7_RC = 0) THEN DO                                                    
                                                                                
        /* Do not use the REPLACE option, since no existing         */          
        /* production member can be replaced.                       */          
                                                                                
        "LMMOVE FROMID("DID2") FROMMEM("SQL_MBR") TODATAID("DID7")"             
        IF (RC ^= 0) THEN DO                                                    
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'MOVE Error from' STAGE_PDS 'to' PROD_PDS 'for',          
                      'member "'|| SQL_MBR || '"  RC =' RC                      
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_WRITE_ERROR                                        
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' PROD_PDS ' RC =' DID7_RC                      
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID7_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      PROD_PDS 'likely does not exist'                          
        RETURN_CODE = AC_WRITE_ERROR                                            
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* DELETE_CNTL                                                       */         
/*                                                                   */         
/* Delete the production data change control file member after any   */         
/* statement within the related SQL member successfully executed,    */         
/* and, in the audit process, the SQL member has been successfully   */         
/* moved to production for permanent retention.  Free and            */         
/* re-establish the DID for shared write.  Open the control file     */         
/* PDS for output, and delete the control member for the current     */         
/* production data change request.                                   */         
/* ----------------------------------------------------------------- */         
                                                                                
DELETE_CNTL:                                                                    
                                                                                
    "LMFREE DATAID("DID3")"                                                     
    DID3 = ''                                                                   
    "LMINIT DATAID(DID3) DATASET('"CNTL_PDS"') ENQ(SHRW)"                       
    DID3_RC = RC                                                                
    IF (DID3_RC = 0) THEN DO                                                    
        "LMOPEN DATAID("DID3") OPTION(OUTPUT)"                                  
        IF (RC = 0) THEN DO                                                     
            "LMMDEL DATAID("DID3") MEMBER("SQL_MBR")"                           
            IF (RC ^= 0) THEN DO                                                
                SAY '** ABEND **'                                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'DELETE Error on' CNTL_PDS 'for member "',            
                          SQL_MBR || '"  RC =' RC                               
                SAY PC_CURRENT_PROGRAM_NAME '-',                                
                          'Contact Change Management'                           
                RETURN_CODE = AC_WRITE_ERROR                                    
            END                                                                 
            "LMCLOSE DATAID("DID3")"                                            
        END                                                                     
        ELSE DO                                                                 
            SAY '** ABEND **'                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'OPEN Error on' CNTL_PDS 'for OUTPUT  RC =' RC            
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      'Contact Change Management'                               
            RETURN_CODE = AC_WRITE_ERROR                                        
        END                                                                     
    END                                                                         
    ELSE DO                                                                     
        SAY '** ABEND **'                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'INIT Error on' CNTL_PDS 'for shared write  RC =',            
                  DID3_RC                                                       
        SAY PC_CURRENT_PROGRAM_NAME '-',                                        
                  'Contact Change Management'                                   
        IF (DID3_RC = 8) THEN                                                   
            SAY PC_CURRENT_PROGRAM_NAME '-',                                    
                      CNTL_PDS 'likely does not exist'                          
        RETURN_CODE = AC_READ_ERROR                                             
    END                                                                         
                                                                                
RETURN                                                                          
                                                                                
/* ----------------------------------------------------------------- */         
/* CLEANUP                                                           */         
/*                                                                   */         
/* Free any remaining data IDs.                                      */         
/* ----------------------------------------------------------------- */         
                                                                                
CLEANUP:                                                                        
                                                                                
    IF (DID1 ^= '') THEN                                                        
        "LMFREE DATAID("DID1")"                                                 
    IF (DID2 ^= '') THEN                                                        
        "LMFREE DATAID("DID2")"                                                 
    IF (DID3 ^= '') THEN                                                        
        "LMFREE DATAID("DID3")"                                                 
    IF (DID4 ^= '') THEN                                                        
        "LMFREE DATAID("DID4")"                                                 
    IF (DID5 ^= '') THEN                                                        
        "LMFREE DATAID("DID5")"                                                 
    IF (DID6 ^= '') THEN                                                        
        "LMFREE DATAID("DID6")"                                                 
    IF (DID7 ^= '') THEN                                                        
        "LMFREE DATAID("DID7")"                                                 
                                                                                
RETURN                                                                          
