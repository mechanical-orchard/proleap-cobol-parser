                                                                        00010099
       IDENTIFICATION DIVISION.                                         00020099
                                                                        00030099
       PROGRAM-ID.    MLKUP315                                          00040099
       AUTHOR.        SCOTT JACKSON                                     00050099
       INSTALLATION.  KOHLS DEPARTMENT STORES.                          00060099
       DATE-WRITTEN.  5-01-99.                                          00070099
       DATE-COMPILED.                                                   00080099
                                                                        00090099
      ******************************************************************00100099
      * MLKUP315 - M/L RECALC WEEKLY DEPARTMENT TABLE (TWKDPT)         *00110099
      ******************************************************************00120099
      *  THIS PROGRAM WILL RECALCULATE THE FOLLOWING FIELDS ON TWKDPT  *00130099
      *    SHNK_RTL_AMT     - RETAIL SHRINK                            *00140099
      *    END_INV_RTL_AMT  - RETAIL ENDING INVENTORY                  *00150099
      *    CUM_MKUP_PCT     - CUM-TO-DATE MARKUP PERCENT               *00160099
      *    END_INV_COST_AMT - COST ENDING INVENTORY                    *00170099
      *    SLS_COST_AMT     - COST AS A BASIS OF SALES                 *00180099
      *    GRO_MRGN_AMT     - GROSS MARGIN DOLLAR AMOUNT               *00190099
      ******               * * * * * * * * * * *                  ******00200099
      *     THE CONTROL TABLE (TMLCNTL) WILL DETERMINE THE DATE RANGE  *00210099
      *  OF ROWS THAT WILL BE UPDATED/RECALCULATED AND USED TO OBTAIN  *00220099
      *  THE PREVIOUS MONTH AND SEASON END DATES. ALL WEEKS FROM THE   *00230099
      *  LAST WEEK OF THE CURRENT PRIOR MONTH TO THE MAX MONTH-END     *00240099
      *  POSTDATE (MXPSTG) WILL BE RECALCED THIS RUN.                  *00250099
      *     ONCE THE RANGE IS DETERMINED, A CURSOR IS OPENED THAT WILL *00260099
      *  DETERMINE ALL DEPTS THAT HAVE HAD ACTIVITY WITHIN THE DATE    *00270099
      *  RANGE. IF A DEPT IS FETCHED IN THE CURSOR, THEN AT ONE WEEK   *00280099
      *  IN THE DATE RANGE HAS ACTIVITY AND WILL BE RECALCED.          *00290099
      *     EACH ROW SELECTED WILL EITHER BE RECALCED, BYPASSED OR     *00300099
      *  HAVE INVENTORY DOLLARS CARRIED FORWARD TO THE NEXT WEEK       *00310099
      *                                                                 00320099
      *    4095       08/13/1999   SCOTT JACKSON                       *00330099
      *                            ML- CUM MARK-UP PCT MAX = S9(4)V9(7)*00340099
      *                            BP- CALCS CUM MARKUP PCT >S9(4)V9(7)*00350099
      *                            IF ML CUM MARK-UP PCT IS EXCEEDED,  *00360099
      *                            A RETURN CODE OF '4095' IS CREATED  *00370099
      *                            WHICH WILL FORCE A MESSAGE TO BP APPL00380099
      *                            ADDED OUT01 TO CAPTURE THESE ROWS   *00390099
      *    SJ99*      12/02/1999   SCOTT JACKSON                       *00410099
      *                            REVISE RECALC PROGRAM SO THAT CARRY *00420099
      *                            FORWARD LOGIC IS CARRIED OUT CORRECT*00430099
99999 *    99999      02/22/2002   ROD JANSSEN                         *00431099
99999 *                            PV-HOLD-PFW-END-DTE WAS NOT SET UP  *00432099
999997*                            PROPERLY FOR AN SQL CURSOR.         *00433099
      ******************************************************************00440099
                                                                        00450099
       ENVIRONMENT DIVISION.                                            00460099
                                                                        00470099
       CONFIGURATION SECTION.                                           00480099
       SOURCE-COMPUTER.        IBM-3090.                                00490099
       OBJECT-COMPUTER.        IBM-3090.                                00500099
       INPUT-OUTPUT SECTION.                                            00510099
       FILE-CONTROL.                                                    00520099
      **                                                                00530099
4095                                                                    00540099
4095       SELECT OUTPUT-FILE                                           00550099
4095           ASSIGN TO OUT01.                                         00560099
4095                                                                    00570099
      *                                                                 00580099
       DATA DIVISION.                                                   00590099
       FILE SECTION.                                                    00600099
      **                                                                00610099
4095                                                                    00620099
4095   FD  OUTPUT-FILE                                                  00630099
4095       LABEL RECORDS ARE STANDARD                                   00640099
4095       RECORDING MODE IS F                                          00650099
4095       BLOCK CONTAINS 0 RECORDS.                                    00660099
4095   01  OUTPUT-RECORD               PIC X(80).                       00670099
4095                                                                    00680099
      *                                                                 00690099
       WORKING-STORAGE SECTION.                                         00700099
                                                                        00710099
       01  ABEND-CODE                  PIC S9(04)  VALUE ZERO COMP SYNC.00720099
                                                                        00730099
       01  PA-PROGRAM-ACCUMULATORS.                                     00740099
           05  PA-COMMIT-COUNT                 PIC  9(09) VALUE ZEROES. 00750099
           05  PA-DEPT-COUNT                   PIC  9(09) VALUE ZEROES. 00760099
           05  PA-INSERT-COUNT                 PIC  9(09) VALUE ZEROES. 00770099
           05  PA-UPDATE-COUNT                 PIC  9(09) VALUE ZEROES. 00780099
4095       05  PA-CUM-MKUP-MAX-LIMIT           PIC  9(05) VALUE ZEROES. 00790099
                                                                        00800099
       01  PS-PROGRAM-SWITCHES.                                         00810099
           05  PS-FIRST-TIME-SW                PIC X     VALUE 'N'.     00820099
               88  PS-FIRST-TIME-THRU                    VALUE 'Y'.     00830099
           05  PS-FIRST-COMMIT-SW              PIC X     VALUE 'N'.     00840099
               88  PS-FIRST-COMMIT                       VALUE 'Y'.     00850099
           05  PS-CONTROL-TABLE-EMPTY-SW       PIC X     VALUE 'N'.     00860099
               88  PS-EMPTY-CONTROL-TABLE                VALUE 'Y'.     00870099
           05  PS-LOAD-DATE-TABLE-SW           PIC X     VALUE 'N'.     00880099
               88  PS-DATE-TABLE-LOADED                  VALUE 'Y'.     00890099
           05  PS-DEPT-PROCESSING-SW           PIC X     VALUE 'N'.     00900099
               88  PS-DEPT-PROCESSED                     VALUE 'Y'.     00910099
           05  PS-DEPT-CURSOR-SW               PIC X     VALUE 'N'.     00920099
               88  PS-END-OF-DEPT-CURSOR                 VALUE 'Y'.     00930099
           05  PS-TABLE-PROCESSING-SW          PIC X     VALUE 'N'.     00940099
               88  PS-TABLE-PROCESSED                    VALUE 'Y'.     00950099
           05  PS-CURR-WEEK-SW                 PIC X     VALUE 'N'.     00960099
               88  PS-CURR-WEEK-ROW-NOT-FOUND            VALUE 'Y'.     00970099
           05  PS-PREV-WEEK-ROW-SW             PIC X     VALUE 'N'.     00980099
               88  PS-PREV-WEEK-ROW-NOT-FOUND            VALUE 'Y'.     00990099
           05  PS-CARRY-FORWARD-SW             PIC X     VALUE 'N'.     01000099
               88  PS-PFM-INV-DOLLARS-FOUND              VALUE 'Y'.     01010099
           05  PS-PREV-SEASON-INV-SW           PIC X     VALUE 'N'.     01020099
               88  PS-NO-PREV-SEASONAL-INV               VALUE 'Y'.     01030099
           05  PS-CURR-SEASON-CURSOR-SW        PIC X     VALUE 'N'.     01040099
               88  PS-END-OF-CURR-SEASON-CSR             VALUE 'Y'.     01050099
           05  PS-CURRENT-PURCH-COST-SW        PIC X     VALUE 'N'.     01060099
               88  PS-NO-CURRENT-PURCH-COSTS             VALUE 'Y'.     01070099
           05  PS-RESULTANT-TABLE-SW           PIC X     VALUE 'N'.     01080099
               88  PS-EMPTY-RESULT-TABLE                 VALUE 'Y'.     01090099
                                                                        01100099
       01  PC-PROGRAM-CONSTANTS.                                        01110099
           05  PC-JOB-NAME             PIC  X(06)    VALUE 'MLK260'.    01120099
           05  PC-PROGRAM-NAME         PIC  X(08)    VALUE 'MLKUP315'.  01130099
                                                                        01140099
       01  PE-PROGRAM-ERROR-MESSAGES.                                   01150099
           05  PE-MSG-01                       PIC X(30) VALUE          01160099
                'INSPECT WHERE CLAUSE VARIABLE'.                        01170099
           05  PE-MSG-02                       PIC X(30) VALUE          01180099
                'DB2 SELECT ATTEMPTED         '.                        01190099
           05  PE-MSG-03                       PIC X(30) VALUE          01200099
                'ATTEMPTING TO OPEN DB2 CURSOR'.                        01210099
           05  PE-MSG-04                       PIC X(30) VALUE          01220099
                'ATTEMPT TO FETCH CURSOR ROW  '.                        01230099
           05  PE-MSG-05                       PIC X(30) VALUE          01240099
                'ATTEMPT TO CLOSE DB2 CURSOR  '.                        01250099
           05  PE-MSG-06                       PIC X(30) VALUE          01260099
                'ERROR ON UPDATE OF TWKDPT    '.                        01270099
           05  PE-MSG-07                       PIC X(30) VALUE          01280099
                'ERROR IN SELECT - TCKRSTCNTL '.                        01290099
           05  PE-MSG-08                       PIC X(30) VALUE          01300099
                'UPDATE WORK_STRG - TCKRSTINF '.                        01310099
           05  PE-MSG-09                       PIC X(30) VALUE          01320099
                'PGM ABEND DURING A COMMIT    '.                        01330099
           05  PE-MSG-10                       PIC X(30) VALUE          01340099
                'UPDATE OF TCKRSTCNTL FAILED  '.                        01350099
           05  PE-MSG-11                       PIC X(30) VALUE          01360099
                'ERROR IN SELECT - TCKRSTINF  '.                        01370099
           05  PE-MSG-12                       PIC X(30) VALUE          01380099
                'UNABLE TO OBTAIN TIMESTAMP   '.                        01390099
           05  PE-MSG-13                       PIC X(30) VALUE          01400099
                'SHRINK NOT FND FOR DEPT/DATE '.                        01410099
           05  PE-MSG-14                       PIC X(30) VALUE          01420099
                'ERROR ON ''INSERT'' TO TWKDPT'.                        01430099
      *                                                                 01440099
4095   01  OUTPUT-DETAIL-LINE.                                          01450099
4095       05  FILLER                   PIC  X(12) VALUE ' DEPT NBR : '.01460099
4095       05  DL-DEPT-NBR              PIC  X(03) VALUE SPACES.        01470099
4095       05  DL-CUM-MKUP-PCT          PIC  ZZZ,ZZ9,999.9999999-.      01480099
4095       05  FILLER                   PIC  X(09) VALUE SPACES.        01490099
4095       05  FILLER                   PIC  X(14) VALUE                01500099
4095                                               'ML MKUP USED: '.    01510099
4095       05  DL-CUM-MKUP-USED         PIC  9,999.9999999-.            01520099
4095       05  FILLER                   PIC  X(21) VALUE SPACES.        01530099
      *                                                                 01540099
       01  PROGRAM-VARIABLES.                                           01550099
           05  PV-TWKDPT-UPDATE-VARIABLES.                              01560099
               10  PV-HOLD-DEPT-NBR            PIC  X(3)  VALUE SPACES. 01570099
     ** THESE VARIABLES WILL UPDATE CURRENT TWKDPT ROW *****************01580099
     *         10  PV-SHNK-RTL-AMT             PIC  S9(11)V9(2) COMP-3. 01590099
     *         10  PV-END-INV-RTL-AMT          PIC  S9(11)V9(2) COMP-3. 01600099
     *         10  PV-CUM-MKUP-PCT             PIC  S9(4)V9(7) COMP-3.  01610099
4095           10  PV-CUM-MKUP-PCT-MAX         PIC  S9(9)V9(7) COMP-3.  01620099
     *         10  PV-END-INV-COST-AMT         PIC  S9(11)V9(2) COMP-3. 01630099
     *         10  PV-SLS-COST-AMT             PIC  S9(11)V9(2) COMP-3. 01640099
     *         10  PV-GRO-MRGN-AMT             PIC  S9(11)V9(2) COMP-3. 01650099
     *******************************************************************01660099
           05  PV-SEASON-TO-DATE-CSR-VAR.                               01670099
               10  PV-WKDPT-RCPT-RTL-AMT       PIC  S9(11)V9(2) COMP-3. 01680099
               10  PV-WKDPT-RCPT-NET-COST-AMT  PIC  S9(11)V9(2) COMP-3. 01690099
               10  PV-WKDPT-PADJ-RTL-AMT       PIC  S9(11)V9(2) COMP-3. 01700099
               10  PV-WKDPT-PADJ-NET-COST-AMT  PIC  S9(11)V9(2) COMP-3. 01710099
               10  PV-WKDPT-MKUP-RTL-AMT       PIC  S9(11)V9(2) COMP-3. 01720099
               10  PV-WKDPT-XFER-NET-AMT       PIC  S9(11)V9(2) COMP-3. 01730099
           05  PV-CURR-WEEK-COST-VAR.                                   01740099
               10  PV-CURR-WEEK-RCPT-NET-COST PIC   S9(11)V9(2) COMP-3. 01750099
               10  PV-CURR-WEEK-PADJ-NET-COST PIC   S9(11)V9(2) COMP-3. 01760099
           05  PV-PREV-WEEK-VAR.                                        01770099
               10  PV-PREV-WEEK-END-INV-RTL    PIC  S9(11)V9(2) COMP-3. 01780099
               10  PV-PREV-WEEK-END-INV-COST   PIC  S9(11)V9(2) COMP-3. 01790099
           05  PV-PREV-SEASON-VAR.                                      01800099
               10  PV-PREV-SEASON-PURCH-RETAIL PIC  S9(11)V9(2) COMP-3. 01810099
               10  PV-PREV-SEASON-PURCH-COST   PIC  S9(11)V9(2) COMP-3. 01820099
           05  PV-CUM-TO-DATE-VARIABLES.                                01830099
               10  PV-CUM-TO-DATE-PURCH-RETAIL PIC  S9(11)V9(2) COMP-3. 01840099
               10  PV-CUM-TO-DATE-PURCH-COST   PIC  S9(11)V9(2) COMP-3. 01850099
               10  PV-CUM-SEASON-MKUP          PIC  S9(11)V9(2) COMP-3. 01860099
      *                                                                 01870099
      *                                                                 01880099
       01  PV-VARIABLE-FIELDS.                                          01890099
           05  PV-SUB1                         PIC 9(2)   VALUE ZEROES. 01900099
           05  PV-MAX-DATE-SUB                 PIC 9(2)   VALUE ZEROES. 01910099
           05  PV-HOLD-DATE                    PIC  X(10) VALUE SPACES. 01920099
PREVWK     05  PV-HOLD-PFW-END-DTE             PIC  X(10) VALUE SPACES. 01930099
FRSTWK     05  PV-HOLD-MONTH-FIRST-WEEK        PIC  X(10) VALUE SPACES. 01940099
           05  PV-HOLD-PFM-END-DTE             PIC  X(10) VALUE SPACES. 01950099
           05  PV-HOLD-SEA-BEG-DTE             PIC  X(10) VALUE SPACES. 01960099
 **        05  PV-HOLD-OPN-WK-END-DTE          PIC  X(10) VALUE SPACES. 01970099
           05  PV-HOLD-PREV-SEA-END-DTE        PIC  X(10) VALUE SPACES. 01980099
           05  PV-HOLD-FSCL-WK-NBR             PIC  X(02) VALUE SPACES. 01990099
           05  PV-HOLD-FSCL-YR-NBR             PIC  X(04) VALUE SPACES. 02000099
           05  PV-CURRENT-TIMESTAMP            PIC  X(26) VALUE SPACES. 02010099
           05  PV-COMMIT-TIMESTAMP             PIC  X(26) VALUE SPACES. 02020099
           05  PV-PARAGRAPH-NAME               PIC  X(30) VALUE SPACES. 02030099
           05  PV-ABEND-MESSAGE                PIC  X(75) VALUE SPACES. 02040099
           05  PV-OPERATION-ATTEMPTED          PIC  X(30) VALUE SPACES. 02050099
**NET      05  PV-XFER-NET                     PIC  S9(11)V99  COMP-3.  02060099
      *                                                                 02070099
       01  REFORMAT-ALPHA-CALENDAR.                                     02080099
           05  FMT-CALENDAR-MO-NUMERIC          PIC 9(2)  VALUE ZEROES. 02090099
      *                                                                 02100099
       01  DATE-TABLE.                                                  02110099
           05  CONTROL-DATES OCCURS 26 TIMES.                           02120099
               10  DT-OPN-WK-END-DTE            PIC X(10) VALUE SPACES. 02130099
PFW            10  DT-PFW-END-DTE               PIC X(10) VALUE SPACES. 02140099
               10  DT-PFM-END-DTE               PIC X(10) VALUE SPACES. 02150099
               10  DT-SEA-BEG-DTE               PIC X(10) VALUE SPACES. 02160099
               10  DT-PREV-SEA-END-DTE          PIC X(10) VALUE SPACES. 02170099
               10  DT-FSCL-WK-NBR               PIC X(02) VALUE SPACES. 02180099
               10  DT-FSCL-YR-NBR               PIC X(04) VALUE SPACES. 02190099
      ****************************************************              02200099
      *  DB2 MERCHANDISE AREA TABLE - BUSINESS STRUCTURE *              02210099
      ****************************************************              02220099
           EXEC SQL                                                     02230099
               INCLUDE TMDSEAR                                          02240099
           END-EXEC.                                                    02250099
      ****************************************************              02260099
      *  COMMUNICATION AREAS FOR DB2                     *              02270099
      ****************************************************              02280099
           EXEC SQL                                                     02290099
               INCLUDE SQLCA                                            02300099
           END-EXEC.                                                    02310099
      ****************************************************              02320099
      *  M/L MONTH-TO-DATE DEPARTMENT TABLE              *              02330099
      ****************************************************              02340099
           EXEC SQL                                                     02350099
               INCLUDE TWKDPT                                           02360099
           END-EXEC.                                                    02370099
      ****************************************************              02380099
      *  WEEKLY SHRINKAGE TABLE                          *              02390099
      ****************************************************              02400099
           EXEC SQL                                                     02410099
               INCLUDE TWKSHNK                                          02420099
           END-EXEC.                                                    02430099
      ****************************************************              02440099
      * M/L DATE TABLE AND CURRENT OPEN FISCAL DATE INFO *              02450099
      ****************************************************              02460099
           EXEC SQL                                                     02470099
               INCLUDE TDTATTR                                          02480099
           END-EXEC.                                                    02490099
                                                                        02500099
           EXEC SQL                                                     02510099
               INCLUDE TMLCNTL                                          02520099
           END-EXEC.                                                    02530099
      *                                                                 02540099
      *                                                                 02550099
      ****************************************************              02560099
      *CHECKPOINT RESTART CONTROL AND INFORMATION TABLES *              02570099
      ****************************************************              02580099
           EXEC SQL                                                     02590099
               INCLUDE TCKRSTCN                                         02600099
           END-EXEC.                                                    02610099
      *                                                                 02620099
           EXEC SQL                                                     02630099
               INCLUDE TCKRSTIN                                         02640099
           END-EXEC.                                                    02650099
      *                                                                 02660099
      *                                                                 02670099
      *********** THIS CURSOR WILL DRIVE PROGRAM PROCESSING ************02680099
           EXEC SQL                                                     02690099
               DECLARE DEPT_CSR CURSOR FOR                              02700099
                SELECT  DISTINCT DEPT_NBR                               02710099
                  FROM TWKDPT                                           02720099
                 WHERE DEPT_NBR        > :PV-HOLD-DEPT-NBR              02730099
                   AND FSCL_WK_END_DTE BETWEEN                          02740099
SJ99                                     :PV-HOLD-PFM-END-DTE           02750099
SJ99  *                                  :PV-HOLD-MONTH-FIRST-WEEK      02760099
                                     AND :MLCNTL-MXPSTG-FSCL-WK-DTE     02770099
                 ORDER BY DEPT_NBR                                      02780099
                 FOR FETCH ONLY                                         02790099
           END-EXEC.                                                    02800099
      *                                                                 02810099
      * MAX (26-27) ROWS FOR EACH DEPT (WEEKS PER SEASON)               02820099
           EXEC SQL                                                     02830099
               DECLARE SEASON_TO_DATE_CSR CURSOR FOR                    02840099
**NET           SELECT  XFER_IN_RTL_AMT                                 02850099
**NET                  ,XFER_OUT_RTL_AMT                                02860099
                       ,RCPT_RTL_AMT                                    02870099
                       ,RCPT_NET_COST_AMT                               02880099
                       ,PADJ_RTL_AMT                                    02890099
                       ,PADJ_NET_COST_AMT                               02900099
                       ,MKUP_RTL_AMT                                    02910099
                  FROM  TWKDPT                                          02920099
                 WHERE  DEPT_NBR = :WKDPT-DEPT-NBR                      02930099
                   AND (FSCL_WK_END_DTE >= :PV-HOLD-SEA-BEG-DTE         02940099
                   AND  FSCL_WK_END_DTE <= :PV-HOLD-OPN-WK-END-DTE)     02950099
                 FOR FETCH ONLY                                         02960099
           END-EXEC.                                                    02970099
      *                                                                 02980099
      * WEEKS TO BE PROCESSED -                                         02990099
      *    DUE TO POSSIBLE CORRECTIONS BEING POSTED TO PAST WEEKS,      03000099
      *       ALL WEEKS FOR THE CURRENT MONTH WILL NEED TO BE RECALCED  03010099
           EXEC SQL                                                     03020099
               DECLARE FISCAL_DATE_CSR CURSOR FOR                       03030099
                SELECT  DISTINCT FSCL_WK_END_DTE                        03040099
                  FROM  TDTATTR                                         03050099
                 WHERE FSCL_WK_END_DTE BETWEEN                          03060099
                                            :PV-HOLD-MONTH-FIRST-WEEK   03070099
                                        AND :MLCNTL-MXPSTG-FSCL-WK-DTE  03080099
                 ORDER BY FSCL_WK_END_DTE                               03090099
                 FOR FETCH ONLY                                         03100099
           END-EXEC.                                                    03110099
      *                                                                 03120099
      ******************************************************************03130099
      * CHECKPOINT RESTART VARIABLES                                   *03140099
      ******************************************************************03150099
       01  CR-CHECKPOINT-RESTART-AREA.                                  03160099
           05  CR-AREA-LEN                  PIC S9(04) VALUE +63  COMP. 03170099
           05  CR-CHECKPOINT-RESTART-VAR.                               03180099
               10  CR-PREV-DTL-KEY          PIC  X(27) VALUE SPACES.    03190099
               10  FILLER REDEFINES CR-PREV-DTL-KEY.                    03200099
                   15  CR-FISCAL-WK-END-DTE PIC  X(10).                 03210099
                   15  CR-FISCAL-WK-NBR     PIC  X(02).                 03220099
                   15  CR-FISCAL-MX-END-DTE PIC  X(10).                 03230099
                   15  CR-FISCAL-MX-NBR     PIC  X(02).                 03240099
                   15  CR-DEPT-NBR          PIC  X(03).                 03250099
               10  CR-TWKDPT-FETCH-COUNT    PIC  9(09) VALUE ZEROES.    03260099
               10  CR-TWKDPT-UPDATE-COUNT   PIC  9(09) VALUE ZEROES.    03270099
               10  CR-TWKDPT-INSERT-COUNT   PIC  9(09) VALUE ZEROES.    03280099
               10  CR-TWKDPT-COMMIT-COUNT   PIC  9(09) VALUE ZEROES.    03290099
           EJECT                                                        03300099
      *                                                                 03310099
      ****************************************************              03320099
      *  ERROR MESSAGE AREA FOR DB2                      *              03330099
      ****************************************************              03340099
           COPY DPWS004.                                                03350099
      *                                                                 03360099
      *                                                                 03370099
      *-------------------*                                             03380099
       PROCEDURE DIVISION.                                              03390099
      *-------------------*                                             03400099
                                                                        03410099
       0000-MAIN-MODULE.                                                03420099
                                                                        03430099
           PERFORM 1000-INITIALIZATION.                                 03440099
                                                                        03450099
           PERFORM 2000-PROCESS-INPUT                                   03460099
                UNTIL PS-END-OF-DEPT-CURSOR.                            03470099
                                                                        03480099
           PERFORM 8000-EOJ-ROUTINE.                                    03490099
                                                                        03500099
4095       CLOSE OUTPUT-FILE.                                           03510099
                                                                        03520099
4095       IF PA-CUM-MKUP-MAX-LIMIT > 0                                 03530099
4095          MOVE 4095 TO RETURN-CODE                                  03540099
4095       ELSE                                                         03550099
4095          MOVE 0    TO RETURN-CODE                                  03560099
4095       END-IF.                                                      03570099
                                                                        03580099
           STOP RUN.                                                    03590099
      *                                                                 03600099
      *                                                                 03610099
      ******************************************************************03620099
      * LOAD TABLE WITH MONTHS TO BE RECALCULATED                       03630099
      * DETERMINE IF THIS IS A 'RESTART' (TCKRSTINF-CKPT-STAT-CODE = 9) 03640099
      ******************************************************************03650099
       1000-INITIALIZATION.                                             03660099
      *                                                                 03670099
      *                                                                 03680099
4095       OPEN OUTPUT OUTPUT-FILE.                                     03690099
      *                                                                 03700099
           PERFORM 7000-READ-CONTROL-TABLE.                             03710099
           PERFORM 7025-PROCESS-CNTL-TBL.                               03720099
                                                                        03730099
           PERFORM 7650-INIT-CHECKPOINT-SELECT.                         03740099
      *                                                                 03750099
           IF TCKRSTCNTL-CKPT-STAT-CODE = '9'                           03760099
                PERFORM 7700-SELECT-RESTART-INFO                        03770099
                MOVE TCKRSTINF-WORK-STRG-DESC-TEXT TO                   03780099
                                              CR-CHECKPOINT-RESTART-VAR 03790099
                DISPLAY 'RESTART - LAST DEPT PROCESSED : ', CR-DEPT-NBR 03800099
                MOVE CR-DEPT-NBR                    TO PV-HOLD-DEPT-NBR 03810099
           ELSE                                                         03820099
               SET PS-FIRST-COMMIT TO TRUE                              03830099
               INITIALIZE CR-CHECKPOINT-RESTART-VAR                     03840099
               DISPLAY 'COMMITS WILL BE TAKEN EVERY ',                  03850099
                                 TCKRSTCNTL-CKPT-FRQNCY-QTY, ' SECONDS.'03860099
               PERFORM 7600-GET-COMMIT-TIMESTAMP                        03870099
           END-IF.                                                      03880099
      *                                                                 03890099
           SET PS-FIRST-TIME-THRU TO TRUE.                              03900099
           INITIALIZE PA-PROGRAM-ACCUMULATORS.                          03910099
      *                                                                 03920099
           ADD 1 TO PV-SUB1.                                            03930099
           PERFORM 2800-FORMAT-DATES                                    03940099
      *                                                                 03950099
           PERFORM 7149-OPEN-DEPT-CURSOR.                               03960099
           PERFORM 7150-PROCESS-DEPT-CURSOR.                            03970099
      *                                                                 03980099
           IF  PS-END-OF-DEPT-CURSOR                                    03990099
               IF TCKRSTCNTL-CKPT-STAT-CODE = '9'                       04000099
                   DISPLAY 'NO RECORDS TO PROCESSED AFTER RESTART'      04010099
               ELSE                                                     04020099
                   IF TCKRSTCNTL-CKPT-STAT-CODE = '0'                   04030099
                       DISPLAY 'NO ROWS SELECTED FOR RECALCULATION'     04040099
                       SET PS-EMPTY-RESULT-TABLE TO TRUE                04050099
                   END-IF                                               04060099
               END-IF                                                   04070099
           ELSE                                                         04080099
               PERFORM 7425-OPEN-SEASON-CURSOR                          04090099
               IF TCKRSTCNTL-CKPT-STAT-CODE = '9'                       04100099
                   DISPLAY '        - RESTART DEPARTMENT  : ',          04110099
                                        WKDPT-DEPT-NBR                  04120099
               END-IF                                                   04130099
           END-IF.                                                      04140099
                                                                        04150099
4095       MOVE ZERO TO PA-CUM-MKUP-MAX-LIMIT.                          04160099
      *                                                                 04170099
      *                                                                 04180099
      ******************************************************************04190099
      * MAIN PROCESSING PARAGRAPH-PERFORMED UNTIL END OF CSR PROCESSING 04200099
      * IF PV-SUB1 > PV-MAX-SUB (THEN ALL ROWS FOR THIS DEPT RECALCED)  04210099
      ******************************************************************04220099
       2000-PROCESS-INPUT.                                              04230099
                                                                        04240099
           ADD 1      TO PA-DEPT-COUNT.                                 04250099
      *                                                                 04260099
           PERFORM 2025-PROCESS-DEPT                                    04270099
               UNTIL PV-SUB1 > PV-MAX-DATE-SUB.                         04280099
                                                                        04290099
           PERFORM 7800-COMMIT-PROCESSING.                              04300099
      *                                                                 04310099
      *                                                                 04320099
      ******************************************************************04330099
      * DEPT LEVEL PROCESSING PARAGRAPH                                 04340099
      * PROCESS ALL DATES FOR THIS DEPARTMENT                           04350099
      ******************************************************************04360099
       2025-PROCESS-DEPT.                                               04370099
           INITIALIZE  PROGRAM-VARIABLES.                               04380099
           MOVE 'N' TO PS-CURR-WEEK-SW                                  04390099
                       PS-PREV-WEEK-ROW-SW                              04400099
                       PS-CARRY-FORWARD-SW.                             04410099
                                                                        04420099
           MOVE WKDPT-DEPT-NBR TO PV-HOLD-DEPT-NBR.                     04430099
                                                                        04440099
           IF PS-FIRST-TIME-THRU                                        04450099
               MOVE 'N' TO PS-FIRST-TIME-SW                             04460099
           ELSE                                                         04470099
               PERFORM 2800-FORMAT-DATES                                04480099
               PERFORM 7425-OPEN-SEASON-CURSOR                          04490099
           END-IF.                                                      04500099
      *                                                                 04510099
           PERFORM 7350-SELECT-PREV-WEEK-END-INV.                       04520099
           PERFORM 7300-SELECT-CURRENT-DOLLARS.                         04530099
      *                                                                 04540099
      ******************************************************************04550099
      *****                   CARRY FORWARD LOGIC                  *****04560099
      ******************************************************************04570099
      *    CURRENT $ FOUND FOR WEEK        - RECALC ROW                *04580099
      * NO CURRENT $ FOUND/   PREV $ FOUND - CARRY FORWARD INVENTORY $ *04590099
      * NO CURRENT $ FOUND/NO PREV $ FOUND - BYPASS RECALC PROCESSING  *04600099
      *                                      PROCESS ANOTHER ROW       *04610099
      ******************************************************************04620099
           IF PS-CURR-WEEK-ROW-NOT-FOUND                                04630099
               IF PS-PREV-WEEK-ROW-NOT-FOUND                            04640099
                   CONTINUE                                             04650099
               ELSE                                                     04660099
                   IF PS-PFM-INV-DOLLARS-FOUND                          04670099
                       PERFORM 7950-INSERT-CARRY-FWD-ROW                04680099
                   END-IF                                               04690099
               END-IF                                                   04700099
           ELSE                                                         04710099
               PERFORM 2035-RECALC-PROCESSING                           04720099
           END-IF.                                                      04730099
      *                                                                 04740099
           PERFORM 7575-CLOSE-SEASON-CURSOR.                            04750099
      *                                                                 04760099
           ADD  1 TO PV-SUB1.                                           04770099
      *                                                                 04780099
      *                                                                 04790099
      ******************************************************************04800099
      *                                                                *04810099
      *              ********* RECALC PROCESSING **********            *04820099
      *                                                                *04830099
      ******************************************************************04840099
       2035-RECALC-PROCESSING.                                          04850099
      *                                                                 04860099
      *                                                                 04870099
           PERFORM 7200-OBTAIN-SHRINK-DLRS.                             04880099
      *                                                                 04890099
 --->      PERFORM 2150-CALC-ENDINV-RETAIL.                             04900099
      *                                                                 04910099
           PERFORM 7400-PREV-SEASON-END-INV.                            04920099
           PERFORM 2200-CALC-PREV-SEASN-END-PURCH.                      04930099
      *                                                                 04940099
           PERFORM 7450-PROCESS-SEASONAL-CURSOR.                        04950099
           IF PS-END-OF-CURR-SEASON-CSR                                 04960099
               CONTINUE                                                 04970099
           ELSE                                                         04980099
               PERFORM 2250-CALC-SEASON-TO-DATE-PURCH                   04990099
                   UNTIL PS-END-OF-CURR-SEASON-CSR.                     05000099
      *                                                                 05010099
           PERFORM 2300-CALC-CUMM-TO-DATE-PURCH.                        05020099
 --->      PERFORM 2400-CALC-CUMM-MARKUP-PCT.                           05030099
      *                                                                 05040099
 --->      PERFORM 2500-CALC-END-INV-COST.                              05050099
      *                                                                 05060099
           PERFORM 7475-CURR-SEASON-COST.                               05070099
 --->      PERFORM 2600-CALC-SALES-COST-AMT.                            05080099
      *                                                                 05090099
 --->      PERFORM 2700-CALC-GROSS-MARGIN-AMT.                          05100099
           PERFORM 7500-UPDATE-PROCESSING.                              05110099
      *                                                                 05120099
      *                                                                 05130099
      ******************************************************************05140099
      * CALCULATE THE ENDING INVENTORY OF CURRENT MONTH BASED ON THE    05150099
      *       ENDING INVENTORY FROM THE PRIOR MONTH                     05160099
      ******************************************************************05170099
       2150-CALC-ENDINV-RETAIL.                                         05180099
      *                                                                 05190099
           COMPUTE PV-END-INV-RTL-AMT = (  PV-PREV-WEEK-END-INV-RTL     05200099
                                         + WKDPT-RCPT-RTL-AMT           05210099
                                         + WKDPT-PADJ-RTL-AMT           05220099
                                         + WKDPT-MKUP-RTL-AMT           05230099
                                         - WKDPT-SLS-RTL-AMT            05240099
**NET                                    + WKDPT-XFER-IN-RTL-AMT        05250099
**NET                                    - WKDPT-XFER-OUT-RTL-AMT       05260099
                                         - WKDPT-MKDN-RTL-AMT           05270099
                                         - WKDPT-INV-ADJ-RTL-AMT        05280099
                                         - PV-SHNK-RTL-AMT    ).        05290099
      *                                                                 05300099
      *                                                                 05310099
      ******************************************************************05320099
      * CALCULATE CUMULATIVE MARKUP PERCENTAGE FOR UPDATE               05330099
      ******************************************************************05340099
       2200-CALC-PREV-SEASN-END-PURCH.                                  05350099
      *                                                                 05360099
           IF PS-NO-PREV-SEASONAL-INV                                   05370099
                MOVE 0 TO PV-PREV-SEASON-PURCH-RETAIL                   05380099
                MOVE 0 TO PV-PREV-SEASON-PURCH-COST                     05390099
           ELSE                                                         05400099
                MOVE WKDPT-END-INV-RTL-AMT TO                           05410099
                                         PV-PREV-SEASON-PURCH-RETAIL    05420099
                MOVE WKDPT-END-INV-COST-AMT TO                          05430099
                                         PV-PREV-SEASON-PURCH-COST      05440099
           END-IF.                                                      05450099
      *                                                                 05460099
      *                                                                 05470099
      ******************************************************************05480099
      * ACCUMULATE CURRENT SEASON RETAIL/COST AMTS FROM SEASON BEGINNING05490099
      ******************************************************************05500099
       2250-CALC-SEASON-TO-DATE-PURCH.                                  05510099
      *                                                                 05520099
           COMPUTE PV-XFER-NET =                                        05530099
              (WKDPT-XFER-IN-RTL-AMT -                                  05540099
               WKDPT-XFER-OUT-RTL-AMT).                                 05550099
                                                                        05560099
           ADD PV-XFER-NET             TO  PV-WKDPT-XFER-NET-AMT.       05570099
           ADD WKDPT-RCPT-RTL-AMT      TO  PV-WKDPT-RCPT-RTL-AMT.       05580099
           ADD WKDPT-RCPT-NET-COST-AMT TO  PV-WKDPT-RCPT-NET-COST-AMT.  05590099
           ADD WKDPT-PADJ-RTL-AMT      TO  PV-WKDPT-PADJ-RTL-AMT.       05600099
           ADD WKDPT-PADJ-NET-COST-AMT TO  PV-WKDPT-PADJ-NET-COST-AMT.  05610099
           ADD WKDPT-MKUP-RTL-AMT      TO  PV-WKDPT-MKUP-RTL-AMT.       05620099
      *                                                                 05630099
           PERFORM 7450-PROCESS-SEASONAL-CURSOR.                        05640099
      *                                                                 05650099
      *                                                                 05660099
      ******************************************************************05670099
      * DETERMINE CUMULATIVE RETAIL AND COST                            05680099
      * ADD PRIOR SEASON END INV AMTS TO CURRENT SEASON-TO-DATE AMTS    05690099
      ******************************************************************05700099
       2300-CALC-CUMM-TO-DATE-PURCH.                                    05710099
      *                                                                 05720099
           COMPUTE PV-CUM-TO-DATE-PURCH-COST   =                        05730099
                                         (  PV-PREV-SEASON-PURCH-COST   05740099
                                          + PV-WKDPT-RCPT-NET-COST-AMT  05750099
                                          + PV-WKDPT-PADJ-NET-COST-AMT).05760099
                                                                        05770099
           COMPUTE PV-CUM-TO-DATE-PURCH-RETAIL =                        05780099
                                          (  PV-PREV-SEASON-PURCH-RETAIL05790099
                                           + PV-WKDPT-XFER-NET-AMT      05800099
                                           + PV-WKDPT-RCPT-RTL-AMT      05810099
                                           + PV-WKDPT-PADJ-RTL-AMT      05820099
                                           + PV-WKDPT-MKUP-RTL-AMT).    05830099
      *                                                                 05840099
      *                                                                 05850099
      ******************************************************************05860099
      * FINAL CALCULATIONS OF VALUES TO UPDATE TWKDPT - CUM_MKUP_PCT    05870099
      ******************************************************************05880099
       2400-CALC-CUMM-MARKUP-PCT.                                       05890099
      *                                                                 05900099
           COMPUTE PV-CUM-SEASON-MKUP = (  PV-CUM-TO-DATE-PURCH-RETAIL  05910099
                                         - PV-CUM-TO-DATE-PURCH-COST  ).05920099
      * CUM SEASON RETAIL CANNOT EQUAL ZERO IN DIVISOR ('ON SIZE ERROR')05930099
           IF PV-CUM-TO-DATE-PURCH-RETAIL = 0                           05940099
                MOVE 100 TO PV-CUM-MKUP-PCT                             05950099
           ELSE                                                         05960099
4095            COMPUTE PV-CUM-MKUP-PCT-MAX ROUNDED =                   05970099
----->*         COMPUTE PV-CUM-MKUP-PCT ROUNDED =                       05980099
               (PV-CUM-SEASON-MKUP * 100) / PV-CUM-TO-DATE-PURCH-RETAIL 05990099
4095            IF ( PV-CUM-MKUP-PCT-MAX > 9999.9999999 OR              06000099
4095                 PV-CUM-MKUP-PCT-MAX < -9999.9999999  )             06010099
4095                MOVE PV-HOLD-DEPT-NBR     TO DL-DEPT-NBR            06020099
4095                MOVE PV-CUM-MKUP-PCT-MAX  TO DL-CUM-MKUP-PCT        06030099
4095                                             DL-CUM-MKUP-USED       06040099
4095                PERFORM 5000-WRITE-OUTPUT-RECORD                    06050099
4095                ADD +1 TO PA-CUM-MKUP-MAX-LIMIT                     06060099
4095            END-IF                                                  06070099
4095            MOVE PV-CUM-MKUP-PCT-MAX TO PV-CUM-MKUP-PCT             06080099
           END-IF.                                                      06090099
      *                                                                 06100099
      *                                                                 06110099
      ******************************************************************06120099
      * FINAL CALCULATIONS OF VALUES TO UPDATE TWKDPT - END_INV_COST_AMT06130099
      ******************************************************************06140099
       2500-CALC-END-INV-COST.                                          06150099
      *                                                                 06160099
           COMPUTE PV-END-INV-COST-AMT ROUNDED =                        06170099
                        ( (100 - PV-CUM-MKUP-PCT)  *                    06180099
                               ( PV-END-INV-RTL-AMT) ) / 100.           06190099
      *                                                                 06200099
      *                                                                 06210099
      ******************************************************************06220099
      * FINAL CALCULATIONS OF VALUES TO UPDATE TWKDPT - SALES_COST_AMT *06230099
      ******************************************************************06240099
       2600-CALC-SALES-COST-AMT.                                        06250099
      *                                                                 06260099
           IF PS-NO-CURRENT-PURCH-COSTS                                 06270099
               MOVE ZEROES            TO PV-CURR-WEEK-RCPT-NET-COST     06280099
                                         PV-CURR-WEEK-PADJ-NET-COST     06290099
           END-IF.                                                      06300099
      *                                                                 06310099
           COMPUTE PV-SLS-COST-AMT =                                    06320099
                 (  PV-PREV-WEEK-END-INV-COST                           06330099
                  + PV-CURR-WEEK-RCPT-NET-COST                          06340099
                  + PV-CURR-WEEK-PADJ-NET-COST ) -  PV-END-INV-COST-AMT.06350099
      *                                                                 06360099
      *                                                                 06370099
      ******************************************************************06380099
      * FINAL CALCULATIONS OF VALUES TO UPDATE TWKDPT - GRO_MRGN_AMT   *06390099
      ******************************************************************06400099
       2700-CALC-GROSS-MARGIN-AMT.                                      06410099
      *                                                                 06420099
           IF WKDPT-SLS-RTL-AMT = 0                                     06430099
               MOVE 0 TO PV-GRO-MRGN-AMT                                06440099
           ELSE                                                         06450099
               COMPUTE PV-GRO-MRGN-AMT =                                06460099
               ( ( WKDPT-SLS-RTL-AMT ) - ( PV-SLS-COST-AMT ) )          06470099
           END-IF.                                                      06480099
      *                                                                 06490099
      *                                                                 06500099
      ******************************************************************06510099
      * MOVE SUBSCRIPTED VARIABLE TO FORMAT USABLE BY DB2               06520099
      ******************************************************************06530099
       2800-FORMAT-DATES.                                               06540099
           MOVE DT-SEA-BEG-DTE(PV-SUB1)    TO PV-HOLD-SEA-BEG-DTE.      06550099
**         MOVE DT-OPN-WK-END-DTE(PV-SUB1) TO PV-HOLD-OPN-WK-END-DTE.   06560099
PFW        MOVE DT-PFW-END-DTE(PV-SUB1)    TO PV-HOLD-PFW-END-DTE.      06570099
           MOVE DT-PREV-SEA-END-DTE(PV-SUB1)                            06580099
                                           TO PV-HOLD-PREV-SEA-END-DTE. 06590099
           MOVE DT-FSCL-WK-NBR(PV-SUB1)    TO PV-HOLD-FSCL-WK-NBR.      06600099
           MOVE DT-FSCL-YR-NBR(PV-SUB1)    TO PV-HOLD-FSCL-YR-NBR.      06610099
      *                                                                 06620099
      *                                                                 06630099
      ******************************************************************06640099
      * WRITE CONTROL CARD FOR OUTPUT MESSAGE TO BP (CUM MKUP PCT VAR)  06650099
      ******************************************************************06660099
4095   5000-WRITE-OUTPUT-RECORD.                                        06670099
4095  *                                                                 06680099
4095       WRITE OUTPUT-RECORD FROM OUTPUT-DETAIL-LINE.                 06690099
4095  *                                                                 06700099
      *                                                                 06710099
      ******************************************************************06720099
      * READ THE DB2 CONTROL TABLE CONTAINING OPEN FISCAL DATE INFO     06730099
      ******************************************************************06740099
       7000-READ-CONTROL-TABLE.                                         06750099
      *                                                                 06760099
            EXEC SQL                                                    06770099
                SELECT OPN_FSCL_WK_DTE                                  06780099
                      ,OPN_FSCL_WK_NBR                                  06790099
                      ,MXPSTG_FSCL_WK_DTE                               06800099
                      ,MXPSTG_FSCL_WK_NBR                               06810099
                 INTO  :MLCNTL-OPN-FSCL-WK-DTE                          06820099
                      ,:MLCNTL-OPN-FSCL-WK-NBR                          06830099
                      ,:MLCNTL-MXPSTG-FSCL-WK-DTE                       06840099
                      ,:MLCNTL-MXPSTG-FSCL-WK-NBR                       06850099
                 FROM  TMLCNTL                                          06860099
            END-EXEC.                                                   06870099
      *                                                                 06880099
           EVALUATE SQLCODE                                             06890099
               WHEN 0                                                   06900099
                   MOVE MLCNTL-OPN-FSCL-WK-DTE TO CR-FISCAL-WK-END-DTE  06910099
                   MOVE MLCNTL-OPN-FSCL-WK-NBR TO CR-FISCAL-WK-NBR      06920099
                   MOVE MLCNTL-MXPSTG-FSCL-WK-DTE                       06930099
                                               TO CR-FISCAL-MX-END-DTE  06940099
                   MOVE MLCNTL-MXPSTG-FSCL-WK-NBR                       06950099
                                               TO CR-FISCAL-MX-NBR      06960099
                   DISPLAY 'CONTROL DATES (TMLCNTL)'                    06970099
                   DISPLAY 'OPEN FISCAL WEEK(DATE): ',                  06980099
                                                 MLCNTL-OPN-FSCL-WK-DTE 06990099
                   DISPLAY 'MAXPSTG WEEK END DATE : ',                  07000099
                                              MLCNTL-MXPSTG-FSCL-WK-DTE 07010099
               WHEN OTHER                                               07020099
                  MOVE '7000-READ-CONTROL-TABLE' TO PV-PARAGRAPH-NAME   07030099
                  MOVE PE-MSG-01 TO PV-OPERATION-ATTEMPTED              07040099
                  PERFORM 9999-SQL-ABEND                                07050099
           END-EVALUATE.                                                07060099
      *                                                                 07070099
      *                                                                 07080099
      ******************************************************************07090099
      * LOAD ALL DATES TO BE PROCESSED TO INTERNAL TABLE                07100099
      ******************************************************************07110099
       7025-PROCESS-CNTL-TBL.                                           07120099
      *                                                                 07130099
            PERFORM 7035-GET-FIRST-WEEK.                                07140099
            PERFORM 7050-OPEN-DATE-CURSOR.                              07150099
            PERFORM 7075-PROCESS-DATE-CURSOR                            07160099
                UNTIL PS-DATE-TABLE-LOADED.                             07170099
      *                                                                 07180099
      ******************************************************************07190099
      * RETRIEVE 1ST WEEK OF OPEN MONTH AS A STARTING POINT TO BEGIN    07200099
      * RECALC OF THE CURRENT DATE RANGE. THIS WILL ENSURE RECALC OF    07210099
      * UPDATES TO ALL CURRENT WEEKS WITHIN THE CURRENT MONTH           07220099
      ******************************************************************07230099
SJ99****FOR THE FIRST WEEK OF ANY FISCAL MONTH, THE PREVIOUS MONTH'S    07240099
      * FISCAL END DATE WILL NEED TO BE RETRIEVED AS A STARTING POINT   07250099
      * TO ENSURE CARRY-FORWARD LOGIC IS BROUGHT FORWARD PROPERLY       07260099
      ******************************************************************07270099
       7035-GET-FIRST-WEEK.                                             07280099
      *                                                                 07290099
           EXEC SQL                                                     07300099
SJ99*          SELECT  PFM_END_DTE                                      07310099
                     ,(PFM_END_DTE + 7 DAYS)                            07320099
SJ99*           INTO  :PV-HOLD-PFM-END-DTE                              07330099
                     ,:PV-HOLD-MONTH-FIRST-WEEK                         07340099
                FROM TDTATTR                                            07350099
                WHERE KY_DTE  = :MLCNTL-OPN-FSCL-WK-DTE                 07360099
           END-EXEC.                                                    07370099
      *                                                                 07380099
           EVALUATE SQLCODE                                             07390099
               WHEN 0                                                   07400099
                  DISPLAY 'RECALC STARTS AT ', PV-HOLD-PFM-END-DTE      07410099
SJ99***           DISPLAY 'FIRST WEEK OF MON', PV-HOLD-MONTH-FIRST-WEEK 07420099
               WHEN +100                                                07430099
                  DISPLAY 'NO ROWS QUALIFY FOR RECALCULATION'           07440099
               WHEN OTHER                                               07450099
                  MOVE '7100-SELECT-DB2-DATES' TO PV-PARAGRAPH-NAME     07460099
                  MOVE PE-MSG-02 TO PV-OPERATION-ATTEMPTED              07470099
                  PERFORM 9999-SQL-ABEND                                07480099
           END-EVALUATE.                                                07490099
      *                                                                 07500099
      ***************************************************************** 07510099
      * OPEN CURSOR FOR UPDATE AT INITIALIZATION & AFTER EACH COMMIT    07520099
      ***************************************************************** 07530099
       7050-OPEN-DATE-CURSOR.                                           07540099
      *                                                                 07550099
           EXEC SQL                                                     07560099
               OPEN FISCAL_DATE_CSR                                     07570099
           END-EXEC                                                     07580099
                                                                        07590099
           EVALUATE SQLCODE                                             07600099
               WHEN 0                                                   07610099
                    CONTINUE                                            07620099
               WHEN OTHER                                               07630099
                  MOVE '7050-OPEN-DATE-CSR' TO PV-PARAGRAPH-NAME        07640099
                  MOVE PE-MSG-03 TO PV-OPERATION-ATTEMPTED              07650099
                  PERFORM 9999-SQL-ABEND                                07660099
           END-EVALUATE.                                                07670099
      *                                                                 07680099
      *                                                                 07690099
      ***************************************************************** 07700099
      * INCREMENT SUBSCRIPT AND CONTINUE LOADING INTERNAL TABLE         07710099
      ***************************************************************** 07720099
       7075-PROCESS-DATE-CURSOR.                                        07730099
      *                                                                 07740099
           EXEC SQL                                                     07750099
                  FETCH FISCAL_DATE_CSR                                 07760099
                   INTO :PV-HOLD-DATE                                   07770099
           END-EXEC                                                     07780099
                                                                        07790099
           EVALUATE SQLCODE                                             07800099
               WHEN +0                                                  07810099
                   ADD 1 TO PV-SUB1                                     07820099
                   DISPLAY '----------------------------------'         07830099
                   DISPLAY 'WEEK-DTE: ', PV-HOLD-DATE                   07840099
                   DISPLAY 'PV-SUB1 : ', PV-SUB1                        07850099
                   PERFORM 7100-SELECT-DB2-DATES                        07860099
                   PERFORM 7125-LOAD-DATE-TABLE                         07870099
               WHEN +100                                                07880099
                   DISPLAY 'NBR OF WEEKS PROCESSED THIS RUN: ', PV-SUB1 07890099
                   IF PV-SUB1 > 1                                       07900099
                      DISPLAY '   ', PV-HOLD-MONTH-FIRST-WEEK, ' THRU ',07910099
                               MLCNTL-MXPSTG-FSCL-WK-DTE                07920099
                   END-IF                                               07930099
                   MOVE PV-SUB1 TO PV-MAX-DATE-SUB                      07940099
                   MOVE ZEROES  TO PV-SUB1                              07950099
                   SET PS-DATE-TABLE-LOADED TO TRUE                     07960099
               WHEN OTHER                                               07970099
                   MOVE '7075-PROCESS-DATE-CSR' TO PV-PARAGRAPH-NAME    07980099
                   MOVE PE-MSG-04 TO PV-OPERATION-ATTEMPTED             07990099
                   PERFORM 9999-SQL-ABEND                               08000099
           END-EVALUATE.                                                08010099
      *                                                                 08020099
      *                                                                 08030099
      ******************************************************************08040099
      * SELECT DATES REQUIRED FOR PROCESSING EACH WEEK.                 08050099
      ******************************************************************08060099
       7100-SELECT-DB2-DATES.                                           08070099
      *                                                                 08080099
           EXEC SQL                                                     08090099
               SELECT  PFM_END_DTE                                      08100099
                      ,SEA_BEG_DTE                                      08110099
                      ,PREV_SEA_END_DTE                                 08120099
                      ,(FSCL_WK_END_DTE - 7 DAYS)                       08130099
                      ,FSCL_WK_NBR                                      08140099
                      ,FSCL_YR_NBR                                      08150099
                INTO  :DTATTR-PFM-END-DTE                               08160099
                     ,:DTATTR-SEA-BEG-DTE                               08170099
                     ,:DTATTR-PREV-SEA-END-DTE                          08180099
99999                ,:PV-HOLD-PFW-END-DTE                              08190099
                     ,:DTATTR-FSCL-WK-NBR                               08200099
                     ,:DTATTR-FSCL-YR-NBR                               08210099
                FROM TDTATTR                                            08220099
                WHERE KY_DTE  = :PV-HOLD-DATE                           08230099
           END-EXEC.                                                    08240099
      *                                                                 08250099
           EVALUATE SQLCODE                                             08260099
               WHEN 0                                                   08270099
                  CONTINUE                                              08280099
               WHEN +100                                                08290099
                  DISPLAY 'NO ROWS QUALIFY FOR RECALCULATION'           08300099
               WHEN OTHER                                               08310099
                  MOVE '7100-SELECT-DB2-DATES' TO PV-PARAGRAPH-NAME     08320099
                  MOVE PE-MSG-02 TO PV-OPERATION-ATTEMPTED              08330099
                  PERFORM 9999-SQL-ABEND                                08340099
           END-EVALUATE.                                                08350099
      *                                                                 08360099
      *                                                                 08370099
      ***************************************************************** 08380099
      * POPULATE INTERNAL TABLE WITH DATES RELATED TO WEEK IN PROCESS   08390099
      ***************************************************************** 08400099
       7125-LOAD-DATE-TABLE.                                            08410099
           MOVE PV-HOLD-DATE            TO DT-OPN-WK-END-DTE(PV-SUB1).  08420099
PFW        MOVE PV-HOLD-PFW-END-DTE     TO DT-PFW-END-DTE(PV-SUB1).     08430099
           MOVE DTATTR-PFM-END-DTE      TO DT-PFM-END-DTE(PV-SUB1)      08440099
           MOVE DTATTR-SEA-BEG-DTE      TO DT-SEA-BEG-DTE(PV-SUB1).     08450099
           MOVE DTATTR-PREV-SEA-END-DTE TO DT-PREV-SEA-END-DTE(PV-SUB1).08460099
           MOVE DTATTR-FSCL-WK-NBR      TO DT-FSCL-WK-NBR(PV-SUB1).     08470099
           MOVE DTATTR-FSCL-YR-NBR      TO DT-FSCL-YR-NBR(PV-SUB1).     08480099
      *                                                                 08490099
      *                                                                 08500099
      ***************************************************************** 08510099
      *                                                                 08520099
      ***************************************************************** 08530099
       7149-OPEN-DEPT-CURSOR.                                           08540099
      *                                                                 08550099
           EXEC SQL                                                     08560099
               OPEN DEPT_CSR                                            08570099
           END-EXEC                                                     08580099
      *                                                                 08590099
           EVALUATE SQLCODE                                             08600099
               WHEN 0                                                   08610099
                    CONTINUE                                            08620099
               WHEN OTHER                                               08630099
                  MOVE '7149-OPEN-DEPT-CSR' TO PV-PARAGRAPH-NAME        08640099
                  MOVE PE-MSG-03 TO PV-OPERATION-ATTEMPTED              08650099
                  PERFORM 9999-SQL-ABEND                                08660099
           END-EVALUATE.                                                08670099
      *                                                                 08680099
      *                                                                 08690099
      *                                                                 08700099
      ***************************************************************** 08710099
      * FETCH A DEPT NUMBER TO PROCESS                                  08720099
      ***************************************************************** 08730099
       7150-PROCESS-DEPT-CURSOR.                                        08740099
      *                                                                 08750099
           EXEC SQL                                                     08760099
                  FETCH DEPT_CSR                                        08770099
                   INTO :WKDPT-DEPT-NBR                                 08780099
           END-EXEC                                                     08790099
      *                                                                 08800099
           EVALUATE SQLCODE                                             08810099
               WHEN +0                                                  08820099
                   CONTINUE                                             08830099
               WHEN +100                                                08840099
                   SET PS-END-OF-DEPT-CURSOR TO TRUE                    08850099
               WHEN OTHER                                               08860099
                   MOVE '7150-PROCESS-DEPT-C'  TO PV-PARAGRAPH-NAME     08870099
                   MOVE PE-MSG-04              TO PV-OPERATION-ATTEMPTED08880099
                   PERFORM 9999-SQL-ABEND                               08890099
             END-EVALUATE.                                              08900099
      *                                                                 08910099
      *                                                                 08920099
      ***************************************************************** 08930099
      * RETRIEVES CURRENT MONTH SHRINK DOLLARS FROM TWKSHNK             08940099
      ***************************************************************** 08950099
      *                                                                 08960099
      * LOGIC RETRIEVES THE SHRINK $ TOTALS FOR THE DEPT IN PROCESS.    08970099
      * :PV-HOLD-OPN-WK-END-DTE IS THE CURRENT WEEK BEING PROCESSED.    08980099
      *                                                                 08990099
      ***************************************************************** 09000099
       7200-OBTAIN-SHRINK-DLRS.                                         09010099
                                                                        09020099
            EXEC SQL                                                    09030099
                SELECT SUM(SHNK_RTL_AMT)                                09040099
                 INTO  :PV-SHNK-RTL-AMT                                 09050099
                 FROM  TWKSHNK                                          09060099
                WHERE DEPT_NBR        = :PV-HOLD-DEPT-NBR               09070099
                  AND FSCL_WK_END_DTE = :PV-HOLD-OPN-WK-END-DTE         09080099
            END-EXEC.                                                   09090099
                                                                        09100099
           EVALUATE SQLCODE                                             09110099
               WHEN 0                                                   09120099
                   CONTINUE                                             09130099
               WHEN -305                                                09140099
                   MOVE +0            TO PV-SHNK-RTL-AMT                09150099
               WHEN OTHER                                               09160099
                  MOVE '7200-OBTAIN-SHRINK-DLRS' TO PV-PARAGRAPH-NAME   09170099
                  MOVE PE-MSG-02 TO PV-OPERATION-ATTEMPTED              09180099
                  PERFORM 9999-SQL-ABEND                                09190099
           END-EVALUATE.                                                09200099
      *                                                                 09210099
      *                                                                 09220099
      ***************************************************************** 09230099
      * SELECT A ROW FROM DB2 TO BE RECALCED & UPDATED (OR INSERT/UPD)  09240099
      ***************************************************************** 09250099
       7300-SELECT-CURRENT-DOLLARS.                                     09260099
      *                                                                 09270099
           EXEC SQL                                                     09280099
                SELECT  SLS_RTL_AMT                                     09290099
                       ,MKDN_RTL_AMT                                    09300099
                       ,MKUP_RTL_AMT                                    09310099
                       ,XFER_IN_RTL_AMT                                 09320099
                       ,XFER_OUT_RTL_AMT                                09330099
                       ,RCPT_RTL_AMT                                    09340099
                       ,PADJ_RTL_AMT                                    09350099
                       ,INV_ADJ_RTL_AMT                                 09360099
                  INTO :WKDPT-SLS-RTL-AMT                               09370099
                      ,:WKDPT-MKDN-RTL-AMT                              09380099
                      ,:WKDPT-MKUP-RTL-AMT                              09390099
                      ,:WKDPT-XFER-IN-RTL-AMT                           09400099
                      ,:WKDPT-XFER-OUT-RTL-AMT                          09410099
                      ,:WKDPT-RCPT-RTL-AMT                              09420099
                      ,:WKDPT-PADJ-RTL-AMT                              09430099
                      ,:WKDPT-INV-ADJ-RTL-AMT                           09440099
                  FROM TWKDPT                                           09450099
                 WHERE DEPT_NBR        = :PV-HOLD-DEPT-NBR              09460099
                   AND FSCL_WK_NBR     = :PV-HOLD-FSCL-WK-NBR           09470099
                   AND FSCL_WK_END_DTE = :PV-HOLD-OPN-WK-END-DTE        09480099
           END-EXEC                                                     09490099
      *                                                                 09500099
           EVALUATE SQLCODE                                             09510099
               WHEN +0                                                  09520099
                   CONTINUE                                             09530099
               WHEN +100                                                09540099
                 SET PS-CURR-WEEK-ROW-NOT-FOUND    TO TRUE              09550099
               WHEN OTHER                                               09560099
                   MOVE '7300-SELECT-CURRENT'  TO PV-PARAGRAPH-NAME     09570099
                   MOVE PE-MSG-04              TO PV-OPERATION-ATTEMPTED09580099
                   PERFORM 9999-SQL-ABEND                               09590099
             END-EVALUATE.                                              09600099
      *                                                                 09610099
      *                                                                 09620099
      ******************************************************************09630099
      * RETRIEVE LAST WEEK'S ENDING INVENTORY RETAIL/COST               09640099
      *     THIS IS ALSO THE BEGINNING INVENTORY FOR THIS WEEK          09650099
      ******************************************************************09660099
       7350-SELECT-PREV-WEEK-END-INV.                                   09670099
      *                                                                 09680099
           EXEC SQL                                                     09690099
                SELECT  END_INV_RTL_AMT                                 09700099
                      , END_INV_COST_AMT                                09710099
                  INTO  :PV-PREV-WEEK-END-INV-RTL                       09720099
                       ,:PV-PREV-WEEK-END-INV-COST                      09730099
                  FROM  TWKDPT                                          09740099
                 WHERE (       DEPT_NBR = :PV-HOLD-DEPT-NBR)            09750099
PFW                AND (FSCL_WK_END_DTE = :PV-HOLD-PFW-END-DTE)         09760099
           END-EXEC.                                                    09770099
      *                                                                 09780099
           EVALUATE SQLCODE                                             09790099
               WHEN 0                                                   09800099
                   IF ((PV-PREV-WEEK-END-INV-RTL  NOT = 0) OR           09810099
                       (PV-PREV-WEEK-END-INV-COST NOT = 0))             09820099
                       SET PS-PFM-INV-DOLLARS-FOUND TO TRUE             09830099
                   END-IF                                               09840099
               WHEN +100                                                09850099
                   SET PS-PREV-WEEK-ROW-NOT-FOUND TO TRUE               09860099
                   MOVE ZEROES TO PV-PREV-WEEK-END-INV-RTL              09870099
                                  PV-PREV-WEEK-END-INV-COST             09880099
               WHEN OTHER                                               09890099
                   MOVE PE-MSG-02            TO PV-OPERATION-ATTEMPTED  09900099
                   MOVE  '7350-SELECT-PREV-WEEK-END-INV'                09910099
                                             TO PV-PARAGRAPH-NAME       09920099
                   PERFORM 9999-SQL-ABEND                               09930099
           END-EVALUATE.                                                09940099
      *                                                                 09950099
      *                                                                 09960099
      ******************************************************************09970099
      * 7400-PREV-SEASON-END-INV SELECTS THE ENDING INVENTORY COST &   *09980099
      *      RETAIL FROM THE LAST DAY OF THE PREVIOUS FISCAL SEASON    *09990099
      ******************************************************************10000099
       7400-PREV-SEASON-END-INV.                                        10010099
      *                                                                 10020099
           MOVE 'N'    TO PS-PREV-SEASON-INV-SW.                        10030099
      *                                                                 10040099
           EXEC SQL                                                     10050099
                SELECT  END_INV_RTL_AMT                                 10060099
                       ,END_INV_COST_AMT                                10070099
                  INTO  :WKDPT-END-INV-RTL-AMT                          10080099
                       ,:WKDPT-END-INV-COST-AMT                         10090099
                  FROM  TWKDPT                                          10100099
                 WHERE (DEPT_NBR =        :PV-HOLD-DEPT-NBR)            10110099
                   AND (FSCL_WK_END_DTE = :PV-HOLD-PREV-SEA-END-DTE)    10120099
           END-EXEC.                                                    10130099
      *                                                                 10140099
           EVALUATE SQLCODE                                             10150099
               WHEN 0                                                   10160099
                   CONTINUE                                             10170099
               WHEN +100                                                10180099
                   SET PS-NO-PREV-SEASONAL-INV       TO TRUE            10190099
               WHEN OTHER                                               10200099
                   MOVE PE-MSG-02            TO PV-OPERATION-ATTEMPTED  10210099
                   MOVE  '7400-PREV-SEASON-END-INV'                     10220099
                                             TO PV-PARAGRAPH-NAME       10230099
                   PERFORM 9999-SQL-ABEND                               10240099
           END-EVALUATE.                                                10250099
      *                                                                 10260099
      *                                                                 10270099
      ***************************************************************** 10280099
      * OPEN CURSOR FOR MONTH-END VALUES FOR THIS SEASON                10290099
      ***************************************************************** 10300099
       7425-OPEN-SEASON-CURSOR.                                         10310099
      *                                                                 10320099
           EXEC SQL                                                     10330099
               OPEN SEASON_TO_DATE_CSR                                  10340099
           END-EXEC                                                     10350099
      *                                                                 10360099
           IF SQLCODE = +0                                              10370099
               CONTINUE                                                 10380099
           ELSE                                                         10390099
               MOVE PE-MSG-03                 TO PV-OPERATION-ATTEMPTED 10400099
               MOVE '7425-OPEN-SEASON-CURSOR' TO PV-PARAGRAPH-NAME      10410099
               PERFORM 9999-SQL-ABEND                                   10420099
           END-IF.                                                      10430099
      *                                                                 10440099
      *                                                                 10450099
      ******************************************************************10460099
      * 7450-PROCESS-SEASON-CURSOR WILL RETRIEVE ALL ROWS WITH AN ENDING10470099
      * INVENTORY AMOUNT FOR EACH MONTH END DATE FOR THE CURRENT SEASON.10480099
      ******************************************************************10490099
       7450-PROCESS-SEASONAL-CURSOR.                                    10500099
      *                                                                 10510099
           MOVE 'N'    TO PS-CURR-SEASON-CURSOR-SW.                     10520099
      *                                                                 10530099
           EXEC SQL                                                     10540099
                 FETCH SEASON_TO_DATE_CSR                               10550099
**NET             INTO  :WKDPT-XFER-IN-RTL-AMT                          10560099
**NET                  ,:WKDPT-XFER-OUT-RTL-AMT                         10570099
                       ,:WKDPT-RCPT-RTL-AMT                             10580099
                       ,:WKDPT-RCPT-NET-COST-AMT                        10590099
                       ,:WKDPT-PADJ-RTL-AMT                             10600099
                       ,:WKDPT-PADJ-NET-COST-AMT                        10610099
                       ,:WKDPT-MKUP-RTL-AMT                             10620099
           END-EXEC.                                                    10630099
      *                                                                 10640099
           EVALUATE SQLCODE                                             10650099
                WHEN 0                                                  10660099
                    CONTINUE                                            10670099
                WHEN +100                                               10680099
                    SET PS-END-OF-CURR-SEASON-CSR    TO TRUE            10690099
                WHEN OTHER                                              10700099
                    MOVE PE-MSG-04             TO PV-OPERATION-ATTEMPTED10710099
                    MOVE '7450-PROCESS-SEASONAL-CURSOR'                 10720099
                                               TO PV-PARAGRAPH-NAME     10730099
                    PERFORM 9999-SQL-ABEND                              10740099
           END-EVALUATE.                                                10750099
      *                                                                 10760099
      *                                                                 10770099
      ******************************************************************10780099
      * 7475-CURR-SEASON-COST SELECTS THE ENDING INVENTORY COST &      *10790099
      *      RETAIL FROM THE LAST DAY OF THE PREVIOUS FISCAL SEASON    *10800099
      ******************************************************************10810099
       7475-CURR-SEASON-COST.                                           10820099
                                                                        10830099
           MOVE 'N'    TO PS-CURRENT-PURCH-COST-SW.                     10840099
      *                                                                 10850099
           EXEC SQL                                                     10860099
                SELECT  RCPT_NET_COST_AMT                               10870099
                       ,PADJ_NET_COST_AMT                               10880099
                  INTO  :PV-CURR-WEEK-RCPT-NET-COST                     10890099
                       ,:PV-CURR-WEEK-PADJ-NET-COST                     10900099
                  FROM  TWKDPT                                          10910099
                 WHERE (DEPT_NBR =        :PV-HOLD-DEPT-NBR)            10920099
                   AND (FSCL_WK_END_DTE = :PV-HOLD-OPN-WK-END-DTE)      10930099
           END-EXEC.                                                    10940099
      *                                                                 10950099
           EVALUATE SQLCODE                                             10960099
               WHEN 0                                                   10970099
                   CONTINUE                                             10980099
               WHEN +100                                                10990099
                   SET PS-NO-CURRENT-PURCH-COSTS     TO TRUE            11000099
               WHEN OTHER                                               11010099
                   MOVE PE-MSG-02            TO PV-OPERATION-ATTEMPTED  11020099
                   MOVE  '7475-CURRENT-SEASON-COST'                     11030099
                                             TO PV-PARAGRAPH-NAME       11040099
                   PERFORM 9999-SQL-ABEND                               11050099
           END-EVALUATE.                                                11060099
      *                                                                 11070099
      *                                                                 11080099
      ******************************************************************11090099
      * UPDATE COLUMNS WITH VALUES JUST CALCULATED FOR THIS DEPARTMENT  11100099
      ******************************************************************11110099
       7500-UPDATE-PROCESSING.                                          11120099
      *                                                                 11130099
           EXEC SQL                                                     11140099
               UPDATE TWKDPT                                            11150099
                  SET  SHNK_RTL_AMT     = :PV-SHNK-RTL-AMT              11160099
                      ,END_INV_RTL_AMT  = :PV-END-INV-RTL-AMT           11170099
                      ,CUM_MKUP_PCT     = :PV-CUM-MKUP-PCT              11180099
                      ,END_INV_COST_AMT = :PV-END-INV-COST-AMT          11190099
                      ,SLS_COST_AMT     = :PV-SLS-COST-AMT              11200099
                      ,GRO_MRGN_AMT     = :PV-GRO-MRGN-AMT              11210099
                WHERE FSCL_WK_NBR       = :PV-HOLD-FSCL-WK-NBR          11220099
                  AND FSCL_WK_END_DTE   = :PV-HOLD-OPN-WK-END-DTE       11230099
                  AND DEPT_NBR          = :PV-HOLD-DEPT-NBR             11240099
           END-EXEC                                                     11250099
  *                                                                     11260099
           EVALUATE SQLCODE                                             11270099
               WHEN 0                                                   11280099
                    ADD 1                TO PA-UPDATE-COUNT             11290099
               WHEN OTHER                                               11300099
                    DISPLAY '*************************************'     11310099
                    DISPLAY 'DEPT PROCESSING : ', PV-HOLD-DEPT-NBR      11320099
                    DISPLAY ' WEEK-END-DATE  : ',                       11330099
                                              PV-HOLD-OPN-WK-END-DTE    11340099
                    DISPLAY 'FISCAL MONTH NBR: ',                       11350099
                                                 PV-HOLD-FSCL-WK-NBR    11360099
                    MOVE PE-MSG-06        TO PV-OPERATION-ATTEMPTED     11370099
                    MOVE '7500-UPDATE-PROCESSING'                       11380099
                                          TO PV-PARAGRAPH-NAME          11390099
                    PERFORM 9999-SQL-ABEND                              11400099
           END-EVALUATE.                                                11410099
      *                                                                 11420099
      *                                                                 11430099
      ******************************************************************11440099
      * PERFORMED BY END OF JOB PROCESSING                              11450099
      ******************************************************************11460099
       7550-CLOSE-DEPT-CURSOR.                                          11470099
           EXEC SQL                                                     11480099
               CLOSE DEPT_CSR                                           11490099
           END-EXEC.                                                    11500099
      *                                                                 11510099
           EVALUATE SQLCODE                                             11520099
               WHEN 0                                                   11530099
                   CONTINUE                                             11540099
               WHEN OTHER                                               11550099
                   MOVE PE-MSG-05            TO PV-OPERATION-ATTEMPTED  11560099
                   MOVE  '7550-CLOSE-DEPT_CURSOR' TO PV-PARAGRAPH-NAME  11570099
                   PERFORM 9999-SQL-ABEND                               11580099
           END-EVALUATE.                                                11590099
      *                                                                 11600099
      *                                                                 11610099
      ******************************************************************11620099
      *                                                                 11630099
      ******************************************************************11640099
       7575-CLOSE-SEASON-CURSOR.                                        11650099
      *                                                                 11660099
           EXEC SQL                                                     11670099
               CLOSE SEASON_TO_DATE_CSR                                 11680099
           END-EXEC.                                                    11690099
      *                                                                 11700099
           EVALUATE SQLCODE                                             11710099
               WHEN 0                                                   11720099
                   CONTINUE                                             11730099
               WHEN OTHER                                               11740099
                   MOVE PE-MSG-05            TO PV-OPERATION-ATTEMPTED  11750099
                   MOVE '7575-CLOSE-SEASON-CURSOR' TO PV-PARAGRAPH-NAME 11760099
                   PERFORM 9999-SQL-ABEND                               11770099
           END-EVALUATE.                                                11780099
      *                                                                 11790099
      *                                                                 11800099
      ******************************************************************11810099
      * 7600-GET-COMMIT-TIMESTAMP.                                     *11820099
      *   GET THE TIMESTAMP FROM THE CHECKPOINT TABLE FOR NEXT COMMIT  *11830099
      ******************************************************************11840099
       7600-GET-COMMIT-TIMESTAMP.                                       11850099
      *                                                                 11860099
           EXEC SQL                                                     11870099
             SELECT (CURRENT TIMESTAMP + CKPT_FRQNCY_QTY SECONDS)       11880099
               INTO :PV-COMMIT-TIMESTAMP                                11890099
               FROM TCKRSTCNTL                                          11900099
              WHERE JOB_NAME  = :PC-JOB-NAME                            11910099
                AND PLAN_NAME = :PC-PROGRAM-NAME                        11920099
           END-EXEC.                                                    11930099
      *                                                                 11940099
           EVALUATE TRUE                                                11950099
               WHEN SQLCODE = 0                                         11960099
                   CONTINUE                                             11970099
               WHEN SQLCODE NOT EQUAL ZERO                              11980099
                   MOVE '7600-GET-COMMIT-TIMESTAMP' TO PV-PARAGRAPH-NAME11990099
                   MOVE PE-MSG-07             TO PV-OPERATION-ATTEMPTED 12000099
                   PERFORM 9999-SQL-ABEND                               12010099
           END-EVALUATE.                                                12020099
      *                                                                 12030099
      *                                                                 12040099
      ******************************************************************12050099
      * 7650-INIT-CHECKPOINT-SELECT                                    *12060099
      * CHECK STATUS CODE TO SEE IF THIS IS A RESTART CONDITION        *12070099
      ******************************************************************12080099
       7650-INIT-CHECKPOINT-SELECT.                                     12090099
      *                                                                 12100099
           EXEC SQL                                                     12110099
             SELECT  CKPT_STAT_CODE                                     12120099
                    ,CKPT_FRQNCY_QTY                                    12130099
               INTO  :TCKRSTCNTL-CKPT-STAT-CODE                         12140099
                    ,:TCKRSTCNTL-CKPT-FRQNCY-QTY                        12150099
               FROM  TCKRSTCNTL                                         12160099
              WHERE  JOB_NAME  = :PC-JOB-NAME                           12170099
                AND  PLAN_NAME = :PC-PROGRAM-NAME                       12180099
           END-EXEC.                                                    12190099
      *                                                                 12200099
           IF SQLCODE = 0                                               12210099
               CONTINUE                                                 12220099
           ELSE                                                         12230099
               MOVE '7650-INIT-CHECKPOINT-SELECT' TO PV-PARAGRAPH-NAME  12240099
               MOVE PE-MSG-07             TO PV-OPERATION-ATTEMPTED     12250099
               PERFORM 9999-SQL-ABEND                                   12260099
           END-IF.                                                      12270099
      *                                                                 12280099
      *                                                                 12290099
      ******************************************************************12300099
      * 7700-SELECT-RESTART-INFO                                       *12310099
      * OBTAIN INFORMATION REGARDING WHERE TO RESTART TABLE PROCESSING *12320099
      ******************************************************************12330099
       7700-SELECT-RESTART-INFO.                                        12340099
      *                                                                 12350099
           EXEC SQL                                                     12360099
             SELECT  WORK_STRG_DESC                                     12370099
               INTO  :TCKRSTINF-WORK-STRG-DESC                          12380099
               FROM  TCKRSTINF                                          12390099
              WHERE  JOB_NAME  = :PC-JOB-NAME                           12400099
                AND  PLAN_NAME = :PC-PROGRAM-NAME                       12410099
           END-EXEC.                                                    12420099
      *                                                                 12430099
           IF SQLCODE = 0                                               12440099
               CONTINUE                                                 12450099
           ELSE                                                         12460099
               MOVE '*7700-SELECT-RESTART-INFO*' TO PV-PARAGRAPH-NAME   12470099
               MOVE PE-MSG-11             TO PV-OPERATION-ATTEMPTED     12480099
               PERFORM 9999-SQL-ABEND                                   12490099
           END-IF.                                                      12500099
      *                                                                 12510099
      *                                                                 12520099
      ******************************************************************12530099
      * 7750-SET-CURRENT-TIMESTAMP.                                    *12540099
      * CURRENT TIMESTAMP SET TO BE COMPARED TO COMMIT TIMESTAMP       *12550099
      ******************************************************************12560099
       7750-SET-CURRENT-TIMESTAMP.                                      12570099
      *                                                                 12580099
           EXEC SQL                                                     12590099
                SET :PV-CURRENT-TIMESTAMP = CURRENT TIMESTAMP           12600099
           END-EXEC.                                                    12610099
      *                                                                 12620099
           IF SQLCODE = 0                                               12630099
               CONTINUE                                                 12640099
           ELSE                                                         12650099
               MOVE PE-MSG-12             TO PV-OPERATION-ATTEMPTED     12660099
               MOVE '*7750-SET-CURRENT-TIMESTAMP*' TO PV-PARAGRAPH-NAME 12670099
               PERFORM 9999-SQL-ABEND                                   12680099
           END-IF.                                                      12690099
      *                                                                 12700099
      *                                                                 12710099
      ******************************************************************12720099
      * 7800-COMMIT-PROCESSING.                                        *12730099
      * COMPARE COMMIT TIMESTAMP TO CURRENT TO DETERMINE IF COMMIT REQD*12740099
      ******************************************************************12750099
       7800-COMMIT-PROCESSING.                                          12760099
           MOVE '*7800-COMMIT-PROCESSING*'    TO PV-PARAGRAPH-NAME.     12770099
      *                                                                 12780099
           PERFORM 7750-SET-CURRENT-TIMESTAMP.                          12790099
      *                                                                 12800099
           IF (PV-CURRENT-TIMESTAMP > PV-COMMIT-TIMESTAMP)  OR          12810099
              (PS-END-OF-DEPT-CURSOR)                                   12820099
      *        PREPARE COMMIT RECORD FOR UPDATE                         12830099
               ADD 1                          TO PA-COMMIT-COUNT        12840099
               MOVE PV-HOLD-OPN-WK-END-DTE    TO CR-FISCAL-WK-END-DTE   12850099
               MOVE PV-HOLD-DEPT-NBR          TO CR-DEPT-NBR            12860099
               MOVE PA-DEPT-COUNT             TO CR-TWKDPT-FETCH-COUNT  12870099
               MOVE PA-UPDATE-COUNT           TO CR-TWKDPT-UPDATE-COUNT 12880099
               MOVE PA-INSERT-COUNT           TO CR-TWKDPT-INSERT-COUNT 12890099
               MOVE PA-COMMIT-COUNT           TO CR-TWKDPT-COMMIT-COUNT 12900099
               MOVE CR-CHECKPOINT-RESTART-AREA TO                       12910099
                                             TCKRSTINF-WORK-STRG-DESC   12920099
               IF PS-FIRST-COMMIT                                       12930099
                   MOVE '9' TO TCKRSTCNTL-CKPT-STAT-CODE                12940099
                   PERFORM 7900-UPDATE-CHECKPOINT-STATUS                12950099
                   MOVE 'N' TO PS-FIRST-COMMIT-SW                       12960099
               END-IF                                                   12970099
               PERFORM 7850-COMMIT-CHANGES                              12980099
               PERFORM 7600-GET-COMMIT-TIMESTAMP                        12990099
      * RESET DATE SUBSCRIPT PRIOR TO 'RE-OPENING' CURSOR TO '1ST' WEEK 13000099
               MOVE 1 TO PV-SUB1                                        13010099
               PERFORM 2800-FORMAT-DATES                                13020099
               PERFORM 7149-OPEN-DEPT-CURSOR                            13030099
           END-IF.                                                      13040099
      *                                                                 13050099
           IF PS-END-OF-DEPT-CURSOR                                     13060099
               CONTINUE                                                 13070099
           ELSE                                                         13080099
               MOVE 1 TO PV-SUB1                                        13090099
               PERFORM 7150-PROCESS-DEPT-CURSOR                         13100099
           END-IF.                                                      13110099
      *                                                                 13120099
      *                                                                 13130099
      ******************************************************************13140099
      * 7850-COMMIT-CHANGES.                                            13150099
      * UPDATE CHECKPOINT INFORMATION TABLE. TAKE A COMMIT.             13160099
      ******************************************************************13170099
       7850-COMMIT-CHANGES.                                             13180099
      *                                                                 13190099
           EXEC SQL                                                     13200099
             UPDATE TCKRSTINF                                           13210099
                SET WORK_STRG_DESC = :TCKRSTINF-WORK-STRG-DESC          13220099
              WHERE JOB_NAME       = :PC-JOB-NAME                       13230099
                AND PLAN_NAME      = :PC-PROGRAM-NAME                   13240099
           END-EXEC.                                                    13250099
      *                                                                 13260099
           IF SQLCODE = 0                                               13270099
               CONTINUE                                                 13280099
           ELSE                                                         13290099
               MOVE PE-MSG-08                  TO PV-OPERATION-ATTEMPTED13300099
               MOVE  '* 7850-COMMIT-CHANGES *' TO PV-PARAGRAPH-NAME     13310099
               PERFORM 9999-SQL-ABEND                                   13320099
           END-IF.                                                      13330099
      *                                                                 13340099
           EXEC SQL                                                     13350099
               COMMIT                                                   13360099
           END-EXEC.                                                    13370099
      *                                                                 13380099
           IF SQLCODE = 0                                               13390099
               CONTINUE                                                 13400099
           ELSE                                                         13410099
               MOVE PE-MSG-09                  TO PV-OPERATION-ATTEMPTED13420099
               MOVE  '* 7850-COMMIT-CHANGES *' TO PV-PARAGRAPH-NAME     13430099
               PERFORM 9999-SQL-ABEND                                   13440099
           END-IF.                                                      13450099
      *                                                                 13460099
      *                                                                 13470099
      ******************************************************************13480099
      * UPDATE CHECKPOINT STATUS                                        13490099
      ******************************************************************13500099
       7900-UPDATE-CHECKPOINT-STATUS.                                   13510099
      *                                                                 13520099
           EXEC SQL                                                     13530099
             UPDATE  TCKRSTCNTL                                         13540099
                SET  CKPT_STAT_CODE = :TCKRSTCNTL-CKPT-STAT-CODE        13550099
              WHERE  JOB_NAME  = :PC-JOB-NAME                           13560099
                AND  PLAN_NAME = :PC-PROGRAM-NAME                       13570099
           END-EXEC.                                                    13580099
      *                                                                 13590099
           IF SQLCODE = 0                                               13600099
               CONTINUE                                                 13610099
           ELSE                                                         13620099
               MOVE '7900-UPDATE-CHECKPOINT-STATUS' TO PV-PARAGRAPH-NAME13630099
               MOVE PE-MSG-10                  TO PV-OPERATION-ATTEMPTED13640099
               PERFORM 9999-SQL-ABEND                                   13650099
           END-IF.                                                      13660099
      *                                                                 13670099
           EJECT                                                        13680099
      *                                                                 13690099
      *                                                                 13700099
      ******************************************************************13710099
      * 7950-INSERT-CARRY-FWD-ROW                                       13720099
      * PERFORMED IF NO ROW IS FOUND ON DB2 (FOR THIS PROCESSING WEEK)  13730099
      * BUT INVENTORY DOLLARS (COST AND/OR RETAIL) FOUND FOR LAST WEEK  13740099
      ******************************************************************13750099
       7950-INSERT-CARRY-FWD-ROW.                                       13760099
      *                                                                 13770099
      *                                                                 13780099
           EXEC SQL                                                     13790099
               INSERT INTO TWKDPT                                       13800099
                   ( FSCL_WK_NBR                                        13810099
                    ,FSCL_WK_END_DTE                                    13820099
                    ,DEPT_NBR                                           13830099
                    ,SLS_RTL_AMT                                        13840099
                    ,MKDN_RTL_AMT                                       13850099
                    ,MKUP_RTL_AMT                                       13860099
                    ,XFER_IN_RTL_AMT                                    13870099
                    ,XFER_OUT_RTL_AMT                                   13880099
                    ,RCPT_RTL_AMT                                       13890099
                    ,RCPT_NET_COST_AMT                                  13900099
                    ,PADJ_RTL_AMT                                       13910099
                    ,PADJ_NET_COST_AMT                                  13920099
                    ,INV_ADJ_RTL_AMT                                    13930099
                    ,SHNK_RTL_AMT                                       13940099
                    ,END_INV_RTL_AMT                                    13950099
                    ,CUM_MKUP_PCT                                       13960099
                    ,END_INV_COST_AMT                                   13970099
                    ,SLS_COST_AMT                                       13980099
                    ,GRO_MRGN_AMT )                                     13990099
               VALUES (:PV-HOLD-FSCL-WK-NBR                             14000099
                      ,:PV-HOLD-OPN-WK-END-DTE                          14010099
                      ,:PV-HOLD-DEPT-NBR                                14020099
                      ,0                                                14030099
                      ,0                                                14040099
                      ,0                                                14050099
                      ,0                                                14060099
                      ,0                                                14070099
                      ,0                                                14080099
                      ,0                                                14090099
                      ,0                                                14100099
                      ,0                                                14110099
                      ,0                                                14120099
                      ,0                                                14130099
                      ,:PV-PREV-WEEK-END-INV-RTL                        14140099
                      ,0                                                14150099
                      ,:PV-PREV-WEEK-END-INV-COST                       14160099
                      ,0                                                14170099
                      ,0  )                                             14180099
           END-EXEC                                                     14190099
      *                                                                 14200099
           IF SQLCODE = 0                                               14210099
               ADD 1                      TO PA-INSERT-COUNT            14220099
               DISPLAY 'INSERT DEPT ROW: ', PV-HOLD-DEPT-NBR, ' ',      14230099
                                            PV-HOLD-OPN-WK-END-DTE      14240099
           ELSE                                                         14250099
               MOVE '7950-INSERT-CARRY-FWD-ROW' TO PV-PARAGRAPH-NAME    14260099
               MOVE PE-MSG-14             TO PV-OPERATION-ATTEMPTED     14270099
               PERFORM 9999-SQL-ABEND                                   14280099
           END-IF.                                                      14290099
      *                                                                 14300099
      *                                                                 14310099
      ******************************************************************14320099
      *  RESET STATUS CODE, DISPLAY FINAL COUNTS , CLOSE INPUT FILE    *14330099
      ******************************************************************14340099
       8000-EOJ-ROUTINE.                                                14350099
      *                                                                 14360099
      *    COMMIT ANY FINAL CHANGES THAT MAY HAVE BEEN MADE             14370099
           IF PS-EMPTY-RESULT-TABLE                                     14380099
               CONTINUE                                                 14390099
           ELSE                                                         14400099
               PERFORM 7800-COMMIT-PROCESSING                           14410099
               PERFORM 7550-CLOSE-DEPT-CURSOR                           14420099
           END-IF.                                                      14430099
                                                                        14440099
           MOVE '0' TO TCKRSTCNTL-CKPT-STAT-CODE.                       14450099
           PERFORM 7900-UPDATE-CHECKPOINT-STATUS.                       14460099
      *                                                                 14470099
           DISPLAY 'TWKDPT ROWS UPDATED  ', PA-UPDATE-COUNT.            14480099
           DISPLAY 'TWKDPT ROWS INSERTED ', PA-INSERT-COUNT.            14490099
           DISPLAY '                                             '.     14500099
           DISPLAY 'DEPTS PROCESSED ', PA-DEPT-COUNT.                   14510099
           DISPLAY '                                             '.     14520099
           DISPLAY 'COMMITS TAKEN   ', PA-COMMIT-COUNT.                 14530099
           DISPLAY 'EOJ EOJ EOJ EOJ EOJ EOJ EOJ EOJ EOJ EOJ EOJ EOJ '.  14540099
      *                                                                 14550099
      *                                                                 14560099
      ******************************************************************14570099
      *  STANDARD DB2 ERROR ABEND ROUTINE                               14580099
      *  THIS ROUTINE FORCES AN ABEND DUE TO A DB2 PROBLEM.             14590099
      ******************************************************************14600099
       9999-SQL-ABEND.                                                  14610099
                                                                        14620099
           MOVE +4013                 TO ABEND-CODE.                    14630099
           DISPLAY '**  ABEND     **'.                                  14640099
           DISPLAY '**  PROGRAM   ** => ' PC-PROGRAM-NAME.              14650099
           DISPLAY '**  PARAGRAPH **  = ' PV-PARAGRAPH-NAME.            14660099
           DISPLAY '**  OPERATION **  = ' PV-OPERATION-ATTEMPTED.       14670099
                                                                        14680099
      *    THE FOLLOWING COPYBOOK UTILIZES THE DB2 ABEND MODULE         14690099
      *    DSNTIAR TO CONVERT SQLCA INTO UNDERSTANDABLE VERBAGE.        14700099
                                                                        14710099
           COPY DPPD004.                                                14720099
           CALL 'ILBOABN0'  USING ABEND-CODE.                           14730099
      *                                                                 14740099
