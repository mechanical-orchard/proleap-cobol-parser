       ID DIVISION.                                                             
       PROGRAM-ID.   DPKCS300.                                                  
       AUTHOR.       DONALD L WHITE (IBM).                                      
       INSTALLATION. KOHL DEPARTMENT STORES.                                    
       ENVIRONMENT DIVISION.                                                    
       DATA DIVISION.                                                           
       WORKING-STORAGE SECTION.                                                 
      *---------------------------------------------------------------*         
      * DISP-MSGS VARIABLE - IF 9999 = DISPLAY ALL MSGS               *         
      *                      IF 0 =    DISPLAY ERROR MSGS ONLY        *         
      *                      IF < 9999 = DISPLAY NEXT # OF MESSAGES   *         
      *---------------------------------------------------------------*         
       77  DISP-MSGS             PIC S9(8) COMP VALUE 0025.                     
       77  MAX-EXTRA             PIC S9(8) COMP VALUE 1.                        
      *---------------------------------------------------------------*         
       77  STARTUP-AGAIN         PIC X    VALUE 'N'.                            
      *---------------------------------------------------------------*         
       77  IPAH-TRAN             PIC X(4) VALUE 'Z300'.                         
                                                                                
      *****************************************************************         
      * THIS PROGRAM IS SETUP TO HANDLE A MAXIMUM OF 2000 SOCKETS.    *         
      * BECAUSE THE WAY TCP/IP HANDLES SOCKETS, SOME COULD BE 'DEAD'  *         
      * AND THAT IS WHY THIS PROGRAM CAN HANDLE MORE THIS REAL STORES.*         
      *                                                               *         
      *  7/7/98 - CHANGES WERE MAKE TO INCREASE THE NUMBER OF SOCKETS *         
      *           FROM 1000 (OLD) TO 2000 (NEW) - DONE BY DON WHITE.  *         
      *                                                               *         
      *  3/9/00 - CHANGES TO RECALCULATE MASK SIZES BASED ON          *         
      *           CORRECT FORMULAS        DONE BY D.DREW              *         
      *                                                               *         
      *  6/20/00- CONVERT TO EZASOKET CALLS FROM EZACICAL             *         
      *                                   DONE BY D.DREW              *         
      *                                                               *         
      * THE FOLLOWING VARIABLE NEED TO BE CHANGED IF YOU INCREASE THE *         
      * NUMBER OF SOCKETS THAT THIS SOCKET SERVER SUPPORTS.  THESE    *         
      * VARIABLES ARE:                                                *         
      *                                                               *         
      *           NOTE: 2000 IS MAX SOCKETS PASSED TO INITAPI CALL    *         
      *                                                               *         
      *                                                   CURRENT     *         
      *                                                               *         
      *    SOCKETS                                          2000      *         
      *    CHAR-STRING                                      2000      *         
      *    CHAR-STRING1                                     2000      *         
      *    CHAR-ENTRY-TABLE                                 2000      *         
      *    SELECT-NUMFDS                                    2000      *         
      *    BIT-MASK-LENGTH                                  2000      *         
      *                                                               *         
      *                      (ROUND DOWN ON DIVIDES)       CURRENT    *         
      *    BIT-ARRAY         - ((sockets/32)+1))*4           252      *         
      *    SELECT-RD-MASK    - ((sockets/32)+1))*4           252      *         
      *    SELECT-WR-MASK    - ((sockets/32)+1))*4           252      *         
      *    SELECT-EX-MASK    - ((sockets/32)+1))*4           252      *         
      *    SELECT-RR-MASK    - ((sockets/32)+1))*4           252      *         
      *    SELECT-RW-MASK    - ((sockets/32)+1))*4           252      *         
      *    SELECT-RE-MASK    - ((sockets/32)+1))*4           252      *         
      *                                                               *         
      * ALSO SEE NOTE IN THE LINKAGE SECTION FOR INCREASING THE SIZE  *         
      * OF THE SOCKET TABLE.  Statement is below:                     *         
      *                                                               *         
      *    05 TCPSOCKETN-TABLE-ELEMENT OCCURS 2000 TIMES.             *         
      *                                                               *         
      *****************************************************************         
                                                                                
       77  SOCKETS               PIC 9(8) COMP VALUE 2000.                      
       77  MAX-SOCKETS-LESS1     PIC 9(8) COMP VALUE 1999.                      
       77  DEAD-TIMEOUT          PIC 9(16) COMP VALUE 30.                       
       77  FULL-TIMEOUT-T30      PIC 9(16) COMP VALUE 30.                       
       77  FULL-TIMEOUT-T2       PIC 9(16) COMP VALUE 2.                        
                                                                                
      *****************************************************************         
                                                                                
       77  PORTADDR              PIC 9(4) VALUE 0.                              
       77  PV-HOLD-PORT          PIC 9(4) VALUE 0.                              
                                                                                
       77  RECV-LENGTH           PIC 9(4).                                      
       77  RECV-COUNT            PIC 9(8) BINARY VALUE 0.                       
       77  SEND-COUNT            PIC 9(8) BINARY VALUE 0.                       
       77  CLOSE-SOCKET-COUNT    PIC 9(4) COMP VALUE 0.                         
       77  RECORD-TO-READ        PIC 9(4) COMP VALUE 2.                         
       77  OPEN-SOCKET-COUNT     PIC S9(8) COMP.                                
       77  TCP-EXIT-ERR                    PIC X(40)                            
            VALUE IS '!CAN NOT START SERVER .. TRUE NOT ACTIVE'.                
       77  TAKE-ERR                       PIC X(24)                             
            VALUE IS '!TAKESOCKET FAIL      '.                                  
       77  CLOS-ERR                        PIC X(24)                            
            VALUE IS '!CLOSE SOCKET FAIL      '.                                
       77  CLOS-SUCCESS                   PIC X(24)                             
            VALUE IS 'CLOSE SOCKET SUCCESSFUL '.                                
       77  TABLE-CAPACITY-EXCEEDED      PIC X(50)                               
            VALUE '!SERVER CAPACITY EXCEEDED, SOCKET CLOSED'.                   
       77  BITMASK-TOKEN           PIC X(16) VALUE 'TCPIPBITMASKCOBL'.          
       77  TOEBCDIC-TOKEN          PIC X(16) VALUE 'TCPIPTOEBCDICXLT'.          
       77  TOASCII-TOKEN           PIC X(16) VALUE 'TCPIPTOASCIIXLAT'.          
       77  GWPTR                      PIC S9(8) COMP.                           
       77  TSTAMP                     PIC 9(16) COMP.                           
       77  TSTAMP-SWQ                 PIC 9(16) COMP VALUE 0.                   
       77  DSTAMP                     PIC 9(16) COMP.                           
       77  STARTT                     PIC 9(16) COMP.                           
       77  SSTAMP                     PIC 9(16) COMP.                           
       77  RESPONSE                   PIC 9(9) BINARY.                          
       77  RC                         PIC 9(4) BINARY VALUE 0.                  
       77  I                          PIC S9(8) BINARY VALUE 0.                 
       77  J                          PIC S9(8) BINARY.                         
       77  L                          PIC S9(4) COMP.                           
       77  IX                         PIC S9(8) BINARY.                         
       77  IXS                        PIC S9(8) BINARY.                         
       77  S                          PIC 9(4) BINARY VALUE 0.                  
       77  SOCKID                     PIC 9(4) BINARY.                          
       77  ERRNO                      PIC 9(8) BINARY.                          
       77  RETCODE                    PIC S9(8) BINARY.                         
       77  LL                         PIC S9(4) BINARY VALUE 0.                 
       77  L1                         PIC 9(8) BINARY VALUE 0.                  
       77  L2                         PIC 9(8) BINARY VALUE 0.                  
       77  RECV-FLAG                  PIC 9(8) BINARY VALUE 0.                  
       77  CLENG                      PIC 9(4) BINARY.                          
       77  CNT                        PIC 9(4) BINARY.                          
       77  OPEN-SOCK                  PIC X.                                    
       77  MAX                        PIC 9(4).                                 
       77  OCTET                      PIC 9(3).                                 
       77  DSPLY8                     PIC X(8).                                 
       77  USED-COUNTER               PIC S9(8) BINARY VALUE 100.               
                                                                                
       77  START-LENGTH               PIC 9(4) BINARY VALUE 0.                  
       77  DCOUNT                     PIC 9(8) BINARY.                          
       77  MATCHING-NUMB              PIC 9(8) BINARY VALUE 1.                  
                                                                                
       01  TCPIPPRQ.                                                            
           05 FILLER                  PIC X(7)    VALUE 'TCPIPPR'.              
           05 TCPIPPRQ-ONE            PIC X(1)    VALUE SPACE.                  
                                                                                
       01  TCPIPSWQ.                                                            
           05 FILLER                  PIC X(7)    VALUE 'TCPIPSW'.              
           05 TCPIPSWQ-ONE            PIC X(1)    VALUE SPACE.                  
                                                                                
       77  TCPIP-CICS-QUEUE           PIC X(1)    VALUE SPACE.                  
                                                                                
       01  PV-SYSTEM-ID.                                                        
           05  PV-CICS-REGION         PIC  X(06)  VALUE SPACE.                  
           05  FILLER                 PIC  X(02)  VALUE SPACE.                  
                                                                                
       01  TTIME-1.                                                             
           05 TTIME                   PIC 9(8).                                 
       01  TTIME-2 REDEFINES TTIME-1.                                           
           05 HH                      PIC 9(2).                                 
           05 FILLER                  PIC X.                                    
           05 MM                      PIC 9(2).                                 
           05 FILLER                  PIC X.                                    
           05 SS                      PIC 9(2).                                 
                                                                                
       77  TSQ-WRITE-COUNT            PIC 9(8).                                 
       77  TSQ-TOTAL-RECORDS          PIC 9(8).                                 
       77  TSQ-READ-COUNT             PIC 9(8).                                 
      **********************************************************                
       01  DIS-HT.                                                              
           05 DIS-HT-H            PIC X(16).                                    
           05 DIS-HT-1            PIC 9(3).                                     
           05 FILLER              PIC X VALUE '.'.                              
           05 DIS-HT-2            PIC 9(3).                                     
           05 FILLER              PIC X VALUE '.'.                              
           05 DIS-HT-3            PIC 9(3).                                     
           05 FILLER              PIC X VALUE '.'.                              
           05 DIS-HT-4            PIC 9(3).                                     
           05 FILLER              PIC X(3) VALUE ',P='.                         
           05 DIS-HT-P            PIC 9(4).                                     
           05 FILLER              PIC X(5) VALUE ',ACT='.                       
           05 DIS-HT-ACT          PIC 9(4).                                     
           05 FILLER              PIC X VALUE '.'.                              
       01  OPEN-MSG.                                                            
           05 FILLER              PIC X(07) VALUE ' OPEN ='.                    
           05 OPEN-SOKT           PIC 9(4).                                     
           05 FILLER              PIC X VALUE ':'.                              
           05 OPEN-HT-1           PIC 9(3).                                     
           05 FILLER              PIC X VALUE '.'.                              
           05 OPEN-HT-2           PIC 9(3).                                     
           05 FILLER              PIC X VALUE '.'.                              
           05 OPEN-HT-3           PIC 9(3).                                     
           05 FILLER              PIC X VALUE '.'.                              
           05 OPEN-HT-4           PIC 9(3).                                     
           05 FILLER              PIC X(05) VALUE ',NUM='.                      
           05 OPEN-NUMB           PIC 9(6).                                     
           05 FILLER              PIC X(5) VALUE ',ACT='.                       
           05 OPEN-HT-ACT         PIC 9(4).                                     
           05 FILLER              PIC X VALUE '.'.                              
       77  HT-1                   PIC S9(8) BINARY.                             
       77  HT-2                   PIC S9(8) BINARY.                             
       77  HT-3                   PIC S9(8) BINARY.                             
       77  HT-4                   PIC S9(8) BINARY.                             
                                                                                
       77  DISP-TRAN-PERIOD       PIC 9(16) BINARY VALUE 0.                     
       01  DISP-TRAN-COUNT.                                                     
           05  FILLER             PIC X(7) VALUE ' CLOSE='.                     
           05  DISP-TRAN-STORE    PIC 9(4).                                     
           05  FILLER             PIC X VALUE ':'.                              
           05  DIS-RT-1           PIC 9(3).                                     
           05  FILLER             PIC X VALUE '.'.                              
           05  DIS-RT-2           PIC 9(3).                                     
           05  FILLER             PIC X VALUE '.'.                              
           05  DIS-RT-3           PIC 9(3).                                     
           05  FILLER             PIC X VALUE '.'.                              
           05  DIS-RT-4           PIC 9(3).                                     
           05  FILLER             PIC X(6) VALUE ',RCV#='.                      
           05  DISP-TRAN-NUMB     PIC 9(5).                                     
           05  FILLER             PIC X(6) VALUE ',SND#='.                      
           05  DISP-TRAN-NUMBS    PIC 9(5).                                     
       01  DISP-DEAD-MATCH.                                                     
           05  FILLER             PIC X(17) VALUE ' MATCHING NUMBER'.           
           05  DISP-DEAD-MATCH-NUMB      PIC X(8).                              
           05  FILLER             PIC X(18) VALUE ' WITH DEAD SOCKET'.          
           05  DISP-DEAD-MATCH-SOCK      PIC 9(4).                              
                                                                                
       01  FCNTL-PARMS.                                                         
           02  FCNTL-COMMAND      PIC 9(8) COMP.                                
           02  FCNTL-ARG          PIC 9(8) COMP.                                
           02  FCNTL-ERR          PIC 9(8) COMP.                                
           02  FCNTL-RET          PIC 9(8) COMP.                                
                                                                                
       01  TCPIP-API-PARMS.                                                     
           02  INTAIDNT               PIC X(8) VALUE 'IUCVAPI '.                
           02  INTAMAXS               PIC 9(4) COMP VALUE 251.                  
           02  INTASUBT.                                                        
               05 SUBTASKNO           PIC X(7) VALUE LOW-VALUES.                
               05 SUBT-CHAR           PIC X VALUE 'S'.                          
           02  MAX-SOCK-NUM           PIC 9(8) COMP VALUE 0.                    
                                                                                
           02  SELRETC                PIC S9(8) COMP.                           
           02  EZRETC                 PIC S9(8) COMP.                           
           02  EZERRNO                PIC S9(8) COMP.                           
                                                                                
           02  SOCKAFIN               PIC 9(8) COMP VALUE 2.                    
           02  SOCKTYPE               PIC 9(8) COMP VALUE 1.                    
           02  SOCKPCOL               PIC 9(8) COMP VALUE 0.                    
                                                                                
           02  SSOLEN                 PIC 9(8) COMP VALUE 4.                    
           02  SSOOPTNM               PIC 9(8) COMP VALUE 4.                    
           02  SSOOPVAL               PIC X(4) VALUE '1   '.                    
           02  SSOREUSE               PIC 9(8) COMP VALUE 4.                    
                                                                                
           02  BINDNAME.                                                        
               05  BINDAFIN           PIC 9(4) COMP.                            
               05  BINDPORT           PIC 9(4) COMP.                            
               05  BINDIPAD           PIC 9(8) COMP.                            
               05  BINDZERO           PIC 9(16) COMP.                           
                                                                                
           02  LISTBCKL               PIC 9(8) COMP VALUE 40.                   
      ***   CHANGE TO MATCH (OR LESS THAN) SOMAXCONN IN ********                
      ***   IN TCPIP.PROFILE                            ********                
                                                                                
           02  ACC0FWRD               PIC 9(8) COMP.                            
           02  ACCNEWS                PIC 9(8) COMP.                            
                                                                                
           02  ACCEPT-NAME.                                                     
               03  ACCEPT-AF-INET     PIC 9(4) COMP.                            
               03  ACCEPT-PORT        PIC 9(4) COMP.                            
               03  ACCEPT-IP-ADDR     PIC 9(8) COMP.                            
               03  FILLER             PIC X(8).                                 
                                                                                
       77  WS-RECEIVE                 PIC X(30).                                
                                                                                
       01  SELECT-PARMS.                                                        
           02  SELECT-NUMFDS          PIC 9(8) COMP VALUE 2000.                 
           02  SELECT-TIMEOUT.                                                  
               03  SELECT-SECS        PIC 9(8) COMP VALUE 2.                    
               03  SELECT-MILLSECS    PIC 9(8) COMP VALUE 0.                    
           02  SELECT-RD-MASK         PIC X(252).                               
           02  SELECT-WR-MASK         PIC X(252).                               
           02  SELECT-EX-MASK         PIC X(252).                               
           02  SELECT-RR-MASK         PIC X(252).                               
           02  SELECT-RW-MASK         PIC X(252).                               
           02  SELECT-RE-MASK         PIC X(252).                               
                                                                                
       01  INITAPI-COMPLETE.                                                    
           05  FILLER                 PIC X(32)                                 
               VALUE '!INITAPI COMPLETED - MAXSOCK# ='.                         
           05  INIT-MAXSOCK           PIC 9(8).                                 
                                                                                
       01  INITAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!INITIAL IUCV API FAIL- ERRNO ='.                         
           05  INIT-ERRNO             PIC 9(8).                                 
                                                                                
       01  SOCKAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!SOCKET IUCV API FAIL-  ERRNO ='.                         
           05  SOCK-ERRNO             PIC 9(8).                                 
                                                                                
       01  SETSAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!SET SOCK IUCV API FAIL-ERRNO ='.                         
           05  SETS-ERRNO             PIC 9(8).                                 
                                                                                
       01  BINDAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!BIND IUCV API FAIL-    ERRNO ='.                         
           05  BIND-ERRNO             PIC 9(8).                                 
                                                                                
       01  LISTAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!LISTEN IUCV API FAIL-  ERRNO ='.                         
           05  LIST-ERRNO             PIC 9(8).                                 
                                                                                
       01  OPENCNT-MSG.                                                         
           05  FILLER                 PIC X(23)                                 
               VALUE '!HIGH USED SOCKET IX = '.                                 
           05  OPEN-COUNTER           PIC 9(8).                                 
                                                                                
       01  DISP-ERR.                                                            
           05  FILLER                 PIC X(11)                                 
               VALUE ' SELRETC = '.                                             
           05  DISP-EZRETC            PIC 9(8).                                 
           05  FILLER                 PIC X(05)  VALUE SPACES.                  
           05  FILLER                 PIC X(10)                                 
               VALUE 'EZERRNO = '.                                              
           05  DISP-ERRNO             PIC 9(8).                                 
       01  DISP-EXCEP-MSG.                                                      
           05  FILLER                 PIC X(20)                                 
               VALUE ' EXCEPTION - SOCKET'.                                     
           05  DISP-EXCEP-SOCK        PIC 9(4).                                 
           05  FILLER                 PIC X(08)                                 
               VALUE ' RETC = '.                                                
           05  DISP-EXCEP-SELRETC     PIC 9(4).                                 
           05  FILLER                 PIC X(09)                                 
               VALUE ' ERRNO = '.                                               
           05  DISP-EXCEP-ERRNO       PIC 9(4).                                 
                                                                                
       01  SELEAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!SELECT IUCV API FAIL-  ERRNO ='.                         
           05  SELE-ERRNO             PIC 9(8).                                 
                                                                                
       01  ACCEAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!ACCEPT IUCV API FAIL-  ERRNO ='.                         
           05  ACCE-ERRNO             PIC 9(8).                                 
                                                                                
       01  ASSG-ERR-MSG.                                                        
           05  FILLER                 PIC X(32)                                 
               VALUE 'ASSIGNING SOCKET - IX =      '.                           
           05  ASSG-COUNT             PIC 9(8).                                 
                                                                                
       01  AJ-TRANS-MSG.                                                        
           05  FILLER                 PIC X(14)                                 
               VALUE 'STARTING TRAN='.                                          
           05  AJ-TRANS               PIC X(4) VALUE SPACES.                    
                                                                                
       01  CLOS-ERR-MSG.                                                        
           05  FILLER                 PIC X(17)                                 
               VALUE 'CLOSING SOCKET='.                                         
           05  CLOS-SOCKT             PIC 9(4).                                 
           05  FILLER                 PIC X(10)                                 
               VALUE 'ERRNO='.                                                  
           05  CLOS-SOCKT-ERR         PIC 9(6).                                 
                                                                                
       01  FCNTAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!FCONTROL IUCV API FAIL-ERRNO ='.                         
           05  FCNT-ERRNO             PIC 9(8).                                 
                                                                                
       01  SEARCH-MSG-ERR.                                                      
           05  FILLER                 PIC X(24)                                 
               VALUE ' CLOSING DEAD SOCKET =..'.                                
           05  SEARCH-MSG-COUNT       PIC 9(4).                                 
                                                                                
       01  SEARCH-MSG-ERR2.                                                     
           05  FILLER                 PIC X(24)                                 
               VALUE ' CLOSING DUP  SOCKET =..'.                                
           05  SEARCH-MSG-COUNT2      PIC 9(4).                                 
                                                                                
       01  CLOS-SOCK-COUNT.                                                     
           05  CLOSSOC-CNT-M          PIC X(31)                                 
               VALUE 'NUMBER OF SOCKETS CLOSE'.                                 
           05  FILLER                 PIC X(9)                                  
               VALUE IS ' COUNT = '.                                            
           05  CLOS-COUNT             PIC 9(8).                                 
                                                                                
       01  OPEN-SOCK-MSG.                                                       
           05  FILLER                 PIC X(24)                                 
               VALUE ' OPEN NEW SOCKET     =..'.                                
           05  OPEN-SOCK-COUNT        PIC 9(4).                                 
                                                                                
       01  INVALID-LEN-ER-MSG.                                                  
           05  FILLER                 PIC X(32)                                 
               VALUE '!INVALID LENGTH ON BUFFER ='.                             
           05  INVALID-LEN-ER         PIC 9(4).                                 
           05  FILLER                 PIC X(3) VALUE ' : '.                     
           05  INVALID-LEN-IX         PIC 9(4).                                 
                                                                                
       01  READ-SOCK1-MSG.                                                      
           05  FILLER                 PIC X(25)                                 
               VALUE 'READ SOCKET-SELECT SOCK='.                                
           05  READ-SOCK1-COUNT       PIC 9(5).                                 
                                                                                
       01  PART-CNT-MSG.                                                        
           05  FILLER                 PIC X(25)                                 
               VALUE ' REST OF DATA - COUNT='.                                  
           05  PART-CNT-1             PIC 9(5).                                 
           05  FILLER                 PIC X(12)                                 
               VALUE '   RECEIVED='.                                            
           05  PART-CNT-2             PIC 9(5).                                 
                                                                                
       01  DISP-BIT-MASK-MSG.                                                   
           05  FILLER                 PIC X(01)                                 
               VALUE '!'.                                                       
           05  DISP-BIT-MASK          PIC X(49).                                
                                                                                
       01  CHAR-MASK1.                                                          
           02 CHAR-STRING1            PIC X(2000).                              
                                                                                
       01  CHAR-MASK.                                                           
           02 CHAR-STRING             PIC X(2000).                              
                                                                                
       01  CHAR-ARRAY REDEFINES CHAR-MASK.                                      
           02  CHAR-ENTRY-TABLE OCCURS 2000 TIMES.                              
             03  CHAR-ENTRY           PIC X.                                    
                                                                                
                                                                                
       01  BIT-MASK.                                                            
           02  BIT-ARRAY              PIC X(252).                               
                                                                                
       01  BIT-FUNCTION-CODES.                                                  
           02  CTOB                   PIC X(4) VALUE 'CTOB'.                    
           02  BTOC                   PIC X(4) VALUE 'BTOC'.                    
                                                                                
       01  BIT-MASK-LENGTH            PIC 9(8) COMP VALUE 2000.                 
                                                                                
       01  TCPCICS-MSG-AREA.                                                    
          02 TCPCICS-MSG-1.                                                     
             05 FILLER                PIC X(1) VALUE SPACES.                    
             05 MSGDATE               PIC 9(8).                                 
             05 FILLER                PIC X(1) VALUE SPACES.                    
             05 MSGTIME               PIC 9(8).                                 
             05 FILLER                PIC X(3) VALUE ' > '.                     
             05 MODULE                PIC X(4).                                 
             05 FILLER                PIC X(1) VALUE SPACES.                    
             05 MSG-PORT              PIC X(4).                                 
             05 FILLER                PIC X(1) VALUE SPACES.                    
                                                                                
          02 TCPCICS-MSG-2.                                                     
             05 MSG-AREA             PIC X(50).                                 
          02 MSG-OUT REDEFINES TCPCICS-MSG-2.                                   
             05  CALL-NO      PIC X(10).                                        
             05  FIELDXX      PIC X(7).                                         
             05  ERR-CODE     PIC X(8).                                         
             05  SHOW-FIELDS REDEFINES ERR-CODE.                                
                 10 FILLER    PIC X(2).                                         
                 10 SHOW-PORTX  PIC 9(6).                                       
             05  FILLER       PIC X(1).                                         
             05  FIELDYY      PIC X(7).                                         
             05  RET-CODE     PIC X(10).                                        
             05  FILLER       PIC X(7).                                         
       01  TCPCICS-INITIAL-MSG.                                                 
          02 TCPCICS-IMSG-1.                                                    
             05 IHEADER               PIC X(6).                                 
             05 IMSGDATE              PIC 9(8).                                 
             05 FILLER                PIC X(1).                                 
             05 IMSGTIME              PIC 9(8).                                 
             05 FILLER                PIC X(1).                                 
             05 IMODULE               PIC X(7).                                 
             05 FILLER                PIC X(1).                                 
             05 ISOCKETD              PIC X(8).                                 
          02 ITCPCICS-MSG-2.                                                    
             05 IMSG-AREA             PIC X(45).                                
                                                                                
       01  DEAD-S.                                                              
           05 FILLER                  PIC X(13) VALUE ' DEAD SOCKETS'.          
           05 DEAD-S-2                PIC 9(18).                                
           05 FILLER                  PIC X(1) VALUE ','.                       
           05 DEAD-S-4                PIC 9(18).                                
                                                                                
       01  READ-PARMS.                                                          
           05 READ-ZERO               PIC X(8).                                 
           05 READ-ZERO2              PIC X(16).                                
                                                                                
       01  COMMAND.                                                             
           05 ACCEPT-CMD              PIC X(16) VALUE 'ACCEPT'.                 
           05 BIND-CMD                PIC X(16) VALUE 'BIND'.                   
           05 CLOSE-CMD               PIC X(16) VALUE 'CLOSE'.                  
           05 CONNECT-CMD             PIC X(16) VALUE 'CONNECT'.                
           05 FCNTL-CMD               PIC X(16) VALUE 'FCNTL'.                  
           05 GETCLIENT-ID-CMD        PIC X(16) VALUE 'GETCLIENTID'.            
           05 GETPEERNAME-CMD         PIC X(16) VALUE 'GETPEERNAME'.            
           05 GETHOSTBYADDR-CMD       PIC X(16) VALUE 'GETHOSTBYADDR'.          
           05 GETHOSTBYNAME-CMD       PIC X(16) VALUE 'GETHOSTBYNAME'.          
           05 GETHOSTNAME-CMD         PIC X(16) VALUE 'GETHOSTID'.              
           05 GETHOSTID-CMD           PIC X(16) VALUE 'GETHOSTNAME'.            
           05 GETPEERNAME-CMD         PIC X(16) VALUE 'GETPEERNAME'.            
           05 GETSOCKNAME-CMD         PIC X(16) VALUE 'GETSOCKNAME'.            
           05 GETSOCKOPT-CMD          PIC X(16) VALUE 'GETSOCKOPT'.             
           05 GIVESOCKET-CMD          PIC X(16) VALUE 'GIVESOCKET'.             
           05 INITAPI-CMD             PIC X(16) VALUE 'INITAPI'.                
           05 IOCTL-CMD               PIC X(16) VALUE 'IOCTL'.                  
           05 LISTEN-CMD              PIC X(16) VALUE 'LISTEN'.                 
           05 READ-CMD                PIC X(16) VALUE 'READ'.                   
           05 RECV-CMD                PIC X(16) VALUE 'RECV'.                   
           05 RECVFROM-CMD            PIC X(16) VALUE 'RECVFROM'.               
           05 SELECT-CMD              PIC X(16) VALUE 'SELECT'.                 
           05 SEND-CMD                PIC X(16) VALUE 'SEND'.                   
           05 SEND-TO-CMD             PIC X(16) VALUE 'SENDTO'.                 
           05 SETSOCK-CMD             PIC X(16) VALUE 'SETSOCKOPT'.             
           05 SHUTDOWN-CMD            PIC X(16) VALUE 'SHUTDOWN'.               
           05 SOCKET-CMD              PIC X(16) VALUE 'SOCKET'.                 
           05 TAKESOCKET-CMD          PIC X(16) VALUE 'TAKESOCKET'.             
           05 TERMAPI-CMD             PIC X(16) VALUE 'TERMAPI'.                
           05 WRITE-CMD               PIC X(16) VALUE 'WRITE'.                  
      *                                                                         
       01  MATCHING-LOG-AREA.                                                   
           05  FILLER                 PIC X(12) VALUE ' SOCKET # ='.            
           05  MATCHING-LOG-A-STORE     PIC 9(4).                               
           05  FILLER                 PIC X(13) VALUE ' MATCHING #='.           
           05  MATCHING-LOG-A-NUMB      PIC 9(8).                               
       01  MATCHING-LOG.                                                        
           05  MATCHING-LOG-NUMB      PIC 9(8)  .                               
                                                                                
      **********ZZZ*****  INPUT & OUTPUT BUFFER AREAS ********                  
                                                                                
       01  TCP-BUF-OUT.                                                         
           05 TCP-BUF-LEN             PIC 9(4).                                 
           05 TCP-BUF-MATCHING        PIC 9(8).                                 
           05 TCP-BUF.                                                          
              10 FILLER               PIC X(4108).                              
                                                                                
       01  TCP-BUF-OUT-R  REDEFINES TCP-BUF-OUT.                                
           05 FILLER                  PIC X(6).                                 
           05 TCP-BUF-REC.                                                      
             10 TCP-BUF-KD              PIC XX.                                 
             10 TCP-BUF-COUNT           PIC 9(4).                               
             10 TCP-BUF-R               PIC X(4108).                            
                                                                                
       77  SPARE-SPACE-FOR-OVERLAY    PIC X(50).                                
                                                                                
       01  CICS-BUF-OUT.                                                        
           05 CICS-BUF-LEN            PIC 9(4).                                 
           05 CICS-BUF-MATCHING       PIC 9(8).                                 
           05 CICS-BUF-LISTENER-Q     PIC X(1).                                 
           05 CICS-BUF.                                                         
              10 FILLER               PIC X(4107).                              
                                                                                
       01  TEMP-DATA.                                                           
           05 TEMP-DATA-KD            PIC X(2).                                 
           05 TEMP-DATA-COUNT         PIC 9(4).                                 
           05 TEMP-DATA-TRANID        PIC X(4).                                 
                                                                                
       01  TEMP-DATA-X.                                                         
           05 TEMP-DATA-KD-X          PIC X(2).                                 
           05 TEMP-DATA-COUNT-X       PIC X(4).                                 
           05 TEMP-DATA-TRANID-X      PIC X(4).                                 
                                                                                
       01  BIN-READ.                                                            
           05 BINNUM                  PIC 9(6).                                 
           05 BINTASK                 PIC X(4).                                 
                                                                                
       01  TSQ-INDEX.                                                           
           02 TSQ-COUNT-1             PIC 9(8).                                 
           02 TSQ-COUNT-2             PIC 9(8).                                 
           02 FILLER                  PIC X(4120).                              
                                                                                
       77  INIT                       PIC X VALUE LOW-VALUES.                   
                                                                                
       LINKAGE SECTION.                                                         
                                                                                
      ****************************************************************          
      *  THIS IS THE SOCKET TABLE FOR ALL OF THE TELXON SOCKETS      *          
      *  TO INCREASE THE NUMBER OF SOCKETS,  THE TCPSOCKETN-TABLE-   *          
      *  ELEMENT MUST BE UPDATED FOR THE OCCURS STATEMENT.           *          
      *                                                              *          
      ****************************************************************          
                                                                                
       01  TCPSOCKETN-TABLE.                                                    
           05 TCPSOCKETN-TABLE-ELEMENT OCCURS 2000 TIMES.                       
             10 TBL-SOCKADDR-IN.                                                
                15 TBL-SIN-FAMILY   PIC 9(4) BINARY.                            
                15 TBL-SIN-PORT     PIC 9(4) BINARY.                            
                15 TBL-SIN-ADDR     PIC 9(8) BINARY.                            
                15 TBL-SIN-ZERO     PIC X(8).                                   
             10 TBL-ST-AVAIL        PIC X.                                      
             10 TBL-TSTAMP          PIC 9(16) BINARY.                           
             10 TBL-ST-MATCHING     PIC 9(8).                                   
             10 TBL-ST-OPENS        PIC 9(8) BINARY.                            
             10 TBL-ST-RECV         PIC 9(8) BINARY.                            
             10 TBL-ST-SEND         PIC 9(8) BINARY.                            
             10 TBL-ST-CLOSE        PIC 9(8) BINARY.                            
             10 TBL-DATA-CNT        PIC 9(8) BINARY.                            
             10 TBL-DATA.                                                       
                15 TBL-DATA-KD      PIC XX.                                     
                15 TBL-DATA-COUNT   PIC 9(4).                                   
                15 TBL-DATA-TRANID  PIC X(4).                                   
                15 TBL-DATA-REQ     PIC X(4110).                                
                                                                                
       EJECT                                                                    
                                                                                
      ****************************************************************          
      *                                                              *          
      * THE FOLLOWING LOGIC IS EXECUTED AT TASK STARTUP TO SET       *          
      * HANDLES FOR EXCEPTIONAL CONDITIONS AND INITIALIZE INTERNAL   *          
      * TABLES/WORK AREAS.                                           *          
      *                                                              *          
      * WE WILL ALSO CHECK TO INSURE THAT THE TASK-RELATED USER EXIT *          
      * IS ACTIVE WITHIN THE CICS REGION, IF NOT THIS TASK WILL END. *          
      *                                                              *          
      ****************************************************************          
                                                                                
       PROCEDURE DIVISION.                                                      
           PERFORM INITIALIZATION THRU INITIALIZATION-EXIT.                     
       MAIN-ROUTINE.                                                            
           EXEC CICS EXTRACT EXIT PROGRAM('EZACIC01') GASET(GWPTR)              
                GALENGTH(CLENG) RESP(RC) END-EXEC.                              
      *                                                                         
      *         IF NOT FOUND, WAIT 30 SECONDS AND TRY AGAIN                     
      *                                                                         
           IF RC NOT = 0 THEN                                                   
              ADD 1 TO I                                                        
              IF I > 10 THEN                                                    
                 MOVE '!COULD NOT FIND TRUE IN 5 MIN.' TO MSG-AREA              
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 GO TO PGM-EXIT                                                 
              END-IF                                                            
              MOVE '!EZACIC01 NOT FOUND, WAITING 30 SEC' TO MSG-AREA            
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              EXEC CICS DELAY INTERVAL(30) END-EXEC                             
              GO TO MAIN-ROUTINE                                                
           END-IF.                                                              
      *        INDICATE SELECT IS USING SOCKET 1.                               
                                                                                
           PERFORM INIT-API THRU INIT-API-EXIT.                                 
           PERFORM SOCKET-RTN THRU SOCKET-RTN-EXIT.                             
           PERFORM SET-SOCK-OPT THRU SET-SOCK-OPT-EXIT.                         
           PERFORM BIND-RTN THRU BIND-RTN-EXIT.                                 
           PERFORM LISTEN-RTN THRU LISTEN-RTN-EXIT.                             
      *         INITIALIZE CHARACTER MASK FOR SELECT                            
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > SOCKETS                      
              MOVE '0' TO CHAR-ENTRY(I)                                         
           END-PERFORM.                                                         
           MOVE '1' TO CHAR-ENTRY(1).                                           
           PERFORM CHAR-TO-BIT THRU CHAR-TO-BIT-EXIT.                           
           MOVE BIT-MASK TO SELECT-RD-MASK                                      
      *    MOVE BIT-MASK TO SELECT-WR-MASK                                      
      *    MOVE BIT-MASK TO SELECT-EX-MASK                                      
           MOVE 'PERFORM PROCESS-MODULE' TO MSG-AREA.                           
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           PERFORM PROCESS-MODULE THRU PROCESS-MODULE-EXIT                      
              UNTIL EZRETC < 0.                                                 
           MOVE '!TERMINATION TRANSACTION' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
           EXIT.                                                                
                                                                                
      ****************************************************************          
      * THIS ROUTE DOES ALL OF THE INITIALIZATION ONCE FOR THIS      *          
      * LONG RUNNING TASK.                                           *          
      ****************************************************************          
                                                                                
       INITIALIZATION.                                                          
           EXEC CICS HANDLE CONDITION INVEXITREQ(TCP-TRUE-REQ)                  
                                      INVREQ  (INVREQ-ERR-SEC)                  
                                      IOERR   (IOERR-SEC)                       
                                      ENDDATA (ENDDATA-SEC)                     
                                      LENGERR (LENGERR-SEC)                     
                                      NOSPACE (NOSPACE-ERR-SEC)                 
                                      NOSTG   (NOSPACE-ERR-SEC)                 
                                      QIDERR  (QIDERR-SEC)                      
                                      ITEMERR (ITEMERR-SEC)                     
                                      QZERO   (QZERO-SEC)                       
                END-EXEC.                                                       
                                                                                
      *                                                                         
      *  RECEIVE THE PORT NUMBER FROM PARMS PASSED TO PROGRAM                   
      *                                                                         
           MOVE '!START OF IPAH' TO MSG-AREA.                                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
           MOVE SPACES TO WS-RECEIVE.                                           
           MOVE +4 TO L.                                                        
           EXEC CICS RETRIEVE INTO(WS-RECEIVE) LENGTH(L)                        
                     RESP(RC) NOHANDLE END-EXEC.                                
           IF RC NOT = 0 THEN                                                   
              MOVE '!INVALID PARMS RECEIVED, STOPPING PROGRAM' TO               
                   MSG-AREA                                                     
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           ELSE                                                                 
              MOVE '!PARMS=' TO MSG-AREA                                        
              MOVE WS-RECEIVE TO MSG-AREA(8:30)                                 
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE WS-RECEIVE(1:4) TO PORTADDR                                  
              MOVE WS-RECEIVE(1:4) TO PV-HOLD-PORT                              
              IF PORTADDR NOT = 0 THEN                                          
                 MOVE '!PORT#=' TO MSG-AREA                                     
                 MOVE PORTADDR TO MSG-AREA(8:4)                                 
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
              ELSE                                                              
                 MOVE '!INVALID PORT NUMBER, EXITING PGM' TO                    
                     MSG-AREA                                                   
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 GO TO PGM-EXIT                                                 
              END-IF                                                            
           END-IF.                                                              
                                                                                
      *                                                                         
      *  SET THE CICS TEMP STORAGE QUEUES BASED ON PORT NUMBER                  
      *                                                                         
                                                                                
           EXEC CICS                                                            
               ASSIGN APPLID (PV-SYSTEM-ID)                                     
           END-EXEC.                                                            
                                                                                
           IF PV-HOLD-PORT = 2992 AND PV-CICS-REGION = 'CICSP8' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3992 AND PV-CICS-REGION = 'CICSP8' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2992 AND PV-CICS-REGION = 'CICSP9' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3992 AND PV-CICS-REGION = 'CICSP9' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2992 AND PV-CICS-REGION = 'CICSP3' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3992 AND PV-CICS-REGION = 'CICSP3' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2980 AND PV-CICS-REGION = 'CICSP3' THEN            
              MOVE '3' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3980 AND PV-CICS-REGION = 'CICSP3' THEN            
              MOVE '4' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2992 AND PV-CICS-REGION = 'CICSP6' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3992 AND PV-CICS-REGION = 'CICSP6' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2993 AND PV-CICS-REGION = 'CICST1' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3993 AND PV-CICS-REGION = 'CICST1' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 4993 AND PV-CICS-REGION = 'CICST1' THEN            
              MOVE '3' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2995 AND PV-CICS-REGION = 'CICSP4' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3995 AND PV-CICS-REGION = 'CICSP4' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 2997 AND PV-CICS-REGION = 'CICSQA' THEN            
              MOVE '1' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF PV-HOLD-PORT = 3997 AND PV-CICS-REGION = 'CICSQA' THEN            
              MOVE '2' TO TCPIP-CICS-QUEUE                                      
           END-IF.                                                              
                                                                                
           IF TCPIP-CICS-QUEUE = SPACE                                          
              MOVE '!INVALID PORT AND CICS, STOPPING PROGRAM' TO                
                   MSG-AREA                                                     
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
                                                                                
           MOVE TCPIP-CICS-QUEUE TO TCPIPPRQ-ONE.                               
           MOVE TCPIP-CICS-QUEUE TO TCPIPSWQ-ONE.                               
                                                                                
      *    EXEC CICS IGNORE CONDITION TERMERR EOC SIGNAL END-EXEC.              
                                                                                
      *                                                               *         
      *  BEFORE SERVER STARTS,  TRUE MUST BE ACTIVE.  ISSUE 'EXTRACT  *         
      *  EXIT' COMMAND TO CHECK IF TRUE IS ACTIVE OR NOT              *         
      *                                                               *         
                                                                                
           MOVE 256 TO CLENG.                                                   
      *    EXEC CICS ASKTIME ABSTIME(STARTT) NOHANDLE END-EXEC.                 
                                                                                
           MOVE '!GETMAIN STARTED.' TO MSG-AREA.                                
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           EXEC CICS GETMAIN SET(ADDRESS OF TCPSOCKETN-TABLE)                   
              FLENGTH(LENGTH OF TCPSOCKETN-TABLE) INITIMG(INIT)                 
              RESP(RC) END-EXEC.                                                
                                                                                
           MOVE '!GETMAIN DONE ' TO MSG-AREA.                                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           IF RC NOT = 0 THEN                                                   
              MOVE '!' TO MSG-AREA                                              
              MOVE 'RC=' TO FIELDXX                                             
              MOVE RC TO ERR-CODE                                               
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
                                                                                
      *                                                                         
      *  SEE IF THE TEMP STORAGE QUEUES EXIST, AND IF NOT, CREATE               
      *  THEM.                                                                  
      *                                                                         
           MOVE 'CHECKING TCPIPPRQ TSQ' TO MSG-AREA.                            
           MOVE TCPIPPRQ TO MSG-AREA(10:8).                                     
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           EXEC CICS PUSH HANDLE  END-EXEC.                                     
                                                                                
           EXEC CICS HANDLE CONDITION QIDERR(DELETE-SWITCH-QUEUE)               
           END-EXEC.                                                            
                                                                                
           EXEC CICS DELETEQ TS QUEUE(TCPIPPRQ) END-EXEC.                       
                                                                                
       DELETE-SWITCH-QUEUE.                                                     
           MOVE 'CHECKING TCPIPSWQ TSQ' TO MSG-AREA.                            
           MOVE TCPIPSWQ TO MSG-AREA(10:8).                                     
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           EXEC CICS PUSH HANDLE  END-EXEC.                                     
                                                                                
           EXEC CICS HANDLE CONDITION                                           
                QIDERR(CREATE-TS-QUEUE)                                         
           END-EXEC.                                                            
                                                                                
           EXEC CICS DELETEQ TS                                                 
                QUEUE(TCPIPSWQ)                                                 
           END-EXEC.                                                            
                                                                                
       CREATE-TS-QUEUE.                                                         
           MOVE 'CREATING TCPIPPRQ TSQ' TO MSG-AREA.                            
           MOVE TCPIPPRQ TO MSG-AREA(10:8).                                     
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE LENGTH OF TCP-BUF-OUT TO L.                                     
           MOVE SPACES TO TSQ-INDEX.                                            
           MOVE 3 TO TSQ-COUNT-1.                                               
           MOVE 100 TO TSQ-COUNT-2.                                             
           EXEC CICS WRITEQ TS QUEUE(TCPIPPRQ) FROM(TSQ-INDEX)                  
                LENGTH(L) MAIN NOSUSPEND END-EXEC.                              
           EXEC CICS WRITEQ TS QUEUE(TCPIPPRQ) FROM(TSQ-INDEX)                  
                LENGTH(L) MAIN NOSUSPEND END-EXEC.                              
           MOVE SPACES TO TSQ-INDEX.                                            
           PERFORM 100 TIMES                                                    
              EXEC CICS WRITEQ TS QUEUE(TCPIPPRQ) FROM(TSQ-INDEX)               
                   LENGTH(L) MAIN NOSUSPEND END-EXEC                            
           END-PERFORM.                                                         
                                                                                
      *         CREATING THE TS SWITCH OPTION QUEUE                             
                                                                                
           MOVE 'CREATING TCPIPSWQ TSQ' TO MSG-AREA.                            
           MOVE TCPIPSWQ TO MSG-AREA(10:8).                                     
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           MOVE SPACES TO TCP-BUF.                                              
           PERFORM 100 TIMES                                                    
              EXEC CICS WRITEQ TS QUEUE(TCPIPSWQ) FROM(TCP-BUF)                 
                   LENGTH(80) MAIN NOSUSPEND END-EXEC                           
           END-PERFORM.                                                         
                                                                                
      *  HERE WE ARE INITIALIZING THE SOCKETS TABLE, A BYTE STRING              
      *  USED TO IDENTIFY WHICH SOCKETS ARE ACTIVE FROM THE INACTIVE,           
      *  AND A TABLE CONTAINING 50 ELEMENTS USED TO STORE RECYCLED              
      *  (CLOSED AND AVAILABLE FOR RE-USE) SOCKET DESCRIPTORS.                  
                                                                                
           EXEC CICS POP HANDLE END-EXEC.                                       
                                                                                
           MOVE 'INITIALIZING SOCKET TABLES' TO MSG-AREA.                       
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           PERFORM INIT-TABLE THRU INIT-TABLE-EXIT                              
               VARYING IX FROM 1 BY 1 UNTIL IX > SOCKETS.                       
                                                                                
       INITIALIZATION-EXIT.                                                     
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      *     INIT-TABLES FOR PROGRAM                                   *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       INIT-TABLE.                                                              
           MOVE 'Y' TO TBL-ST-AVAIL(IX).                                        
           MOVE 0 TO TBL-ST-MATCHING(IX).                                       
           MOVE 0 TO TBL-ST-OPENS(IX).                                          
           MOVE 0 TO TBL-ST-CLOSE(IX).                                          
           MOVE 0 TO TBL-TSTAMP(IX).                                            
           MOVE 0 TO TBL-ST-RECV(IX).                                           
           MOVE 0 TO TBL-ST-SEND(IX).                                           
           MOVE SPACES TO TBL-DATA(IX).                                         
           MOVE 1 TO TBL-DATA-CNT(IX).                                          
       INIT-TABLE-EXIT.                                                         
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      *     INIT-API                                                  *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       INIT-API.                                                                
           MOVE EIBTASKN TO SUBTASKNO                                           
           MOVE 'CICS TASK NUMBER' TO MSG-AREA.                                 
           MOVE INTASUBT TO MSG-AREA(18:7).                                     
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 'PERFORMING INIT-API ' TO MSG-AREA.                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE SOCKETS TO INTAMAXS.                                            
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
           CALL 'EZASOKET' USING INITAPI-CMD INTAMAXS INTAIDNT                  
               INTASUBT MAX-SOCK-NUM EZERRNO EZRETC.                            
                                                                                
           MOVE MAX-SOCK-NUM TO MAX-SOCKETS-LESS1.                              
           MOVE MAX-SOCK-NUM TO INIT-MAXSOCK.                                   
           MOVE INITAPI-COMPLETE TO MSG-AREA.                                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO INIT-ERRNO                                        
              MOVE INITAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       INIT-API-EXIT.                                                           
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      *     SOCKET ROUTINE                                            *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       SOCKET-RTN.                                                              
           MOVE 'PERFORMING SOCKET   ' TO MSG-AREA.                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
           CALL 'EZASOKET' USING SOCKET-CMD                                     
               SOCKAFIN SOCKTYPE SOCKPCOL                                       
               EZERRNO EZRETC.                                                  
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO SOCK-ERRNO                                        
              MOVE SOCKAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       SOCKET-RTN-EXIT.                                                         
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      *     SET SOCKET OPTIONS                                        *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       SET-SOCK-OPT.                                                            
           MOVE 'PERFORMING SET-SOCK ' TO MSG-AREA.                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE SSOREUSE TO SSOOPTNM.                                           
           MOVE 0 TO S.                                                         
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
           CALL 'EZASOKET' USING SETSOCK-CMD                                    
               S SSOOPTNM SSOOPVAL SSOLEN                                       
               EZERRNO EZRETC.                                                  
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO SETS-ERRNO                                        
              MOVE SETSAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       SET-SOCK-OPT-EXIT.                                                       
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      *     BIND ROUTINE                                              *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       BIND-RTN.                                                                
           MOVE 'PERFORMING BIND     ' TO MSG-AREA.                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 2 TO BINDAFIN.                                                  
           MOVE PORTADDR TO BINDPORT.                                           
           MOVE 0 TO BINDIPAD.                                                  
           MOVE 0 TO BINDZERO.                                                  
           MOVE 0 TO S.                                                         
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
           CALL 'EZASOKET' USING BIND-CMD                                       
               S BINDNAME EZERRNO EZRETC.                                       
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO BIND-ERRNO                                        
              MOVE BINDAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       BIND-RTN-EXIT.                                                           
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      *     LISTEN ROUTINE                                            *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       LISTEN-RTN.                                                              
           MOVE 'PERFORMING LISTEN   ' TO MSG-AREA.                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 0 TO S.                                                         
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
           CALL 'EZASOKET' USING LISTEN-CMD                                     
               S LISTBCKL EZERRNO EZRETC.                                       
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO LIST-ERRNO                                        
              MOVE LISTAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       LISTEN-RTN-EXIT.                                                         
           EXIT.                                                                
                                                                                
       EJECT                                                                    
                                                                                
      ************************************************************              
      *                                                          *              
      * THIS IS THE MAIN LOOP OF THE PROGRAM.  A SELECT CALL IS  *              
      * ISSUED TO TCPIP TO WAIT FOR WORK.                        *              
      *                                                          *              
      ************************************************************              
       PROCESS-MODULE.                                                          
      *       ZERO OUT ALL OUTPUT BIT MASKES FOR SELECT                         
           PERFORM VARYING IX FROM 1 BY 1 UNTIL IX > SOCKETS                    
              MOVE '0' TO CHAR-ENTRY(IX)                                        
           END-PERFORM.                                                         
           PERFORM CHAR-TO-BIT THRU CHAR-TO-BIT-EXIT.                           
           MOVE BIT-MASK TO SELECT-RR-MASK.                                     
           MOVE BIT-MASK TO SELECT-RW-MASK.                                     
           MOVE BIT-MASK TO SELECT-RE-MASK.                                     
                                                                                
      *    CLEAR AND NEVER CHECK EXCEPTION OR WRITE BITS                        
                                                                                
           MOVE BIT-MASK TO SELECT-WR-MASK.                                     
           MOVE BIT-MASK TO SELECT-EX-MASK.                                     
                                                                                
           MOVE 'PERFORMING SELECT COMMAND' TO MSG-AREA.                        
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      *   ISSUE THE SELECT COMMAND ----------------------------                 
      *                                                                         
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO SELRETC.                                                   
           CALL 'EZASOKET' USING SELECT-CMD                                     
               SELECT-NUMFDS SELECT-TIMEOUT                                     
               SELECT-RD-MASK SELECT-WR-MASK SELECT-EX-MASK                     
               SELECT-RR-MASK SELECT-RW-MASK SELECT-RE-MASK                     
               EZERRNO SELRETC.                                                 
                                                                                
           MOVE SELRETC TO EZRETC.                                              
           IF SELRETC < 0 THEN                                                  
              MOVE EZERRNO TO SELE-ERRNO                                        
              MOVE SELEAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PROCESS-MODULE-EXIT                                         
           END-IF.                                                              
                                                                                
           EXEC CICS ASKTIME ABSTIME(DSTAMP) NOHANDLE END-EXEC.                 
           EXEC CICS FORMATTIME ABSTIME(DSTAMP) DAYCOUNT(DCOUNT)                
                TIME(TTIME) TIMESEP(':') NOHANDLE END-EXEC.                     
           COMPUTE TSTAMP = ( DCOUNT * 1440 ) + (HH * 60) + MM.                 
                                                                                
      * IF RC = 0, THEN TIME-OUT, PERFORM TIME-OUT-ROUTINE ***                  
                                                                                
           IF SELRETC = 0 THEN                                                  
              MOVE 'SELECT TIMEOUT ROUTINE CALLED' TO MSG-AREA                  
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PROCESS-MODULE-TIMEOUT                                      
           END-IF.                                                              
                                                                                
      * CONVERT BIT MASK TO CHAR MASK FOR EXCEPTION BIT                         
      *                                                                         
      *    MOVE SELECT-RE-MASK TO BIT-MASK.                                     
      *    PERFORM BIT-TO-CHAR THRU BIT-TO-CHAR-EXIT.                           
      *                                                                         
      *    MOVE 'BIT MASK FROM SELECT EXCEPTION' TO MSG-AREA.                   
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *    MOVE CHAR-MASK TO MSG-AREA.                                          
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      * TEST FOR EXCEPTION ON SOCKET 0, IF SO ISSUE MSG & ABORT                 
      *                                                                         
      *    IF CHAR-ENTRY(1) = '1' THEN                                          
      *       MOVE -50 TO EZRETC                                                
      *       MOVE ' EXCEPTION ON SOCKET 0,CONTINUE' TO MSG-AREA                
      *       PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
      *       MOVE CHAR-MASK TO DISP-BIT-MASK                                   
      *       MOVE DISP-BIT-MASK-MSG TO MSG-AREA                                
      *       PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
      *       MOVE SELRETC TO DISP-EZRETC                                       
      *       MOVE EZERRNO TO DISP-ERRNO                                        
      *       MOVE DISP-ERR TO MSG-AREA                                         
      *       PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
      *       MOVE 50 TO DISP-MSGS                                              
      *       GO TO PROCESS-MODULE-EXIT                                         
      *       MOVE '0' TO CHAR-ENTRY(1)                                         
      *    END-IF.                                                              
      *                                                                         
      * TEST FOR EXCEPTION ON OTHER SOCKETS, IF SO CLOSE SOCKET                 
      *                                                                         
      *    PERFORM VARYING IX FROM 2 BY 1 UNTIL IX > SOCKETS                    
      *       IF CHAR-ENTRY(IX) = '1' THEN                                      
      *          MOVE IX                     TO DISP-EXCEP-SOCK                 
      *          MOVE SELRETC                TO DISP-EXCEP-SELRETC              
      *          MOVE EZERRNO                TO DISP-EXCEP-ERRNO                
      *          MOVE DISP-EXCEP-MSG         TO MSG-AREA                        
      *          PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
      *          PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                    
      *       END-IF                                                            
      *    END-PERFORM.                                                         
                                                                                
      *                                                                         
      * CONVERT BIT MASK TO CHAR MASK FOR READ BITS                             
      *                                                                         
           MOVE SELECT-RR-MASK TO BIT-MASK.                                     
           PERFORM BIT-TO-CHAR THRU BIT-TO-CHAR-EXIT.                           
      *                                                                         
      *  DISPLAY ALL BIT THAT ARE ON IT BIT ARRAY                               
      *                                                                         
           MOVE CHAR-MASK TO CHAR-MASK1.                                        
           MOVE 'BIT MASK1 FROM SELECT READ' TO MSG-AREA.                       
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE CHAR-MASK1 TO MSG-AREA.                                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      * TEST FOR READ ON SOCKET 0, IF SO OPEN NEW SOCKET                        
      *                                                                         
           IF CHAR-MASK1(1:1) = '1' THEN                                        
              PERFORM OPEN-NEW-SOCKET THRU OPEN-NEW-SOCKET-EXIT                 
              IF EZRETC < 0 THEN                                                
                 MOVE '!ERROR ON OPEN-NEW-SOCKET   ' TO MSG-AREA                
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 MOVE 0 TO EZRETC                                               
                 GO TO PROCESS-MODULE-EXIT                                      
              END-IF                                                            
           END-IF.                                                              
                                                                                
      * TEST FOR READ ON OTHER SOCKETS, IF SO PROCESS SOCKET                    
                                                                                
           PERFORM VARYING J FROM 2 BY 1 UNTIL J > SOCKETS                      
              IF CHAR-MASK1(J:1) = '1' THEN                                     
                 COMPUTE IX = J - 1                                             
                 PERFORM RECEIVE-DATA THRU RECEIVE-DATA-EXIT                    
              END-IF                                                            
           END-PERFORM.                                                         
                                                                                
       PROCESS-MODULE-TIMEOUT.                                                  
      *                                                                         
      *       GO CHECK FOR DATA IN THE TCPIPPRQ                                 
      *                                                                         
           PERFORM READ-PRQ THRU READ-PRQ-EXIT.                                 
      *                                                                         
      *       CALL THE READ OPTIONS TSQ AND DEAD-SOCKETS ROUTINES               
      *       EVERY 1 MINUTE                                                    
      *                                                                         
           MOVE 'RUNNING PROCESS MODULE TIMEOUT' TO MSG-AREA.                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           IF TSTAMP > TSTAMP-SWQ THEN                                          
              PERFORM READ-SWQ THRU READ-SWQ-EXIT                               
              MOVE TSTAMP TO TSTAMP-SWQ                                         
              MOVE FULL-TIMEOUT-T30 TO DEAD-TIMEOUT                             
              PERFORM DEAD-SOCKET THRU DEAD-SOCKET-EXIT                         
           END-IF.                                                              
                                                                                
       PROCESS-MODULE-EXIT.                                                     
           EXIT.                                                                
                                                                                
      ***************************************************************           
      * THIS ROUTE CONVERT THE CHARACTER ARRAY TO A SELECT BIT MASK *           
      * SO THAT THIS COBOL PROGRAM CAN WRITE IT.                    *           
      ***************************************************************           
      *                                                                         
       CHAR-TO-BIT.                                                             
           CALL 'EZACIC06' USING BITMASK-TOKEN CTOB                             
                BIT-MASK CHAR-MASK BIT-MASK-LENGTH EZRETC                       
           IF EZRETC < 0 THEN                                                   
              MOVE '!EZCIC06 - BTOC-EXCP ' TO MSG-AREA                          
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       CHAR-TO-BIT-EXIT.                                                        
           EXIT.                                                                
                                                                                
      ***************************************************************           
      * THIS ROUTE CONVERT THE SELECT BIT MASK TO A CHARACTER ARRAY *           
      * SO THAT THIS COBOL PROGRAM CAN READ IT.                     *           
      ***************************************************************           
      *                                                                         
       BIT-TO-CHAR.                                                             
           CALL 'EZACIC06' USING BITMASK-TOKEN BTOC BIT-MASK                    
               CHAR-MASK BIT-MASK-LENGTH EZRETC.                                
           IF EZRETC < 0 THEN                                                   
              MOVE '!EZCIC06 - BTOC-EXCP ' TO MSG-AREA                          
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
       BIT-TO-CHAR-EXIT.                                                        
           EXIT.                                                                
                                                                                
      ***************************************************************           
      *                                                             *           
      *  OPEN NEW SOCKET FOR STORE                                  *           
      *                                                             *           
      ***************************************************************           
      *                                                                         
       OPEN-NEW-SOCKET.                                                         
                                                                                
      * NEED TO ACCEPT THE SOCKET FIRST                                         
                                                                                
           MOVE 0 TO S.                                                         
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
                                                                                
           CALL 'EZASOKET' USING ACCEPT-CMD                                     
                S ACCEPT-NAME                                                   
                EZERRNO EZRETC.                                                 
                                                                                
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO ACCE-ERRNO                                        
              MOVE ACCEAPI-ERR TO MSG-AREA                                      
              MOVE 10 TO DISP-MSGS                                              
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!ACCEPT ERROR - CLOSE SOCKETS AT 2 MIN' TO MSG-AREA         
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE FULL-TIMEOUT-T2 TO DEAD-TIMEOUT                              
              PERFORM DEAD-SOCKET THRU DEAD-SOCKET-EXIT                         
              MOVE FULL-TIMEOUT-T30 TO DEAD-TIMEOUT                             
              GO TO OPEN-NEW-SOCKET-EXIT                                        
           END-IF.                                                              
                                                                                
           IF EZRETC = 0 THEN                                                   
              MOVE EZERRNO TO ACCE-ERRNO                                        
              MOVE ACCEAPI-ERR TO MSG-AREA                                      
              MOVE 10 TO DISP-MSGS                                              
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!ACCEPT ERROR - RETURN CODE = 0' TO MSG-AREA                
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO OPEN-NEW-SOCKET-EXIT                                        
           END-IF.                                                              
                                                                                
                                                                                
      *                                                                         
      * ACCEPT-CMD  RETURNS THE SOCKET NUMBER TO BE USED                        
      * SAVE IT INTO IX (OLD WAY WAS TO PASS ACCEPT THE SOCK#)                  
      *                                                                         
           MOVE EZRETC TO IX.                                                   
                                                                                
           PERFORM VALID-IPADDR THRU VALID-IPADDR-EXIT.                         
                                                                                
           IF EZRETC < 0 THEN                                                   
              MOVE '!INVALID TCPIP ADDRESS      ' TO MSG-AREA                   
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
              GO TO OPEN-NEW-SOCKET-EXIT                                        
           END-IF.                                                              
                                                                                
           IF TBL-ST-AVAIL(IX) = 'N'                                            
              MOVE ' ACCEPT SOCKET NOT AVAILABLE ' TO MSG-AREA                  
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
                                                                                
           IF IX = USED-COUNTER                                                 
              MOVE USED-COUNTER TO OPEN-COUNTER                                 
              MOVE OPENCNT-MSG TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              ADD 100 TO USED-COUNTER                                           
           END-IF.                                                              
                                                                                
           MOVE IX TO OPEN-SOCK-COUNT.                                          
           MOVE OPEN-SOCK-MSG TO MSG-AREA.                                      
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           MOVE ACCEPT-NAME TO TBL-SOCKADDR-IN(IX).                             
                                                                                
           MOVE IX TO SOCKID.                                                   
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
           MOVE SSOREUSE TO SSOOPTNM.                                           
           MOVE 'ISSUE SET SOCKET COMMAND' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           CALL 'EZASOKET' USING SETSOCK-CMD SOCKID                             
                 SSOOPTNM SSOOPVAL SSOLEN EZERRNO EZRETC.                       
                                                                                
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO SETS-ERRNO                                        
              MOVE SETSAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 10 TO DISP-MSGS                                              
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
              GO TO OPEN-NEW-SOCKET-EXIT                                        
           END-IF.                                                              
                                                                                
      *    PUT SOCKET INTO NON-BLOCKING MODE                                    
                                                                                
           MOVE 4 TO FCNTL-COMMAND.                                             
           MOVE 4 TO FCNTL-ARG.                                                 
           MOVE 0 TO EZERRNO.                                                   
           MOVE 0 TO EZRETC.                                                    
                                                                                
           CALL 'EZASOKET' USING FCNTL-CMD SOCKID                               
                FCNTL-COMMAND FCNTL-ARG EZERRNO EZRETC.                         
                                                                                
           IF EZRETC < 0 THEN                                                   
              MOVE EZERRNO TO FCNT-ERRNO                                        
              MOVE FCNTAPI-ERR TO MSG-AREA                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 10 TO DISP-MSGS                                              
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
              GO TO OPEN-NEW-SOCKET-EXIT                                        
           END-IF.                                                              
                                                                                
      *  SET THE READ AND EXCEPTION BIT MAPS FOR SELECT                         
                                                                                
           MOVE SELECT-RD-MASK TO BIT-MASK.                                     
           PERFORM BIT-TO-CHAR THRU BIT-TO-CHAR-EXIT.                           
                                                                                
      *                                                                         
      *    UN-COMMENT FOLLOWING LINES IF NEEDED FOR DEBUGING                    
      *                                                                         
      *    MOVE CHAR-MASK TO MSG-AREA.                                          
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           COMPUTE I = IX + 1.                                                  
           MOVE '1' TO CHAR-ENTRY(I).                                           
                                                                                
      *                                                                         
      *    UN-COMMENT FOLLOWING LINES IF NEEDED FOR DEBUGING                    
      *                                                                         
      *    MOVE CHAR-MASK TO MSG-AREA.                                          
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           PERFORM CHAR-TO-BIT THRU CHAR-TO-BIT-EXIT.                           
                                                                                
           MOVE BIT-MASK TO SELECT-RD-MASK.                                     
      *    MOVE BIT-MASK TO SELECT-EX-MASK.                                     
                                                                                
           MOVE IX TO ASSG-COUNT.                                               
           MOVE ASSG-ERR-MSG TO MSG-AREA.                                       
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE '0' TO CHAR-MASK1(I:1).                                         
           MOVE TSTAMP TO TBL-TSTAMP(IX).                                       
           MOVE MATCHING-NUMB TO TBL-ST-MATCHING(IX).                           
           MOVE 'N' TO TBL-ST-AVAIL(IX).                                        
      ************************************************************              
      *  RESET TBL-DATA-CNT WHEN OPENING A SOCKET D.DREW 3/17/00 *              
      ************************************************************              
           MOVE 1 TO TBL-DATA-CNT(IX).                                          
      *                                                                         
           PERFORM DISPLAY-MATCHING-DATA.                                       
           ADD 1 TO MATCHING-NUMB.                                              
           IF MATCHING-NUMB > 99999990 THEN                                     
              MOVE 1 TO MATCHING-NUMB                                           
           END-IF.                                                              
           PERFORM CHECK-OPEN-SOCKETS THRU CHECK-OPEN-SOCKETS-EXIT.             
       OPEN-NEW-SOCKET-EXIT.                                                    
           EXIT.                                                                
                                                                                
                                                                                
      ************************************************************              
      *                                                          *              
      *  THIS ROUTE IS CALLED WHENEVER A SOCKET IS OPENED.  IT   *              
      *  CHECKS TO SEE IF AN EXISTING SOCKET IS OPEN WITH THE    *              
      *  SAME TCP/IP ADDRESS.                                    *              
      *                                                          *              
      ************************************************************              
                                                                                
       CHECK-OPEN-SOCKETS.                                                      
           MOVE 'PERFORMING CHECK-OPEN-SOCKETS ROUTINE' TO MSG-AREA.            
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE IX TO IXS.                                                      
                                                                                
           PERFORM VARYING J FROM 1 BY 1 UNTIL J > MAX-SOCKETS-LESS1            
              IF TBL-ST-AVAIL(J) = 'N' THEN                                     
                 IF J NOT = IXS THEN                                            
                    IF TBL-SIN-ADDR(J) = TBL-SIN-ADDR(IXS) THEN                 
                       MOVE J TO SEARCH-MSG-COUNT2                              
                       MOVE SEARCH-MSG-ERR2 TO MSG-AREA                         
                       PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                  
                       MOVE J TO IX                                             
                       PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT              
                    END-IF                                                      
                 END-IF                                                         
              END-IF                                                            
           END-PERFORM.                                                         
           MOVE IXS TO IX.                                                      
       CHECK-OPEN-SOCKETS-EXIT.                                                 
           EXIT.                                                                
                                                                                
                                                                                
      ************************************************************              
      *                                                          *              
      *  THIS ROUTE WILL CLOSE ALL SOCKETS THAT HAVE BEEN AROUND *              
      *  FOR MORE THEN 1 MINUTE OR SO.                           *              
      *                                                          *              
      ************************************************************              
                                                                                
       DEAD-SOCKET.                                                             
           MOVE 'PERFORMING DEAD-SOCKET ROUTINE' TO MSG-AREA.                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
                                                                                
      *                                                                         
      *********** CHECK FOR SOCKETS WITH USAGE > 30 MINS  **********            
      *                                                                         
      *  NOTE: TSTAMP IS IN UNITS OF 1 MINUTE.                                  
      *                                                                         
           COMPUTE SSTAMP = TSTAMP - DEAD-TIMEOUT.                              
                                                                                
           PERFORM VARYING J FROM 1 BY 1 UNTIL J > MAX-SOCKETS-LESS1            
              IF TBL-ST-AVAIL(J) = 'N' THEN                                     
                 IF TBL-TSTAMP(J) <= SSTAMP AND TBL-TSTAMP(J) NOT = 0           
                    MOVE J TO SEARCH-MSG-COUNT                                  
                    MOVE SEARCH-MSG-ERR TO MSG-AREA                             
                    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                     
                    MOVE TSTAMP TO DEAD-S-2                                     
                    MOVE TBL-TSTAMP(J) TO DEAD-S-4                              
                    MOVE DEAD-S TO MSG-AREA                                     
                    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                     
                    MOVE J TO IX                                                
                    PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                 
                 END-IF                                                         
              END-IF                                                            
           END-PERFORM.                                                         
                                                                                
       DEAD-SOCKET-EXIT.                                                        
           EXIT.                                                                
      *                                                                         
      ***************************************************************           
      *                                                             *           
      *  THIS ROUTE READS THE TCPIPSWQ TEMP STORAGE QUEUE TO CHECK  *           
      *  ON TRACE, NOTRACE OR CANCEL OPTIONS                        *           
      *                                                             *           
      ***************************************************************           
      *                                                                         
       READ-SWQ.                                                                
                                                                                
           MOVE 'PERFORMING READ-SWQ' TO MSG-AREA.                              
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           PERFORM VARYING RECORD-TO-READ FROM 1 BY 1                           
                           UNTIL RECORD-TO-READ >= 99                           
              MOVE 80 TO LL                                                     
              EXEC CICS READQ TS QUEUE(TCPIPSWQ) INTO(TCP-BUF)                  
                   ITEM(RECORD-TO-READ) LENGTH(LL) END-EXEC                     
              IF TCP-BUF(1:5) = 'TRACE' THEN                                    
                 MOVE TCP-BUF(12:4) TO DISP-MSGS                                
                 IF DISP-MSGS = 0 THEN                                          
                    MOVE 9999 TO DISP-MSGS                                      
                    MOVE SPACES TO TCP-BUF                                      
                    EXEC CICS WRITEQ TS QUEUE(TCPIPSWQ)                         
                         FROM(TCP-BUF)                                          
                         ITEM(RECORD-TO-READ) LENGTH(LL)                        
                         MAIN REWRITE END-EXEC                                  
                 END-IF                                                         
              END-IF                                                            
              IF TCP-BUF(1:7) = 'NOTRACE' THEN                                  
                 MOVE 0 TO DISP-MSGS                                            
                 MOVE SPACES TO TCP-BUF                                         
                 EXEC CICS WRITEQ TS QUEUE(TCPIPSWQ)                            
                         FROM(TCP-BUF)                                          
                         ITEM(RECORD-TO-READ) LENGTH(LL)                        
                         MAIN REWRITE END-EXEC                                  
              END-IF                                                            
              IF TCP-BUF(1:6) = 'CANCEL' THEN                                   
                 MOVE '!TRANSACTION CANCEL BY IPSW' TO MSG-AREA                 
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 GO TO PGM-EXIT                                                 
              END-IF                                                            
           END-PERFORM.                                                         
                                                                                
       READ-SWQ-EXIT.                                                           
           EXIT.                                                                
                                                                                
      *                                                                         
      ***************************************************************           
      *                                                             *           
      *  THIS ROUTINE DISPLAY THE STORE TRANSACTION COUNT ABOUT     *           
      *  EVERY HOUR                                                 *           
      *                                                             *           
      ***************************************************************           
      *                                                                         
       DISPLAY-TRAN-COUNT.                                                      
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > MAX-SOCKETS-LESS1            
              IF TBL-ST-AVAIL(I) = 'N' THEN                                     
                 MOVE TBL-SIN-ADDR(I) TO ACCEPT-IP-ADDR                         
                 PERFORM CONVERT-IP-ADDR THRU CONVERT-IP-ADDR-EXIT              
                 MOVE I TO DISP-TRAN-STORE                                      
                 MOVE HT-1 TO DIS-RT-1                                          
                 MOVE HT-2 TO DIS-RT-2                                          
                 MOVE HT-3 TO DIS-RT-3                                          
                 MOVE HT-4 TO DIS-RT-4                                          
                 MOVE TBL-ST-RECV(I) TO DISP-TRAN-NUMB                          
                 MOVE TBL-ST-SEND(I) TO DISP-TRAN-NUMBS                         
                 MOVE DISP-TRAN-COUNT TO MSG-AREA                               
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
              END-IF                                                            
           END-PERFORM.                                                         
       DISPLAY-TRAN-COUNT-EXIT.                                                 
           EXIT.                                                                
                                                                                
       EJECT                                                                    
                                                                                
      ***************************************************************           
      *                                                             *           
      *  VADIDATE THE IP ADDR REQUESTING A SOCKET                   *           
      *                                                             *           
      ***************************************************************           
                                                                                
       VALID-IPADDR.                                                            
                                                                                
      ********  GET THE TCPIP OF THE MERCHANT  **************                   
           PERFORM CONVERT-IP-ADDR THRU CONVERT-IP-ADDR-EXIT.                   
           MOVE IX TO OPEN-SOKT.                                                
           MOVE MATCHING-NUMB TO OPEN-NUMB.                                     
           MOVE HT-1 TO OPEN-HT-1.                                              
           MOVE HT-2 TO OPEN-HT-2.                                              
           MOVE HT-3 TO OPEN-HT-3.                                              
           MOVE HT-4 TO OPEN-HT-4.                                              
           MOVE 0 TO I.                                                         
           PERFORM VARYING J FROM 1 BY 1 UNTIL J > MAX-SOCKETS-LESS1            
              IF TBL-ST-AVAIL(J) NOT = 'Y' THEN                                 
                 ADD 1 TO I                                                     
              END-IF                                                            
           END-PERFORM.                                                         
           MOVE I TO OPEN-HT-ACT.                                               
           MOVE OPEN-MSG TO MSG-AREA.                                           
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 0 TO EZRETC.                                                    
                                                                                
       VALID-IPADDR-EXIT.                                                       
           EXIT.                                                                
                                                                                
      *****************************************************************         
      *                                                               *         
      * THIS ROUTE WILL CONVERT THE TCP/IP ADDRESS TO A DISPLAYABLE   *         
      * FORMAT.                                                       *         
      *     INPUT = ACCEPT-IP-ADDR  - ADDRESS TO CONVERT              *         
      *     OUTPUT = HD-1, HD-2, HD-3 AND HD-4.                       *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       CONVERT-IP-ADDR.                                                         
                                                                                
           COMPUTE HT-1 = (ACCEPT-IP-ADDR / 16777216).                          
           COMPUTE HT-4 = ACCEPT-IP-ADDR - (HT-1 * 16777216).                   
           COMPUTE HT-2 = HT-4 / 65536.                                         
           COMPUTE HT-4 = HT-4 - (HT-2 * 65536).                                
           COMPUTE HT-3 = HT-4 / 256.                                           
           COMPUTE HT-4 = HT-4 - (HT-3 * 256).                                  
      ****************************************************************          
      *                                                              *          
      * THE FOLLOWING "IF HT-1 < 0"  ADDED TO ALLOW FOR IP ADDRESSES *          
      * STARTING WITH 0. THRU 127.  (KOHLS NEW ADDRESSES ARE 10.42..)*          
      *                                 D.DREW 3/10/99               *          
      *                                                              *          
      ****************************************************************          
           IF HT-1 < 0 THEN                                                     
              COMPUTE HT-1 = 255 + HT-1                                         
              COMPUTE HT-2 = 255 + HT-2                                         
              COMPUTE HT-3 = 255 + HT-3                                         
              COMPUTE HT-4 = 256 + HT-4                                         
           END-IF.                                                              
                                                                                
       CONVERT-IP-ADDR-EXIT.                                                    
           EXIT.                                                                
                                                                                
       EJECT                                                                    
                                                                                
      ***************************************************************           
      *                                                             *           
      * N.B.  THERE IS ONE AREA WHICH ARE USED FOR RECEIVED DATA    *           
      *                                                             *           
      *       1)  THE I/O AREA (TCP-BUF) WHICH IS USED TO RECEIVE   *           
      *           DATA INTO AND SEND DATA FROM                      *           
      *                                                             *           
      ***************************************************************           
      *  WHAT WE ARE DOING BELOW IS ADJUSTING THE LENGTH FOR THE    *           
      *  RECEIVE COMMAND IF WE ARE CARRYING A PARTIAL MESSAGE FROM  *           
      *  THE LAST TIME WE SERVICED THIS SOCKET AND MOVING THAT      *           
      *  PARTIAL MESSAGE TO THE LINKAGE SECTION FOR PROCESSING      *           
      ***************************************************************           
       RECEIVE-DATA.                                                            
                                                                                
           MOVE IX TO READ-SOCK1-COUNT.                                         
           MOVE READ-SOCK1-MSG TO MSG-AREA.                                     
           MOVE TBL-SOCKADDR-IN(IX) TO ACCEPT-NAME.                             
           PERFORM CONVERT-IP-ADDR THRU CONVERT-IP-ADDR-EXIT.                   
           MOVE HT-1 TO OCTET.                                                  
           MOVE OCTET TO MSG-AREA(34:3).                                        
           MOVE '.'  TO MSG-AREA(37:1).                                         
           MOVE HT-2 TO OCTET.                                                  
           MOVE OCTET TO MSG-AREA(38:3).                                        
           MOVE '.'  TO MSG-AREA(41:1).                                         
           MOVE HT-3 TO OCTET.                                                  
           MOVE OCTET TO MSG-AREA(42:3).                                        
           MOVE '.'  TO MSG-AREA(45:1).                                         
           MOVE HT-4 TO OCTET.                                                  
           MOVE OCTET TO MSG-AREA(46:3).                                        
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
       RECEIVE-LOOP.                                                            
                                                                                
           MOVE TBL-DATA-CNT(IX) TO L.                                          
           MOVE SPACES TO TCP-BUF.                                              
                                                                                
      ****************************************************************          
      *                                                              *          
      * HERE WE ARE ISSUEING THE RECEIVE COMMAND.  ALL SOCKETS SHOULD*          
      * BE IN NON-BLOCKING MODE.                                     *          
      *                                                              *          
      * IF RETCODE IS RETURNED WITH A POSITIVE VALUE THEN THAT VALUE *          
      * REPRESENTS THE NUMBER OF BYTES THAT WE HAVE RECEIVED AND WE  *          
      * WILL CONTINUE TO PROCESS THE DATA.                           *          
      *                                                              *          
      * ANY PARTIAL MESSAGE EXISTING IN THE TABLE HOLD AREA FOR THIS *          
      * SOCKET HAS ALREADY BEEN MOVED.                               *          
      *                                                              *          
      ****************************************************************          
                                                                                
           COMPUTE L1 = 4120 - L + 1.                                           
           MOVE 'L1= ' TO FIELDXX.                                              
           MOVE L1 TO ERR-CODE.                                                 
           MOVE ' L= ' TO FIELDYY.                                              
           MOVE L TO RET-CODE.                                                  
           MOVE 'LENG' TO CALL-NO.                                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           MOVE IX TO SOCKID.                                                   
           MOVE TBL-SOCKADDR-IN(IX) TO ACCEPT-NAME.                             
           MOVE 0 TO RECV-FLAG.                                                 
           MOVE SPACES TO TCP-BUF.                                              
           MOVE 0 TO ERRNO.                                                     
           MOVE 0 TO RETCODE.                                                   
                                                                                
           CALL 'EZASOKET' USING RECVFROM-CMD SOCKID                            
                 RECV-FLAG L1 TCP-BUF ACCEPT-NAME                               
                 ERRNO RETCODE.                                                 
                                                                                
                                                                                
           MOVE TCP-BUF TO MSG-AREA.                                            
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      * IF RETCODE > 0 THEN WE HAVE RECEIVED SOME DATA SO GO PROCESS IT         
      *                                                                         
           IF RETCODE > 0 GO TO PROCESS-RECEIVED-DATA.                          
                                                                                
      * IF RETCODE = 0 EITHER TIMEOUT OR EOF SO CLOSE THE SOCKET                
                                                                                
           IF RETCODE = 0                                                       
              MOVE '**TCPRECV RETCODE = 0' TO MSG-AREA                          
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 'ER-CODE' TO FIELDXX                                         
              MOVE ERRNO TO ERR-CODE                                            
              MOVE 'RET-CD=' TO FIELDYY                                         
              MOVE RETCODE TO RET-CODE                                          
              MOVE 'RECVRDS' TO CALL-NO                                         
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
      * RETCODE IS NEGATIVE, IF ERRNO = 1027 A NON-ERROR HAS BEEN DETECTED      
      * CONTINUE... ENETWORK COMMUNICATIONS SERVER NOW HANDLES 1027 ERRORS      
      * DIFFERENTLY. AT 3.5 AND HIGHER AN ERROR MAY BE REPORTED THAT SHOULD     
      * NOT AFFECT OPERATION.   SKIP THE ERROR                                  
      * CHANGE PER D.DREW - CLOSE IF ERROR 1027  6/12/00                        
                                                                                
           IF ERRNO = 1027 THEN                                                 
              MOVE '!ERRNO = 1027: CLOSE IX=' TO MSG-AREA                       
              MOVE IX TO DSPLY8                                                 
              MOVE DSPLY8   TO MSG-AREA(25:8)                                   
              PERFORM CONVERT-IP-ADDR THRU CONVERT-IP-ADDR-EXIT                 
              MOVE HT-1 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(34:3)                                      
              MOVE '.'  TO MSG-AREA(37:1)                                       
              MOVE HT-2 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(38:3)                                      
              MOVE '.'  TO MSG-AREA(41:1)                                       
              MOVE HT-3 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(42:3)                                      
              MOVE '.'  TO MSG-AREA(45:1)                                       
              MOVE HT-4 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(46:3)                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 5  TO DISP-MSGS                                              
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
      * RETCODE IS NEGATIVE, IF ERRNO = 35 THERE IS NO DATA ON SOCKET           
      * ...OTHERWISE AN ERROR HAS OCCURRED SO CLOSE SOCKET, ISSUE MSG           
                                                                                
           IF ERRNO = 35 THEN                                                   
              MOVE '!ERRNO = 35 ON RECVFROM CMD' TO MSG-AREA                    
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
      * RETCODE IS NEGATIVE, IF ERRNO = 9 WE HAVE AN INVALID SOCKETID           
      * ...CANT CLOSE IT, ISSUE MESSAGE, DONT TERMINATE                         
                                                                                
                                                                                
           IF ERRNO = 9 THEN                                                    
              MOVE '!ERRNO = 9 ON RECVFROM CMD' TO MSG-AREA                     
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
           MOVE 'ER-CODE' TO FIELDXX.                                           
           MOVE ERRNO TO ERR-CODE.                                              
           MOVE 'RET-CD=' TO FIELDYY.                                           
           MOVE RETCODE TO RET-CODE.                                            
           MOVE 'RECV' TO CALL-NO.                                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT.                         
           GO TO RECEIVE-DATA-EXIT.                                             
                                                                                
      ****************************************************************          
      *                                                              *          
      * TCP/IP DOES NOT GUARANTEE THAT WE WILL RECEIVE THE NUMBER    *          
      * OF BYTES REQUESTED IN THE RECEIVE COMMAND.  ABOUT ALL WE CAN *          
      * BE SURE OF IS THAT WE WONT GET MORE THAN WE REQUESTED IN     *          
      * THE RECEIVE COMMAND.  BECAUSE INCOMING CLIENT MESSAGES CAN   *          
      * BE OF VARIOUS LENGTHS, IT IS ENTIRELY POSSIBLE TO EVEN       *          
      * GET MULTIPLE MESSAGES WITHIN ONE RECEIVE (AT LEAST THIS IS   *          
      * WHAT I HAVE BEEN TOLD).  ADDITIONALLY, THESE INCOMING        *          
      * MESSAGES WILL HAVE LOGICAL HEADERS WHICH MUST BE EDITTED.    *          
      * THE CODE BELOW ATTEMPTS TO DEAL WITH THE SITUATION.          *          
      *                                                              *          
      ****************************************************************          
                                                                                
                                                                                
       PROCESS-RECEIVED-DATA.                                                   
           IF L > 1 THEN                                                        
              COMPUTE L2 = 4120 - L                                             
              MOVE L2 TO PART-CNT-1                                             
              MOVE RETCODE TO PART-CNT-2                                        
              MOVE PART-CNT-MSG TO MSG-AREA                                     
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
      ****************************************************************          
      *                                                              *          
      * THE FOLLOWING LOGIC ADDED TO CHECK FOR LENGTH OF RECEIVED    *          
      * DATA BEFORE ADDING TO TABLE - THIS SHOULD ELIMINATE          *          
      * OVERLAYS                        D.DREW 3/10/99               *          
      *                                                              *          
      ****************************************************************          
           COMPUTE L2 = L + RETCODE.                                            
           IF L2 > 4120 THEN                                                    
              MOVE '!*TOTAL MORE THAN 4120  :' TO MSG-AREA                      
              MOVE TCP-BUF(1:23) TO MSG-AREA(26:23)                             
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!*READIN= ' TO MSG-AREA                                     
              MOVE RETCODE TO DSPLY8                                            
              MOVE DSPLY8 TO MSG-AREA(11:8)                                     
              MOVE ', STARTING CNT = ' TO MSG-AREA(19:17)                       
              MOVE L TO DSPLY8                                                  
              MOVE DSPLY8   TO MSG-AREA(37:8)                                   
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
           MOVE TCP-BUF(1:RETCODE) TO TBL-DATA(IX)(L:RETCODE).                  
           COMPUTE L = L + RETCODE.                                             
           MOVE L TO TBL-DATA-CNT(IX).                                          
                                                                                
      ****************************************************************          
      *                                                              *          
      * THE LOGICAL HEADER IS 8 BYTES LONG SO IF WE HAVE LESS THAN   *          
      * 8 BYTES WE WILL JUST MOVE IT BACK TO THE SOCKETS PARTIAL MSG *          
      * HOLD AREA AND ADJUST THE LENGTH INDICATOR ASSOCIATED WITH    *          
      * THE PARTIAL MESSAGE.  WE WILL LOOP BACK TO TRY TO RECEIVE    *          
      * THE REST OF THIS MESSAGE BEFORE CONTINUING TO PROCESS THE    *          
      * REST OF THE TABLED SOCKETS.   IF THE DATA RECEIVED IS MORE   *          
      * THAN 8 BYTES WE WILL EDIT THE LOGICAL HEADERS AND PROCEED    *          
      * WITH OUR PROCESSING.                                         *          
      *                                                              *          
      ****************************************************************          
                                                                                
           IF L < 10                                                            
              MOVE '!*BUFFER IS LESS THAN 10 BYTES' TO MSG-AREA                 
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO RECEIVE-DATA-EXIT                                           
           ELSE                                                                 
              MOVE TBL-DATA(IX)(1:10) TO TEMP-DATA                              
              MOVE 10 TO L1                                                     
              MOVE 'TO CONVERTR=' TO MSG-AREA                                   
              MOVE TEMP-DATA TO MSG-AREA(13:10)                                 
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 'INDEX      =' TO MSG-AREA                                   
              MOVE IX TO MSG-AREA(13:8)                                         
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              CALL 'EZACIC05' USING TOEBCDIC-TOKEN TEMP-DATA L1                 
              MOVE 'READ BUFFER=' TO MSG-AREA                                   
              MOVE TEMP-DATA TO MSG-AREA(13:10)                                 
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              IF TEMP-DATA-KD NOT = 'KD'                                        
                 MOVE '!INVALID HEADER - NO KD' TO MSG-AREA                     
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 MOVE '!READ BUFFER=' TO MSG-AREA                               
                 MOVE TEMP-DATA TO MSG-AREA(14:10)                              
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                    
                 GO TO RECEIVE-DATA-EXIT                                        
              END-IF                                                            
              MOVE TEMP-DATA TO TEMP-DATA-X                                     
              IF TEMP-DATA-COUNT-X NOT NUMERIC                                  
                 MOVE '!NON-NUMERIC LENGTH RECEIVED' TO MSG-AREA                
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 MOVE '!READ BUFFER=' TO MSG-AREA                               
                 MOVE TEMP-DATA TO MSG-AREA(14:10)                              
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                    
                 GO TO RECEIVE-DATA-EXIT                                        
              END-IF                                                            
              MOVE TEMP-DATA-COUNT TO RECV-LENGTH                               
              COMPUTE RECV-LENGTH = RECV-LENGTH + 1                             
              IF RECV-LENGTH <= 0 OR RECV-LENGTH > 4120 THEN                    
                 MOVE RECV-LENGTH TO INVALID-LEN-ER                             
                 MOVE IX TO INVALID-LEN-IX                                      
                 MOVE INVALID-LEN-ER-MSG TO MSG-AREA                            
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
                 MOVE 4120 TO RECV-LENGTH                                       
                 PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                    
                 GO TO RECEIVE-DATA-EXIT                                        
              END-IF                                                            
      *                                                                         
           END-IF.                                                              
                                                                                
      ****************************************************************          
      *                                                              *          
      * IF THE LENGTH OF THE DATA WE HAVE ALREADY RECEIVED FOR THIS  *          
      * MESSAGE = THE LENGTH IN THE LOGICAL HEADER OF THE MESSAGE    *          
      * THEN WE HAVE A FULL MESSAGE AND WE WILL......                *          
      *                                                              *          
      * ...CLEAR THE TABLE BUFFER AREA, LENGTH FIELD AND FLAG...     *          
      *                                                              *          
      ****************************************************************          
                                                                                
           IF L = RECV-LENGTH                                                   
              MOVE '**EXACT BUFFER RECEIVED ' TO MSG-AREA                       
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 1 TO TBL-DATA-CNT(IX)                                        
              GO TO FULL-MESSAGE-CREATED                                        
           END-IF.                                                              
                                                                                
      ***************************************************************           
      *                                                              *          
      * IF THE LENGTH OF THE DATA WE HAVE ALREADY RECEIVED FOR THIS  *          
      * MESSAGE IS LESS THAN THE LENGTH WITHIN THE LOGICAL HEADER    *          
      * OF THE MESSAGE THEN WE WILL MOVE THE DATA TO THE SOCKETS     *          
      * HOLDING BUFFER, ADJUST THE LENGTH, SET THE PARTIAL MSG FLAG, *          
      * AND LOOP BACK TO ATTEMPT TO COMPLETE THIS MESSAGE BEFORE     *          
      * SERVICEING THE REST OF THE SOCKETS.                          *          
      *                                                              *          
      ****************************************************************          
                                                                                
           IF L < RECV-LENGTH                                                   
              MOVE ' *NEED MORE DATA, READ FOR H=' TO MSG-AREA                  
              MOVE TBL-DATA(IX)(1:18) TO MSG-AREA(30:18)                        
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE ' ' TO MSG-AREA                                              
              MOVE TBL-DATA(IX)(19:64) TO MSG-AREA(2:45)                        
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE ' *READ L: ' TO MSG-AREA                                     
              MOVE L TO MAX                                                     
              MOVE MAX TO MSG-AREA(11:4)                                        
              MOVE ',HEADER COUNT=' TO MSG-AREA(15:14)                          
              MOVE RECV-LENGTH TO MAX                                           
              MOVE MAX TO MSG-AREA(29:4)                                        
              MOVE ',RETCODE=' TO MSG-AREA(33:9)                                
              MOVE RETCODE TO MAX                                               
              MOVE MAX TO MSG-AREA(42:4)                                        
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
      ***************************************************************           
      *                                                              *          
      * IF THE LENGTH OF THE DATA WE HAVE ALREADY RECEIVED FOR THIS  *          
      * MESSAGE IS GREATER THAN THE LENGTH WITHIN THE LOGICAL HEADER *          
      * OF THE MESSAGE THEN WE WRITE AN ERROR AND CLOSE THE SOCKET   *          
      *                                                              *          
      ****************************************************************          
                                                                                
           IF L > RECV-LENGTH                                                   
              MOVE '!*RECEIVE EXTRA FROM IX=' TO MSG-AREA                       
              MOVE IX TO DSPLY8                                                 
              MOVE DSPLY8   TO MSG-AREA(25:8)                                   
              PERFORM CONVERT-IP-ADDR THRU CONVERT-IP-ADDR-EXIT                 
              MOVE HT-1 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(34:3)                                      
              MOVE '.'  TO MSG-AREA(37:1)                                       
              MOVE HT-2 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(38:3)                                      
              MOVE '.'  TO MSG-AREA(41:1)                                       
              MOVE HT-3 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(42:3)                                      
              MOVE '.'  TO MSG-AREA(45:1)                                       
              MOVE HT-4 TO OCTET                                                
              MOVE OCTET TO MSG-AREA(46:3)                                      
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!*RECEIVE MORE THAN EXPECTED ' TO MSG-AREA                  
              MOVE TBL-DATA(IX)(1:18) TO MSG-AREA(30:18)                        
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!' TO MSG-AREA                                              
              MOVE TBL-DATA(IX)(19:64) TO MSG-AREA(2:45)                        
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!' TO MSG-AREA                                              
              MOVE TBL-DATA(IX)(65:110) TO MSG-AREA(2:45)                       
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE '!*READ L= ' TO MSG-AREA                                     
              MOVE L TO MAX                                                     
              MOVE MAX TO MSG-AREA(11:4)                                        
              MOVE ',HEADER COUNT=' TO MSG-AREA(15:14)                          
              MOVE RECV-LENGTH TO MAX                                           
              MOVE MAX TO MSG-AREA(29:4)                                        
              MOVE ',RETCODE=' TO MSG-AREA(33:9)                                
              MOVE RETCODE TO MAX                                               
              MOVE MAX TO MSG-AREA(42:4)                                        
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE 3  TO DISP-MSGS                                              
              PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                       
      * **************************************************************          
      * ONLY COUNT SMALL MESSAGE PROBLEMS (DAD 7-18-00)              *          
      * **************************************************************          
              IF RECV-LENGTH < 100                                              
                 ADD 1 TO MAX-EXTRA                                             
              END-IF                                                            
              IF MAX-EXTRA > 5                                                  
                 MOVE 'Y' TO STARTUP-AGAIN                                      
                 GO TO PGM-EXIT                                                 
              END-IF                                                            
              GO TO RECEIVE-DATA-EXIT                                           
           END-IF.                                                              
                                                                                
       FULL-MESSAGE-CREATED.                                                    
                                                                                
           MOVE '**TCPRECV FULL-MSG-CREATED' TO MSG-AREA.                       
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE L TO L1.                                                        
           MOVE 'L =' TO FIELDXX.                                               
           MOVE L TO ERR-CODE.                                                  
           MOVE 'RCV-LEN=' TO FIELDYY.                                          
           MOVE RECV-LENGTH TO RET-CODE.                                        
           MOVE 'TRAN' TO CALL-NO.                                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE TBL-DATA(IX) TO TCP-BUF.                                        
           CALL 'EZACIC05' USING TOEBCDIC-TOKEN TBL-DATA(IX) L1.                
           MOVE TBL-DATA-REQ(IX) TO TCP-BUF.                                    
           ADD 1 TO RECV-COUNT.                                                 
           MOVE TBL-ST-MATCHING(IX) TO TCP-BUF-MATCHING.                        
           COMPUTE L = L + 1.                                                   
           MOVE L TO TCP-BUF-LEN.                                               
                                                                                
           PERFORM PUTQ THRU PUTQ-EXIT.                                         
                                                                                
       RECEIVE-DATA-EXIT.                                                       
           EXIT.                                                                
                                                                                
      ***************************************************************           
      *                                                             *           
      *  THIS MODULE WILL PASS THE REQUEST TO THE APPROPIATE        *           
      *  TRANSACTION BASED ON THE BYTES 11 - 13 IN THE NCPDP DATA   *           
      *                                                             *           
      ***************************************************************           
                                                                                
       PUTQ.                                                                    
                                                                                
           MOVE TSTAMP TO TBL-TSTAMP(IX).                                       
           MOVE 1 TO TBL-DATA-CNT(IX).                                          
           ADD 1 TO TBL-ST-RECV(IX).                                            
           MOVE L TO START-LENGTH.                                              
                                                                                
           MOVE TCP-BUF-LEN TO CICS-BUF-LEN.                                    
           MOVE TCP-BUF-MATCHING TO CICS-BUF-MATCHING.                          
           MOVE TCP-BUF TO CICS-BUF.                                            
           MOVE TCPIP-CICS-QUEUE TO CICS-BUF-LISTENER-Q.                        
           ADD 1 TO START-LENGTH.                                               
                                                                                
           MOVE 'T=????      ' TO MSG-AREA.                                     
           MOVE START-LENGTH TO MSG-AREA(8:4).                                  
           MOVE CICS-BUF-OUT TO MSG-AREA(13:37).                                
           MOVE TBL-DATA-TRANID(IX) TO MSG-AREA(3:4).                           
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           EXEC CICS START TRANSID (TBL-DATA-TRANID(IX))                        
                           FROM (CICS-BUF-OUT)                                  
                           LENGTH (START-LENGTH)                                
                           RESP(RC)                                             
           END-EXEC.                                                            
                                                                                
           IF RC NOT = 0 THEN                                                   
              MOVE '!INVALID TRANSID STARTED' TO MSG-AREA                       
              MOVE TBL-DATA-TRANID(IX) TO MSG-AREA(27:4)                        
              MOVE 10 TO DISP-MSGS                                              
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
           IF DISP-MSGS > 0 THEN                                                
              PERFORM VARYING I FROM 1 BY 50 UNTIL I > L                        
                 MOVE TCP-BUF-OUT(I:50) TO MSG-AREA                             
                 PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                        
              END-PERFORM                                                       
           END-IF.                                                              
           MOVE 'TRANSACTION STARTED' TO MSG-AREA.                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
       PUTQ-EXIT.                                                               
           EXIT.                                                                
       EJECT                                                                    
      *                                                                         
      *****************************************************************         
      *                                                               *         
      *   CLOSE 'ACCEPT DESCRIPTOR'                                   *         
      *   ASSUMPTIONS = IX- INDEX TO SOCKET ADDRES (ALSO SOCKID)      *         
      *                                                               *         
      *****************************************************************         
      *                                                                         
       CLOSE-SOCKET.                                                            
      *                                                                         
      *  CLEAR THE READ AND EXCEPTION BIT MAPS FOR SELECT                       
      *                                                                         
           MOVE IX TO SOCKID.                                                   
           IF SOCKID = 0 THEN                                                   
              MOVE '!SOCKID FOR RECV CLOSE = 0' TO MSG-AREA                     
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO CLOSE-SOCKET-EXIT                                           
           END-IF.                                                              
           MOVE SELECT-RD-MASK TO BIT-MASK.                                     
           PERFORM BIT-TO-CHAR THRU BIT-TO-CHAR-EXIT.                           
                                                                                
      *    MOVE CHAR-MASK TO MSG-AREA.                                          
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      *       NEED TO TURN OFF BIT FOR SELECT FOR THIS SOCKET                   
      *                                                                         
           COMPUTE I = SOCKID + 1.                                              
           MOVE '0' TO CHAR-ENTRY(I).                                           
                                                                                
      *    MOVE CHAR-MASK TO MSG-AREA.                                          
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           PERFORM CHAR-TO-BIT THRU CHAR-TO-BIT-EXIT.                           
           MOVE BIT-MASK TO SELECT-RD-MASK.                                     
      *    MOVE BIT-MASK TO SELECT-EX-MASK.                                     
                                                                                
           MOVE 0 TO ERRNO.                                                     
           MOVE 0 TO RETCODE.                                                   
                                                                                
           CALL 'EZASOKET' USING CLOSE-CMD SOCKID                               
                 ERRNO RETCODE.                                                 
                                                                                
           IF RETCODE < 0 THEN                                                  
              MOVE ' CLOSE ERROR ON RECV SOCKET' TO MSG-AREA                    
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
           MOVE SOCKID TO CLOS-SOCKT.                                           
           MOVE ERRNO TO CLOS-SOCKT-ERR.                                        
           MOVE CLOS-ERR-MSG TO MSG-AREA.                                       
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      *         GET THE TCPIP OF THE MERCHANT                                   
      *                                                                         
           MOVE TBL-SOCKADDR-IN(IX) TO ACCEPT-NAME.                             
           PERFORM CONVERT-IP-ADDR THRU CONVERT-IP-ADDR-EXIT.                   
                                                                                
           MOVE IX TO DISP-TRAN-STORE.                                          
           MOVE HT-1 TO DIS-RT-1.                                               
           MOVE HT-2 TO DIS-RT-2.                                               
           MOVE HT-3 TO DIS-RT-3.                                               
           MOVE HT-4 TO DIS-RT-4.                                               
           MOVE TBL-ST-RECV(IX) TO DISP-TRAN-NUMB.                              
           MOVE TBL-ST-SEND(IX) TO DISP-TRAN-NUMBS.                             
           MOVE DISP-TRAN-COUNT TO MSG-AREA.                                    
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           MOVE 'Y' TO TBL-ST-AVAIL(IX).                                        
                                                                                
      ***************************************************************           
      * RESET TBL-DATA     WHEN CLOSING A SOCKET                    *           
      * RESET TBL-DATA-CNT WHEN CLOSING A SOCKET - NEW SOCKET USING *           
      * THIS AREA COULD USE OLD NUMBER STORED IN THIS FIELD.        *           
      *                                       D.DREW 3/10/00        *           
      ***************************************************************           
           MOVE 1 TO TBL-DATA-CNT(IX).                                          
           MOVE SPACES TO TBL-DATA(IX).                                         
                                                                                
       CLOSE-SOCKET-EXIT.                                                       
           EXIT.                                                                
                                                                                
      ***************************************************************           
      * THIS ROUTINE DISPLAY THE MATCHING DATA TO THE CICS LOG.     *           
      * THE CALLING ROUTINE MUST MOVE MATCHING DATA TO              *           
      * MATCHING-LOG-CHAR.                                          *           
      ***************************************************************           
       DISPLAY-MATCHING-DATA.                                                   
           MOVE IX TO MATCHING-LOG-A-STORE.                                     
           MOVE MATCHING-NUMB TO MATCHING-LOG-A-NUMB.                           
           MOVE MATCHING-LOG-AREA TO MSG-AREA.                                  
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           EXIT.                                                                
                                                                                
      *                                                                         
      ***************************************************************           
      *                                                             *           
      *  THIS ROUTINE WILL OUTPUT A MESSAGE TO THE CICS LOG AND     *           
      *  TERMINATE THIS PROGRAM.                                    *           
      *                                                             *           
      ***************************************************************           
      *                                                                         
       PGM-EXIT.                                                                
                                                                                
           MOVE '!END OF THIS TRANSACTION' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      *                                                                         
      *       IF ERROR, CLOSE ALL OPEN SOCKETS                                  
      *                                                                         
           PERFORM VARYING IX FROM 1 BY 1 UNTIL IX > MAX-SOCKETS-LESS1          
              IF TBL-ST-AVAIL(IX) = 'N' THEN                                    
                 PERFORM CLOSE-SOCKET THRU CLOSE-SOCKET-EXIT                    
              END-IF                                                            
           END-PERFORM.                                                         
      *                                                                         
      *      CLOSE UP THE PORT                                                  
      *                                                                         
           MOVE 0 TO SOCKID.                                                    
           MOVE 0 TO ERRNO.                                                     
           MOVE 0 TO RETCODE.                                                   
           CALL 'EZASOKET' USING CLOSE-CMD SOCKID                               
                 ERRNO RETCODE.                                                 
                                                                                
           IF STARTUP-AGAIN = 'Y' THEN                                          
              EXEC CICS DELAY INTERVAL(05) END-EXEC                             
              EXEC CICS START TRANSID(IPAH-TRAN)                                
                                 FROM(PV-HOLD-PORT)                             
              END-EXEC                                                          
           END-IF.                                                              
                                                                                
           EXEC CICS RETURN  END-EXEC.                                          
           GOBACK.                                                              
       EJECT                                                                    
      *                                                                         
      ****************************************************************          
      *                                                              *          
      *  THIS ROUTE WRITES OUT A LOG MESSAGE ON THE CICS OUTPUT      *          
      *  TRANSIENT DATA QUEUE.                                       *          
      *                                                              *          
      ****************************************************************          
      *                                                                         
       WRITE-CICS.                                                              
                                                                                
           IF MSG-AREA(1:1) = '!' OR DISP-MSGS > 0                              
              MOVE LENGTH OF TCPCICS-MSG-AREA TO CLENG                          
              EXEC CICS ASKTIME ABSTIME(DSTAMP) NOHANDLE END-EXEC               
              EXEC CICS FORMATTIME ABSTIME(DSTAMP) MMDDYY(MSGDATE)              
                   TIME(MSGTIME) DATESEP TIMESEP(':') NOHANDLE END-EXEC         
              MOVE IPAH-TRAN TO MODULE                                          
              MOVE PV-HOLD-PORT TO MSG-PORT                                     
              EXEC CICS WRITEQ TD QUEUE('CSSL') FROM (TCPCICS-MSG-AREA)         
                   RESP(RESPONSE) LENGTH(CLENG) END-EXEC                        
           END-IF.                                                              
                                                                                
           IF DISP-MSGS > 0 AND DISP-MSGS < 9999                                
              SUBTRACT 1 FROM DISP-MSGS.                                        
           MOVE SPACES TO MSG-AREA.                                             
                                                                                
       WRITE-CICS-EXIT.                                                         
           EXIT.                                                                
                                                                                
       EJECT                                                                    
      *                                                                         
      ****************************************************************          
      *                                                              *          
      *  THIS ROUTE WILL READ THE TCPIPPRQ TEMP STORAGE QUEUE FOR    *          
      *  RESPONSES BACK FROM THE APPLICATION SYSTEM AND WILL SEND    *          
      *  THEM BACK TO THE TELXON SYSTEMS IN THE STORES.              *          
      *                                                              *          
      ****************************************************************          
      *                                                                         
       READ-PRQ.                                                                
                                                                                
           MOVE 1 TO RECORD-TO-READ.                                            
      *    MOVE 'READ-PRQ STARTED' TO MSG-AREA.                                 
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE LENGTH OF TCP-BUF-OUT TO L.                                     
           EXEC CICS READQ TS QUEUE(TCPIPPRQ) INTO(TSQ-INDEX)                   
                NOHANDLE                                                        
                ITEM(RECORD-TO-READ) LENGTH(L) END-EXEC.                        
           MOVE TSQ-COUNT-1 TO TSQ-WRITE-COUNT.                                 
           MOVE TSQ-COUNT-2 TO TSQ-TOTAL-RECORDS.                               
           MOVE 'WRITE=' TO MSG-AREA.                                           
           MOVE TSQ-COUNT-1 TO MSG-AREA(7:8).                                   
           MOVE 2 TO RECORD-TO-READ.                                            
           EXEC CICS READQ TS QUEUE(TCPIPPRQ) INTO(TSQ-INDEX)                   
                NOHANDLE                                                        
                ITEM(RECORD-TO-READ) LENGTH(L) END-EXEC.                        
           MOVE TSQ-COUNT-1 TO TSQ-READ-COUNT.                                  
                                                                                
           MOVE TSQ-INDEX(1:36) TO MSG-AREA(14:36).                             
      *    PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           IF (TSQ-READ-COUNT = TSQ-WRITE-COUNT) THEN                           
              GO TO READ-PRQ-EXIT                                               
           END-IF.                                                              
                                                                                
           MOVE TSQ-READ-COUNT TO RECORD-TO-READ.                               
           EXEC CICS READQ TS QUEUE(TCPIPPRQ) INTO(TCP-BUF-OUT)                 
                NOHANDLE                                                        
                ITEM(RECORD-TO-READ) LENGTH(L) END-EXEC.                        
                                                                                
           ADD 1 TO TSQ-READ-COUNT.                                             
           IF TSQ-READ-COUNT > TSQ-TOTAL-RECORDS                                
              MOVE 3 TO TSQ-READ-COUNT                                          
           END-IF.                                                              
           MOVE TSQ-READ-COUNT TO TSQ-COUNT-1.                                  
           MOVE 2 TO RECORD-TO-READ.                                            
           EXEC CICS WRITEQ TS QUEUE(TCPIPPRQ) FROM(TSQ-INDEX)                  
                ITEM(RECORD-TO-READ) LENGTH(L)                                  
                NOHANDLE                                                        
                MAIN REWRITE END-EXEC.                                          
                                                                                
       CHECK-MESSAGE.                                                           
                                                                                
           IF TCP-BUF-LEN < 12 THEN                                             
              MOVE 'INVALID LEN ERROR' TO MSG-AREA                              
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO READ-PRQ                                                    
           END-IF.                                                              
      *                                                                         
      *       FIND SOCKET THAT RESPONSE NEEDS TO GO OUT ON                      
      *                                                                         
           PERFORM VARYING IX FROM 1 BY 1 UNTIL IX > MAX-SOCKETS-LESS1          
              IF TBL-ST-MATCHING(IX) = TCP-BUF-MATCHING THEN                    
                 GO TO HD-MATCHED                                               
              END-IF                                                            
           END-PERFORM.                                                         
      *                                                                         
      *            NO MATCH FOR RESPONSE RECORD                                 
      *                                                                         
           MOVE '!NO MATCH ON KEY' TO MSG-AREA.                                 
           MOVE TCP-BUF-MATCHING TO MSG-AREA(18:8).                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE '!' TO MSG-AREA(1:1).                                           
           MOVE TCP-BUF-OUT TO MSG-AREA(2:49).                                  
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO READ-PRQ.                                                      
                                                                                
       HD-MATCHED.                                                              
                                                                                
           MOVE TSTAMP TO TBL-TSTAMP(IX)                                        
                                                                                
           MOVE SPACES TO MSG-AREA                                              
           MOVE 'HD MATCH' TO CALL-NO                                           
           MOVE 'IX=  ' TO FIELDXX                                              
           MOVE IX  TO ERR-CODE                                                 
           MOVE 'MATCH= ' TO FIELDYY                                            
           MOVE TCP-BUF-MATCHING TO RET-CODE                                    
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                              
                                                                                
                                                                                
           IF TBL-ST-AVAIL(IX) = 'Y' THEN                                       
              MOVE IX                TO DISP-DEAD-MATCH-SOCK                    
              MOVE TCP-BUF-MATCHING  TO DISP-DEAD-MATCH-NUMB                    
              MOVE DISP-DEAD-MATCH   TO MSG-AREA                                
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              GO TO READ-PRQ                                                    
           END-IF.                                                              
      *    MOVE TCP-BUF TO TBL-DATA(IX).                                        
                                                                                
      * CONVERT OUTGOING MESSAGE TO ASCII                                       
           COMPUTE L1 = TCP-BUF-LEN - 6.                                        
           MOVE L1 TO TCP-BUF-COUNT.                                            
           MOVE 'KD' TO TCP-BUF-KD.                                             
                                                                                
           MOVE 'SEND=' TO MSG-AREA.                                            
           MOVE TCP-BUF-REC(1:44) TO MSG-AREA(6:44).                            
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 'SD90=' TO MSG-AREA.                                            
           MOVE TCP-BUF-REC(90:44) TO MSG-AREA(6:44).                           
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           CALL 'EZACIC04' USING TOASCII-TOKEN TCP-BUF-REC L1.                  
                                                                                
           MOVE 'ASCI=' TO MSG-AREA.                                            
           MOVE TCP-BUF-REC(1:44) TO MSG-AREA(6:44).                            
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
      * ISSUE SEND COMMAND TO XMIT BUFFERED TASK-START MESSAGE                  
                                                                                
           MOVE IX TO SOCKID.                                                   
           MOVE 0 TO ERRNO.                                                     
           MOVE 0 TO RETCODE.                                                   
                                                                                
           CALL 'EZASOKET' USING WRITE-CMD SOCKID L1                            
                 TCP-BUF-REC ERRNO RETCODE.                                     
                                                                                
           IF RETCODE <  0 THEN                                                 
              MOVE '!TCPSEND ERROR WRITING MSG TO CLIENT' TO MSG-AREA           
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE SPACES TO MSG-AREA                                           
              MOVE 'SEND' TO CALL-NO                                            
              MOVE 'ER-CODE' TO FIELDXX                                         
              MOVE ERRNO TO ERR-CODE                                            
              MOVE 'RET-CD=' TO FIELDYY                                         
              MOVE RETCODE TO RET-CODE                                          
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           ELSE                                                                 
              MOVE 'WRITE REQUEST SUCCESSFUL' TO MSG-AREA                       
              ADD 1 TO SEND-COUNT                                               
              ADD 1 TO TBL-ST-SEND(IX)                                          
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
           GO TO READ-PRQ.                                                      
                                                                                
       READ-PRQ-EXIT.                                                           
           EXIT.                                                                
                                                                                
       EJECT                                                                    
      *---------------------------------------------------------------*         
      *                                                               *         
      *  CONTROL IS GIVEN TO THE FOLLOWING ERROR ROUTINES BY 'HANDLES'*         
      *  ISSUED AT THE BEGINNING OF THE PROGRAM.                      *         
      *                                                               *         
      *---------------------------------------------------------------*         
      * N.B.  WE CAN NOT EXIT IF ERROR, WE MUST ONLY EXIT IF                    
      *       THERE ARE NO SOCKETS IN THE TABLE TO SERVICE ! ! !                
      *       CHANGE THE LOGIC BELOW                                            
                                                                                
       INVREQ-ERR-SEC.                                                          
           MOVE '!INTERFACE IS NOT ACTIVE' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       IOERR-SEC.                                                               
           MOVE '!IOERR OCCURS           ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       QZERO-SEC.                                                               
           MOVE '!QZERO OCCURRS          ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       LENGERR-SEC.                                                             
           MOVE '!*IPSW* LENGTH ERROR READING TD QUEUE' TO MSG-AREA.            
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE '!' TO MSG-AREA.                                                
           MOVE 'L =    ' TO FIELDXX.                                           
           MOVE L     TO ERR-CODE.                                              
           MOVE ', RC = ' TO FIELDYY.                                           
           MOVE RC    TO RET-CODE.                                              
           MOVE '****' TO CALL-NO.                                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       NOSPACE-ERR-SEC.                                                         
           MOVE '!NOSPACE CONDITION      ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       QIDERR-SEC.                                                              
           MOVE '!QIDERR  CONDITION      ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       ITEMERR-SEC.                                                             
           MOVE '!ITEMERR ERROR          ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       ENDDATA-SEC.                                                             
           MOVE '!RETRIEVE DATA CAN NT BE FOUND' TO MSG-AREA.                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       TCP-TRUE-REQ.                                                            
           MOVE '!CAN NOT START SERVER..TRUE NOT ACTIVE' TO MSG-AREA.           
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
