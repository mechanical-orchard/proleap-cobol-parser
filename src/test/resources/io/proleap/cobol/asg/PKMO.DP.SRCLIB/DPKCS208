DPKCS208 START 0                                                        00082   
*          DATA SET DPKCS208   AT LEVEL 001 AS OF 10/11/95                      
**************************************************************          00001   
*                                                                       00002   
*    LINK ATTRIBUTES: NONE                                              00003   
*                                                                       00004   
*                                                                       00005   
*    THIS SUBROUTINE COMPRESSES AND DECOMPRESSES THE EXTERNAL WRITER    00006   
*    OUTPUT BEFORE GOING TO DISK OR TAPE. IT LOOKS FOR ANY OCCURRENCE   00007   
*    OF MORE THAN THREE (3) CONSECUTIVE CHARS AND REPLACES THE          00008   
*    STRING OF CHARS WITH A FLAG (X'EA'), THE CHAR BEING COMPRESSED AND 00009   
*    ONE BYTE FOR THE NUMBER OF CHARS. ON DECOMPRESSION, IT SEARCHES    00010   
*    FOR THE FLAG (X'EA') AND INSERTS THE THE CHARACTER FOLLOWING 'EA'  00011   
*    THE CORRECT NUMBER OF TIMES.                                       00012   
*    R1 POINTS TO A PARAMETER LIST CONTAINING THE ADDRESSES OF THE      00013   
*    FOLLOWING FIELDS.                                                  00014   
*                                                                       00015   
*        1)  REQUEST TYPE                          - 1 BYTE             00016   
*                 X'FF' PUT REQUEST - TIME TO COMPRESS                  00017   
*                 X'00' GET REQUEST - TIME TO DECOMPRESS                00018   
*        2)  INPUT RECORD                                               00019   
*              INPUT RECORD LAYOUT                                      00020   
*                > 1H - LENGTH OF INPUT RECORD                          00021   
*                       (FOR COMPRESSION - DO NOT INCLUDE FIRST 4 BYTES 00022   
*                                          IN LENGTH)                   00023   
*                       (FOR DE-COMPPRESSION - INCLUDE FIRST 4          00024   
*                                              BYTES IN LENGTH)         00025   
*                > 1H - PAD                                             00026   
*                > INPUT RECORDS DATA                                   00027   
*                                                                       00028   
*                (RECORD IS FORMATED LIKE A VARIABLE LENGTH RECORD)     00029   
*                                                                       00030   
*        3)  OUTPUT RECORD                                              00031   
*                > 1H - COMP/DE-COMP LENGTH                             00032   
*                       (CALLING PROGRAM PLACES A LENGTH HERE BEFORE    00033   
*                        COMPRESSION OR EXPANSION;(DOES NOT INCLUDE     00034   
*                        THE FOUR(4) BYTE PREFIX)                       00035   
*                        => COMPRESSION - MAX COMPRESSED LENGTH         00036   
*                        => DE-COMPRESS - MAX DE-COMPRESSED LENGTH)     00037   
*                       (BEFORE RETURNING, THIS ROUTINE UPDATES THIS    00038   
*                        FIELD TO THE NEW RECORD LENGTH)                00039   
*                > 1H - PAD                                             00040   
*                > INPUT RECORDS DATA                                   00041   
*                                                                       00042   
*                (RECORD IS FORMATED LIKE A VARIABLE LENGTH RECORD)     00043   
*                                                                       00044   
*                                                                       00045   
*    THE OUTPUT RECORD FIELD IS MODIFIED BY THIS PROGRAM.               00046   
*    IT WILL EITHER COMPRESS THE INPUT AREA AND PLACE IT IN THE OUTPUT  00047   
*    AREA OR DE-COMPRESS IT. THE NEW COMPRESSED OR DE-COMPRESSED LENGTH 00048   
*    WILL ALSO BE PLACED IN THE FIRST HALF WORD IN THE OUTPUT RECORD.   00049   
*                                                                       00050   
*      X'EA' WAS CHOSEN FOR THE COMPRESS FLAG BECAUSE IT IS NEITHER     00051   
*      AN INSTRUCTION NOR A PRINTABLE CHARACTER.                        00052   
*      USE 'HEX ON' TO VIEW THE FOLLOWING EXAMPLE                       00053   
*      EXAMPLE 'PAGE  1          EXAMPLE'  - NOT COMPRESSED LENGTH 24   00054   
*              'PAGE  1  EXAMPLE'         - COMPRESSED LENGTH 17       00055   
*                                                                       00056   
*********************************************************************   00057   
*     R15 WILL HAVE RETURN CODE = 0  IF COMPRESS/DE-COMPRESS IS OK      00058   
*      OR                                                               00059   
*     R15 WILL HAVE RETURN CODE = 16 IF COMPRESS/DE-COMPRESS ERRORED    00060   
*********************************************************************   00061   
*        REGISTERS USED:                                                00062   
*         R0 = WORK REG                                                 00063   
*         R1 = WORK REG                                                 00064   
*         R2 = WORK REG                                                 00065   
*         R3 = WORK REG                                                 00066   
*         R4 = INPUT RECORD POINTER                                     00067   
*         R5 = WORK REG                                                 00068   
*         R6 = OUTPUT RECORD POINTER                                    00069   
*         R7 = WORK REG                                                 00070   
*         R8 = WORK REG                                                 00071   
*         R9 = WORK REG                                                 00072   
*        R10 = UNUSED                                                   00073   
*        R11 = WORK REG                                                 00074   
*        R12 = BASE REG                                                 00075   
*        R13 = SAVE AREA                                                00076   
*        R14 = WORK REG                                                 00077   
*        R15 = WORK REG                                                 00078   
*                                                                       00079   
**************************************************************          00080   
         EJECT                                                          00081   
DPKCS208 AMODE 31                                                       00083   
DPKCS208 RMODE ANY                                                      00084   
*                                                                       00085   
*  REGISTER EQUATES                                                     00086   
*                                                                       00087   
R0       EQU   0                                                        00088   
R1       EQU   1         PARAMETER ADDRESS LIST                         00089   
R2       EQU   2         BRANCH AND LINK                                00090   
R3       EQU   3         BASE REGISTER                                  00091   
R4       EQU   4         ADDRESS OF TCOS MESSAGE (INPUT)                00092   
R5       EQU   5         ADDRESS OF UNPACKED TCOS MESSAGE (OUTPUT)      00093   
R6       EQU   6                                                        00094   
R7       EQU   7         RECORD LENGTH OF INPUT RECORD                  00095   
R8       EQU   8                                                        00096   
R9       EQU   9         WORK REGISTER USED IN THE UNPACK ROUTINE       00097   
R10      EQU   10        FIELD LENGTH                                   00098   
R11      EQU   11                                                       00099   
R12      EQU   12                                                       00100   
R13      EQU   13                                                       00101   
R14      EQU   14                                                       00102   
R15      EQU   15                                                       00103   
         SAVE  (14,12)                SAVE COBOL REGISTERS              00104   
         BALR  R12,0                  SET                               00105   
         USING *,R12                  BASE REGISTER                     00106   
*                                                                       00107   
         L     R4,4(R1)               INPUT RECORD                      00108   
         USING INREC,R4               SET UP BASE FOR INPUT REC         00109   
         L     R6,8(R1)               OUTPUT RECORD                     00110   
         USING OUTREC,R6              SET UP BASE FOR OUTPUT REC        00111   
         L     R11,0(R1)              POINT AT FUNCTION                 00112   
         CLI   0(R11),X'00'           IS THIS A UNCOMPRESS              00113   
         BE    UNCOMP                 YES GO TO GET PERFORM             00114   
         BAL   R14,COMPIT             NO, PERFORM COMPRESSION           00115   
         B     EXITIT                 SKIP NEXT STATEMENT               00116   
UNCOMP   BAL   R14,UNCOMPIT           PERFORM UN-COMPRESS               00117   
*                                                                       00118   
EXITIT   C     R15,=F'16'             WHAT IS THE RETURN CODE           00119   
         BE    EXITIT16                                                 00120   
EXITIT0  RETURN (14,12),RC=00         RETURN TO COBOL PROGRAM, RC=0     00121   
EXITIT16 RETURN (14,12),RC=16         RETURN TO COBOL PROGRAM, RC=16    00122   
         EJECT                                                          00123   
COMPIT   EQU   *                      COMPRESSION ROUTINE               00124   
         SR    R3,R3                  ZERO OUT 3                        00125   
         SR    R5,R5                  ZERO OUT 5                        00126   
         SR    R7,R7                  ZERO OUT 7                        00127   
         SR    R8,R8                  ZERO OUT 8                        00128   
         SR    R9,R9                  ZERO OUT 9                        00129   
         LH    R7,OUTLEN              SAVE MAX OUTPUT LENGTH            00130   
         LH    R8,INLEN               SAVE LENGTH OF INPUT RECORD       00131   
         CH    R8,=H'255'             RECORD LARGER THAN 255            00132   
         BH    NOCOMPR                YES - NO COMPRESSION              00133   
         LA    R4,4(R4)               BUMP PAST INPUT HEADER            00134   
         LA    R6,4(R6)               BUMP PAST OUTPUT HEADER           00135   
CPSETUP  LA    R0,1                   TURN OFF COMPRESS SWITCH          00136   
         ICM   R2,B'0001',0(R4)       SAVE ONE CHARACTER                00137   
         ICM   R2,B'0010',0(R4)       SAVE ONE CHARACTER                00138   
         ICM   R2,B'0100',0(R4)       SAVE ONE CHARACTER                00139   
         ICM   R2,B'1000',0(R4)       SAVE ONE CHARACTER                00140   
COMPLP   EQU   *                                                        00141   
         CLM   R2,B'1000',0(R4)       DOES FIRST CHAR MATCH PREVIOUS    00142   
         BE    COMPNXT                YES - GO CHECK FOR 4              00143   
MOVEIT   CH    R0,=H'2'               COMPRESSING CHAR ALREADY          00144   
         BE    MOVELEN                YES - MOVE IN LENGTH              00145   
         CLI   0(R4),X'EA'            IS CHAR THE DELIMITING CHAR       00146   
         BE    COMPEA                 YES - EXPAND IT (RARELY HAPPENS)  00147   
         MVC   0(1,R6),0(R4)          MOVE BYTE TO OUTPUT RECORD        00148   
         LA    R6,1(R6)               BUMP R6                           00149   
         AH    R5,=H'1'               ADD 1 TO NEW LENGTH COUNTER       00150   
         CR    R7,R5                  MAX COMPRESSED LENGTH HIT         00151   
         BL    NOCOMPR                ERROR DURING COMPRESSION          00152   
NEWCHAR  ICM   R2,B'0001',1(R4)       SAVE ONE CHARACTER                00153   
         ICM   R2,B'0010',1(R4)       SAVE ONE CHARACTER                00154   
         ICM   R2,B'0100',1(R4)       SAVE ONE CHARACTER                00155   
         ICM   R2,B'1000',1(R4)       SAVE ONE CHARACTER                00156   
         B     BUMPCP                 GO CHECK FOR END                  00157   
COMPEA   MVC   0(3,R6),=X'EAEA01'     EXPAND 'EA' TO 3 BYTES            00158   
         LA    R6,3(R6)               BUMP R6                           00159   
         AH    R5,=H'3'               ADD 3 TO NEW LENGTH COUNTER       00160   
         CR    R7,R5                  MAX COMPRESSED LENGTH HIT         00161   
         BL    NOCOMPR                ERROR DURING COMPRESSION          00162   
         B     NEWCHAR                                                  00163   
MOVELEN  EQU   *                                                        00164   
         STCM  R9,B'0001',2(R6)       MOVE LENGTH OF REPEATING CHARS    00165   
         LA    R6,3(R6)               BUMP R6 ON OUTPUT RECORD          00166   
         AH    R5,=H'3'               ADD 3 TO NEW COUNT                00167   
         CR    R7,R5                  MAX COMPRESSED LENGTH HIT         00168   
         BL    NOCOMPR                ERROR DURING COMPRESSION          00169   
         B     CPSETUP                START CHECK OVER FOR NEXT CHAR    00170   
COMPNXT  EQU   *                                                        00171   
         CH    R0,=H'2'               ALREADY COMPRESSING               00172   
         BE    ADDONLY                YES - JUST ADD TO COUNTER         00173   
         CLM   R2,B'1111',0(R4)       ARE THERE AT LEAST 4 REAPEATING   00174   
         BNE   MOVEIT                 NO - MOVE JUST ONE CHAR           00175   
         LA    R0,2                   TURN ON COMPRESSING SWITCH        00176   
         MVI   0(R6),X'EA'            MOVE IN 'EA' (COMP SENSE BYTE)    00177   
         STCM  R2,B'1000',1(R6)       MOVE COMP CHAR TO OUTPUT          00178   
         SR    R9,R9                  ZERO COUNTER                      00179   
         AH    R9,=H'4'               SET TO 4 - HAVE 4 REPEATING CHARS 00180   
         LA    R4,3(R4)               BUMP R4 3 BYTES                   00181   
         AH    R3,=H'3'               BUMP INPUT LENGTH COUNTER         00182   
         B     BUMPCP                 CHECK PAST END                    00183   
ADDONLY  EQU   *                                                        00184   
         AH    R9,=H'1'               ADD 1 TO REPEATING COUNTER        00185   
BUMPCP   EQU   *                                                        00186   
         LA    R4,1(R4)               BUMP R4 1                         00187   
         AH    R3,=H'1'               BUMP INPUT LENGTH COUNTER         00188   
         CR    R8,R3                  PAST END                          00189   
         BH    COMPLP                 NO - GET NEXT                     00190   
         CH    R0,=H'1'               COMPRESSING WHEN END WAS HIT      00191   
         BE    MOVEDONE               NO - MOVE IN NEW LENGTH           00192   
         STCM  R9,B'0001',2(R6)       MOVE LENGTH OF REPEATING CHARS    00193   
         AH    R5,=H'3'               ADD 3 TO NEW LENGTH               00194   
         CR    R7,R5                  MAX COMPRESSED LENGTH HIT         00195   
         BL    NOCOMPR                ERROR DURING COMPRESSION          00196   
MOVEDONE L     R6,8(R1)               OUTPUT RECORD                     00197   
         AH    R5,=H'4'               ADD 4 FOR PREFIX (2 HALFWORDS)    00198   
         STH   R5,OUTLEN              MOVE IN NEW LENGTH                00199   
         SR    R15,R15                                                  00200   
         BR    R14                    BRANCH BACK                       00201   
NOCOMPR  LA    R15,=F'16'             NO COMPRESSION                    00202   
         BR    R14                    BRANCH BACK                       00203   
         EJECT                                                          00204   
UNCOMPIT EQU   *                      COMPRESSION ROUTINE               00205   
         SR    R3,R3                  ZERO OUT 3                        00206   
         SR    R5,R5                  ZERO OUT 5                        00207   
         SR    R7,R7                  ZERO OUT 7                        00208   
         SR    R8,R8                  ZERO OUT 7                        00209   
         SR    R9,R9                  ZERO OUT 7                        00210   
         LH    R8,INLEN               SET R8 TO INPUT LENGTH            00211   
         SH    R8,=H'4'               SUBTRACT 4 BYTES FOR PREF LENGTH  00212   
         LH    R9,OUTLEN              SET R9 TO MAX EXPAND LENGTH       00213   
         LA    R4,4(R4)               BUMP PAST INPUT HEADER            00214   
         LA    R6,4(R6)               BUMP PAST OUTPUT HEADER           00215   
UNCOMPLP EQU   *                                                        00216   
         CR    R9,R5                  MAX LENGTH EXPANDED REACHED       00217   
         BL    ENDEXP                 JUST END EXPANSION                00218   
         CLI   0(R4),X'EA'            IS CHAR COMPRESSED                00219   
         BE    EXPANDIT               YES - EXPAND IT                   00220   
         MVC   0(1,R6),0(R4)          MOVE IN CHARACTER TO OUTPUT       00221   
         LA    R4,1(R4)               BUMP INPUT POINTER                00222   
         LA    R6,1(R6)               BUMP OUTPUT POINTER               00223   
         AH    R3,=H'1'               ADD 1 TO INPUT LEN COUNTER        00224   
         AH    R5,=H'1'               ADD 1 TO NEW OUTPUT LEN           00225   
         B     BUMPUNCP               GO CHECK LENGTH                   00226   
EXPANDIT EQU   *                                                        00227   
         XR    R7,R7                  ZERO R7                           00228   
         ICM   R7,B'0001',2(R4)       MOVE IN REPEATING COUNTER         00229   
EXLOOP   EQU   *                                                        00230   
         MVC   0(1,R6),1(R4)          MOVE CHAR TO OUTPUT               00231   
         LA    R6,1(R6)               BUMP OUTPUT POINTER               00232   
         AH    R5,=H'1'               ADD 1 TO NEW LENGTH               00233   
         BCT   R7,EXLOOP              DO UNTIL REPEATED R7 TIMES        00234   
         LA    R4,3(R4)               BUMP TO NEXT CHAR                 00235   
         AH    R3,=H'3'               ADD 3 TO INPUT LEN COUNTER        00236   
BUMPUNCP EQU   *                                                        00237   
         CR    R8,R3                  END OF INPUT?                     00238   
         BH    UNCOMPLP               NO - GET NEXT CHAR                00239   
         SR    R15,R15                ZERO R15                          00240   
         B     FINEXP                                                   00241   
ENDEXP   LA    R15,=F'16'             SET R15 TO 16 - BAD EXPAND        00242   
FINEXP   L     R6,8(R1)               OUTPUT RECORD                     00243   
         STH   R5,OUTLEN              MOVE IN NEW OUTPUT LENGTH         00244   
         BR    R14                    BRANCH BACK                       00245   
         EJECT                                                          00246   
*                                                                       00247   
         LTORG                                                          00248   
*                                                                       00249   
INREC    DSECT                        INPUT AREA FROM CALLING PROGRAM   00250   
INLEN    DS    H                                                        00251   
OUTREC   DSECT                        OUTPUT AREA FROM CALLING PROGRAM  00252   
OUTLEN   DS    H                                                        00253   
         END                                                            00254   
