000100 IDENTIFICATION DIVISION.                                         00010000
000200 PROGRAM-ID.      EPKUT158.                                       00020000
000300 AUTHOR.          SANDY POTTER.                                   00030000
000400 DATE-WRITTEN.    APRIL 8, 2005.                                  00040000
000500                                                                  00050000
000600*---------------------------------------------------------------  00060000
000700*      EXTRACT PLU FULL REFRESH FILE (EXCLUDING STORE PRICES)     00070000
000800*---------------------------------------------------------------  00080000
000900*  THIS PROGRAM EXTRACTS FULL FILES OF PLU DATA FOR               00090000
001000*  REQUESTED STORE NUMBERS.  IT ALSO CREATES A FILE OF            00100000
001100*  EXTRACTED SKUS, WHICH DRIVES THE XREF FULL FILE EXTRACT IN     00110000
001200*  A SEPERATE PROGRAM.  THIS PROGRAM USES THREE CONTROL CARDS.    00120000
001300*  ONE CONTROL CARD HAS TOMORROW'S DATE, ONE HAS TODAYS           00130000
001400*  DATE AND THE OTHER ONE HAS THE NUMBER OF DAYS IN ADVANCE       00140000
001500*  OF OPENING BEFORE A NEW STORE SHOULD BE ADDED TO THE           00150000
001600*  DISTRIBUTION LISTS.  THE PROGRAM WILL SAVE THE DATES AND       00160000
001700*  USE THE DAYS IN ADVANCE NUMBER BY ADDING ON TO TODAYS          00170000
001800*  DATE BY CALLING THE CALENDAR ROUTINE.  THIS PROGRAM            00180000
001900*  WILL THEN EXECUTE A REFRESH CURSOR TO PULL ALL THE STORES      00190000
002000*  THAT NEED FULL FILE REFRESHES AND THEIR CORRESPONDING          00200000
002100*  AD VERSIONS, AND STORE THIS INFO IN AN INTERNAL ARRAY.         00210000
002200*                                                                 00220000
002300*  IT WILL THEN EXECUTE A DUMMY SKU CURSOR WHICH WILL             00230000
002400*  PULL DEPARTMENTS AND SUB CLASSES. WHEN ONE RECORD              00240000
002500*  IS FETCHED FROM THIS CURSOR IT WILL WRITE OUT A PLU            00250000
002600*  GLOBAL RECORD AND A XREF DRIVER RECORD FOR DUMMY SKUS.         00260000
002700*  IT WILL ALSO WRITE OUT A SKU GLOBAL RECORD AND A SKU PRICING   00270000
002800*  GLOBAL RECORD, FOR THE SQL SERVER PLU DATABASE.                00280000
002900*                                                                 00290000
003000*  IT WILL THEN SAVE THE DEPARTMENT NUMBER, SUB CLASS             00300000
003100*  NUMBER, AND MAJOR CLASS NUMBER AND GO TO THE VENDOR STYLE      00310000
003200*  TABLES AND SKU TABLES TO FIND INTERNAL UPC IDS THAT            00320000
003300*  FIT THE REQUIREMENTS.  WHEN IT FETCHES ONE OF THE SKU          00330000
003400*  RECORDS IT WILL WRITE A PLU GLOBAL RECORD AND AN XREF          00340000
003500*  DRIVER RECORD, ALONG WITH A SKU GLOBAL RECORD AND A            00350000
003600*  SKU PRICING GLOBAL RECORD, FOR THE SQL SERVER PLU DATABASE.    00360000
003700*                                                                 00370000
003800*  THE PROCESS TO FIND AND CREATE STORE SPECIFIC PRICING          00380000
003900*  RECORDS HAS BEEN MOVED TO EPKUT159 TO ALLOW CONCURRENT         00390000
004000*  PROCESSING.                                                    00400000
004100*                                                                 00410000
004200*  AN INTERNAL ARRAY IS USED TO GO THROUGH ALL THE                00420000
004300*  AD VERSIONS FOR A RETURN PRICE.                                00430000
004400*  IT WILL WRITE A PLU STORE RECORD OUT FOR THIS,                 00440000
004500*  ALONG WITH A SKU PRICING STORE RECORD, FOR SQL SERVER.         00450000
004600*  IT SELECTS FROM THE 13 WEEK LOWEST PRICE TABLE TO GET THIS     00460000
004700*  INFO.                                                          00470000
004800*  IF IT IS NOT OUT THERE, AND IT IS A REGIONAL PRICING           00480000
004900*  INTERNAL UPC ID, THEN IT WILL SELECT THE AD VERSION'S          00490000
005000*  MINIMUM UNT RTL AMT FROM THE SKU LOCATION TABLE.               00500000
005100*  IT WILL KEEP PROCESSING RECORDS THIS WAY UNTIL ALL             00510000
005200*  THE INFORMATION IS WRITTEN OUT TO EITHER THE XREF DRIVER       00520000
005300*  FILE, PLU GLOBAL FILE (AND SKU GLOBAL AND SKU PRICING          00530000
005400*  GLOBAL FILE), OR THE PLU STORE FILE (AND SKU PRICING STORE     00540000
005500*  FILE) (FOR RETURN PRICING ONLY - NOT STORE PRICING).           00550000
005600*-----------------------------------------------------------      00560000
005700* HISTORY LOG:                                                    00570000
005800*-----------------------------------------------------------      00580000
005900* DATE:        MAY 17, 2005                                       00590000
006000* WR/IR#:      WR26916                                            00600000
006100* PROGRAMMER:  NANCY MARTIN                                       00610000
006200* DESCRIPTION: ADD LOGIC FOR SUB CLASS ATTR TABLE                 00620000
006300*        WILL ALLOW EXCLUSION OF DUMMY SKUS FOR 099-20 &          00630000
006400*        099-70 (VENDOR COUPON AND SALES TAX RESPECTIVELY)        00640000
006500*        WHICH WERE BEING MISAPPLIED BY SOME STORES.              00650000
006600*                                                                 00660000
006700* DATE: 01/27/2006                                                00670000
006800* WR/IR#: PM00844146                                              00680000
006900* PROGRAMMER: SCOTT BARTELT                                       00690000
007000* DESCRIPTION: THE CHECK FOR PUTTING THE EVENT CODE IN THE        00700000
007100*              "PATH 1" FIELD WAS CHECKING THE WRONG FIELD IN     00710000
007200*              THE "IF" STATEMENT SO IT WAS COMPARING A ' '       00720000
007300*              TO STATUS CODE OF '30'.                            00730000
007400*                                                                 00740000
007500* DATE: 03/14/2006                                                00750000
007600* WR/IR#: PM00852553                                              00760000
007700* PROGRAMMER: THOMAS HANSON                                       00770000
007800* DESCRIPTION: DUE TO RECENT GROWTH IN OUR SKU LOCATION TABLES    00780000
007900*              THIS PROGRAM HAS BEEN RUNNING EXCESSIVELY LONG,    00790000
008000*              HOLDING UP OUR NIGHTLY PRICING FILE UPDATES.       00800000
008100*              CHANGES HAVE BEEN ADDED TO SPEED UP PROCESSING.    00810000
008200*              FOR EXAMPLE, WE ARE NOW LOADING A GLOBAL TEMP      00820000
008300*              TABLE WITH ALL CORP (ROW 0) ROWS AND JOINING       00830000
008400*              OUR SKU STYLE CURSOR TO THAT INSTEAD OF DIRECTLY   00840000
008500*              TO THE SKU_LOC AND SKU_LOC_ATTR TABLES EACH TIME   00850000
008600*              WE OPEN AND CLOSE THAT SKU STYLE CURSOR.           00860000
008700*                                                                 00870000
008800* DATE:  APRIL 2009                                               00880000
008900* WR/IR#: WR35484                                                 00890000
009000* PROGRAMMER: CHUCK HERO                                          00900000
009100* DESCRIPTION: ADD SKU AND SKU PRICING LAYOUT OUTPUT FILES        00910000
009200*              FOR NEW SQL SERVER STORE PRICING DATABASE          00920000
009300*                                                                 00930000
009400* DATE:  05/28/2009                                               00940000
009500* WR/IR#: WR35484                                                 00950000
009600* PROGRAMMER: MEDHA CHOUDHURY                                     00960000
009700* DESCRIPTION: MODIFIED THE CODE TO INCREASE THE FREQUENCY OF     00970000
009800*              COMMITS PERFORMED AFTER INSERTING ROWS IN THE      00980000
009900*              TEMP GTT TABLE, COUNT IS CHANGED FROM 50000 TO     00990000
010000*              5000. ALSO REMOVE DISPLAYS AFTER THE COMMIT TO     01000000
010100*              DISPLAY ONLY ONCE AFTE THE INSERTS ARE COMPLETE.   01010000
010200*----------------------------------------------------------       01020000
010300* DATE:  AUG 03 2009                                              01030000
010400* WR/IR#: CR20162/INC#890237                                      01040000
010500* PROGRAMMER: MEDHA CHOUDHURY                                     01050000
010600* DESCRIPTION: MODIFIED THE POPULATION OF LAST-UPDATE-TMST        01060000
010700*             COMPARE THE UNT-RTL-CGH-DTE WITH UPC-STAT-CHG-DTE   01070000
010800*             MOVE THE LATEST DATE TO THE LAST-UPDATE-TMST        01080000
010900* CHANGES WILL AFFECT ONLY SQL FILES                              01090000
011000*----------------------------------------------------------       01100000
011100* DATE:  OCT 05 2009                                              01110000
011200* WR/IR#: WR37120                                                 01120000
011300* PROGRAMMER: CHERI PARMLEY                                       01130000
011400* DESCRIPTION: ADDED ONE MORE COMMIT AFTER THE TEMPORARY          01140000
011500*             TABLE HAS BEEN POPULATED.                           01150000
011600*-----------------------------------------------------------      01160000
011700* DATE:        12/05/11                                           01170000
011800* WR/IR#:                                                         01180000
011900* PROGRAMMER:  ROB SWAGER                                         01190000
012000* DESCRIPTION: EXTEND LOWEST 6 WEEK RETURN PRICE PROCESSING       01200000
012100*              TO 13 WEEKS AND SELECT LOWEST RETAIL PRICE         01210000
012200*              FOR EACH UNIQUE SKU. SEE LRP111                    01220000
012300*                                                                 01230000
P49465*----------------------------------------------------------       01240000
P49465* DATE:  SEP 08 2014                                              01250000
P49465* WR/IR#: PRB0049465                                              01260000
P49465* PROGRAMMER: COGNIZANT                                           01270000
P49465* DESCRIPTION: DUE TO ISSUE IN GTT, ADDED A COMPARE BETWEEN THE   01280000
P49465*              NO OF ROWS INSERTED INTO GTT AND NUMBER OF SKU     01290000
P49465*              RECORDS FETCHED BY CURSOR IN 9999-WRAPUP.          01300000
P49465*              IF ROWS INSERTED INTO GTT IS GREATER THAN NO OF    01310000
P49465*              SKU RECORDS FETCHED THEN RETURN CODE 4090 WILL BE  01320000
P49465*              PASSED TO JCL TO ABEND THE JOB.                    01330000
P49465*              THIS CHECK WAS INSERTED TO ENSURE THAT ALL THE     01340000
P49465*              RECORDS INSERTED TO GTT ARE PROCESSED BY CURSOR.   01350000
P49465*-----------------------------------------------------------      01360000
012310* DATE:  MARCH 14 2019                                            01361002
012311* WR/IR#: MAINFRAME REFACTOR PROJECT                              01362002
012312* PROGRAMMER: BARB SCHULTZ                                        01363002
012313* DESCRIPTION: REMOVED                                            01364002
012314*              USING STOGROUP STGM000                             01365002
012315*                    PRIQTY   72000                               01366002
012316*                    SECQTY   7200                                01367002
012317*                BUFFERPOOL BP2                                   01368002
012318*              FROM SQL IN PARAGRAPH 4000-LOAD-CORP-TMP-TBL.      01369002
012319*-----------------------------------------------------------      01369102
012400*----------------------------------------------------------       01369200
012500 ENVIRONMENT DIVISION.                                            01369300
012600*----------------------------------------------------------       01369400
012700 CONFIGURATION SECTION.                                           01369500
012800 SOURCE-COMPUTER.        IBM-3090.                                01369600
012900 OBJECT-COMPUTER.        IBM-3090.                                01369700
013000                                                                  01369800
013100 INPUT-OUTPUT SECTION.                                            01369900
013200                                                                  01370000
013300 FILE-CONTROL.                                                    01380000
013400                                                                  01390000
013500     SELECT CONTROL-CARD-1                                        01400000
013600            ASSIGN TO INP01.                                      01410000
013700     SELECT CONTROL-CARD-2                                        01420000
013800            ASSIGN TO INP02.                                      01430000
013900     SELECT CONTROL-CARD-3                                        01440000
014000            ASSIGN TO INP03.                                      01450000
014100     SELECT FULL-XREF-DRIVER-FILE                                 01460000
014200            ASSIGN TO OUT01.                                      01470000
014300     SELECT FULL-SKU-GLOBAL-FILE                                  01480000
014400            ASSIGN TO OUT02.                                      01490000
014500     SELECT FULL-SKU-PRICING-GLOBAL-FILE                          01500000
014600            ASSIGN TO OUT03.                                      01510000
014700     SELECT FULL-SKU-PRICING-STORE-FILE                           01520000
014800            ASSIGN TO OUT04.                                      01530000
014900                                                                  01540000
015000 DATA DIVISION.                                                   01550000
015100 FILE SECTION.                                                    01560000
015200                                                                  01570000
015300 FD  CONTROL-CARD-1                                               01580000
015400     RECORDING MODE F                                             01590000
015500     BLOCK CONTAINS 0 RECORDS                                     01600000
015600     LABEL RECORDS ARE OMITTED                                    01610000
015700     DATA RECORD IS CONTROL-CARD-1-RECORD.                        01620000
015800 01  CONTROL-CARD-1-RECORD           PIC X(80).                   01630000
015900                                                                  01640000
016000 FD  CONTROL-CARD-2                                               01650000
016100     RECORDING MODE F                                             01660000
016200     BLOCK CONTAINS 0 RECORDS                                     01670000
016300     LABEL RECORDS ARE OMITTED                                    01680000
016400     DATA RECORD IS CONTROL-CARD-2-RECORD.                        01690000
016500 01  CONTROL-CARD-2-RECORD           PIC X(80).                   01700000
016600                                                                  01710000
016700 FD  CONTROL-CARD-3                                               01720000
016800     RECORDING MODE F                                             01730000
016900     BLOCK CONTAINS 0 RECORDS                                     01740000
017000     LABEL RECORDS ARE OMITTED                                    01750000
017100     DATA RECORD IS CONTROL-CARD-3-RECORD.                        01760000
017200 01  CONTROL-CARD-3-RECORD           PIC X(80).                   01770000
017300                                                                  01780000
017400 FD  FULL-XREF-DRIVER-FILE                                        01790000
017500     RECORDING MODE F                                             01800000
017600     BLOCK CONTAINS 0 RECORDS                                     01810000
017700     LABEL RECORDS ARE OMITTED                                    01820000
017800     DATA RECORD IS FULL-XREF-DRIVER-RECORD.                      01830000
017900 01  FULL-XREF-DRIVER-RECORD         PIC X(50).                   01840000
018000                                                                  01850000
018100 FD  FULL-SKU-GLOBAL-FILE                                         01860000
018200     RECORDING MODE F                                             01870000
018300     BLOCK CONTAINS 0 RECORDS                                     01880000
018400     LABEL RECORDS ARE OMITTED                                    01890000
018500     DATA RECORD IS FULL-SKU-GLOBAL-RECORD.                       01900000
018600 01  FULL-SKU-GLOBAL-RECORD          PIC X(170).                  01910000
018700                                                                  01920000
018800 FD  FULL-SKU-PRICING-GLOBAL-FILE                                 01930000
018900     RECORDING MODE F                                             01940000
019000     BLOCK CONTAINS 0 RECORDS                                     01950000
019100     LABEL RECORDS ARE OMITTED                                    01960000
019200     DATA RECORD IS FULL-SKU-PRICING-GLOBAL-RECORD.               01970000
019300 01  FULL-SKU-PRICING-GLOBAL-RECORD  PIC X(260).                  01980000
019400                                                                  01990000
019500 FD  FULL-SKU-PRICING-STORE-FILE                                  02000000
019600     RECORDING MODE F                                             02010000
019700     BLOCK CONTAINS 0 RECORDS                                     02020000
019800     LABEL RECORDS ARE OMITTED                                    02030000
019900     DATA RECORD IS FULL-SKU-PRICING-STORE-RECORD.                02040000
020000 01  FULL-SKU-PRICING-STORE-RECORD   PIC X(260).                  02050000
020100                                                                  02060000
020200 WORKING-STORAGE SECTION.                                         02070000
020300*-----------------------------------------------------------      02080000
020400* PS- PROGRAM SWITCHES                                            02090000
020500*-----------------------------------------------------------      02100000
020600 01  PS-PROGRAM-SWITCHES.                                         02110000
020700     05  PS-END-OF-REFRESH-CSR-SW       PIC X(01) VALUE 'N'.      02120000
020800         88  PS-END-OF-REFRESH-CSR                VALUE 'Y'.      02130000
020900         88  PS-MORE-REFRESH-CSR                  VALUE 'N'.      02140000
021000     05  PS-END-OF-GTT-LOAD-CSR-SW      PIC X(01) VALUE 'N'.      02150000
021100         88  PS-END-OF-GTT-LOAD-CSR               VALUE 'Y'.      02160000
021200         88  PS-MORE-GTT-TO-LOAD                  VALUE 'N'.      02170000
021300     05  PS-END-OF-MERCH-CSR-SW         PIC X(01) VALUE 'N'.      02180000
021400         88  PS-END-OF-MERCH-CSR                  VALUE 'Y'.      02190000
021500         88  PS-MORE-MERCH-CSR                    VALUE 'N'.      02200000
021600     05  PS-END-OF-SKU-CSR-SW           PIC X(01) VALUE 'N'.      02210000
021700         88  PS-END-OF-SKU-CSR                    VALUE 'Y'.      02220000
021800         88  PS-MORE-SKU-CSR                      VALUE 'N'.      02230000
021900     05  PS-AD-REC-FOUND-SW             PIC X(01) VALUE 'N'.      02240000
022000         88  PS-AD-REC-FOUND                      VALUE 'Y'.      02250000
022100         88  PS-AD-REC-NOT-FOUND                  VALUE 'N'.      02260000
022200     05  PS-RTN-PRC-FOUND-SW            PIC X(01) VALUE 'N'.      02270000
022300         88  PS-RTN-PRC-FOUND                     VALUE 'Y'.      02280000
022400         88  PS-RTN-PRC-NOT-FOUND                 VALUE 'N'.      02290000
022500     05  PS-STRS-FOUND-SW               PIC X(01) VALUE 'N'.      02300000
022600         88  PS-STRS-FOUND                        VALUE 'Y'.      02310000
022700         88  PS-NO-STRS-FOUND                     VALUE 'N'.      02320000
022800     05  PS-REC-TYPE-SW                 PIC X(01) VALUE 'G'.      02330000
022900         88  PS-GBL-REC                           VALUE 'G'.      02340000
023000         88  PS-STR-RTN-PRC-REC                   VALUE 'R'.      02350000
023100     05  PS-DATE-ROUTINE-SW             PIC X(01) VALUE 'N'.      02360000
023200         88  PS-DATE-FOUND                        VALUE 'Y'.      02370000
023300         88  PS-DATE-NOT-FOUND                    VALUE 'N'.      02380000
023400     05  PS-SKU-CALLBACK-SW             PIC X(01) VALUE 'N'.      02390000
023500         88  PS-SKU-CALLBACK-FOUND                VALUE 'Y'.      02400000
023600         88  PS-SKU-CLBK-NOT-FOUND                VALUE 'N'.      02410000
023700     05  PS-SQLS-DUMMY-RCD-SW           PIC X(01) VALUE 'N'.      02420000
023800         88  PS-SQLS-DUMMY-RCD                    VALUE 'Y'.      02430000
023900         88  PS-SQLS-NOT-DUMMY-RCD                VALUE 'N'.      02440000
024000                                                                  02450000
024100*-----------------------------------------------------------      02460000
024200* PC- PROGRAM CONSTANTS                                           02470000
024300*-----------------------------------------------------------      02480000
024400 01  PC-PROGRAM-CONSTANTS.                                        02490000
024500     05  PC-CURRENT-PROGRAM-NAME   PIC X(08)  VALUE 'EPKUT158'.   02500000
024600     05  PC-MAX-RETRIES            PIC S9(04) VALUE +5 COMP.      02510000
024700     05  PC-SQLS-START-TIME        PIC X(08)  VALUE '04:00:00'.   02520000
024800     05  PC-ACTIVE-STATUS          PIC X(02)  VALUE '20'.         02530000
024900     05  PC-MIXED-STATUS           PIC X(02)  VALUE '25'.         02540000
025000     05  PC-DUMMY-STATUS           PIC X(02)  VALUE '00'.         02550000
025100     05  PC-PRIC-EFF-TIME-STD      PIC X(08)  VALUE '03:00:00'.   02560000
025200     05  PC-MDSE-HIER-SKU          PIC X(03)  VALUE 'SKU'.        02570000
025300     05  PC-NULL-CHAR              PIC X(01)  VALUE '~'.          02580000
025400                                                                  02590000
025500     05  PC-ZERO                   PIC S9(8)V VALUE +0 COMP-3.    02600000
025600     05  PC-MIN-TMST-FIELD         PIC X(26)                      02610000
025700            VALUE '0001-01-01-00.00.00.000000'.                   02620000
025800     05  PC-MAX-TMST-FIELD         PIC X(26)                      02630000
025900            VALUE '9999-12-31-24.00.00.000000'.                   02640000
026000     05  PC-MIN-DEC-7-2-FIELD      PIC S9(7)V9(2)                 02650000
026100            VALUE +0.00 COMP-3.                                   02660000
026200     05  PC-MAX-DEC-7-2-FIELD      PIC S9(7)V9(2)                 02670000
026300            VALUE +9999999.99 COMP-3.                             02680000
026400                                                                  02690000
026500*-----------------------------------------------------------      02700000
026600* PV- PROGRAM VARIABLES                                           02710000
026700*-----------------------------------------------------------      02720000
026800 01  PV-PROGRAM-VARAIBLES.                                        02730000
026900     05  PV-SQL-SUB                PIC S9(4)  VALUE +0 COMP.      02740000
027000     05  PV-DAYS-AHEAD             PIC 9(05)  VALUE 0.            02750000
027100     05  PV-SAVE-ADDED-DAYS        PIC X(05)  VALUE SPACES.       02760000
027200     05  PV-INTR-UPC-ID            PIC S9(11) VALUE +0 COMP.      02770000
027300     05  PV-STRT-DTE               PIC X(10)  VALUE SPACES.       02780000
027400     05  PV-TODAY-DTE              PIC X(10)  VALUE SPACES.       02790000
027500     05  PV-NEW-OPEN-DATE          PIC X(10)  VALUE SPACES.       02800000
027600     05  PV-SAVE-STR-NBR           PIC 9(05)  VALUE 0.            02810000
027700     05  PV-GP-PRIC-ID             PIC S9(11) VALUE +0 COMP.      02820000
027800     05  PV-SAVE-MIN-RTL-AMT       PIC S9(07)V9(02) VALUE +0.     02830000
027900     05  PV-SAVE-CORP-UNT-RTL      PIC S9(07)V9(02) VALUE +0.     02840000
028000     05  PV-TAX-PRD-CDE.                                          02850000
028100         10  PV-TAX-PRD-CDE-1      PIC X(05)  VALUE SPACES.       02860000
028200         10  PV-TAX-PRD-CDE-2      PIC X(15)  VALUE SPACES.       02870000
028300     05  PV-GP-PRIC-ID-IND         PIC S9(4)  VALUE +0 COMP.      02880000
028400         88  PV-GP-PRIC-ID-NULL               VALUE -1.           02890000
028500     05  PV-GP-RTL-QTY-IND         PIC S9(4)  VALUE +0 COMP.      02900000
028600         88  PV-GP-RTL-QTY-NULL               VALUE -1.           02910000
028700     05  PV-GP-RTL-AMT-IND         PIC S9(4)  VALUE +0 COMP.      02920000
028800         88  PV-GP-RTL-AMT-NULL               VALUE -1.           02930000
028900     05  PV-NCLR-RTL-AMT-IND       PIC S9(4)  VALUE +0 COMP.      02940000
029000         88  PV-NCLR-RTL-AMT-NULL             VALUE -1.           02950000
029100     05  PV-CONVERT-PRICE          PIC S9(07)V9(02) VALUE +0.     02960000
029200     05  PV-RETURN-UNIT-PRC        PIC S9(07)V9(02) VALUE +0.     02970000
029300     05  PV-LOWEST-RTL-PRC         PIC S9(07)V9(02) VALUE +0      02980000
029400                                                    COMP-3.       02990000
029500     05  PV-MIN-UNT-RTL-AMT        PIC S9(07)V9(02) VALUE +0      03000000
029600                                                    COMP-3.       03010000
029700     05  PV-SAVE-DEPT-NBR          PIC 9(04)  VALUE 0.            03020000
029800     05  FILLER REDEFINES PV-SAVE-DEPT-NBR.                       03030000
029900         10  FILLER                PIC X(01).                     03040000
030000         10  PV-SAVE-DEPT-NBR-X    PIC X(03).                     03050000
030100     05  PV-SAVE-SUB-CL-NBR        PIC 9(04)  VALUE 0.            03060000
030200     05  FILLER REDEFINES PV-SAVE-SUB-CL-NBR.                     03070000
030300         10  FILLER                PIC X(02).                     03080000
030400         10  PV-SAVE-SUB-CL-NBR-X  PIC X(02).                     03090000
030500                                                                  03100000
030600     05  PV-PLU-KEY-DUMMY.                                        03110000
030700         10  PV-PLU-KEY-99         PIC X(02)  VALUE '99'.         03120000
030800         10  PV-PLU-KEY-DEPT       PIC X(03)  VALUE SPACES.       03130000
030900         10  PV-PLU-KEY-CLASS      PIC X(02)  VALUE SPACES.       03140000
031000         10  PV-PLU-KEY-ZEROES     PIC X(05)  VALUE '00000'.      03150000
031100                                                                  03160000
031200     05  PV-SKU-NBR-DUMMY.                                        03170000
031300         10  PV-SKU-NBR-DEPT       PIC X(03)  VALUE SPACES.       03180000
031400         10  PV-SKU-NBR-CLASS      PIC X(02)  VALUE SPACES.       03190000
031500         10  PV-SKU-NBR-ZEROES     PIC X(03)  VALUE '000'.        03200000
031600                                                                  03210000
031700     05  PV-DISPLAY-FIELDS.                                       03220000
031800         10  PV-DISPLAY-STR-NBR    PIC  9(8)  VALUE  0.           03230000
031900                                                                  03240000
032000     05  PV-DB2-FIELDS.                                           03250000
032100         10  PV-DB2-STR-NBR        PIC S9(4)  VALUE +0 COMP.      03260000
032200         10  PV-DB2-DEPT-NBR       PIC S9(4)V VALUE +0 COMP-3.    03270000
032300         10  PV-DB2-MAJ-CL-NBR     PIC S9(4)V VALUE +0 COMP-3.    03280000
032400         10  PV-DB2-SUB-CL-NBR     PIC S9(4)V VALUE +0 COMP-3.    03290000
032500         10  PV-DB2-POS-MDSE-DESC  PIC X(30)  VALUE SPACES.       03300000
032600         10  PV-DB2-STYL-ID        PIC S9(8)V VALUE +0 COMP-3.    03310000
032700         10  PV-DB2-INTR-UPC-ID    PIC S9(9)  VALUE +0 COMP.      03320000
032800         10  PV-DB2-SKU-NBR        PIC S9(8)V VALUE +0 COMP-3.    03330000
032900         10  PV-DB2-SKU-DESC       PIC X(30)  VALUE SPACES.       03340000
033000         10  PV-DB2-SIZE-DESC      PIC X(10)  VALUE SPACES.       03350000
033100         10  PV-DB2-TAX-PRD-DESC   PIC X(20)  VALUE SPACES.       03360000
033200         10  PV-DB2-E-BUS-ITM-IND  PIC X(01)  VALUE SPACES.       03370000
033300         10  PV-DB2-E-BUS-GP-NBR   PIC S9(8)V VALUE +0 COMP-3.    03380000
033400         10  PV-DB2-NRF-CLOR-DESC  PIC X(10)  VALUE SPACES.       03390000
033500         10  PV-DB2-UNT-RTL-AMT    PIC S9(7)V9(2) VALUE +0 COMP-3.03400000
033600         10  PV-DB2-SKU-STAT-CDE   PIC X(02)  VALUE SPACES.       03410000
033700         10  PV-DB2-UPC-CHG-DTE    PIC X(10)  VALUE SPACES.       03420000
033800         10  PV-DB2-GP-PRIC-ID     PIC S9(9)  VALUE +0 COMP.      03430000
033900         10  PV-DB2-UNT-RTL-DTE    PIC X(10)  VALUE SPACES.       03440000
034000         10  PV-DB2-GP-RTL-QTY     PIC S9(4)  VALUE +0 COMP.      03450000
034100         10  PV-DB2-GP-RTL-AMT     PIC S9(7)V9(2) VALUE +0 COMP-3.03460000
034200         10  PV-DB2-LAST-NCLR-AMT  PIC S9(7)V9(2) VALUE +0 COMP-3.03470000
034300         10  PV-DB2-PRMPT-PRIC-IND PIC X(01)  VALUE SPACES.       03480000
034400         10  PV-DB2-SC-DWNLD-EXC-IND PIC X(01) VALUE SPACES.      03490000
034500                                                                  03500000
034600    05  PV-PRIC-EFF-TMST.                                         03510000
034700        10  PV-PRIC-EFF-DTE               PIC X(10).              03520000
034800        10  FILLER                        PIC X(01) VALUE SPACE.  03530000
034900        10  PV-PRIC-EFF-TIME              PIC X(08).              03540000
035000                                                                  03550000
035100    05  PV-LAST-PRCHG-TMST.                                       03560000
035200        10  PV-LAST-PRCHG-DTE             PIC X(10).              03570000
035300        10  FILLER                        PIC X(01) VALUE SPACE.  03580000
035400        10  PV-LAST-PRCHG-TIME            PIC X(08).              03590000
035500                                                                  03600000
035600*----------------------------------------------------------       03610000
035700* FULL XREF DRIVER FILE LAYOUT - OUTPUT                           03620000
035800*----------------------------------------------------------       03630000
035900     COPY EPRD074.                                                03640000
036000                                                                  03650000
036100*----------------------------------------------------------       03660000
036200* FULL SKU GLOBAL FILE LAYOUT - OUTPUT                            03670000
036300*----------------------------------------------------------       03680000
036400     COPY EPRD219.                                                03690000
036500                                                                  03700000
036600*----------------------------------------------------------       03710000
036700* FULL SKU PRICING GLOBAL FILE AND                                03720000
036800* FULL SKU PRICING STORE FILE LAYOUT - OUTPUT                     03730000
036900*----------------------------------------------------------       03740000
037000     COPY EPRD220.                                                03750000
037100                                                                  03760000
037200*----------------------------------------------------------       03770000
037300* CONTROL CARD LAYOUT FOR TODAY'S DATE                            03780000
037400*----------------------------------------------------------       03790000
037500     COPY EPWS140.                                                03800000
037600                                                                  03810000
037700*----------------------------------------------------------       03820000
037800* CONTROL CARD LAYOUT FOR TOMORROW'S DATE                         03830000
037900*----------------------------------------------------------       03840000
038000     COPY EPWS112.                                                03850000
038100                                                                  03860000
038200*----------------------------------------------------------       03870000
038300* CONTROL CARD LAYOUT FOR DAYS TILL STORE OPEN                    03880000
038400*----------------------------------------------------------       03890000
038500     COPY EPRD045.                                                03900000
038600                                                                  03910000
038700*----------------------------------------------------------       03920000
038800*  PARAMETER LIST FOR THE CALENDAR ROUTINE (DPKUT500)             03930000
038900*----------------------------------------------------------       03940000
039000     COPY DPWS500.                                                03950000
039100                                                                  03960000
039200*-----------------------------------------------------------      03970000
039300* VARIABLES REQUIRED FOR THE FORMAT SQLCA ROUTINE DPPD004         03980000
039400*-----------------------------------------------------------      03990000
039500     COPY DPWS004.                                                04000000
039600                                                                  04010000
039700*-----------------------------------------------------------      04020000
039800* DB2 ABEND COPYBOOK                                              04030000
039900*-----------------------------------------------------------      04040000
040000     COPY DPWS900.                                                04050000
040100                                                                  04060000
040200*-----------------------------------------------------------      04070000
040300* DB2 MESSAGE AREA                                                04080000
040400*-----------------------------------------------------------      04090000
040500     COPY SQLCA2.                                                 04100000
040600                                                                  04110000
040700*-----------------------------------------------------------      04120000
040800* PC- PROGRAM COUNTERS                                            04130000
040900*-----------------------------------------------------------      04140000
041000 01  PC-PROGRAM-COUNTERS.                                         04150000
041100     05  PC-CNT-REFRESH-CSR           PIC 9(09) VALUE 0.          04160000
041200     05  PC-CNT-MERCH-CSR             PIC 9(09) VALUE 0.          04170000
041300     05  PC-CNT-SKU-CSR               PIC 9(09) VALUE 0.          04180000
041400     05  PC-CNT-XREF-RECS             PIC 9(09) VALUE 0.          04190000
041500     05  PC-CNT-GLBL-SKU-RECS         PIC 9(09) VALUE 0.          04200000
041600     05  PC-CNT-GLBL-SKU-PRICG-RECS   PIC 9(09) VALUE 0.          04210000
041700     05  PC-CNT-SKU-PRICG-STR-RECS    PIC 9(09) VALUE 0.          04220000
041800     05  PC-CNT-ALL-RECS              PIC 9(09) VALUE 0.          04230000
041900     05  PC-CNT-DISPLAY-RECS          PIC 9(09) VALUE 0.          04240000
042000     05  PC-CNT-SC-EXC-DUMMY-RECS     PIC 9(09) VALUE 0.          04250000
042100     05  PC-GTT-ROWS-INSERTED         PIC 9(09) VALUE 0.          04260000
042200     05  PC-GTT-ROWS-BEFORE-WRITE     PIC 9(09) VALUE 0.          04270000
042300                                                                  04280000
042400*-----------------------------------------------------------      04290000
042500* TBL- TABLES                                                     04300000
042600*-----------------------------------------------------------      04310000
042700 01  TBL-REFRESH-TABLE.                                           04320000
042800     05  TBL-REFRESH-STORE-ENTRIES       OCCURS 2000 TIMES        04330000
042900                                     INDEXED BY TBL-INDEX-1.      04340000
043000         10  TBL-STR-NBR              PIC S9(04) VALUE 0 COMP.    04350000
043100                                                                  04360000
043200*-----------------------------------------------------------      04370000
043300* ERROR HANDLING                                                  04380000
043400*-----------------------------------------------------------      04390000
043500 01  PV-MISC-ABEND-FIELDS.                                        04400000
043600     05  PV-PARAGRAPH-NAME            PIC X(30) VALUE SPACE.      04410000
043700     05  PV-OPERATION-MSG-1           PIC X(40) VALUE SPACE.      04420000
043800     05  PV-OPERATION-MSG-2           PIC X(40) VALUE SPACE.      04430000
043900     05  PV-DB2-OPERATION             PIC X(30) VALUE SPACE.      04440000
044000 01  ABEND-CODE                  PIC S9(4) VALUE ZEROS COMP SYNC. 04450000
044100     88  ABEND-4003-CTRL-CARD-ERROR        VALUE +4003.           04460000
044200     88  ABEND-4013-DB2-ERROR              VALUE +4013.           04470000
044300     88  ABEND-4019-CAL-SUB-ERROR          VALUE +4019.           04480000
044400                                                                  04490000
044500*-----------------------------------------------------------      04500000
044600* DB2 COMMUNICATIONS AREA                                         04510000
044700*-----------------------------------------------------------      04520000
044800     EXEC SQL                                                     04530000
044900          INCLUDE SQLCA                                           04540000
045000     END-EXEC.                                                    04550000
045100                                                                  04560000
045200*-----------------------------------------------------------      04570000
045300* DB2 TABLE EPT00010(EPT_STR_FIL_RFRSH) - STORE FILE REFRESH      04580000
045400*                                              TABLE              04590000
045500*-----------------------------------------------------------      04600000
045600     EXEC SQL                                                     04610000
045700          INCLUDE EPT00010                                        04620000
045800     END-EXEC.                                                    04630000
045900                                                                  04640000
046000*-----------------------------------------------------------      04650000
046100* DB2 TABLE XST00001(XST_LOC) - LOCATION TABLE                    04660000
046200*-----------------------------------------------------------      04670000
046300     EXEC SQL                                                     04680000
046400          INCLUDE XST00001                                        04690000
046500     END-EXEC.                                                    04700000
046600                                                                  04710000
046700*-----------------------------------------------------------      04720000
046800* DB2 TABLE XST00025(XST_LOC_ATTR) - LOCATION ATTRIBUTE TABLE     04730000
046900*-----------------------------------------------------------      04740000
047000     EXEC SQL                                                     04750000
047100          INCLUDE XST00025                                        04760000
047200     END-EXEC.                                                    04770000
047300                                                                  04780000
047400*-----------------------------------------------------------      04790000
047500* DB2 TABLE XST00015(XST_DEPT) - DEPARTMENT TABLE                 04800000
047600*-----------------------------------------------------------      04810000
047700     EXEC SQL                                                     04820000
047800          INCLUDE XST00015                                        04830000
047900     END-EXEC.                                                    04840000
048000                                                                  04850000
048100*-----------------------------------------------------------      04860000
048200* DB2 TABLE XST00014(XST_SUB_CL) - SUB CLASS TABLE                04870000
048300*-----------------------------------------------------------      04880000
048400     EXEC SQL                                                     04890000
048500          INCLUDE XST00014                                        04900000
048600     END-EXEC.                                                    04910000
048700                                                                  04920000
048800*-----------------------------------------------------------      04930000
048900* DB2 TABLE XST00055 (XST_SUB_CL_ATTR) - SUB CLASS ATTRIBUTE      04940000
049000*-----------------------------------------------------------      04950000
049100     EXEC SQL                                                     04960000
049200          INCLUDE XST00055                                        04970000
049300     END-EXEC.                                                    04980000
049400                                                                  04990000
049500*-----------------------------------------------------------      05000000
049600* DB2 TABLE XST00013(XST_VND_STYL) - VENDOR STYLE TABLE           05010000
049700*-----------------------------------------------------------      05020000
049800     EXEC SQL                                                     05030000
049900          INCLUDE XST00013                                        05040000
050000     END-EXEC.                                                    05050000
050100                                                                  05060000
050200*-----------------------------------------------------------      05070000
050300* DB2 TABLE XST00010(XST_SKU) - SKU TABLE                         05080000
050400*-----------------------------------------------------------      05090000
050500     EXEC SQL                                                     05100000
050600          INCLUDE XST00010                                        05110000
050700     END-EXEC.                                                    05120000
050800                                                                  05130000
050900*-----------------------------------------------------------      05140000
051000* DB2 TABLE XST00011(XST_SKU_ATTR) - SKU ATTRIBUTE TABLE          05150000
051100*-----------------------------------------------------------      05160000
051200     EXEC SQL                                                     05170000
051300          INCLUDE XST00011                                        05180000
051400     END-EXEC.                                                    05190000
051500                                                                  05200000
051600*-----------------------------------------------------------      05210000
051700* DB2 TABLE XST00008(XST_SKU_LOC) - SKU LOCATION TABLE            05220000
051800*-----------------------------------------------------------      05230000
051900     EXEC SQL                                                     05240000
052000          INCLUDE XST00008                                        05250000
052100     END-EXEC.                                                    05260000
052200                                                                  05270000
052300*-----------------------------------------------------------      05280000
052400* DB2 TABLE XST00041(XST_SKU_LOC_ATTR) - SKU LOCATION ATTRIBUTE   05290000
052500*                                               TABLE             05300000
052600*-----------------------------------------------------------      05310000
052700     EXEC SQL                                                     05320000
052800          INCLUDE XST00041                                        05330000
052900     END-EXEC.                                                    05340000
053000                                                                  05350000
053100*-----------------------------------------------------------      05360000
053200* DB2 TABLE XSV00000(XSV_SKU_LOC) - TEMP TRIAL STORE ZERO ROW     05370000
053300*-----------------------------------------------------------      05380000
053400*    EXEC SQL                                                     05390000
053500*         INCLUDE XSV00000                                        05400000
053600*    END-EXEC.                                                    05410000
053700                                                                  05420000
053800*-----------------------------------------------------------      05430000
053900* DB2 TABLE EPT00011(EPT_LO_RTL) - LOWEST 13 WEEK PRICE TABLE     05440000
054000*-----------------------------------------------------------      05450000
054100     EXEC SQL                                                     05460000
054200          INCLUDE EPT00011                                        05470000
054300     END-EXEC.                                                    05480000
054400                                                                  05490000
054500*-----------------------------------------------------------      05500000
054600* REFRESH-CURSOR WILL FIND ALL THE STORES THAT NEED A FULL        05510000
054700* FILE REFRESH.                                                   05520000
054800*-----------------------------------------------------------      05530000
054900     EXEC SQL                                                     05540000
055000       DECLARE REFRESH-CURSOR CURSOR FOR                          05550000
055100            SELECT  A.STR_NBR                                     05560000
055200              FROM  EPT_STR_FIL_RFRSH A                           05570000
055300                   ,XST_LOC           B                           05580000
055400                   ,XST_LOC_ATTR      C                           05590000
055500             WHERE  A.STR_NBR        = B.LOC_NBR                  05600000
055600               AND  B.LOC_NBR        = C.LOC_NBR                  05610000
055700               AND  A.RFRSH_TYP_CDE  = 'PL'                       05620000
055800               AND (A.RFRSH_DTE      IS NULL                      05630000
055900                OR  A.RFRSH_DTE      = :PV-TODAY-DTE)             05640000
056000               AND  B.LOC_TYP_CDE    = 'DS'                       05650000
056100               AND (C.POS_CAP_LVL_ID = 5                          05660000
056200                OR  C.POS_CAP_LVL_ID > 11)                        05670000
056300               AND ((B.OPN_DTE       > :PV-STRT-DTE               05680000
056400               AND (B.OPN_DTE        <= :PV-NEW-OPEN-DATE         05690000
056500               AND  B.CLO_DTE        >= :PV-NEW-OPEN-DATE))       05700000
056600                OR (B.OPN_DTE        <= :PV-STRT-DTE              05710000
056700               AND  B.CLO_DTE        >= :PV-STRT-DTE))            05720000
056800             ORDER BY A.STR_NBR                                   05730000
056900           WITH UR                                                05740000
057000     END-EXEC.                                                    05750000
057100                                                                  05760000
057200*-----------------------------------------------------------      05770000
057300* GTT TEMP TABLE CURSOR EXTRACT - CALLED ONLY ONCE                05780000
057400*-----------------------------------------------------------      05790000
057500     EXEC SQL                                                     05800000
057600       DECLARE GTT-EXTR-CSR CURSOR WITH HOLD FOR                  05810000
057700            SELECT  E.INTR_UPC_ID                                 05820000
057800                     ,E.LOC_NBR                                   05830000
057900                     ,E.UNT_RTL_AMT                               05840000
058000                     ,E.LOC_SKU_STAT_CDE                          05850000
058100                     ,E.UPC_STAT_CHG_DTE                          05860000
058200                     ,E.GP_PRIC_ID                                05870000
058300                     ,E.UNT_RTL_CHG_DTE                           05880000
058400                     ,E.GP_RTL_QTY                                05890000
058500                     ,E.GP_RTL_AMT                                05900000
058600                     ,G.PRMPT_FOR_PRIC_IND                        05910000
058700                FROM XST_SKU_LOC      E                           05920000
058800                    ,XST_SKU_LOC_ATTR G                           05930000
058900                    ,XST_SKU_ATTR     A                           05940000
059000              WHERE   E.LOC_NBR         = 0                       05950000
059100                 AND  E.INTR_UPC_ID     = G.INTR_UPC_ID           05960000
059200                 AND  E.LOC_NBR         = G.LOC_NBR               05970000
059300                 AND  E.END_TMST IS NULL                          05980000
059400                 AND  E.INTR_UPC_ID     = A.INTR_UPC_ID           05990000
059500                 AND  A.PLU_DWNLD_EXCL_IND = 'N'                  06000000
059600               ORDER BY E.INTR_UPC_ID                             06010000
059700             WITH UR                                              06020000
059800     END-EXEC.                                                    06030000
059900                                                                  06040000
060000*-----------------------------------------------------------      06050000
060100* MERCH-CURSOR WILL FIND ALL THE MERCHANDISE HIERARCHY DATA       06060000
060200* DOWN TO THE SUB CLASS.                                          06070000
060300*-----------------------------------------------------------      06080000
060400     EXEC SQL                                                     06090000
060500       DECLARE MERCH-CURSOR CURSOR FOR                            06100000
060600            SELECT  A.DEPT_NBR                                    06110000
060700                   ,B.MAJ_CL_NBR                                  06120000
060800                   ,B.SUB_CL_NBR                                  06130000
060900                   ,B.POS_MDSE_DESC                               06140000
061000                   ,C.PLU_DWNLD_EXCL_IND                          06150000
061100              FROM  XST_DEPT        A                             06160000
061200                   ,XST_SUB_CL      B                             06170000
061300                   ,XST_SUB_CL_ATTR C                             06180000
061400             WHERE  A.DEPT_NBR      = B.DEPT_NBR                  06190000
061500               AND  B.DEPT_NBR      = C.DEPT_NBR                  06200000
061600               AND  B.MAJ_CL_NBR    = C.MAJ_CL_NBR                06210000
061700               AND  B.SUB_CL_NBR    = C.SUB_CL_NBR                06220000
061800             ORDER BY B.DEPT_NBR, B.MAJ_CL_NBR, B.SUB_CL_NBR      06230000
061900           WITH UR                                                06240000
062000     END-EXEC.                                                    06250000
062100                                                                  06260000
062200*-----------------------------------------------------------      06270000
062300* STYL-SKUS-CURSOR WILL FIND ALL RECORDS THAT CORRESPOND          06280000
062400* TO A CERTAIN DEPARTMENT NUMBER, SUB CLASS NUMBER, AND           06290000
062500* MAJOR CLASS NUMBER.                                             06300000
062600*-----------------------------------------------------------      06310000
062700     EXEC SQL                                                     06320000
062800       DECLARE STYL-SKUS-CURSOR CURSOR FOR                        06330000
062900            SELECT  A.STYL_ID                                     06340000
063000                   ,D.INTR_UPC_ID                                 06350000
063100                   ,D.SKU_NBR                                     06360000
063200                   ,D.SKU_DESC                                    06370000
063300                   ,D.TX_PRD_CDE_DESC                             06380000
063400                   ,D.SIZE_DESC                                   06390000
063500                   ,D.E_BUS_ITM_IND                               06400000
063600                   ,D.E_BUS_PRD_GP_NBR                            06410000
063700                   ,D.NRF_CLOR_DESC                               06420000
063800                   ,T.UNT_RTL_AMT                                 06430000
063900                   ,T.LOC_SKU_STAT_CDE                            06440000
064000                   ,T.UPC_STAT_CHG_DTE                            06450000
064100                   ,T.GP_PRIC_ID                                  06460000
064200                   ,T.UNT_RTL_CHG_DTE                             06470000
064300                   ,T.GP_RTL_QTY                                  06480000
064400                   ,T.GP_RTL_AMT                                  06490000
064500                   ,F.LAST_NCLR_RTL_AMT                           06500000
064600                   ,T.PRMPT_FOR_PRIC_IND                          06510000
064700              FROM  XST_VND_STYL     A                            06520000
064800                   ,XST_SKU          D                            06530000
064900                   ,XST_SKU_ATTR     F                            06540000
065000                   ,SESSION.GTT      T                            06550000
065100             WHERE  A.DEPT_NBR        = :PV-DB2-DEPT-NBR          06560000
065200               AND  A.MAJ_CL_NBR      = :PV-DB2-MAJ-CL-NBR        06570000
065300               AND  A.SUB_CL_NBR      = :PV-DB2-SUB-CL-NBR        06580000
065400               AND  A.STYL_ID > :PC-ZERO                          06590000
065500               AND  F.PLU_DWNLD_EXCL_IND = 'N'                    06600000
065600               AND  A.STYL_ID         = D.STYL_ID                 06610000
065700               AND  D.INTR_UPC_ID     = F.INTR_UPC_ID             06620000
065800               AND  F.LAST_NCLR_RTL_AMT                           06630000
065900                    BETWEEN :PC-MIN-DEC-7-2-FIELD                 06640000
066000                        AND :PC-MAX-DEC-7-2-FIELD                 06650000
066100               AND  F.INTR_UPC_ID     = T.INTR_UPC_ID             06660000
066200               AND  T.LOC_NBR         = 0                         06670000
066300           WITH UR                                                06680000
066400     END-EXEC.                                                    06690000
066500                                                                  06700000
066600                                                                  06710000
066700 LINKAGE SECTION.                                                 06720000
066800                                                                  06730000
066900*----------------------------------------------------------       06740000
067000 PROCEDURE DIVISION.                                              06750000
067100*----------------------------------------------------------       06760000
067200 0000-MAINLINE.                                                   06770000
067300                                                                  06780000
067400     PERFORM 1000-INITIALIZATION.                                 06790000
067500                                                                  06800000
067600     IF PS-STRS-FOUND                                             06810000
067700        DISPLAY 'LOADING CORP TMP TABLE'                          06820000
067800        PERFORM 4000-LOAD-CORP-TMP-TBL                            06830000
067900        DISPLAY 'FINISHED LOADING GTT'                            06840000
068000                                                                  06850000
068100        DISPLAY 'OPENING MERCH CURSOR'                            06860000
068200        SET  PS-MORE-MERCH-CSR TO TRUE                            06870000
068300        PERFORM 2200-OPEN-MERCH-CURSOR                            06880000
068400        PERFORM 2300-FETCH-MERCH-CURSOR                           06890000
068500                                                                  06900000
068600        PERFORM 2000-PROCESS-CURSORS                              06910000
068700             UNTIL PS-END-OF-MERCH-CSR                            06920000
068800                                                                  06930000
068900        PERFORM 2400-CLOSE-MERCH-CURSOR                           06940000
069000                                                                  06950000
069100     END-IF.                                                      06960000
069200                                                                  06970000
069300     PERFORM 9999-WRAPUP.                                         06980000
069400                                                                  06990000
069500     GOBACK.                                                      07000000
069600                                                                  07010000
069700*0000-EXIT.                                                       07020000
069800                                                                  07030000
069900*----------------------------------------------------------       07040000
070000* 1000-INITIALIZATION.                                            07050000
070100*     INITIALIZATION AREA - INITIALIZES ALL VARIABLES, OPENS      07060000
070200*     FILES, READS INPUT FILES, AND DOES AN INITIAL FETCH         07070000
070300*     OF THE MERCHANDISE CURSOR.                                  07080000
070400*----------------------------------------------------------       07090000
070500 1000-INITIALIZATION.                                             07100000
070600                                                                  07110000
070700     INITIALIZE CC-EPCC112-CONTROL-CARD                           07120000
070800                EP074-XREF-DRIVE-RECORD                           07130000
070900                EP045-ADVDAYS-TO-SND-RECORD                       07140000
071000                CC-EPCC140-CONTROL-CARD.                          07150000
071100                                                                  07160000
071200     INITIALIZE TBL-REFRESH-TABLE                                 07170000
071300         REPLACING ALPHANUMERIC DATA BY ZEROES                    07180000
071400                   NUMERIC DATA BY ZEROS.                         07190000
071500                                                                  07200000
071600     SET TBL-INDEX-1 TO 1.                                        07210000
071700     INITIALIZE PC-CNT-REFRESH-CSR.                               07220000
071800                                                                  07230000
071900     OPEN INPUT  CONTROL-CARD-1                                   07240000
072000                 CONTROL-CARD-2                                   07250000
072100                 CONTROL-CARD-3                                   07260000
072200          OUTPUT FULL-XREF-DRIVER-FILE                            07270000
072300                 FULL-SKU-GLOBAL-FILE                             07280000
072400                 FULL-SKU-PRICING-GLOBAL-FILE                     07290000
072500                 FULL-SKU-PRICING-STORE-FILE.                     07300000
072600                                                                  07310000
072700     PERFORM 1500-READ-CONTROL-CARD-1.                            07320000
072800     PERFORM 1600-READ-CONTROL-CARD-2.                            07330000
072900     PERFORM 1700-READ-CONTROL-CARD-3.                            07340000
073000                                                                  07350000
073100     MOVE CC-EPCC112-TOMORROW-DATE  TO PV-STRT-DTE                07360000
073200                                       PV-PRIC-EFF-DTE.           07370000
073300     MOVE PC-PRIC-EFF-TIME-STD      TO PV-PRIC-EFF-TIME.          07380000
073400     DISPLAY 'PRIC EFF TMST TO SQLS: ' PV-PRIC-EFF-TMST.          07390000
073500                                                                  07400000
073600     MOVE CC-EPCC140-TODAY-DATE     TO PV-TODAY-DTE.              07410000
073700     MOVE EP045-DAYS-TILL-STORE-OPN TO PV-DAYS-AHEAD.             07420000
073800     MOVE PV-DAYS-AHEAD             TO PV-SAVE-ADDED-DAYS.        07430000
073900     PERFORM 1800-GET-DATE.                                       07440000
074000                                                                  07450000
074100     DISPLAY 'OPENING REFRESH CURSOR'.                            07460000
074200     PERFORM 1200-OPEN-REFRESH-CURSOR.                            07470000
074300     PERFORM 1300-FETCH-REFRESH-CURSOR.                           07480000
074400                                                                  07490000
074500     IF PS-END-OF-REFRESH-CSR                                     07500000
074600        PERFORM 1400-CLOSE-REFRESH-CURSOR                         07510000
074700        DISPLAY 'NO STORES IDENTIFIED TO RECEIVE A REFRESH'       07520000
074800        DISPLAY 'NO REFRESH OF PLU AND XREF DATA TODAY'           07530000
074900        SET PS-NO-STRS-FOUND TO TRUE                              07540000
075000     ELSE                                                         07550000
075100        SET PS-STRS-FOUND TO TRUE                                 07560000
075200        PERFORM 1100-CREATE-REFRESH-ARRAY                         07570000
075300                UNTIL PS-END-OF-REFRESH-CSR                       07580000
075400        PERFORM 1400-CLOSE-REFRESH-CURSOR                         07590000
075500     END-IF.                                                      07600000
075600                                                                  07610000
075700*1000-EXIT.                                                       07620000
075800                                                                  07630000
075900*----------------------------------------------------------       07640000
076000* 1100-CREATE-REFRESH-ARRAY.                                      07650000
076100*     CREATE AN ARRAY THAT STORES ALL THE STORES THAT NEED        07660000
076200*     A REFRESH.                                                  07670000
076300*----------------------------------------------------------       07680000
076400 1100-CREATE-REFRESH-ARRAY.                                       07690000
076500                                                                  07700000
076600     MOVE PV-DB2-STR-NBR    TO TBL-STR-NBR (TBL-INDEX-1).         07710000
076700                                                                  07720000
076800     MOVE PV-DB2-STR-NBR    TO PV-DISPLAY-STR-NBR.                07730000
076900     DISPLAY 'REFRESHING STORE ' PV-DISPLAY-STR-NBR.              07740000
077000                                                                  07750000
077100     SET TBL-INDEX-1 UP BY 1.                                     07760000
077200     PERFORM 1300-FETCH-REFRESH-CURSOR.                           07770000
077300                                                                  07780000
077400*1100-EXIT.                                                       07790000
077500                                                                  07800000
077600*----------------------------------------------------------       07810000
077700* 1200-OPEN-REFRESH-CURSOR.                                       07820000
077800*     OPEN THE REFRESH CURSOR.                                    07830000
077900*----------------------------------------------------------       07840000
078000 1200-OPEN-REFRESH-CURSOR.                                        07850000
078100                                                                  07860000
078200     PERFORM                                                      07870000
078300         WITH TEST AFTER                                          07880000
078400         VARYING PV-SQL-SUB                                       07890000
078500         FROM 1 BY 1                                              07900000
078600         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 07910000
078700                   OR  SQLCODE = 0)                               07920000
078800                                                                  07930000
078900           EXEC SQL                                               07940000
079000              OPEN REFRESH-CURSOR                                 07950000
079100           END-EXEC                                               07960000
079200                                                                  07970000
079300         EVALUATE TRUE                                            07980000
079400             WHEN SQLCODE = -904                                  07990000
079500             WHEN SQLCODE = -911                                  08000000
079600             WHEN SQLCODE = -913                                  08010000
079700                  CONTINUE                                        08020000
079800             WHEN SQLCODE = 0                                     08030000
079900                  SET PS-MORE-REFRESH-CSR TO TRUE                 08040000
080000             WHEN SQLWARN0 NOT EQUAL SPACE                        08050000
080100             WHEN SQLCODE NOT EQUAL ZERO                          08060000
080200                  MOVE '1200-OPEN-REFRESH-CURSOR'                 08070000
080300                                     TO PV-PARAGRAPH-NAME         08080000
080400                  MOVE 'ERROR ON OPEN OF REFRESH CURSOR'          08090000
080500                                     TO PV-DB2-OPERATION          08100000
080600                  PERFORM 9900-SQL-ABEND-ROUTINE                  08110000
080700         END-EVALUATE                                             08120000
080800     END-PERFORM.                                                 08130000
080900                                                                  08140000
081000     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         08150000
081100        MOVE '1200-OPEN-REFRESH-CURSOR'                           08160000
081200                             TO  PV-PARAGRAPH-NAME                08170000
081300        MOVE 'OPEN RETRIES EXCEEDED'                              08180000
081400                              TO  PV-DB2-OPERATION                08190000
081500        PERFORM 9900-SQL-ABEND-ROUTINE                            08200000
081600     END-IF.                                                      08210000
081700                                                                  08220000
081800*1200-EXIT.                                                       08230000
081900                                                                  08240000
082000*----------------------------------------------------------       08250000
082100* 1300-FETCH-REFRESH-CURSOR.                                      08260000
082200*     FETCH THE REFRESH CURSOR.                                   08270000
082300*----------------------------------------------------------       08280000
082400 1300-FETCH-REFRESH-CURSOR.                                       08290000
082500                                                                  08300000
082600     PERFORM                                                      08310000
082700         WITH TEST AFTER                                          08320000
082800         VARYING PV-SQL-SUB                                       08330000
082900         FROM 1 BY 1                                              08340000
083000         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 08350000
083100                   OR  SQLCODE = 0                                08360000
083200                   OR  SQLCODE = +100)                            08370000
083300                                                                  08380000
083400           EXEC SQL                                               08390000
083500              FETCH REFRESH-CURSOR                                08400000
083600              INTO  :PV-DB2-STR-NBR                               08410000
083700           END-EXEC                                               08420000
083800                                                                  08430000
083900          EVALUATE TRUE                                           08440000
084000             WHEN SQLCODE = -904                                  08450000
084100             WHEN SQLCODE = -911                                  08460000
084200             WHEN SQLCODE = -913                                  08470000
084300                  CONTINUE                                        08480000
084400             WHEN SQLCODE = ZERO                                  08490000
084500                  ADD 1 TO PC-CNT-REFRESH-CSR                     08500000
084600             WHEN SQLCODE = +100                                  08510000
084700                  SET PS-END-OF-REFRESH-CSR TO TRUE               08520000
084800             WHEN SQLWARN0 NOT EQUAL SPACE                        08530000
084900             WHEN SQLCODE NOT EQUAL ZERO                          08540000
085000                  MOVE '1300-FETCH-REFRESH-CURSOR'                08550000
085100                                     TO PV-PARAGRAPH-NAME         08560000
085200                  MOVE 'ERROR ON FETCHING REFRESH CURSOR'         08570000
085300                                     TO PV-DB2-OPERATION          08580000
085400                  DISPLAY 'SQLCODE= ' SQLCODE                     08590000
085500                  PERFORM 9900-SQL-ABEND-ROUTINE                  08600000
085600          END-EVALUATE                                            08610000
085700     END-PERFORM.                                                 08620000
085800                                                                  08630000
085900     IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        08640000
086000         MOVE '1300-FETCH-REFRESH-CURSOR'                         08650000
086100                               TO  PV-PARAGRAPH-NAME              08660000
086200         MOVE 'FETCH RETRIES EXCEEDED'                            08670000
086300                               TO  PV-DB2-OPERATION               08680000
086400         PERFORM 9900-SQL-ABEND-ROUTINE                           08690000
086500     END-IF.                                                      08700000
086600                                                                  08710000
086700*1300-EXIT.                                                       08720000
086800                                                                  08730000
086900*-----------------------------------------------------------      08740000
087000* 1400-CLOSE-REFRESH-CURSOR.                                      08750000
087100*     CLOSE THE REFRESH CURSOR.                                   08760000
087200*-----------------------------------------------------------      08770000
087300 1400-CLOSE-REFRESH-CURSOR.                                       08780000
087400                                                                  08790000
087500     PERFORM                                                      08800000
087600         WITH TEST AFTER                                          08810000
087700         VARYING PV-SQL-SUB                                       08820000
087800         FROM 1 BY 1                                              08830000
087900         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 08840000
088000                   OR  SQLCODE = 0)                               08850000
088100                                                                  08860000
088200           EXEC SQL                                               08870000
088300              CLOSE REFRESH-CURSOR                                08880000
088400           END-EXEC                                               08890000
088500                                                                  08900000
088600          EVALUATE TRUE                                           08910000
088700             WHEN SQLCODE = -904                                  08920000
088800             WHEN SQLCODE = -911                                  08930000
088900             WHEN SQLCODE = -913                                  08940000
089000             WHEN SQLCODE = 0                                     08950000
089100                  CONTINUE                                        08960000
089200             WHEN SQLWARN0 NOT EQUAL SPACE                        08970000
089300             WHEN SQLCODE NOT EQUAL ZERO                          08980000
089400                  MOVE '1400-CLOSE-REFRESH-CURSOR'                08990000
089500                                      TO PV-PARAGRAPH-NAME        09000000
089600                  MOVE 'ERROR ON CLOSE OF REFRESH CURSOR'         09010000
089700                                      TO PV-DB2-OPERATION         09020000
089800                  PERFORM 9900-SQL-ABEND-ROUTINE                  09030000
089900          END-EVALUATE                                            09040000
090000     END-PERFORM.                                                 09050000
090100                                                                  09060000
090200     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         09070000
090300        MOVE '1400-CLOSE-REFRESH-CURSOR'                          09080000
090400                               TO  PV-PARAGRAPH-NAME              09090000
090500        MOVE 'CLOSE RETRIES EXCEEDED'                             09100000
090600                               TO  PV-DB2-OPERATION               09110000
090700        PERFORM 9900-SQL-ABEND-ROUTINE                            09120000
090800     END-IF.                                                      09130000
090900                                                                  09140000
091000*1400-EXIT.                                                       09150000
091100                                                                  09160000
091200*----------------------------------------------------------       09170000
091300* 1500-READ-CONTROL-CARD-1.                                       09180000
091400*     READ CONTROL CARD 1.  THIS GETS THE FUTURE DATE THAT        09190000
091500*     NEEDS TO BE PROCESSED.                                      09200000
091600*----------------------------------------------------------       09210000
091700 1500-READ-CONTROL-CARD-1.                                        09220000
091800                                                                  09230000
091900     READ CONTROL-CARD-1 INTO CC-EPCC112-CONTROL-CARD.            09240000
092000                                                                  09250000
092100     IF CC-EPCC112-TOMORROW-DATE     = SPACES                     09260000
092200        DISPLAY 'INVALID CONTROL CARD'                            09270000
092300        DISPLAY 'TOMORROWS DATE: ' CC-EPCC112-TOMORROW-DATE       09280000
092400        MOVE '1500-READ-CONTROL-CARD-1' TO PV-PARAGRAPH-NAME      09290000
092500        MOVE 'CONTROL CARD IS INVALID'  TO PV-OPERATION-MSG-1     09300000
092600        SET ABEND-4003-CTRL-CARD-ERROR  TO TRUE                   09310000
092700        PERFORM 9800-ABEND                                        09320000
092800     ELSE                                                         09330000
092900        DISPLAY 'TOMORROWS DATE: ' CC-EPCC112-TOMORROW-DATE       09340000
093000     END-IF.                                                      09350000
093100                                                                  09360000
093200*1500-EXIT.                                                       09370000
093300                                                                  09380000
093400*----------------------------------------------------------       09390000
093500* 1600-READ-CONTROL-CARD-2.                                       09400000
093600*     READ CONTROL CARD 2.  THIS GETS THE NUMBER OF DAYS          09410000
093700*     FOR WHICH A NEW STORE SHOULD BE ADDED TO THE                09420000
093800*     DISTRIBUTION LIST.                                          09430000
093900*----------------------------------------------------------       09440000
094000 1600-READ-CONTROL-CARD-2.                                        09450000
094100                                                                  09460000
094200     READ CONTROL-CARD-2 INTO EP045-ADVDAYS-TO-SND-RECORD.        09470000
094300                                                                  09480000
094400     IF EP045-DAYS-TILL-STORE-OPN = SPACES                        09490000
094500        DISPLAY 'INVALID CONTROL CARD'                            09500000
094600        DISPLAY 'DAYS TILL STORE OPEN: ' EP045-DAYS-TILL-STORE-OPN09510000
094700        MOVE '1600-READ-CONTROL-CARD-2' TO PV-PARAGRAPH-NAME      09520000
094800        MOVE 'CONTROL CARD IS INVALID'  TO PV-OPERATION-MSG-1     09530000
094900        SET ABEND-4003-CTRL-CARD-ERROR  TO TRUE                   09540000
095000        PERFORM 9800-ABEND                                        09550000
095100     ELSE                                                         09560000
095200        DISPLAY 'DAYS TILL STORE OPEN: ' EP045-DAYS-TILL-STORE-OPN09570000
095300     END-IF.                                                      09580000
095400                                                                  09590000
095500*1600-EXIT.                                                       09600000
095600                                                                  09610000
095700*----------------------------------------------------------       09620000
095800* 1700-READ-CONTROL-CARD-3.                                       09630000
095900*     READ CONTROL CARD 3.  THIS GETS TODAY'S DATE                09640000
096000*     FOR PROCESSING PURPOSES.                                    09650000
096100*----------------------------------------------------------       09660000
096200 1700-READ-CONTROL-CARD-3.                                        09670000
096300                                                                  09680000
096400     READ CONTROL-CARD-3 INTO CC-EPCC140-CONTROL-CARD.            09690000
096500                                                                  09700000
096600     IF CC-EPCC140-TODAY-DATE     = SPACES                        09710000
096700        DISPLAY 'INVALID CONTROL CARD'                            09720000
096800        DISPLAY 'TODAYS DATE: ' CC-EPCC140-TODAY-DATE             09730000
096900        MOVE '1700-READ-CONTROL-CARD-1' TO PV-PARAGRAPH-NAME      09740000
097000        MOVE 'CONTROL CARD IS INVALID'  TO PV-OPERATION-MSG-1     09750000
097100        SET ABEND-4003-CTRL-CARD-ERROR  TO TRUE                   09760000
097200        PERFORM 9800-ABEND                                        09770000
097300     ELSE                                                         09780000
097400        DISPLAY 'TODAYS DATE: ' CC-EPCC140-TODAY-DATE             09790000
097500     END-IF.                                                      09800000
097600                                                                  09810000
097700*1700-EXIT.                                                       09820000
097800                                                                  09830000
097900*----------------------------------------------------------       09840000
098000* 1800-GET-DATE.                                                  09850000
098100*     ADDS THE NUMBER OF DAYS FROM CONTROL CARD 2 TO              09860000
098200*     TODAY'S DATE.                                               09870000
098300*----------------------------------------------------------       09880000
098400 1800-GET-DATE.                                                   09890000
098500                                                                  09900000
098600     INITIALIZE DPG51 DPG52 DPG53 DPG54 DPG55 DPG56.              09910000
098700     MOVE PV-TODAY-DTE                 TO DPG52-LK-DATE-INPUT.    09920000
098800     SET  DPG51-ACTUAL-CALENDAR-ONLY   TO TRUE.                   09930000
098900     SET  DPG52-LK-DTE-ISO-FMT         TO TRUE.                   09940000
099000     SET  DPG51-INCREMENT-DATE         TO TRUE.                   09950000
099100     MOVE PV-SAVE-ADDED-DAYS           TO DPG51-INCR-DECR-DAYS-X. 09960000
099200     SET PS-DATE-NOT-FOUND TO TRUE.                               09970000
099300                                                                  09980000
099400     PERFORM 1810-DATE-ROUTINE.                                   09990000
099500     IF PS-DATE-FOUND                                             10000000
099600        MOVE DPG55-DB2-ISO-DATE-FMT TO PV-NEW-OPEN-DATE           10010000
099700        DISPLAY 'NEW DATE:' PV-NEW-OPEN-DATE                      10020000
099800     END-IF.                                                      10030000
099900                                                                  10040000
100000*1800-EXIT.                                                       10050000
100100                                                                  10060000
100200*----------------------------------------------------------       10070000
100300* 1810-DATE-ROUTINE.                                              10080000
100400*     CALLS KOHL'S DATE ROUTINE.                                  10090000
100500*----------------------------------------------------------       10100000
100600 1810-DATE-ROUTINE.                                               10110000
100700                                                                  10120000
100800     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51 DPG52 DPG53    10130000
100900                                             DPG54 DPG55 DPG56.   10140000
101000     EVALUATE TRUE                                                10150000
101100         WHEN DPG54-NO-ERROR                                      10160000
101200             DISPLAY ' '                                          10170000
101300             DISPLAY 'RETRIEVING NEW CALCULATED DATE'             10180000
101400             DISPLAY 'DPKUT500 DATE RETRIEVED:'                   10190000
101500                DPG55-DB2-ISO-DATE-FMT                            10200000
101600             SET PS-DATE-FOUND TO TRUE                            10210000
101700         WHEN DPG54-SEVERE-ERROR                                  10220000
101800             DISPLAY ' '                                          10230000
101900             DISPLAY '** ABEND ** IN EPKUT158'                    10240000
102000             DISPLAY '** INVALID RETURN FROM CALENDAR ROUTINE'    10250000
102100             DISPLAY '** CALLED BY 1800-GET-DATE'                 10260000
102200             DISPLAY '** ERROR MESSAGE = '                        10270000
102300                               DPG54-ERROR-MESSAGE                10280000
102400             DISPLAY '** DPG51 = ' DPG51                          10290000
102500             DISPLAY '** DPG52 = ' DPG52                          10300000
102600             DISPLAY '** DPG53 = ' DPG53                          10310000
102700             DISPLAY '** DPG54 = ' DPG54                          10320000
102800             DISPLAY '** DPG55 = ' DPG55                          10330000
102900             DISPLAY '** DPG56 = ' DPG56                          10340000
103000             MOVE '1800-GET-DATE'                                 10350000
103100                                  TO PV-PARAGRAPH-NAME            10360000
103200             MOVE 'ERROR VALIDATING INPUT CARD DATE'              10370000
103300                                  TO PV-OPERATION-MSG-1           10380000
103400             MOVE DPG54-ERROR-MESSAGE  TO PV-OPERATION-MSG-2      10390000
103500             SET ABEND-4019-CAL-SUB-ERROR TO TRUE                 10400000
103600             PERFORM 9800-ABEND                                   10410000
103700     END-EVALUATE.                                                10420000
103800                                                                  10430000
103900*1810-EXIT.                                                       10440000
104000                                                                  10450000
104100*----------------------------------------------------------       10460000
104200* 2000-PROCESS-CURSORS.                                           10470000
104300*     FETCHES THE MERCHANDISE CURSOR AND THEN FETCHES ANY         10480000
104400*     STYLE ID'S THAT ARE WITHIN THOSE DEPARTMENT AND SUB         10490000
104500*     CLASSES.  CREATES DUMMY SKU RECORDS.                        10500000
104600*----------------------------------------------------------       10510000
104700 2000-PROCESS-CURSORS.                                            10520000
104800                                                                  10530000
104900     ADD +1 TO PC-CNT-DISPLAY-RECS.                               10540000
105000     IF PC-CNT-DISPLAY-RECS > 500                                 10550000
105100         DISPLAY '                       '                        10560000
105200         DISPLAY '---  INTERIM COUNTS ---'                        10570000
105300         DISPLAY 'NUMBER OF GLBL RECORDS WRITTEN: '               10580000
105400                 PC-CNT-GLBL-SKU-RECS                             10590000
105500         DISPLAY 'NUMBER OF PLU STORE RECS WRITTEN: '             10600000
105600                 PC-CNT-SKU-PRICG-STR-RECS                        10610000
105700                                                                  10620000
105800         MOVE ZEROES TO PC-CNT-DISPLAY-RECS                       10630000
105900     END-IF.                                                      10640000
106000                                                                  10650000
106100     IF PV-DB2-SC-DWNLD-EXC-IND = 'Y'                             10660000
106200        ADD 1 TO PC-CNT-SC-EXC-DUMMY-RECS                         10670000
106300     ELSE                                                         10680000
106400        PERFORM 2100-POPULATE-DUMMY-RECS                          10690000
106500        PERFORM 8000-WRITE-XREF-DR-REC                            10700000
106600        PERFORM 5000-CREATE-DUMMY-SKU-RECS                        10710000
106700     END-IF.                                                      10720000
106800                                                                  10730000
106900     PERFORM 3400-OPEN-SKU-CURSOR.                                10740000
107000     PERFORM 3500-FETCH-SKU-CURSOR.                               10750000
107100     PERFORM 3000-PROCESS-SKU-CSR                                 10760000
107200             UNTIL PS-END-OF-SKU-CSR.                             10770000
107300     PERFORM 3600-CLOSE-SKU-CURSOR.                               10780000
107400                                                                  10790000
107500     PERFORM 2300-FETCH-MERCH-CURSOR.                             10800000
107600                                                                  10810000
107700*2000-EXIT.                                                       10820000
107800                                                                  10830000
107900*----------------------------------------------------------       10840000
108000* 2100-POPULATE-DUMMY-RECS.                                       10850000
108100*     POPULATE THE DUMMY RECORDS.  POPULATES THE FULL             10860000
108200*     GLOBAL PLU RECORD AND THE FULL XREF DRIVER RECORD WITH      10870000
108300*     DUMMY DATA.                                                 10880000
108400*----------------------------------------------------------       10890000
108500 2100-POPULATE-DUMMY-RECS.                                        10900000
108600                                                                  10910000
108700     INITIALIZE EP074-XREF-DRIVE-RECORD.                          10920000
108800                                                                  10930000
108900     MOVE PV-DB2-DEPT-NBR          TO PV-SAVE-DEPT-NBR.           10940000
109000     MOVE PV-SAVE-DEPT-NBR-X       TO PV-PLU-KEY-DEPT.            10950000
109100     MOVE PV-DB2-SUB-CL-NBR        TO PV-SAVE-SUB-CL-NBR          10960000
109200     MOVE PV-SAVE-SUB-CL-NBR-X     TO PV-PLU-KEY-CLASS.           10970000
109300                                                                  10980000
109400     MOVE PV-SAVE-DEPT-NBR-X       TO PV-SKU-NBR-DEPT.            10990000
109500     MOVE PV-SAVE-SUB-CL-NBR-X     TO PV-SKU-NBR-CLASS.           11000000
109600                                                                  11010000
109700     MOVE PV-PLU-KEY-DUMMY         TO EP074-INTERNAL-UPC-ID.      11020000
109800     MOVE PV-SKU-NBR-DUMMY         TO EP074-SKU-NBR.              11030000
109900                                                                  11040000
110000*2100-EXIT.                                                       11050000
110100                                                                  11060000
110200*----------------------------------------------------------       11070000
110300* 2200-OPEN-MERCH-CURSOR.                                         11080000
110400*     OPEN THE MERCHANDISE CURSOR.                                11090000
110500*----------------------------------------------------------       11100000
110600 2200-OPEN-MERCH-CURSOR.                                          11110000
110700                                                                  11120000
110800     PERFORM                                                      11130000
110900         WITH TEST AFTER                                          11140000
111000         VARYING PV-SQL-SUB                                       11150000
111100         FROM 1 BY 1                                              11160000
111200         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 11170000
111300                   OR  SQLCODE = 0)                               11180000
111400                                                                  11190000
111500           EXEC SQL                                               11200000
111600              OPEN MERCH-CURSOR                                   11210000
111700           END-EXEC                                               11220000
111800                                                                  11230000
111900         EVALUATE TRUE                                            11240000
112000             WHEN SQLCODE = -904                                  11250000
112100             WHEN SQLCODE = -911                                  11260000
112200             WHEN SQLCODE = -913                                  11270000
112300                  CONTINUE                                        11280000
112400             WHEN SQLCODE = 0                                     11290000
112500                  SET PS-MORE-MERCH-CSR TO TRUE                   11300000
112600             WHEN SQLWARN0 NOT EQUAL SPACE                        11310000
112700             WHEN SQLCODE NOT EQUAL ZERO                          11320000
112800                  MOVE '2200-OPEN-MERCH-CURSOR'                   11330000
112900                                     TO PV-PARAGRAPH-NAME         11340000
113000                  MOVE 'ERROR ON OPEN OF MERCH CURSOR'            11350000
113100                                     TO PV-DB2-OPERATION          11360000
113200                  PERFORM 9900-SQL-ABEND-ROUTINE                  11370000
113300         END-EVALUATE                                             11380000
113400     END-PERFORM.                                                 11390000
113500                                                                  11400000
113600     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         11410000
113700        MOVE '2200-OPEN-MERCH-CURSOR'                             11420000
113800                             TO  PV-PARAGRAPH-NAME                11430000
113900        MOVE 'OPEN RETRIES EXCEEDED'                              11440000
114000                              TO  PV-DB2-OPERATION                11450000
114100        PERFORM 9900-SQL-ABEND-ROUTINE                            11460000
114200     END-IF.                                                      11470000
114300                                                                  11480000
114400*2200-EXIT.                                                       11490000
114500                                                                  11500000
114600*----------------------------------------------------------       11510000
114700* 2300-FETCH-MERCH-CURSOR.                                        11520000
114800*     FETCH THE MERCHANDISE CURSOR.                               11530000
114900*----------------------------------------------------------       11540000
115000 2300-FETCH-MERCH-CURSOR.                                         11550000
115100                                                                  11560000
115200     PERFORM                                                      11570000
115300         WITH TEST AFTER                                          11580000
115400         VARYING PV-SQL-SUB                                       11590000
115500         FROM 1 BY 1                                              11600000
115600         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 11610000
115700                   OR  SQLCODE = 0                                11620000
115800                   OR  SQLCODE = +100)                            11630000
115900                                                                  11640000
116000           EXEC SQL                                               11650000
116100              FETCH MERCH-CURSOR                                  11660000
116200              INTO  :PV-DB2-DEPT-NBR                              11670000
116300                   ,:PV-DB2-MAJ-CL-NBR                            11680000
116400                   ,:PV-DB2-SUB-CL-NBR                            11690000
116500                   ,:PV-DB2-POS-MDSE-DESC                         11700000
116600                   ,:PV-DB2-SC-DWNLD-EXC-IND                      11710000
116700           END-EXEC                                               11720000
116800                                                                  11730000
116900          EVALUATE TRUE                                           11740000
117000             WHEN SQLCODE = -904                                  11750000
117100             WHEN SQLCODE = -911                                  11760000
117200             WHEN SQLCODE = -913                                  11770000
117300                  CONTINUE                                        11780000
117400             WHEN SQLCODE = ZERO                                  11790000
117500                  ADD 1 TO PC-CNT-MERCH-CSR                       11800000
117600             WHEN SQLCODE = +100                                  11810000
117700                  SET PS-END-OF-MERCH-CSR    TO TRUE              11820000
117800             WHEN SQLWARN0 NOT EQUAL SPACE                        11830000
117900             WHEN SQLCODE NOT EQUAL ZERO                          11840000
118000                  MOVE '2300-FETCH-MERCH-CURSOR'                  11850000
118100                                     TO PV-PARAGRAPH-NAME         11860000
118200                  MOVE 'ERROR ON FETCHING MERCH CURSOR'           11870000
118300                                     TO PV-DB2-OPERATION          11880000
118400                  DISPLAY 'SQLCODE= ' SQLCODE                     11890000
118500                  PERFORM 9900-SQL-ABEND-ROUTINE                  11900000
118600          END-EVALUATE                                            11910000
118700     END-PERFORM.                                                 11920000
118800                                                                  11930000
118900     IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        11940000
119000         MOVE '2300-FETCH-MERCH-CURSOR'                           11950000
119100                               TO  PV-PARAGRAPH-NAME              11960000
119200         MOVE 'FETCH RETRIES EXCEEDED'                            11970000
119300                               TO  PV-DB2-OPERATION               11980000
119400         PERFORM 9900-SQL-ABEND-ROUTINE                           11990000
119500     END-IF.                                                      12000000
119600                                                                  12010000
119700*2300-EXIT.                                                       12020000
119800                                                                  12030000
119900*-----------------------------------------------------------      12040000
120000* 2400-CLOSE-MERCH-CURSOR.                                        12050000
120100*     CLOSE THE MERCHANDISE CURSOR.                               12060000
120200*-----------------------------------------------------------      12070000
120300 2400-CLOSE-MERCH-CURSOR.                                         12080000
120400                                                                  12090000
120500     PERFORM                                                      12100000
120600         WITH TEST AFTER                                          12110000
120700         VARYING PV-SQL-SUB                                       12120000
120800         FROM 1 BY 1                                              12130000
120900         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 12140000
121000                   OR  SQLCODE = 0)                               12150000
121100                                                                  12160000
121200           EXEC SQL                                               12170000
121300              CLOSE MERCH-CURSOR                                  12180000
121400           END-EXEC                                               12190000
121500                                                                  12200000
121600          EVALUATE TRUE                                           12210000
121700             WHEN SQLCODE = -904                                  12220000
121800             WHEN SQLCODE = -911                                  12230000
121900             WHEN SQLCODE = -913                                  12240000
122000             WHEN SQLCODE = 0                                     12250000
122100                  CONTINUE                                        12260000
122200             WHEN SQLWARN0 NOT EQUAL SPACE                        12270000
122300             WHEN SQLCODE NOT EQUAL ZERO                          12280000
122400                  MOVE '2400-CLOSE-MERCH-CURSOR'                  12290000
122500                                      TO PV-PARAGRAPH-NAME        12300000
122600                  MOVE 'ERROR ON CLOSE OF MERCH CURSOR'           12310000
122700                                      TO PV-DB2-OPERATION         12320000
122800                  PERFORM 9900-SQL-ABEND-ROUTINE                  12330000
122900          END-EVALUATE                                            12340000
123000     END-PERFORM.                                                 12350000
123100                                                                  12360000
123200     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         12370000
123300        MOVE '2400-CLOSE-MERCH-CURSOR'                            12380000
123400                               TO  PV-PARAGRAPH-NAME              12390000
123500        MOVE 'CLOSE RETRIES EXCEEDED'                             12400000
123600                               TO  PV-DB2-OPERATION               12410000
123700        PERFORM 9900-SQL-ABEND-ROUTINE                            12420000
123800     END-IF.                                                      12430000
123900                                                                  12440000
124000*2400-EXIT.                                                       12450000
124100                                                                  12460000
124200*----------------------------------------------------------       12470000
124300* 3000-PROCESS-SKU-CSR.                                           12480000
124400*     FETCHES ANY SKUS THAT CORRESPOND TO THE DEPT/SUB CLASS DATA 12490000
124500*     FETCHED.  SELECTS VENDOR DEPARTMENT DATA, WHICH CAN NOT BE  12500000
124600*     JOINED TO THE CURSOR.  WRITES ANY XREF DRIVER RECORDS,      12510000
124700*     FULL GLOBAL PLU RECORDS, AND STORE RECORDS OF AD VERSION    12520000
124800*     RETURN PRICE DATA.                                          12530000
124900*----------------------------------------------------------       12540000
125000 3000-PROCESS-SKU-CSR.                                            12550000
125100                                                                  12560000
125200     INITIALIZE EP074-XREF-DRIVE-RECORD.                          12570000
125300     MOVE PV-DB2-INTR-UPC-ID TO PV-INTR-UPC-ID.                   12580000
125400     MOVE PV-INTR-UPC-ID     TO EP074-INTERNAL-UPC-ID.            12590000
125500     MOVE PV-DB2-SKU-NBR     TO EP074-SKU-NBR.                    12600000
125600     PERFORM 8000-WRITE-XREF-DR-REC.                              12610000
125700                                                                  12620000
125800     SET PS-GBL-REC TO TRUE.                                      12630000
125900                                                                  12640000
126000     PERFORM 5100-CREATE-GLOBAL-SKU-RCD.                          12650000
126100     PERFORM 5200-CREATE-GLBL-SKU-PRICG-RCD.                      12660000
126200                                                                  12670000
126300     PERFORM 3200-CREATE-STR-RTN-FILES.                           12680000
126400                                                                  12690000
126500     PERFORM 3500-FETCH-SKU-CURSOR.                               12700000
126600                                                                  12710000
126700*3000-EXIT.                                                       12720000
126800                                                                  12730000
126900*----------------------------------------------------------       12740000
127000* 3200-CREATE-STR-RTN-FILES.                                      12750000
127100*     PROCESS ANY DATA IN THE STORE/AD VERSION TABLE TO CREATE    12760000
127200*     FULL PLU STORE RECORDS FOR EACH SKU THAT HAS ANY INFO       12770000
127300*     OUT ON THE TABLES TO CORRESPOND TO A CERTAIN STORE.         12780000
127400*     THIS CREATES THE RETURN PRICE STORE FILES.                  12790000
127500*----------------------------------------------------------       12800000
127600 3200-CREATE-STR-RTN-FILES.                                       12810000
127700                                                                  12820000
127800     INITIALIZE PV-SAVE-STR-NBR.                                  12830000
127900                                                                  12840000
128000     PERFORM VARYING TBL-INDEX-1 FROM 1 BY 1                      12850000
128100        UNTIL (TBL-INDEX-1 > PC-CNT-REFRESH-CSR)                  12860000
128200                                                                  12870000
128300        MOVE TBL-STR-NBR (TBL-INDEX-1)    TO PV-SAVE-STR-NBR      12880000
128400                                                                  12890000
128500        PERFORM 3210-SELECT-LWST-13-WK-PRC                        12900000
128600        IF PS-AD-REC-FOUND                                        12910000
128700           SET PS-STR-RTN-PRC-REC TO TRUE                         12920000
128800           MOVE PV-LOWEST-RTL-PRC  TO PV-RETURN-UNIT-PRC          12930000
128900           PERFORM 5300-CREATE-STR-SKU-PRICG-RCD                  12940000
129000        ELSE                                                      12950000
129100              PERFORM 3220-SELECT-MIN-UNT-RTL-AMT                 12960000
129200              IF PS-RTN-PRC-FOUND                                 12970000
129300                 IF PV-SAVE-MIN-RTL-AMT < PV-SAVE-CORP-UNT-RTL    12980000
129400                    SET PS-STR-RTN-PRC-REC TO TRUE                12990000
129500                    MOVE PV-MIN-UNT-RTL-AMT                       13000000
129600                                  TO PV-RETURN-UNIT-PRC           13010000
129700                    PERFORM 5300-CREATE-STR-SKU-PRICG-RCD         13020000
129800                 END-IF                                           13030000
129900              END-IF                                              13040000
130000        END-IF                                                    13050000
130100     END-PERFORM.                                                 13060000
130200                                                                  13070000
130300*3200-EXIT.                                                       13080000
130400                                                                  13090000
130500*----------------------------------------------------------       13100000
130600* 3210-SELECT-LWST-13-WK-PRC.                                     13110000
130700*     SELECTS THE LOWEST 13-WEEK PRICE DETERMINED FOR THE         13120000
130800*     SKU ACROSS ALL AD VERSION LEVELS..                          13130000
130900*----------------------------------------------------------       13140000
131000 3210-SELECT-LWST-13-WK-PRC.                                      13150000
131100                                                                  13160000
131200     PERFORM                                                      13170000
131300         WITH TEST AFTER                                          13180000
131400         VARYING PV-SQL-SUB                                       13190000
131500         FROM 1 BY 1                                              13200000
131600         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 13210000
131700                   OR  SQLCODE = 0                                13220000
131800                   OR  SQLCODE = +100                             13230000
131900                   OR  SQLCODE = -305)                            13240000
132000                                                                  13250000
132100          EXEC SQL                                                13260000
132200               SELECT  MIN(UNT_RTL_AMT)                           13270000
132300                 INTO :PV-LOWEST-RTL-PRC                          13280000
132400                 FROM EPT_LO_RTL                                  13290000
132500                WHERE INTR_UPC_ID    = :PV-DB2-INTR-UPC-ID        13300000
132600                  AND STR_GP_TYP_CDE = 4000                       13310000
132700                WITH UR                                           13320000
132800          END-EXEC                                                13330000
132900                                                                  13340000
133000          EVALUATE TRUE                                           13350000
133100              WHEN SQLCODE = -904                                 13360000
133200              WHEN SQLCODE = -911                                 13370000
133300              WHEN SQLCODE = -913                                 13380000
133400                  CONTINUE                                        13390000
133500              WHEN SQLCODE = ZERO                                 13400000
133600                   SET PS-AD-REC-FOUND TO TRUE                    13410000
133700              WHEN SQLCODE = +100 OR -305                         13420000
133800                   SET PS-AD-REC-NOT-FOUND TO TRUE                13430000
133900              WHEN SQLCODE NOT EQUAL ZERO                         13440000
134000                   MOVE '3120-SELECT-LWST-13-WK-PRC'              13450000
134100                                       TO PV-PARAGRAPH-NAME       13460000
134200                   MOVE 'SELECT AD VERSION'                       13470000
134300                                       TO PV-DB2-OPERATION        13480000
134400                   PERFORM 9900-SQL-ABEND-ROUTINE                 13490000
134500          END-EVALUATE                                            13500000
134600     END-PERFORM.                                                 13510000
134700                                                                  13520000
134800     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         13530000
134900        MOVE '3120-SELECT-LWST-13-WK-PRC'                         13540000
135000                            TO PV-PARAGRAPH-NAME                  13550000
135100        MOVE 'SELECT RETRIES EXCEEDED'                            13560000
135200                            TO PV-DB2-OPERATION                   13570000
135300        PERFORM 9900-SQL-ABEND-ROUTINE                            13580000
135400     END-IF.                                                      13590000
135500                                                                  13600000
135600*3210-EXIT.                                                       13610000
135700                                                                  13620000
135800*----------------------------------------------------------       13630000
135900* 3220-SELECT-MIN-UNT-RTL-AMT.                                    13640000
136000*     SELECTS THE MINIMUM UNIT RETAIL AMOUNT FOR THE              13650000
136100*     INTR-UPC-ID ACROSS ALL STORE GROUPS.                        13660000
136200*----------------------------------------------------------       13670000
136300 3220-SELECT-MIN-UNT-RTL-AMT.                                     13680000
136400                                                                  13690000
136500     PERFORM                                                      13700000
136600         WITH TEST AFTER                                          13710000
136700         VARYING PV-SQL-SUB                                       13720000
136800         FROM 1 BY 1                                              13730000
136900         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 13740000
137000                   OR  SQLCODE = 0                                13750000
137100                   OR  SQLCODE = +100                             13760000
137200                   OR  SQLCODE = -305)                            13770000
137300                                                                  13780000
137400          EXEC SQL                                                13790000
137500               SELECT  MIN(UNT_RTL_AMT)                           13800000
137600                 INTO :PV-MIN-UNT-RTL-AMT                         13810000
137700                 FROM XST_SKU_LOC                                 13820000
137800                WHERE INTR_UPC_ID    = :PV-DB2-INTR-UPC-ID        13830000
137900                  AND END_TMST      IS NULL                       13840000
138000                WITH UR                                           13850000
138100          END-EXEC                                                13860000
138200                                                                  13870000
138300          EVALUATE TRUE                                           13880000
138400              WHEN SQLCODE = -904                                 13890000
138500              WHEN SQLCODE = -911                                 13900000
138600              WHEN SQLCODE = -913                                 13910000
138700                  CONTINUE                                        13920000
138800              WHEN SQLCODE = ZERO                                 13930000
138900                   SET PS-RTN-PRC-FOUND TO TRUE                   13940000
139000                   MOVE PV-MIN-UNT-RTL-AMT TO PV-SAVE-MIN-RTL-AMT 13950000
139100              WHEN SQLCODE = +100 OR -305                         13960000
139200                   SET PS-RTN-PRC-NOT-FOUND TO TRUE               13970000
139300              WHEN SQLCODE NOT EQUAL ZERO                         13980000
139400                   MOVE '3130-SELECT-MIN-UNT-RTL-AMT'             13990000
139500                                       TO PV-PARAGRAPH-NAME       14000000
139600                   MOVE 'SELECT MIN RTL AMT'                      14010000
139700                                       TO PV-DB2-OPERATION        14020000
139800                   PERFORM 9900-SQL-ABEND-ROUTINE                 14030000
139900          END-EVALUATE                                            14040000
140000     END-PERFORM.                                                 14050000
140100                                                                  14060000
140200     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         14070000
140300        MOVE '3130-SELECT-MIN-UNT-RTL-AMT'                        14080000
140400                            TO PV-PARAGRAPH-NAME                  14090000
140500        MOVE 'SELECT RETRIES EXCEEDED'                            14100000
140600                            TO PV-DB2-OPERATION                   14110000
140700        PERFORM 9900-SQL-ABEND-ROUTINE                            14120000
140800     END-IF.                                                      14130000
140900                                                                  14140000
141000*3220-EXIT.                                                       14150000
141100                                                                  14160000
141200*----------------------------------------------------------       14170000
141300* 3400-OPEN-SKU-CURSOR.                                           14180000
141400*     OPEN THE STYLE SKUS CURSOR.                                 14190000
141500*----------------------------------------------------------       14200000
141600 3400-OPEN-SKU-CURSOR.                                            14210000
141700                                                                  14220000
141800     PERFORM                                                      14230000
141900         WITH TEST AFTER                                          14240000
142000         VARYING PV-SQL-SUB                                       14250000
142100         FROM 1 BY 1                                              14260000
142200         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 14270000
142300                   OR  SQLCODE = 0)                               14280000
142400                                                                  14290000
142500           EXEC SQL                                               14300000
142600              OPEN STYL-SKUS-CURSOR                               14310000
142700           END-EXEC                                               14320000
142800                                                                  14330000
142900         EVALUATE TRUE                                            14340000
143000             WHEN SQLCODE = -904                                  14350000
143100             WHEN SQLCODE = -911                                  14360000
143200             WHEN SQLCODE = -913                                  14370000
143300                  CONTINUE                                        14380000
143400             WHEN SQLCODE = 0                                     14390000
143500                  SET PS-MORE-SKU-CSR TO TRUE                     14400000
143600             WHEN SQLWARN0 NOT EQUAL SPACE                        14410000
143700             WHEN SQLCODE NOT EQUAL ZERO                          14420000
143800                  MOVE '3400-OPEN-SKU-CURSOR'                     14430000
143900                                     TO PV-PARAGRAPH-NAME         14440000
144000                  MOVE 'ERROR ON OPEN OF SKU CURSOR'              14450000
144100                                     TO PV-DB2-OPERATION          14460000
144200                  PERFORM 9900-SQL-ABEND-ROUTINE                  14470000
144300         END-EVALUATE                                             14480000
144400     END-PERFORM.                                                 14490000
144500                                                                  14500000
144600     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         14510000
144700        MOVE '3400-OPEN-SKU-CURSOR'                               14520000
144800                             TO  PV-PARAGRAPH-NAME                14530000
144900        MOVE 'OPEN RETRIES EXCEEDED'                              14540000
145000                              TO  PV-DB2-OPERATION                14550000
145100        PERFORM 9900-SQL-ABEND-ROUTINE                            14560000
145200     END-IF.                                                      14570000
145300                                                                  14580000
145400*3400-EXIT.                                                       14590000
145500                                                                  14600000
145600*----------------------------------------------------------       14610000
145700* 3500-FETCH-SKU-CURSOR.                                          14620000
145800*     FETCH THE STYLE SKUS CURSOR.                                14630000
145900*----------------------------------------------------------       14640000
146000 3500-FETCH-SKU-CURSOR.                                           14650000
146100                                                                  14660000
146200     PERFORM                                                      14670000
146300         WITH TEST AFTER                                          14680000
146400         VARYING PV-SQL-SUB                                       14690000
146500         FROM 1 BY 1                                              14700000
146600         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 14710000
146700                   OR  SQLCODE = 0                                14720000
146800                   OR  SQLCODE = +100)                            14730000
146900                                                                  14740000
147000           EXEC SQL                                               14750000
147100              FETCH STYL-SKUS-CURSOR                              14760000
147200              INTO  :PV-DB2-STYL-ID                               14770000
147300                   ,:PV-DB2-INTR-UPC-ID                           14780000
147400                   ,:PV-DB2-SKU-NBR                               14790000
147500                   ,:PV-DB2-SKU-DESC                              14800000
147600                   ,:PV-DB2-TAX-PRD-DESC                          14810000
147700                   ,:PV-DB2-SIZE-DESC                             14820000
147800                   ,:PV-DB2-E-BUS-ITM-IND                         14830000
147900                   ,:PV-DB2-E-BUS-GP-NBR                          14840000
148000                   ,:PV-DB2-NRF-CLOR-DESC                         14850000
148100                   ,:PV-DB2-UNT-RTL-AMT                           14860000
148200                   ,:PV-DB2-SKU-STAT-CDE                          14870000
148300                   ,:PV-DB2-UPC-CHG-DTE                           14880000
148400                   ,:PV-DB2-GP-PRIC-ID    :PV-GP-PRIC-ID-IND      14890000
148500                   ,:PV-DB2-UNT-RTL-DTE                           14900000
148600                   ,:PV-DB2-GP-RTL-QTY    :PV-GP-RTL-QTY-IND      14910000
148700                   ,:PV-DB2-GP-RTL-AMT    :PV-GP-RTL-AMT-IND      14920000
148800                   ,:PV-DB2-LAST-NCLR-AMT :PV-NCLR-RTL-AMT-IND    14930000
148900                   ,:PV-DB2-PRMPT-PRIC-IND                        14940000
149000           END-EXEC                                               14950000
149100                                                                  14960000
149200          EVALUATE TRUE                                           14970000
149300             WHEN SQLCODE = -904                                  14980000
149400             WHEN SQLCODE = -911                                  14990000
149500             WHEN SQLCODE = -913                                  15000000
149600                  CONTINUE                                        15010000
149700             WHEN SQLCODE = ZERO                                  15020000
149800                  ADD 1 TO PC-CNT-SKU-CSR                         15030000
149900             WHEN SQLCODE = +100                                  15040000
150000                  SET PS-END-OF-SKU-CSR     TO TRUE               15050000
150100             WHEN SQLWARN0 NOT EQUAL SPACE                        15060000
150200             WHEN SQLCODE NOT EQUAL ZERO                          15070000
150300                  MOVE '3500-FETCH-SKU-CURSOR'                    15080000
150400                                     TO PV-PARAGRAPH-NAME         15090000
150500                  MOVE 'ERROR ON FETCHING SKU CURSOR'             15100000
150600                                     TO PV-DB2-OPERATION          15110000
150700                  DISPLAY 'SQLCODE= ' SQLCODE                     15120000
150800                  PERFORM 9900-SQL-ABEND-ROUTINE                  15130000
150900          END-EVALUATE                                            15140000
151000     END-PERFORM.                                                 15150000
151100                                                                  15160000
151200     IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        15170000
151300         MOVE '3500-FETCH-SKU-CURSOR'                             15180000
151400                               TO  PV-PARAGRAPH-NAME              15190000
151500         MOVE 'FETCH RETRIES EXCEEDED'                            15200000
151600                               TO  PV-DB2-OPERATION               15210000
151700         PERFORM 9900-SQL-ABEND-ROUTINE                           15220000
151800     END-IF.                                                      15230000
151900                                                                  15240000
152000*3500-EXIT.                                                       15250000
152100                                                                  15260000
152200*-----------------------------------------------------------      15270000
152300* 3600-CLOSE-SKU-CURSOR.                                          15280000
152400*     CLOSE THE STYLE SKUS CURSOR.                                15290000
152500*-----------------------------------------------------------      15300000
152600 3600-CLOSE-SKU-CURSOR.                                           15310000
152700                                                                  15320000
152800     PERFORM                                                      15330000
152900         WITH TEST AFTER                                          15340000
153000         VARYING PV-SQL-SUB                                       15350000
153100         FROM 1 BY 1                                              15360000
153200         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 15370000
153300                   OR  SQLCODE = 0)                               15380000
153400                                                                  15390000
153500           EXEC SQL                                               15400000
153600              CLOSE STYL-SKUS-CURSOR                              15410000
153700           END-EXEC                                               15420000
153800                                                                  15430000
153900          EVALUATE TRUE                                           15440000
154000             WHEN SQLCODE = -904                                  15450000
154100             WHEN SQLCODE = -911                                  15460000
154200             WHEN SQLCODE = -913                                  15470000
154300             WHEN SQLCODE = 0                                     15480000
154400                  CONTINUE                                        15490000
154500             WHEN SQLWARN0 NOT EQUAL SPACE                        15500000
154600             WHEN SQLCODE NOT EQUAL ZERO                          15510000
154700                  MOVE '3600-CLOSE-SKU-CURSOR'                    15520000
154800                                      TO PV-PARAGRAPH-NAME        15530000
154900                  MOVE 'ERROR ON CLOSE OF SKU CURSOR'             15540000
155000                                      TO PV-DB2-OPERATION         15550000
155100                  PERFORM 9900-SQL-ABEND-ROUTINE                  15560000
155200          END-EVALUATE                                            15570000
155300     END-PERFORM.                                                 15580000
155400                                                                  15590000
155500     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         15600000
155600        MOVE '3600-CLOSE-SKU-CURSOR'                              15610000
155700                               TO  PV-PARAGRAPH-NAME              15620000
155800        MOVE 'CLOSE RETRIES EXCEEDED'                             15630000
155900                               TO  PV-DB2-OPERATION               15640000
156000        PERFORM 9900-SQL-ABEND-ROUTINE                            15650000
156100     END-IF.                                                      15660000
156200                                                                  15670000
156300*3600-EXIT.                                                       15680000
156400                                                                  15690000
156500*----------------------------------------------------------       15700000
156600* 4000-LOAD-CORP-TMP-TBL.                                         15710000
156700*     LOADS ALL ROWS FROM SKU LOC AND SKU LOC ATTR FOR STORE      15720000
156800*     ZERO ROWS.  THIS WILL BE JOINED TO THE SKU STYLE CSR.       15730000
156900*     THIS WILL ENABLE US TO DO THIS JUST ONCE INSTEAD OF         15740000
157000*     EACH TIME THE CURSOR IS OPENED AND CLOSED.                  15750000
157100*----------------------------------------------------------       15760000
157200 4000-LOAD-CORP-TMP-TBL.                                          15770000
157300                                                                  15780000
157400     EXEC SQL                                                     15790000
157500         DECLARE GLOBAL TEMPORARY TABLE GTT                       15800000
157600             ( INTR_UPC_ID         INTEGER                        15810000
157700             , LOC_NBR             SMALLINT                       15820000
157800             , UNT_RTL_AMT         DECIMAL (9,2)                  15830000
157900             , LOC_SKU_STAT_CDE    CHAR (2)                       15840000
158000             , UPC_STAT_CHG_DTE    DATE                           15850000
158100             , UNT_RTL_CHG_DTE     DATE                           15860000
158200             , GP_PRIC_ID          INTEGER                        15870000
158300             , GP_RTL_QTY          SMALLINT                       15880000
158400             , GP_RTL_AMT          DECIMAL (9,2)                  15890000
158500             , MKDN_CDE            CHAR (1)                       15900000
158600             , ORIG_CLR_DTE        DATE                           15910000
158700             , PRMPT_FOR_PRIC_IND  CHAR (1)                       15920000
158800                                            )                     15930000
158900           ON COMMIT PRESERVE ROWS                                15940000
159000     END-EXEC.                                                    15950000
159100                                                                  15960000
159200     IF SQLCODE NOT EQUAL ZERO                                    15970000
159300        MOVE '4000-LOAD-CORP-TMP-TBL'                             15980000
159400                             TO PV-PARAGRAPH-NAME                 15990000
159500        MOVE 'ERROR ON DECLARE GTT TEMP TBL'                      16000000
159600                             TO PV-DB2-OPERATION                  16010000
159700        PERFORM 9900-SQL-ABEND-ROUTINE                            16020000
159800     END-IF.                                                      16030000
159900                                                                  16040000
160000     EXEC SQL                                                     16050000
160100         CREATE INDEX SESSION.IGTT0                               16060000
160200             ON SESSION.GTT                                       16070000
160300              (INTR_UPC_ID     ASC                                16080000
160400              ,LOC_NBR         ASC)                               16090000
160900     END-EXEC.                                                    16140000
161000***************************************************************** 16150009
161000*  TAKEN THIS OUT OF THE SQL ABOVE                                16150109
161000***************************************************************** 16150209
160500*         USING STOGROUP STGM000                                  16151009
160600*               PRIQTY   72000                                    16152009
160700*               SECQTY   7200                                     16153009
160800*           BUFFERPOOL BP2                                        16154009
161000***************************************************************** 16155009
161100     IF SQLCODE NOT EQUAL ZERO                                    16160000
161200        MOVE '4000-LOAD-CORP-TMP-TBL'                             16170000
161300                             TO PV-PARAGRAPH-NAME                 16180000
161400        MOVE 'ERROR ON CREATE INDEX ON GTT '                      16190000
161500                             TO PV-DB2-OPERATION                  16200000
161600        PERFORM 9900-SQL-ABEND-ROUTINE                            16210000
161700     END-IF.                                                      16220000
161800                                                                  16230000
161900     PERFORM 4100-OPEN-GTT-EXTR-CSR.                              16240000
162000     PERFORM 4200-FETCH-GTT-EXT-CSR.                              16250000
162100                                                                  16260000
162200     PERFORM 4300-INSERT-TO-GTT-TBL                               16270000
162300         UNTIL PS-END-OF-GTT-LOAD-CSR.                            16280000
162400                                                                  16290000
162500     PERFORM 4500-COMMIT.                                         16300000
162600     DISPLAY 'COMMIT WAS DONE AFTER INSERTS COMPLETED'.           16310000
162700                                                                  16320000
162800     DISPLAY '  ' PC-GTT-ROWS-INSERTED ' ROWS INSERTED'.          16330000
162900     PERFORM 4400-CLOSE-GTT-EXT-CSR.                              16340000
163000                                                                  16350000
163100*4000-EXIT.                                                       16360000
163200                                                                  16370000
163300*----------------------------------------------------------       16380000
163400* 4100-OPEN-GTT-EXTR-CSR.                                         16390000
163500*     OPEN THE MERCHANDISE CURSOR.                                16400000
163600*----------------------------------------------------------       16410000
163700 4100-OPEN-GTT-EXTR-CSR.                                          16420000
163800                                                                  16430000
163900     PERFORM                                                      16440000
164000         WITH TEST AFTER                                          16450000
164100         VARYING PV-SQL-SUB                                       16460000
164200         FROM 1 BY 1                                              16470000
164300         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 16480000
164400                   OR  SQLCODE = 0)                               16490000
164500                                                                  16500000
164600           EXEC SQL                                               16510000
164700              OPEN GTT-EXTR-CSR                                   16520000
164800           END-EXEC                                               16530000
164900                                                                  16540000
165000         EVALUATE TRUE                                            16550000
165100             WHEN SQLCODE = -904                                  16560000
165200             WHEN SQLCODE = -911                                  16570000
165300             WHEN SQLCODE = -913                                  16580000
165400                  CONTINUE                                        16590000
165500             WHEN SQLCODE = 0                                     16600000
165600                  SET PS-MORE-GTT-TO-LOAD TO TRUE                 16610000
165700             WHEN SQLWARN0 NOT EQUAL SPACE                        16620000
165800             WHEN SQLCODE NOT EQUAL ZERO                          16630000
165900                  MOVE '4100-OPEN-GTT-CURSOR  '                   16640000
166000                                     TO PV-PARAGRAPH-NAME         16650000
166100                  MOVE 'ERROR ON OPEN OF GTT EXTR CSR'            16660000
166200                                     TO PV-DB2-OPERATION          16670000
166300                  PERFORM 9900-SQL-ABEND-ROUTINE                  16680000
166400         END-EVALUATE                                             16690000
166500     END-PERFORM.                                                 16700000
166600                                                                  16710000
166700     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         16720000
166800        MOVE '4100-OPEN-GTT-CURSOR '                              16730000
166900                             TO  PV-PARAGRAPH-NAME                16740000
167000        MOVE 'OPEN RETRIES EXCEEDED'                              16750000
167100                              TO  PV-DB2-OPERATION                16760000
167200        PERFORM 9900-SQL-ABEND-ROUTINE                            16770000
167300     END-IF.                                                      16780000
167400                                                                  16790000
167500*4100-EXIT.                                                       16800000
167600                                                                  16810000
167700*----------------------------------------------------------       16820000
167800* 4200-FETCH-GTT-EXT-CSR.                                         16830000
167900*     FETCH THE GTT EXTRACT CURSOR.                               16840000
168000*----------------------------------------------------------       16850000
168100 4200-FETCH-GTT-EXT-CSR.                                          16860000
168200                                                                  16870000
168300     PERFORM                                                      16880000
168400         WITH TEST AFTER                                          16890000
168500         VARYING PV-SQL-SUB                                       16900000
168600         FROM 1 BY 1                                              16910000
168700         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 16920000
168800                   OR  SQLCODE = 0                                16930000
168900                   OR  SQLCODE = +100)                            16940000
169000                                                                  16950000
169100           EXEC SQL                                               16960000
169200              FETCH GTT-EXTR-CSR                                  16970000
169300              INTO  :PV-DB2-INTR-UPC-ID                           16980000
169400                   ,:PV-DB2-STR-NBR                               16990000
169500                   ,:PV-DB2-UNT-RTL-AMT                           17000000
169600                   ,:PV-DB2-SKU-STAT-CDE                          17010000
169700                   ,:PV-DB2-UPC-CHG-DTE                           17020000
169800                   ,:PV-DB2-GP-PRIC-ID     :PV-GP-PRIC-ID-IND     17030000
169900                   ,:PV-DB2-UNT-RTL-DTE                           17040000
170000                   ,:PV-DB2-GP-RTL-QTY     :PV-GP-RTL-QTY-IND     17050000
170100                   ,:PV-DB2-GP-RTL-AMT     :PV-GP-RTL-AMT-IND     17060000
170200                   ,:PV-DB2-PRMPT-PRIC-IND                        17070000
170300           END-EXEC                                               17080000
170400                                                                  17090000
170500          EVALUATE TRUE                                           17100000
170600             WHEN SQLCODE = -904                                  17110000
170700             WHEN SQLCODE = -911                                  17120000
170800             WHEN SQLCODE = -913                                  17130000
170900                  CONTINUE                                        17140000
171000             WHEN SQLCODE = ZERO                                  17150000
171100                  SET PS-MORE-GTT-TO-LOAD    TO TRUE              17160000
171200             WHEN SQLCODE = +100                                  17170000
171300                  SET PS-END-OF-GTT-LOAD-CSR TO TRUE              17180000
171400             WHEN SQLWARN0 NOT EQUAL SPACE                        17190000
171500             WHEN SQLCODE NOT EQUAL ZERO                          17200000
171600                  MOVE '4200-FETCH-GTT-EXTR-CSR'                  17210000
171700                                     TO PV-PARAGRAPH-NAME         17220000
171800                  MOVE 'ERROR ON FETCHING GTT EXTR CSR'           17230000
171900                                     TO PV-DB2-OPERATION          17240000
172000                  DISPLAY 'SQLCODE= ' SQLCODE                     17250000
172100                  PERFORM 9900-SQL-ABEND-ROUTINE                  17260000
172200          END-EVALUATE                                            17270000
172300     END-PERFORM.                                                 17280000
172400                                                                  17290000
172500     IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        17300000
172600         MOVE '4200-FETCH-GTT-EXTR-CSR'                           17310000
172700                               TO  PV-PARAGRAPH-NAME              17320000
172800         MOVE 'FETCH RETRIES EXCEEDED'                            17330000
172900                               TO  PV-DB2-OPERATION               17340000
173000         PERFORM 9900-SQL-ABEND-ROUTINE                           17350000
173100     END-IF.                                                      17360000
173200                                                                  17370000
173300*4200-EXIT.                                                       17380000
173400                                                                  17390000
173500*----------------------------------------------------------       17400000
173600* 4300-INSERT-TO-GTT-TBL.                                         17410000
173700*     ATTEMPT TO INSERT TO THE TEMP TABLE UP TO 5 TIMES.          17420000
173800*----------------------------------------------------------       17430000
173900 4300-INSERT-TO-GTT-TBL.                                          17440000
174000                                                                  17450000
174100     PERFORM                                                      17460000
174200         WITH TEST AFTER                                          17470000
174300         VARYING PV-SQL-SUB                                       17480000
174400         FROM 1 BY 1                                              17490000
174500         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 17500000
174600                   OR  SQLCODE = 0)                               17510000
174700                                                                  17520000
174800         EXEC SQL                                                 17530000
174900             INSERT                                               17540000
175000             INTO SESSION.GTT                                     17550000
175100                 ( INTR_UPC_ID                                    17560000
175200                  ,LOC_NBR                                        17570000
175300                  ,UNT_RTL_AMT                                    17580000
175400                  ,LOC_SKU_STAT_CDE                               17590000
175500                  ,UPC_STAT_CHG_DTE                               17600000
175600                  ,GP_PRIC_ID                                     17610000
175700                  ,UNT_RTL_CHG_DTE                                17620000
175800                  ,GP_RTL_QTY                                     17630000
175900                  ,GP_RTL_AMT                                     17640000
176000                  ,PRMPT_FOR_PRIC_IND                             17650000
176100                 )                                                17660000
176200             VALUES                                               17670000
176300                  ( :PV-DB2-INTR-UPC-ID                           17680000
176400                   ,:PV-DB2-STR-NBR                               17690000
176500                   ,:PV-DB2-UNT-RTL-AMT                           17700000
176600                   ,:PV-DB2-SKU-STAT-CDE                          17710000
176700                   ,:PV-DB2-UPC-CHG-DTE                           17720000
176800                   ,:PV-DB2-GP-PRIC-ID     :PV-GP-PRIC-ID-IND     17730000
176900                   ,:PV-DB2-UNT-RTL-DTE                           17740000
177000                   ,:PV-DB2-GP-RTL-QTY     :PV-GP-RTL-QTY-IND     17750000
177100                   ,:PV-DB2-GP-RTL-AMT     :PV-GP-RTL-AMT-IND     17760000
177200                   ,:PV-DB2-PRMPT-PRIC-IND                        17770000
177300                  )                                               17780000
177400         END-EXEC                                                 17790000
177500                                                                  17800000
177600          EVALUATE TRUE                                           17810000
177700             WHEN SQLCODE = -904                                  17820000
177800             WHEN SQLCODE = -911                                  17830000
177900             WHEN SQLCODE = -913                                  17840000
178000                  CONTINUE                                        17850000
178100             WHEN SQLCODE = ZERO                                  17860000
178200                  CONTINUE                                        17870000
178300             WHEN SQLWARN0 NOT EQUAL SPACE                        17880000
178400             WHEN SQLCODE NOT EQUAL ZERO                          17890000
178500                  MOVE '4300-INSERT-TO-GTT-TBL '                  17900000
178600                                     TO PV-PARAGRAPH-NAME         17910000
178700                  MOVE 'ERROR ON INSERTING TO GTT TBL '           17920000
178800                                     TO PV-DB2-OPERATION          17930000
178900                  DISPLAY 'SQLCODE= ' SQLCODE                     17940000
179000                  PERFORM 9900-SQL-ABEND-ROUTINE                  17950000
179100          END-EVALUATE                                            17960000
179200     END-PERFORM.                                                 17970000
179300                                                                  17980000
179400     IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        17990000
179500         MOVE '4300-INSERT-TO-GTT-TBL '                           18000000
179600                               TO  PV-PARAGRAPH-NAME              18010000
179700         MOVE 'INSERT RETRIES EXCEEDED'                           18020000
179800                               TO  PV-DB2-OPERATION               18030000
179900         PERFORM 9900-SQL-ABEND-ROUTINE                           18040000
180000     END-IF.                                                      18050000
180100                                                                  18060000
180200     ADD 1 TO PC-GTT-ROWS-INSERTED                                18070000
180300              PC-GTT-ROWS-BEFORE-WRITE.                           18080000
180400                                                                  18090000
180500     IF PC-GTT-ROWS-BEFORE-WRITE = 5000                           18100000
180600        MOVE ZEROES TO PC-GTT-ROWS-BEFORE-WRITE                   18110000
180700        PERFORM 4500-COMMIT                                       18120000
180800     END-IF.                                                      18130000
180900                                                                  18140000
181000     PERFORM 4200-FETCH-GTT-EXT-CSR.                              18150000
181100                                                                  18160000
181200*4300-EXIT.                                                       18170000
181300                                                                  18180000
181400*-----------------------------------------------------------      18190000
181500* 4400-CLOSE-GTT-EXT-CSR.                                         18200000
181600*-----------------------------------------------------------      18210000
181700 4400-CLOSE-GTT-EXT-CSR.                                          18220000
181800                                                                  18230000
181900     PERFORM                                                      18240000
182000         WITH TEST AFTER                                          18250000
182100         VARYING PV-SQL-SUB                                       18260000
182200         FROM 1 BY 1                                              18270000
182300         UNTIL (PV-SQL-SUB GREATER PC-MAX-RETRIES                 18280000
182400                   OR  SQLCODE = 0)                               18290000
182500                                                                  18300000
182600           EXEC SQL                                               18310000
182700              CLOSE GTT-EXTR-CSR                                  18320000
182800           END-EXEC                                               18330000
182900                                                                  18340000
183000          EVALUATE TRUE                                           18350000
183100             WHEN SQLCODE = -904                                  18360000
183200             WHEN SQLCODE = -911                                  18370000
183300             WHEN SQLCODE = -913                                  18380000
183400             WHEN SQLCODE = 0                                     18390000
183500                  CONTINUE                                        18400000
183600             WHEN SQLWARN0 NOT EQUAL SPACE                        18410000
183700             WHEN SQLCODE NOT EQUAL ZERO                          18420000
183800                  MOVE '4400-CLOSE-GTT-EXT-CSR '                  18430000
183900                                      TO PV-PARAGRAPH-NAME        18440000
184000                  MOVE 'ERROR ON CLOSE OF GTT EXTR CSR'           18450000
184100                                      TO PV-DB2-OPERATION         18460000
184200                  PERFORM 9900-SQL-ABEND-ROUTINE                  18470000
184300          END-EVALUATE                                            18480000
184400     END-PERFORM.                                                 18490000
184500                                                                  18500000
184600     IF PV-SQL-SUB GREATER PC-MAX-RETRIES                         18510000
184700        MOVE '4400-CLOSE-GTT-EXT-CSR '                            18520000
184800                               TO  PV-PARAGRAPH-NAME              18530000
184900        MOVE 'CLOSE RETRIES EXCEEDED'                             18540000
185000                               TO  PV-DB2-OPERATION               18550000
185100        PERFORM 9900-SQL-ABEND-ROUTINE                            18560000
185200     END-IF.                                                      18570000
185300                                                                  18580000
185400*4400-EXIT.                                                       18590000
185500                                                                  18600000
185600******************************************************************18610000
185700*   4500-COMMIT.                                                 *18620000
185800******************************************************************18630000
185900 4500-COMMIT.                                                     18640000
186000                                                                  18650000
186100     EXEC SQL                                                     18660000
186200          COMMIT                                                  18670000
186300     END-EXEC.                                                    18680000
186400                                                                  18690000
186500     EVALUATE TRUE                                                18700000
186600         WHEN SQLCODE = +0                                        18710000
186700              CONTINUE                                            18720000
186800                                                                  18730000
186900         WHEN OTHER                                               18740000
187000             MOVE '4500-COMMIT '  TO PV-PARAGRAPH-NAME            18750000
187100             MOVE 'COMMIT FAILED' TO PV-DB2-OPERATION             18760000
187200             PERFORM 9900-SQL-ABEND-ROUTINE                       18770000
187300     END-EVALUATE.                                                18780000
187400                                                                  18790000
187500*4500-EXIT.                                                       18800000
187600                                                                  18810000
187700*----------------------------------------------------------       18820000
187800* 5000-CREATE-DUMMY-SKU-RECS.                                     18830000
187900*     POPULATES THE FULL SKU GLOBAL RECORDS AND THE FULL          18840000
188000*     SKU PRICING RECORDS FOR DUMMY SKUS.                         18850000
188100*----------------------------------------------------------       18860000
188200 5000-CREATE-DUMMY-SKU-RECS.                                      18870000
188300                                                                  18880000
188400     INITIALIZE EP219-XST-SKU-RECORD                              18890000
188500                EP220-XST-SKU-PRICG-RECORD.                       18900000
188600                                                                  18910000
188700     PERFORM 6000-POPULATE-GLOBAL-SKU-HDR.                        18920000
188800     PERFORM 6100-POP-GLOBAL-SKU-PRICG-HDR.                       18930000
188900                                                                  18940000
189000     PERFORM 6300-POPULATE-DUMMY-SKU-RCD.                         18950000
189100     PERFORM 6400-POP-DUMMY-SKU-PRICG-RCD.                        18960000
189200                                                                  18970000
189300     PERFORM 8300-WRITE-SKU-GLBL-REC.                             18980000
189400     PERFORM 8400-WRITE-SKU-PRICG-GLBL-REC.                       18990000
189500                                                                  19000000
189600*5000-EXIT.                                                       19010000
189700*----------------------------------------------------------       19020000
189800* 5100-CREATE-GLOBAL-SKU-RCD.                                     19030000
189900*     POPULATES AND WRITES THE FULL SKU GLOBAL RECORD.            19040000
190000*----------------------------------------------------------       19050000
190100 5100-CREATE-GLOBAL-SKU-RCD.                                      19060000
190200                                                                  19070000
190300     INITIALIZE EP219-XST-SKU-RECORD.                             19080000
190400                                                                  19090000
190500     PERFORM 6000-POPULATE-GLOBAL-SKU-HDR.                        19100000
190600                                                                  19110000
190700     PERFORM 6500-POPULATE-SKU-RCD.                               19120000
190800                                                                  19130000
190900     PERFORM 8300-WRITE-SKU-GLBL-REC.                             19140000
191000                                                                  19150000
191100*5100-EXIT.                                                       19160000
191200*----------------------------------------------------------       19170000
191300* 5200-CREATE-GLBL-SKU-PRICG-RCD.                                 19180000
191400*     POPULATES AND WRITES THE FULL SKU PRICING GLOBAL RECORD.    19190000
191500*----------------------------------------------------------       19200000
191600 5200-CREATE-GLBL-SKU-PRICG-RCD.                                  19210000
191700                                                                  19220000
191800     INITIALIZE EP220-XST-SKU-PRICG-RECORD.                       19230000
191900                                                                  19240000
192000     PERFORM 6100-POP-GLOBAL-SKU-PRICG-HDR.                       19250000
192100                                                                  19260000
192200     PERFORM 6600-POPULATE-SKU-PRICG-RCD.                         19270000
192300                                                                  19280000
192400     PERFORM 8400-WRITE-SKU-PRICG-GLBL-REC.                       19290000
192500                                                                  19300000
192600*5200-EXIT.                                                       19310000
192700*----------------------------------------------------------       19320000
192800* 5300-CREATE-STR-SKU-PRICG-RCD.                                  19330000
192900*   POPULATES AND WRITES THE SKU PRICING STR RET PRICG RECORD.    19340000
193000*----------------------------------------------------------       19350000
193100 5300-CREATE-STR-SKU-PRICG-RCD.                                   19360000
193200                                                                  19370000
193300     PERFORM 6200-POP-STORE-SKU-PRICG-HDR.                        19380000
193400                                                                  19390000
193500     PERFORM 6600-POPULATE-SKU-PRICG-RCD.                         19400000
193600                                                                  19410000
193700     PERFORM 8500-WRITE-SKU-PRICG-STR-REC.                        19420000
193800                                                                  19430000
193900*5300-EXIT.                                                       19440000
194000*----------------------------------------------------------       19450000
194100* 6000-POPULATE-GLOBAL-SKU-HDR.                                   19460000
194200*     POPULATES FULL SKU GLOBAL RECORD HEADER FIELDS.             19470000
194300*----------------------------------------------------------       19480000
194400 6000-POPULATE-GLOBAL-SKU-HDR.                                    19490000
194500                                                                  19500000
194600     MOVE CC-EPCC112-TOMORROW-DATE TO EP219-PRICG-EFFECT-DTE.     19510000
194700                                                                  19520000
194800     MOVE 99998                    TO EP219-STR-GRP-TYP-CDE.      19530000
194900     MOVE ZEROES                   TO EP219-STR-GRP-ID.           19540000
195000                                                                  19550000
195100     SET EP219-FILE-FULL           TO TRUE.                       19560000
195200     SET EP219-APPLY-NIGHTLY       TO TRUE.                       19570000
195300     SET EP219-RECORD-ADD          TO TRUE.                       19580000
195400                                                                  19590000
195500*6000-EXIT.                                                       19600000
195600*----------------------------------------------------------       19610000
195700* 6100-POP-GLOBAL-SKU-PRICG-HDR.                                  19620000
195800*     POPULATES FULL SKU PRICING GLOBAL RECORD HEADER FIELDS.     19630000
195900*----------------------------------------------------------       19640000
196000 6100-POP-GLOBAL-SKU-PRICG-HDR.                                   19650000
196100                                                                  19660000
196200     INITIALIZE EP220-XST-SKU-PRICG-RECORD.                       19670000
196300                                                                  19680000
196400     MOVE CC-EPCC112-TOMORROW-DATE TO EP220-PRICG-EFFECT-DTE.     19690000
196500                                                                  19700000
196600     MOVE 99998                    TO EP220-STR-GRP-TYP-CDE.      19710000
196700     MOVE ZEROES                   TO EP220-STR-GRP-ID.           19720000
196800                                                                  19730000
196900     SET EP220-FILE-FULL           TO TRUE.                       19740000
197000     SET EP220-APPLY-NIGHTLY       TO TRUE.                       19750000
197100     SET EP220-RECORD-ADD          TO TRUE.                       19760000
197200                                                                  19770000
197300*6100-EXIT.                                                       19780000
197400*----------------------------------------------------------       19790000
197500* 6200-POP-STORE-SKU-PRICG-HDR.                                   19800000
197600*     POPULATES FULL SKU PRICING STORE RECORD HEADER FIELDS.      19810000
197700*----------------------------------------------------------       19820000
197800 6200-POP-STORE-SKU-PRICG-HDR.                                    19830000
197900                                                                  19840000
198000     INITIALIZE EP220-XST-SKU-PRICG-RECORD.                       19850000
198100                                                                  19860000
198200     MOVE CC-EPCC112-TOMORROW-DATE TO EP220-PRICG-EFFECT-DTE.     19870000
198300     MOVE 05000                    TO EP220-STR-GRP-TYP-CDE.      19880000
198400     MOVE PV-SAVE-STR-NBR          TO EP220-STR-GRP-ID.           19890000
198500                                                                  19900000
198600     SET EP220-FILE-CHANGE         TO TRUE.                       19910000
198700     SET EP220-APPLY-NIGHTLY       TO TRUE.                       19920000
198800     SET EP220-RECORD-UPDATE       TO TRUE.                       19930000
198900                                                                  19940000
199000*6200-EXIT.                                                       19950000
199100*----------------------------------------------------------       19960000
199200* 6300-POPULATE-DUMMY-SKU-RCD.                                    19970000
199300*     POPULATES FULL SKU RECORD FOR DUMMY RECORD.                 19980000
199400*----------------------------------------------------------       19990000
199500 6300-POPULATE-DUMMY-SKU-RCD.                                     20000000
199600                                                                  20010000
199700     SET EP219-SKU-NBR-YES         TO TRUE.                       20020000
199800     MOVE PV-SAVE-DEPT-NBR-X       TO PV-SKU-NBR-DEPT.            20030000
199900     MOVE PV-SAVE-SUB-CL-NBR-X     TO PV-SKU-NBR-CLASS.           20040000
200000     MOVE PV-SKU-NBR-DUMMY         TO EP219-SKU-NBR.              20050000
200100     SET EP219-INTR-UPC-ID-YES     TO TRUE.                       20060000
200200     MOVE PV-DB2-DEPT-NBR          TO PV-SAVE-DEPT-NBR.           20070000
200300     MOVE PV-SAVE-DEPT-NBR-X       TO PV-PLU-KEY-DEPT.            20080000
200400     MOVE PV-DB2-SUB-CL-NBR        TO PV-SAVE-SUB-CL-NBR          20090000
200500     MOVE PV-SAVE-SUB-CL-NBR-X     TO PV-PLU-KEY-CLASS.           20100000
200600     MOVE PV-PLU-KEY-DUMMY         TO EP219-INTR-UPC-ID.          20110000
200700                                                                  20120000
200800     SET EP219-SKU-DESC-YES        TO TRUE.                       20130000
200900     MOVE PV-DB2-POS-MDSE-DESC     TO EP219-SKU-DESC.             20140000
201000                                                                  20150000
201100     SET EP219-E-BUS-ITM-IND-YES   TO TRUE.                       20160000
201200     MOVE 'N'                      TO EP219-E-BUS-ITM-IND.        20170000
201300                                                                  20180000
201400     SET EP219-E-BUS-PRD-GP-NBR-YES    TO TRUE.                   20190000
201500     MOVE ZEROES                TO EP219-E-BUS-PRD-GP-NBR.        20200000
201600                                                                  20210000
201700     SET EP219-NRF-CLOR-DESC-YES       TO TRUE.                   20220000
201800     SET EP219-SIZE-DESC-YES           TO TRUE.                   20230000
201900     MOVE SPACES                TO EP219-NRF-CLOR-DESC            20240000
202000                                   EP219-SIZE-DESC.               20250000
202100                                                                  20260000
202200     SET EP219-TAX-PRD-CDE-YES         TO TRUE.                   20270000
202300     MOVE '61000'               TO EP219-TAX-PRD-CDE.             20280000
202400                                                                  20290000
202500     SET EP219-MDSE-TX-CDE-YES         TO TRUE.                   20300000
202600     MOVE '01'                  TO EP219-MDSE-TX-CDE.             20310000
202700                                                                  20320000
202800     SET EP219-MKDN-SGN-CDE-YES        TO TRUE.                   20330000
202900     MOVE PC-NULL-CHAR          TO EP219-MKDN-SGN-CDE.            20340000
203000                                                                  20350000
203100     SET  EP219-STYL-ID-YES            TO TRUE.                   20360000
203200     MOVE 0                     TO EP219-STYL-ID.                 20370000
203300                                                                  20380000
203400     SET  EP219-DMY-SKU-IND-YES        TO TRUE.                   20390000
203500     SET  EP219-IS-DUMMY-SKU    TO TRUE.                          20400000
203600                                                                  20410000
203700*6300-EXIT.                                                       20420000
203800*----------------------------------------------------------       20430000
203900* 6400-POP-DUMMY-SKU-PRICG-RCD.                                   20440000
204000*     POPULATES FULL SKU PRICING RECORD FOR DUMMY RECORD.         20450000
204100*----------------------------------------------------------       20460000
204200 6400-POP-DUMMY-SKU-PRICG-RCD.                                    20470000
204300                                                                  20480000
204400*  SKU_PRICG_ID WILL ALWAYS BE SENT AS NULL                       20490000
204500     SET EP220-SKU-PRICG-ID-YES        TO TRUE.                   20500000
204600     MOVE PC-NULL-CHAR          TO EP220-SKU-PRICG-ID-NUL.        20510000
204700                                                                  20520000
204800*    PRIC_EFF_TMST DATETIME NOT NULL - FORMAT: YYYY-MM-DD HH:MM:SS20530000
204900     SET EP220-PRIC-EFF-TMST-YES       TO TRUE.                   20540000
205000     MOVE PV-PRIC-EFF-TMST         TO EP220-PRIC-EFF-TMST.        20550000
205100                                                                  20560000
205200*   SET MDSE-HIER-CDE TO 'SKU' FOR DUMMY SKU                      20570000
205300     SET EP220-MDSE-HIER-CDE-YES       TO TRUE.                   20580000
205400     MOVE PC-MDSE-HIER-SKU      TO EP220-MDSE-HIER-CDE.           20590000
205500                                                                  20600000
205600*    DEPT AND SUB CLASS ARE POPULATED FOR DUMMY SKUS              20610000
205700*    -- MAJOR CLASS AS WELL, AS IT IS USED FOR LOOK UP.           20620000
205800*    STYLE ID IS NULL FOR DUMMY SKUS                              20630000
205900     SET EP220-DEPT-NBR-YES            TO TRUE.                   20640000
206000     MOVE PV-DB2-DEPT-NBR       TO EP220-DEPT-NBR.                20650000
206100                                                                  20660000
206200     SET EP220-MAJ-CL-NBR-YES          TO TRUE.                   20670000
206300     MOVE PV-DB2-MAJ-CL-NBR     TO EP220-MAJ-CL-NBR.              20680000
206400                                                                  20690000
206500     SET EP220-STYL-ID-YES             TO TRUE.                   20700000
206600     MOVE PC-NULL-CHAR          TO EP220-STYL-ID-NUL.             20710000
206700                                                                  20720000
206800     SET EP220-SUB-CL-NBR-YES          TO TRUE.                   20730000
206900     MOVE PV-DB2-SUB-CL-NBR     TO EP220-SUB-CL-NBR.              20740000
207000                                                                  20750000
207100*   ALWAYS SEND NULL FOR EXCL_MDSE_IND                            20760000
207200     SET EP220-EXCL-MDSE-IND-YES       TO TRUE.                   20770000
207300     MOVE PC-NULL-CHAR          TO EP220-EXCL-MDSE-IND.           20780000
207400                                                                  20790000
207500*    PV-SKU-NBR-DUMMY IS POPULATED BEFORE THIS PARA IS CALLED...  20800000
207600     SET EP220-SKU-NBR-YES             TO TRUE.                   20810000
207700     MOVE PV-SKU-NBR-DUMMY      TO EP220-SKU-NBR.                 20820000
207800                                                                  20830000
207900*    THE FOLLOWING FIELDS ARE ZERO FOR DUMMY SKUS:                20840000
208000*           UNT_RTL_AMT          DECIMAL(9,2)  NOT NULL           20850000
208100*           LAST_NCLR_RTL_AMT    DECIMAL(9,2)  NULLABLE           20860000
208200*        NON_RCPT_RET_UNT_RTL_AMT DECIMAL(9,2) NULLABLE           20870000
208300     SET EP220-UNT-RTL-AMT-YES         TO TRUE.                   20880000
208400     SET EP220-LAST-NCLR-RTL-AMT-YES   TO TRUE.                   20890000
208500     SET EP220-N-RCPT-RT-RTL-AMT-Y     TO TRUE.                   20900000
208600     MOVE ZEROES                TO EP220-UNT-RTL-AMT              20910000
208700                                   EP220-LAST-NCLR-RTL-AMT        20920000
208800                                   EP220-N-RCPT-RT-UNT-RTL-AMT.   20930000
208900                                                                  20940000
209000*   SET  LOC_SKU_STAT_CDE, CHAR(2) NOT NULL, TO '00', FOR DUMMY   20950000
209100     SET EP220-LOC-SKU-STAT-CDE-YES    TO TRUE.                   20960000
209200     MOVE PC-DUMMY-STATUS       TO EP220-LOC-SKU-STAT-CDE.        20970000
209300                                                                  20980000
209400*    SET  TKT_CLOR_CDE TO 'W' (WHITE, ACTIVE) FOR DUMMY SKUS      20990000
209500     SET EP220-TKT-CLOR-CDE-YES        TO TRUE.                   21000000
209600     MOVE 'W'                   TO EP220-TKT-CLOR-CDE.            21010000
209700                                                                  21020000
209800*    LAST_PRCHG_TMST, DATETIME NOT NULL, IS SPACES FOR DUMMY SKU  21030000
209900*    THIS WILL BE POPULATED INTO THE SQL SERVER DB AS CURRENT TMST21040000
210000     SET EP220-LAST-PRCHG-TMST-YES     TO TRUE.                   21050000
210100     MOVE SPACES                TO EP220-LAST-PRCHG-TMST.         21060000
210200                                                                  21070000
210300*    SET PRMPT_FOR_PRIC_IND, CHAR(1) NOT NULL, TO 'Y' FOR DUMMY   21080000
210400     SET EP220-PRMPT-FOR-PRIC-IND-YES  TO TRUE.                   21090000
210500     MOVE 'Y'                   TO EP220-PRMPT-FOR-PRIC-IND.      21100000
210600                                                                  21110000
210700*    ALWAYS SET PERM_PRCHG_DIRN_CDE, CHAR(1) NULLABLE, TO 'N'     21120000
210800     SET EP220-PERM-PRCHG-DIRN-CDE-YES TO TRUE.                   21130000
210900     MOVE 'N'                   TO EP220-PERM-PRCHG-DIRN-CDE.     21140000
211000                                                                  21150000
211100*    SET MLT_PRPT_IND, CHAR(1) NOT NULL, TO 'Y', FOR DUMMY SKU    21160000
211200     SET EP220-MLT-PRPT-IND-YES        TO TRUE.                   21170000
211300     MOVE 'Y'                   TO EP220-MLT-PRPT-IND.            21180000
211400                                                                  21190000
211500*    PRCHG_APLBL_TKT_CLOR_CDE, CHAR(2) NULLABLE, NULL FOR CURRENT 21200000
211600     SET EP220-PRCHG-APL-TKT-CLR-CD-Y  TO TRUE.                   21210000
211700     MOVE PC-NULL-CHAR          TO EP220-PRCHG-APLBL-TKT-CLOR-CDE.21220000
211800                                                                  21230000
211900*  THE FOLLOWING FIELDS ARE NOT NEEDED FOR DUMMY SKUS             21240000
212000*           GP_RTL_AMT           DECIMAL(9,2)  NULLABLE           21250000
212100*           GP_RTL_QTY           SMALLINT      NULLABLE           21260000
212200*           GP_PRIC_ID           INT           NULLABLE           21270000
212300*  ... BUT, NEED TO SEND NULLS SO FILE APPLY CAN HANDLE READILY   21280000
212400     SET EP220-GP-RTL-AMT-YES          TO TRUE.                   21290000
212500     SET EP220-GP-RTL-QTY-YES          TO TRUE.                   21300000
212600     SET EP220-GP-PRIC-ID-YES          TO TRUE.                   21310000
212700     MOVE PC-NULL-CHAR          TO EP220-GP-RTL-AMT-NUL           21320000
212800                                   EP220-GP-RTL-QTY-NUL           21330000
212900                                   EP220-GP-PRIC-ID-NUL.          21340000
213000                                                                  21350000
213100*  THE FOLLOWING FIELDS ARE NEVER NEEDED FOR CURRENT PRICING      21360000
213200*  ... BUT, NEED TO SEND NULLS SO FILE APPLY CAN HANDLE READILY   21370000
213300     SET EP220-LO-UNT-RTL-AMT-YES      TO TRUE.                   21380000
213400     SET EP220-HGH-UNT-RTL-AMT-YES     TO TRUE.                   21390000
213500     MOVE PC-NULL-CHAR          TO EP220-LO-UNT-RTL-AMT-NUL       21400000
213600                                   EP220-HGH-UNT-RTL-AMT-NUL.     21410000
213700                                                                  21420000
213800*6400-EXIT.                                                       21430000
213900*----------------------------------------------------------       21440000
214000* 6500-POPULATE-SKU-RCD.                                          21450000
214100*     POPULATES FULL SKU RECORD FOR GLOBAL RECORD.                21460000
214200*----------------------------------------------------------       21470000
214300 6500-POPULATE-SKU-RCD.                                           21480000
214400                                                                  21490000
214500     SET EP219-SKU-NBR-YES          TO TRUE.                      21500000
214600     MOVE PV-DB2-SKU-NBR        TO EP219-SKU-NBR.                 21510000
214700                                                                  21520000
214800     SET EP219-INTR-UPC-ID-YES      TO TRUE.                      21530000
214900     MOVE PV-DB2-INTR-UPC-ID    TO PV-INTR-UPC-ID.                21540000
215000     MOVE PV-INTR-UPC-ID        TO EP219-INTR-UPC-ID.             21550000
215100                                                                  21560000
215200     SET EP219-SKU-DESC-YES         TO TRUE.                      21570000
215300     MOVE PV-DB2-SKU-DESC       TO EP219-SKU-DESC.                21580000
215400                                                                  21590000
215500     SET EP219-E-BUS-ITM-IND-YES    TO TRUE.                      21600000
215600     MOVE PV-DB2-E-BUS-ITM-IND  TO EP219-E-BUS-ITM-IND.           21610000
215700                                                                  21620000
215800     SET EP219-E-BUS-PRD-GP-NBR-YES TO TRUE.                      21630000
215900     MOVE PV-DB2-E-BUS-GP-NBR   TO EP219-E-BUS-PRD-GP-NBR.        21640000
216000                                                                  21650000
216100     SET EP219-NRF-CLOR-DESC-YES    TO TRUE.                      21660000
216200     MOVE PV-DB2-NRF-CLOR-DESC  TO EP219-NRF-CLOR-DESC            21670000
216300                                                                  21680000
216400     SET EP219-SIZE-DESC-YES        TO TRUE.                      21690000
216500     MOVE PV-DB2-SIZE-DESC      TO EP219-SIZE-DESC.               21700000
216600                                                                  21710000
216700     SET EP219-TAX-PRD-CDE-YES      TO TRUE.                      21720000
216800     MOVE PV-DB2-TAX-PRD-DESC   TO PV-TAX-PRD-CDE                 21730000
216900     MOVE PV-TAX-PRD-CDE-1      TO EP219-TAX-PRD-CDE.             21740000
217000                                                                  21750000
217100     SET EP219-MDSE-TX-CDE-YES      TO TRUE.                      21760000
217200     MOVE '01'                  TO EP219-MDSE-TX-CDE.             21770000
217300                                                                  21780000
217400     SET EP219-MKDN-SGN-CDE-YES     TO TRUE.                      21790000
217500     MOVE PC-NULL-CHAR          TO EP219-MKDN-SGN-CDE.            21800000
217600                                                                  21810000
217700     SET EP219-STYL-ID-YES          TO TRUE.                      21820000
217800     MOVE PV-DB2-STYL-ID        TO EP219-STYL-ID.                 21830000
217900                                                                  21840000
218000     SET  EP219-DMY-SKU-IND-YES     TO TRUE.                      21850000
218100     SET  EP219-NOT-DUMMY-SKU   TO TRUE.                          21860000
218200                                                                  21870000
218300*6500-EXIT.                                                       21880000
218400*----------------------------------------------------------       21890000
218500* 6600-POPULATE-SKU-PRICG-RCD.                                    21900000
218600*     POPULATES FULL SKU PRICING RECORD.                          21910000
218700*----------------------------------------------------------       21920000
218800 6600-POPULATE-SKU-PRICG-RCD.                                     21930000
218900                                                                  21940000
219000     SET EP220-PRIC-EFF-TMST-YES       TO TRUE.                   21950000
219100     MOVE PV-PRIC-EFF-TMST      TO EP220-PRIC-EFF-TMST.           21960000
219200                                                                  21970000
219300*    SET MDSE-HIER-CDE TO 'SKU' FOR ALL CURRENT PRICING RECORDS   21980000
219400     SET EP220-MDSE-HIER-CDE-YES       TO TRUE.                   21990000
219500     MOVE PC-MDSE-HIER-SKU      TO EP220-MDSE-HIER-CDE.           22000000
219600                                                                  22010000
219700*    CURRENT PRICING IS ALWAYS AT SKU LEVEL                       22020000
219800     SET EP220-SKU-NBR-YES             TO TRUE.                   22030000
219900     MOVE PV-DB2-SKU-NBR        TO EP220-SKU-NBR.                 22040000
220000                                                                  22050000
220100*    STORE RETURN PRICE RECORD                                    22060000
220200     IF PS-STR-RTN-PRC-REC                                        22070000
220300        SET EP220-SKU-PRICG-ID-NO       TO TRUE                   22080000
220400        SET EP220-DEPT-NBR-NO           TO TRUE                   22090000
220500        SET EP220-MAJ-CL-NBR-NO         TO TRUE                   22100000
220600        SET EP220-SUB-CL-NBR-NO         TO TRUE                   22110000
220700        SET EP220-STYL-ID-NO            TO TRUE                   22120000
220800        SET EP220-EXCL-MDSE-IND-NO      TO TRUE                   22130000
220900        SET EP220-UNT-RTL-AMT-NO        TO TRUE                   22140000
221000        SET EP220-LAST-NCLR-RTL-AMT-NO  TO TRUE                   22150000
221100        SET EP220-N-RCPT-RT-RTL-AMT-Y   TO TRUE                   22160000
221200        MOVE PV-RETURN-UNIT-PRC                                   22170000
221300                           TO EP220-N-RCPT-RT-UNT-RTL-AMT         22180000
221400        SET EP220-GP-RTL-AMT-NO          TO TRUE                  22190000
221500        SET EP220-LO-UNT-RTL-AMT-NO      TO TRUE                  22200000
221600        SET EP220-HGH-UNT-RTL-AMT-NO     TO TRUE                  22210000
221700        SET EP220-GP-RTL-QTY-NO          TO TRUE                  22220000
221800        SET EP220-GP-PRIC-ID-NO          TO TRUE                  22230000
221900        SET EP220-LOC-SKU-STAT-CDE-NO    TO TRUE                  22240000
222000        SET EP220-TKT-CLOR-CDE-NO        TO TRUE                  22250000
222100        SET EP220-LAST-PRCHG-TMST-NO     TO TRUE                  22260000
222200        SET EP220-PRMPT-FOR-PRIC-IND-NO  TO TRUE                  22270000
222300        SET EP220-PERM-PRCHG-DIRN-CDE-NO TO TRUE                  22280000
222400        SET EP220-MLT-PRPT-IND-NO        TO TRUE                  22290000
222500        SET EP220-PRCHG-APL-TKT-CLR-CD-N TO TRUE                  22300000
222600     END-IF.                                                      22310000
222700*    END STORE RETURN PRICE RECORD                                22320000
222800                                                                  22330000
222900*    GLOBAL PRICE RECORD                                          22340000
223000     IF PS-GBL-REC                                                22350000
223100*       SKU_PRICG_ID WILL ALWAYS BE SENT AS NULL                  22360000
223200        SET EP220-SKU-PRICG-ID-YES       TO TRUE                  22370000
223300        MOVE PC-NULL-CHAR       TO EP220-SKU-PRICG-ID-NUL         22380000
223400                                                                  22390000
223500*       HIERARCHY FIELDS ARE NULL FOR ALL SKU RECORDS             22400000
223600        SET EP220-DEPT-NBR-YES           TO TRUE                  22410000
223700        SET EP220-MAJ-CL-NBR-YES         TO TRUE                  22420000
223800        SET EP220-SUB-CL-NBR-YES         TO TRUE                  22430000
223900        SET EP220-STYL-ID-YES            TO TRUE                  22440000
224000        MOVE PC-NULL-CHAR       TO EP220-DEPT-NBR-NUL             22450000
224100                                   EP220-MAJ-CL-NBR-NUL           22460000
224200                                   EP220-SUB-CL-NBR-NUL           22470000
224300                                   EP220-STYL-ID-NUL              22480000
224400                                                                  22490000
224500        SET EP220-EXCL-MDSE-IND-YES      TO TRUE                  22500000
224600        MOVE PC-NULL-CHAR       TO EP220-EXCL-MDSE-IND            22510000
224700                                                                  22520000
224800        SET EP220-UNT-RTL-AMT-YES        TO TRUE                  22530000
224900        MOVE PV-DB2-UNT-RTL-AMT TO PV-CONVERT-PRICE               22540000
225000        MOVE PV-CONVERT-PRICE   TO EP220-UNT-RTL-AMT              22550000
225100                                                                  22560000
225200        SET EP220-LAST-NCLR-RTL-AMT-YES  TO TRUE                  22570000
225300        IF PV-NCLR-RTL-AMT-NULL                                   22580000
225400           MOVE PC-NULL-CHAR    TO EP220-LAST-NCLR-RTL-AMT-NUL    22590000
225500        ELSE                                                      22600000
225600           MOVE PV-DB2-LAST-NCLR-AMT TO EP220-LAST-NCLR-RTL-AMT   22610000
225700        END-IF                                                    22620000
225800                                                                  22630000
225900        SET EP220-N-RCPT-RT-RTL-AMT-Y    TO TRUE                  22640000
226000        MOVE PV-RETURN-UNIT-PRC TO EP220-N-RCPT-RT-UNT-RTL-AMT    22650000
226100                                                                  22660000
226200*       LOW & HIGH UNIT RTL ARE NEVER SENT FOR CURRENT PRICING:   22670000
226300*  ... BUT, NEED TO SEND NULLS SO FILE APPLY CAN HANDLE READILY   22680000
226400        SET EP220-LO-UNT-RTL-AMT-YES     TO TRUE                  22690000
226500        SET EP220-HGH-UNT-RTL-AMT-YES    TO TRUE                  22700000
226600        MOVE PC-NULL-CHAR       TO EP220-LO-UNT-RTL-AMT-NUL       22710000
226700                                   EP220-HGH-UNT-RTL-AMT-NUL      22720000
226800                                                                  22730000
226900*       GRP PRICING FIELDS SENT AS NULL, IF NOT APPLICABLE        22740000
227000        IF PV-GP-PRIC-ID-NULL                                     22750000
227100           SET EP220-GP-RTL-AMT-YES      TO TRUE                  22760000
227200           SET EP220-GP-RTL-QTY-YES      TO TRUE                  22770000
227300           SET EP220-GP-PRIC-ID-YES      TO TRUE                  22780000
227400           MOVE PC-NULL-CHAR         TO EP220-GP-RTL-AMT-NUL      22790000
227500                                        EP220-GP-RTL-QTY-NUL      22800000
227600                                        EP220-GP-PRIC-ID-NUL      22810000
227700        ELSE                                                      22820000
227800           SET EP220-GP-RTL-AMT-YES      TO TRUE                  22830000
227900           MOVE PV-DB2-GP-RTL-AMT    TO PV-CONVERT-PRICE          22840000
228000           MOVE PV-CONVERT-PRICE     TO EP220-GP-RTL-AMT          22850000
228100           SET EP220-GP-RTL-QTY-YES      TO TRUE                  22860000
228200           MOVE PV-DB2-GP-RTL-QTY    TO EP220-GP-RTL-QTY          22870000
228300           SET EP220-GP-PRIC-ID-YES      TO TRUE                  22880000
228400           MOVE PV-DB2-GP-PRIC-ID    TO PV-GP-PRIC-ID             22890000
228500           MOVE PV-GP-PRIC-ID        TO EP220-GP-PRIC-ID          22900000
228600        END-IF                                                    22910000
228700                                                                  22920000
228800        SET EP220-LOC-SKU-STAT-CDE-YES   TO TRUE                  22930000
228900        IF PV-DB2-SKU-STAT-CDE = PC-MIXED-STATUS                  22940000
229000           MOVE PC-ACTIVE-STATUS    TO EP220-LOC-SKU-STAT-CDE     22950000
229100        ELSE                                                      22960000
229200           MOVE PV-DB2-SKU-STAT-CDE TO EP220-LOC-SKU-STAT-CDE     22970000
229300        END-IF                                                    22980000
229400                                                                  22990000
229500*       RED TICKET IS OBSOLETE, SEND 'Y' FOR ANY CLEARANCE        23000000
229600        SET EP220-TKT-CLOR-CDE-YES       TO TRUE                  23010000
229700        IF PV-DB2-SKU-STAT-CDE = '30'                             23020000
229800           MOVE 'Y'                 TO EP220-TKT-CLOR-CDE         23030000
229900        ELSE                                                      23040000
230000           MOVE 'W'                 TO EP220-TKT-CLOR-CDE         23050000
230100        END-IF                                                    23060000
230200                                                                  23070000
230300        SET EP220-LAST-PRCHG-TMST-YES    TO TRUE                  23080000
230400*-----                                                            23090000
230500*  CR20162 CHANGES 08/04 - B                                      23100000
230600*------                                                           23110000
230700*- CHECK UNT-RTL-DTE AGAINST THE UPC-CHANGE DTE, MOVE THE LATEST  23120000
230800*-  UPDATED DATE                                                  23130000
230900*------                                                           23140000
231000        IF PV-DB2-UNT-RTL-DTE > PV-DB2-UPC-CHG-DTE                23150000
231100           MOVE PV-DB2-UNT-RTL-DTE     TO PV-LAST-PRCHG-DTE       23160000
231200        ELSE                                                      23170000
231300           MOVE PV-DB2-UPC-CHG-DTE     TO PV-LAST-PRCHG-DTE       23180000
231400        END-IF                                                    23190000
231500                                                                  23200000
231600*-----                                                            23210000
231700*  CR20162 CHANGES 08/04 - E                                      23220000
231800*------                                                           23230000
231900        MOVE PC-SQLS-START-TIME     TO PV-LAST-PRCHG-TIME         23240000
232000        MOVE PV-LAST-PRCHG-TMST     TO EP220-LAST-PRCHG-TMST      23250000
232100                                                                  23260000
232200        SET EP220-PRMPT-FOR-PRIC-IND-YES TO TRUE                  23270000
232300        MOVE PV-DB2-PRMPT-PRIC-IND  TO EP220-PRMPT-FOR-PRIC-IND   23280000
232400                                                                  23290000
232500        SET EP220-PERM-PRCHG-DIRN-CDE-YES TO TRUE                 23300000
232600        MOVE 'N'                    TO EP220-PERM-PRCHG-DIRN-CDE  23310000
232700                                                                  23320000
232800        SET EP220-MLT-PRPT-IND-YES       TO TRUE                  23330000
232900        MOVE 'N'                    TO EP220-MLT-PRPT-IND         23340000
233000                                                                  23350000
233100*       PRCHG_APLBL_TKT_CLOR_CDE IS NULL FOR CURRENT              23360000
233200        SET EP220-PRCHG-APL-TKT-CLR-CD-Y TO TRUE                  23370000
233300        MOVE PC-NULL-CHAR       TO EP220-PRCHG-APLBL-TKT-CLOR-CDE 23380000
233400                                                                  23390000
233500     END-IF.                                                      23400000
233600*    END GLOBAL SKU_PRICG RECORD                                  23410000
233700                                                                  23420000
233800*6600-EXIT.                                                       23430000
233900*----------------------------------------------------------       23440000
234000* 8000-WRITE-XREF-DR-REC.                                         23450000
234100*     WRITES THE XREF DRIVER RECORD OUT TO THE FULL XREF          23460000
234200*     DRIVER FILE.                                                23470000
234300*----------------------------------------------------------       23480000
234400 8000-WRITE-XREF-DR-REC.                                          23490000
234500                                                                  23500000
234600     WRITE FULL-XREF-DRIVER-RECORD                                23510000
234700         FROM EP074-XREF-DRIVE-RECORD.                            23520000
234800                                                                  23530000
234900     ADD 1 TO PC-CNT-XREF-RECS                                    23540000
235000              PC-CNT-ALL-RECS.                                    23550000
235100                                                                  23560000
235200*8000-EXIT.                                                       23570000
235300                                                                  23580000
235400*----------------------------------------------------------       23590000
235500* 8300-WRITE-SKU-GLBL-REC.                                        23600000
235600*     WRITES THE FULL SKU GLOBAL RECORD TO THE FULL SKU           23610000
235700*     GLOBAL FILE.                                                23620000
235800*----------------------------------------------------------       23630000
235900 8300-WRITE-SKU-GLBL-REC.                                         23640000
236000                                                                  23650000
236100     WRITE FULL-SKU-GLOBAL-RECORD                                 23660000
236200         FROM EP219-XST-SKU-RECORD.                               23670000
236300                                                                  23680000
236400     ADD 1 TO PC-CNT-GLBL-SKU-RECS                                23690000
236500              PC-CNT-ALL-RECS.                                    23700000
236600                                                                  23710000
236700*8300-EXIT.                                                       23720000
236800                                                                  23730000
236900*----------------------------------------------------------       23740000
237000* 8400-WRITE-SKU-PRICG-GLBL-REC.                                  23750000
237100*     WRITES THE SKU PRICING GLOBAL RECORD OUT TO THE FULL        23760000
237200*     SKU PRICING GLOBAL FILE.                                    23770000
237300*----------------------------------------------------------       23780000
237400 8400-WRITE-SKU-PRICG-GLBL-REC.                                   23790000
237500                                                                  23800000
237600     WRITE FULL-SKU-PRICING-GLOBAL-RECORD                         23810000
237700         FROM EP220-XST-SKU-PRICG-RECORD.                         23820000
237800                                                                  23830000
237900     ADD 1 TO PC-CNT-GLBL-SKU-PRICG-RECS                          23840000
238000              PC-CNT-ALL-RECS.                                    23850000
238100                                                                  23860000
238200*8400-EXIT.                                                       23870000
238300                                                                  23880000
238400*----------------------------------------------------------       23890000
238500* 8500-WRITE-SKU-PRICG-STR-REC.                                   23900000
238600*     WRITES THE SKU PRICING STORE RECORD OUT TO THE FULL         23910000
238700*     SKU PRICING STORE FILE.                                     23920000
238800*----------------------------------------------------------       23930000
238900 8500-WRITE-SKU-PRICG-STR-REC.                                    23940000
239000                                                                  23950000
239100     WRITE FULL-SKU-PRICING-STORE-RECORD                          23960000
239200         FROM EP220-XST-SKU-PRICG-RECORD.                         23970000
239300                                                                  23980000
239400     ADD 1 TO PC-CNT-SKU-PRICG-STR-RECS                           23990000
239500              PC-CNT-ALL-RECS.                                    24000000
239600                                                                  24010000
239700*8500-EXIT.                                                       24020000
239800                                                                  24030000
239900*----------------------------------------------------------       24040000
240000* 9800-ABEND.                                                     24050000
240100*     ABEND PROGRAM WHEN A NON-DB2 ERROR OCCURS.                  24060000
240200*----------------------------------------------------------       24070000
240300 9800-ABEND.                                                      24080000
240400                                                                  24090000
240500     DISPLAY '** ABEND           **'.                             24100000
240600     DISPLAY '** PROGRAM         ** = ' PC-CURRENT-PROGRAM-NAME.  24110000
240700     DISPLAY '** PARAGRAPH       ** = ' PV-PARAGRAPH-NAME.        24120000
240800     DISPLAY '** OPERATION       ** = ' PV-OPERATION-MSG-1.       24130000
240900     DISPLAY '**                 ** = ' PV-OPERATION-MSG-2.       24140000
241000     CALL 'ILBOABN0' USING ABEND-CODE.                            24150000
241100                                                                  24160000
241200*9800-EXIT.                                                       24170000
241300                                                                  24180000
241400*----------------------------------------------------------       24190000
241500* 9900-SQL-ABEND-ROUTINE.                                         24200000
241600*     SQL ABEND ROUTINE.                                          24210000
241700*----------------------------------------------------------       24220000
241800 9900-SQL-ABEND-ROUTINE.                                          24230000
241900                                                                  24240000
242000     SET ABEND-4013-DB2-ERROR TO TRUE.                            24250000
242100     DISPLAY '** ABEND     **'.                                   24260000
242200     DISPLAY '** PROGRAM   ** = ' PC-CURRENT-PROGRAM-NAME.        24270000
242300     DISPLAY '** PARAGRAPH ** = ' PV-PARAGRAPH-NAME.              24280000
242400     DISPLAY '** OPERATION ** = ' PV-DB2-OPERATION.               24290000
242500                                                                  24300000
242600     COPY DPPD004.                                                24310000
242700     CALL 'ILBOABN0' USING ABEND-CODE.                            24320000
242800                                                                  24330000
242900*9900-EXIT.                                                       24340000
243000                                                                  24350000
243100*----------------------------------------------------------       24360000
243200* 9999-WRAPUP.                                                    24370000
243300*     END OF PROGRAM ROUTINE.  CLOSES ALL FILES AND DISPLAYS      24380000
243400*     ANY DATA FROM THE PROGRAM.                                  24390000
243500*----------------------------------------------------------       24400000
243600 9999-WRAPUP.                                                     24410000
243700                                                                  24420000
243800     CLOSE CONTROL-CARD-1                                         24430000
243900           CONTROL-CARD-2                                         24440000
244000           CONTROL-CARD-3                                         24450000
244100           FULL-XREF-DRIVER-FILE                                  24460000
244200           FULL-SKU-GLOBAL-FILE                                   24470000
244300           FULL-SKU-PRICING-GLOBAL-FILE                           24480000
244400           FULL-SKU-PRICING-STORE-FILE.                           24490000
244500                                                                  24500000
244600     DISPLAY ' '.                                                 24510000
244700     DISPLAY '*********************************************'.     24520000
244800     DISPLAY 'PROGRAM NAME: ' PC-CURRENT-PROGRAM-NAME.            24530000
244900     DISPLAY '*********************************************'.     24540000
245000     DISPLAY ' '.                                                 24550000
245100     DISPLAY '  NUMBER STORES NEEDING REFRESH: '                  24560000
245200              PC-CNT-REFRESH-CSR.                                 24570000
245300     DISPLAY '      NUMBER MERCH RECS FETCHED: '                  24580000
245400              PC-CNT-MERCH-CSR.                                   24590000
245500     DISPLAY '        NUMBER SUB CL EXCLUSION: '                  24600000
245600              PC-CNT-SC-EXC-DUMMY-RECS.                           24610000
245700     DISPLAY '        NUMBER SKU RECS FETCHED: '                  24620000
245800              PC-CNT-SKU-CSR.                                     24630000
245900     DISPLAY ' '.                                                 24640000
246000     DISPLAY '             NUMBER XREF DRIVER RECS WRITTEN: '     24650000
246100              PC-CNT-XREF-RECS.                                   24660000
246200     DISPLAY '              NUMBER GLOBAL SKU RECS WRITTEN: '     24670000
246300              PC-CNT-GLBL-SKU-RECS.                               24680000
246400     DISPLAY '      NUMBER GLOBAL SKU PRICING RECS WRITTEN: '     24690000
246500              PC-CNT-GLBL-SKU-PRICG-RECS.                         24700000
246600     DISPLAY 'NUMBER SKU PRICG STR (RTN PRIC) RECS WRITTEN: '     24710000
246700              PC-CNT-SKU-PRICG-STR-RECS.                          24720000
246800     DISPLAY '                            ALL RECS WRITTEN: '     24730000
246900              PC-CNT-ALL-RECS.                                    24740000
247000     DISPLAY ' '.                                                 24750000
247100     DISPLAY '*********************************************'.     24760000
247200                                                                  24770007
P49465     IF PC-CNT-SKU-CSR < PC-GTT-ROWS-INSERTED                     24780007
P49465        DISPLAY 'GTT RECORDS INSERT COUNT='PC-GTT-ROWS-INSERTED   24790007
P49465        DISPLAY 'PROGRAM CURSOR FETCH COUNT='PC-CNT-SKU-CSR       24800007
P49465        DISPLAY 'GTT INSERT & CURSOR FETCH COUNT IS NOT MATCHING,'24810007
P49465        DISPLAY 'THERE SHOULD BE SOME ISSUE WITH GTT TABLE,'      24820007
P49465        DISPLAY 'HENCE FORCE ABENDING THE JOB FOR RESEARCH.'      24830007
P49465        DISPLAY 'TRY TO RERUN OR CONTACT DB2DBA.'                 24840007
P49465        MOVE 4008 TO RETURN-CODE                                  24850007
P49465     END-IF.                                                      24860007
247300*9999-EXIT.                                                       24870000
