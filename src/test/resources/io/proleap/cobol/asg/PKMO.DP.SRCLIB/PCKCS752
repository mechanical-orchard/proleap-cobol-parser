000100*-----------------------*                                         00010000
000200 IDENTIFICATION DIVISION.                                         00020000
000300*-----------------------*                                         00030000
000400 PROGRAM-ID.    PCKCS752.                                         00040000
000500 AUTHOR.        DEANNA BRANTNER.                                  00050000
000600 INSTALLATION.  KOHLS DEPARTMENT STORES.                          00060000
000700 DATE-WRITTEN.  NOVEMBER, 2001.                                   00070000
000800 DATE-COMPILED.                                                   00080000
000900*----------------------------------------------------------------*00090000
001000*  S752 - UNITS WORKED PROJECT - UNITS BY PURCHASE ORDER SCREEN  *00100000
001001*                                                                *00100100
001010* 06/15/2010  EKTA AGRAWAL             TKID: TKMAV49             *00101000
001020*             MODIFIED TO DISPLAY THE PULL AND CARTONS WORKED    *00102000
001030*             INFORMATION ON THE SCREEN FOR THE IR CARTONS.      *00103000
001060*             CHANGES TAGGED AS EA 06/15/2010                    *00106000
001100*----------------------------------------------------------------*00110000
001110* DATE  11/04/2021                                                00111029
001120*            - CHANGE CALL OF 'DPKUT100' TO                     * 00112029
001130*              CALL DP010I-NUMERIC-EDIT-ROUTINE                 * 00113029
001140*              MAKING THE CALL DYNAMIC VS STATIC                * 00114029
001150*     MADE BY: GERMAN BANDA            WR/IR #: CHG0264232        00115030
001160*-----------------------------------------------------------------00116029
1122RM* DATE  11/07/2022                                              * 00117031
1122RM*            - ADD COPYBOOK DPWS930                             * 00118031
1122RM*              CHANGE CALL TO DPWS030 FROM STATIC TO            * 00119031
1122RM*              DYNAMIC.                                         * 00119131
1122RM*     MADE BY: BOB MCASEY              WR/IR #: CHG0277910      * 00119231
1122RM*-----------------------------------------------------------------00119331
001200 ENVIRONMENT DIVISION.                                            00120000
001300 DATA DIVISION.                                                   00130000
001400                                                                  00140000
001500 WORKING-STORAGE SECTION.                                         00150000
001600 01  DK-DB2-KEYS.                                                 00160000
001700     05  DK-OPER-UNT-ID                 PIC S9(04)  VALUE ZERO    00170000
001800                                                    COMP.         00180000
001900     05  DK-OPER-DESC                   PIC X(05).                00190000
002000     05  DK-PROCESS-GROUP               PIC X(06).                00200000
002100     05  DK-PROCESS-AREA                PIC X(06).                00210000
002200     05  DK-BUSN-DATE                   PIC X(10).                00220000
002300     05  DK-BUSN-DATE-X.                                          00230000
002400         10  DK-BUSN-YY                 PIC X(04) VALUE SPACES.   00240000
002500         10  FILLER                     PIC X(01) VALUE '-'.      00250000
002600         10  DK-BUSN-MM                 PIC X(02) VALUE SPACES.   00260000
002700         10  FILLER                     PIC X(01) VALUE '-'.      00270000
002800         10  DK-BUSN-DD                 PIC X(02) VALUE SPACES.   00280000
002900     05  DK-NUMBER-FORMAT               PIC ZZZ,ZZZ,ZZZ,ZZ9-.     00290000
003000                                                                  00300000
003100 01  PC-PROGRAM-CONSTANTS.                                        00310000
003200     05  PC-CURRENT-MAP-NAME       PIC  X(08)  VALUE 'PC752A  '.  00320000
003300     05  PC-CURRENT-MAPSET-NAME    PIC  X(08)  VALUE 'PCKM752'.   00330000
003400     05  PC-CURRENT-PROGRAM-NAME   PIC  X(08)  VALUE 'PCKCS752'.  00340000
003500     05  PC-LIST-QUEUE-SEQ         PIC  9(01)  VALUE 1.           00350000
003600     05  PC-SEL-QUEUE-SEQ          PIC  9(01)  VALUE 2.           00360000
003700     05  PC-CRIT-SPEC-FORMAT       PIC  X(01)  VALUE '1'.         00370000
003800     05  PC-PROCESS-AREA-FORMAT    PIC  X(01)  VALUE '3'.         00380000
003900     05  PC-PROCSS-GROUP-FORMAT    PIC  X(01)  VALUE '4'.         00390000
004000     05  PC-ITEMS-PER-PANEL        PIC S9(04)  VALUE +11          00400000
004100                                               COMP SYNC.         00410000
004200     05  PC-MAX-BLOCKS-IN-ARRAY    PIC S9(04)  VALUE +2           00420000
004300                                               COMP SYNC.         00430000
004400     05  PC-MAX-ITEMS              PIC S9(09)  VALUE +1000000     00440000
004500                                               COMP-3.            00450000
004600     05  PC-MSG-NUMBER-LENGTH      PIC S9(04)  VALUE +5           00460000
004700                                               COMP SYNC.         00470000
004800     05  PC-MAX-RETRIES            PIC S9(03)  VALUE 3            00480000
004900                                               COMP-3.            00490000
005000     05  PC-INQ                    PIC  X(03)  VALUE 'INQ'.       00500000
005100     05  PC-DEL                    PIC  X(03)  VALUE 'DEL'.       00510000
005200     05  PC-UPD                    PIC  X(03)  VALUE 'UPD'.       00520000
005300     05  PC-ERR                    PIC  X(03)  VALUE 'ERR'.       00530000
005400     05  PC-SLASH                  PIC  X(01)  VALUE '/'.         00540000
005500     05  PC-ZERO                   PIC S9(04)  VALUE ZEROES       00550000
005600                                               COMP.              00560000
005700     05  PC-01                     PIC  X(02)  VALUE '01'.        00570000
005800     05  PC-0                      PIC  S9(4) COMP VALUE 0.       00580000
005900     05  PC-1                      PIC  S9(4) COMP VALUE 1.       00590000
006000     05  PC-2                      PIC  S9(4) COMP VALUE 2.       00600000
006100     05  PC-3                      PIC  S9(4) COMP VALUE 3.       00610000
006200     05  PC-A                      PIC  X(01)  VALUE 'A'.         00620000
006300     05  PC-U                      PIC  X(01)  VALUE 'U'.         00630000
006400     05  PC-X                      PIC  X(01)  VALUE 'X'.         00640000
006500     05  PC-Y                      PIC  X(01)  VALUE 'Y'.         00650000
006501* EA 06/15/2010                                                   00650100
006502     05  PC-W                      PIC  X(01)  VALUE 'W'.         00650200
006510     05  PC-REPLEN                 PIC  X(06)  VALUE 'REPLEN'.    00651000
006520* EA 06/15/2010                                                   00652000
006600*                                                                 00660000
006700*----------------------------------------------------------------*00670000
006800*  SYSTEM MESSAGES                                               *00680000
006900*----------------------------------------------------------------*00690000
007000*   00005 = INVALID VALUE                                        *00700000
007100*   00007 = REQUIRED ENTRY                                        00710000
007200*   00008 = MUST BE NUMERIC                                      *00720000
007300*   00050 - NO LIST ITEMS WERE FOUND FOR THE CRITERIA SPECIFIED  *00730000
007400*   00051 - NO END OF RANGE HAS BEEN SPECIFIED                   *00740000
007500*   00052 - END OF RANGE PRECEDES START OF RANGE                 *00750000
007600*   00053 - NO START OF RANGE HAS BEEN SPECIFIED                 *00760000
007700*   00054 - ONLY ONE START OF RANGE INDICATOR MAY BE SPECIFIED   *00770000
007800*   00055 - ONLY ONE END OF RANGE INDICATOR MAY BE SPECIFIED     *00780000
007900*   00057 - A LIST ITEM MUST BE SELECTED FOR THIS FUNCTION       *00790000
008000*   00069 - TOP OF LIST                                          *00800000
008100*   00070 - BOTTOM OF LIST                                       *00810000
008200*   00101 - VALUE MUST BE > ZERO AND  < 1,000,000                *00820000
008300*   00551 - WAIT 15 SECONDS;RETRY FUNCTION AGAIN; IF UNSUCCESSFUL*00830000
008400*   00279 - MORE ITEMS TO DISPLAY                                *00840000
008500*   00840 - YOU ARE NOT AUTHORIZED TO VIEW THIS INFORMATION      *00850000
008600*   00984 - DATABASE IS BUSY, TRY AGAIN IN A FEW MINUTES         *00860000
008700*   02227 = APPLICATION UNAVAILABLE AT THIS TIME                 *00870000
008800*   02378 = YOU CANNOT USE A DATE RANGE FOR THIS SEARCH          *00880000
008900*   02416 = INVALID DATE OR DATE RANGE                           *00890000
009000*   02873 = F-KEY NOT FUNCTIONAL-CAN ONLY VIEW PO LVL DATA FOR A *00900000
009100*   99901 = INVALID COMMAND WAS ENTERED                          *00910000
009200*----------------------------------------------------------------*00920000
009300     05  PC-TSYMSG-NUMBERS.                                       00930000
009400         10  PC-TSYMSG-00005            PIC  9(05)  VALUE 00005.  00940000
009500         10  PC-TSYMSG-00007            PIC  9(05)  VALUE 00007.  00950000
009600         10  PC-TSYMSG-00008            PIC  9(05)  VALUE 00008.  00960000
009700         10  PC-TSYMSG-00050            PIC  9(05)  VALUE 00050.  00970000
009800         10  PC-TSYMSG-00051            PIC  9(05)  VALUE 00051.  00980000
009900         10  PC-TSYMSG-00052            PIC  9(05)  VALUE 00052.  00990000
010000         10  PC-TSYMSG-00053            PIC  9(05)  VALUE 00053.  01000000
010100         10  PC-TSYMSG-00054            PIC  9(05)  VALUE 00054.  01010000
010200         10  PC-TSYMSG-00055            PIC  9(05)  VALUE 00055.  01020000
010300         10  PC-TSYMSG-00057            PIC  9(05)  VALUE 00057.  01030000
010400         10  PC-TSYMSG-00069            PIC  9(05)  VALUE 00069.  01040000
010500         10  PC-TSYMSG-00070            PIC  9(05)  VALUE 00070.  01050000
010600         10  PC-TSYMSG-00101            PIC  9(05)  VALUE 00101.  01060000
010700         10  PC-TSYMSG-00279            PIC  9(05)  VALUE 00279.  01070000
010800         10  PC-TSYMSG-00551            PIC  9(05)  VALUE 00551.  01080000
010900         10  PC-TSYMSG-00752            PIC  9(05)  VALUE 00752.  01090000
011000         10  PC-TSYMSG-00840            PIC  9(05)  VALUE 00840.  01100000
011100         10  PC-TSYMSG-01563            PIC  9(05)  VALUE 01563.  01110000
011200         10  PC-TSYMSG-00984            PIC  9(05)  VALUE 00984.  01120000
011300         10  PC-TSYMSG-02227            PIC  9(05)  VALUE 02227.  01130000
011400         10  PC-TSYMSG-02378            PIC  9(05)  VALUE 02378.  01140000
011500         10  PC-TSYMSG-02416            PIC  9(05)  VALUE 02416.  01150000
011600         10  PC-TSYMSG-02873            PIC  9(05)  VALUE 02873.  01160000
011700         10  PC-TSYMSG-99901            PIC  9(05)  VALUE 99901.  01170000
011800*                                                                 01180000
011900 01  PS-PROGRAM-SWITCHES.                                         01190000
012000     05  PS-BLOCK-ERROR-SW              PIC  X(01)  VALUE 'Y'.    01200000
012100         88  PS-NO-BLOCK-ERROR                      VALUE 'Y'.    01210000
012200         88  PS-BLOCK-ERROR                         VALUE 'N'.    01220000
012300     05  PS-ERROR-SW                    PIC  X(01)  VALUE 'Y'.    01230000
012400         88  PS-NO-ERROR                            VALUE 'Y'.    01240000
012500         88  PS-ERROR                               VALUE 'N'.    01250000
012600     05  PS-SOFT-ABORT-ERROR-SW         PIC  X(01)  VALUE  'N'.   01260000
012700         88  PS-SOFT-ABORT-ERROR                    VALUE  'Y'.   01270000
012800         88  PS-NO-SOFT-ABORT-ERROR                 VALUE  'N'.   01280000
012900     05  PS-COMMAREA-SW                 PIC  X(01)  VALUE 'N'.    01290000
013000         88  PS-COMMAREA-VALID                      VALUE 'Y'.    01300000
013100         88  PS-COMMAREA-NOT-VALID                  VALUE 'N'.    01310000
013200     05  PS-DONE-SW                     PIC  X(01)  VALUE 'N'.    01320000
013300         88  PS-DONE                                VALUE 'Y'.    01330000
013400         88  PS-NOT-DONE                            VALUE 'N'.    01340000
013500     05  PS-LIST-END-SW                 PIC  X(01)  VALUE  'N'.   01350000
013600         88  PS-LIST-END                            VALUE  'Y'.   01360000
013700         88  PS-NO-LIST-END                         VALUE  'N'.   01370000
013800     05  PS-ACCESS-SW                   PIC  X(01)  VALUE  'N'.   01380000
013900         88  PS-ACCESS-ALLOWED                      VALUE  'Y'.   01390000
014000         88  PS-ACCESS-NOT-ALLOWED                  VALUE  'N'.   01400000
014100     05  PS-CURSOR-SW                   PIC  X(01)  VALUE  ' '.   01410000
014200         88  PS-OPER-NAME-CSR                       VALUE  'A'.   01420000
014300         88  PS-PROCESS-GROUP-CSR                   VALUE  'B'.   01430000
014400         88  PS-PRCSS-GRP-MISC-CSR                  VALUE  'C'.   01440000
014500         88  PS-PROCESS-AREA-CSR                    VALUE  'D'.   01450000
014600*                                                                 01460000
014700 01  PV-PROGRAM-VARIABLES.                                        01470000
014800     05  PV-ORIGINAL-BLOCK               PIC S9(04)  VALUE +0     01480000
014900                                                     COMP SYNC.   01490000
015000     05  PV-ITEMS-HOLD                   PIC S9(03)  COMP-3.      01500000
015100     05  PV-ITEMS-DIFF                   PIC S9(03)  COMP-3.      01510000
015200     05  PV-RACF-ERROR-CODE             PIC  9(04)  VALUE ZEROES. 01520000
015300     05  PV-CICS-RESPONSE               PIC S9(08)  VALUE ZEROES  01530000
015400                                        COMP SYNC.                01540000
015500     05  PV-SUB                         PIC S9(04)  VALUE +0      01550000
015600                                                    COMP SYNC.    01560000
015700     05  PV-REMAINDER                   PIC S9(04)  VALUE +0      01570000
015800                                                    COMP SYNC.    01580000
015900     05  PV-READ-COUNT                  PIC S9(09)  VALUE +0      01590000
016000                                                    COMP-3.       01600000
016100     05  PV-ITEMS-PROCESSED             PIC S9(09)  VALUE +0      01610000
016200                                                    COMP-3.       01620000
016300     05  PV-HOLD-SELECTED-ITEMS         PIC S9(09)  VALUE +0      01630000
016400                                                    COMP-3.       01640000
016500     05  PV-ITEM-IN-USE                 PIC S9(09)  VALUE +0      01650000
016600                                                    COMP-3.       01660000
016700     05  PV-TOP-ITEM                    PIC S9(09)  VALUE +0      01670000
016800                                                    COMP-3.       01680000
016900     05  PV-BOTTOM-ITEM                 PIC S9(09)  VALUE +0      01690000
017000                                                    COMP-3.       01700000
017100     05  PV-TEMP-BLOCK-NUMBER           PIC S9(09)  VALUE +0      01710000
017200                                                    COMP-3.       01720000
017300     05  PV-BLOCK-NUMBER                PIC S9(04)  VALUE +0      01730000
017400                                                    COMP SYNC.    01740000
017500     05  PV-CICS-RESP                   PIC S9(04)  VALUE +0      01750000
017600                                                    COMP SYNC.    01760000
017700     05  PV-ITEM                        PIC S9(04)  VALUE +0      01770000
017800                                                    COMP SYNC.    01780000
017900     05  PV-SEL-QUEUE-ITEM              PIC S9(04)  VALUE +0      01790000
018000                                                    COMP SYNC.    01800000
018100     05  PV-SAVE-ITEM                   PIC S9(04)  VALUE +0      01810000
018200                                                    COMP SYNC.    01820000
018300     05  PV-HIGHEST-BLOCK-WRITTEN       PIC S9(04)  VALUE +0      01830000
018400                                                    COMP SYNC.    01840000
018500     05  PV-LIST-ITEM-NUMBER            PIC S9(04)  VALUE +0      01850000
018600                                                    COMP SYNC.    01860000
018700     05  PV-FIRST-BLOCK-IN-ARRAY        PIC S9(04)  VALUE +0      01870000
018800                                                    COMP SYNC.    01880000
018900     05  PV-NEXT-BLOCK-IN-ARRAY         PIC S9(04)  VALUE +0      01890000
019000                                                    COMP SYNC.    01900000
019100     05  PV-PREV-BLOCK-IN-ARRAY         PIC S9(04)  VALUE +0      01910000
019200                                                    COMP SYNC.    01920000
019300     05  PV-FIRST-BLOCK-IN-RANGE        PIC S9(04)  VALUE +0      01930000
019400                                                    COMP SYNC.    01940000
019500     05  PV-LAST-BLOCK-IN-RANGE         PIC S9(04)  VALUE +0      01950000
019600                                                    COMP SYNC.    01960000
019700     05  PV-START-OF-SELECTED-RANGE     PIC S9(04)  VALUE +0      01970000
019800                                                    COMP SYNC.    01980000
019900     05  PV-END-OF-SELECTED-RANGE       PIC S9(04)  VALUE +0      01990000
020000                                                    COMP SYNC.    02000000
020100     05  PV-SQL-SUB                     PIC S9(04)  VALUE +0      02010000
020200                                                    COMP SYNC.    02020000
020300     05  PV-RETRY-COUNTER               PIC S9(04)  VALUE +0      02030000
020400                                                    COMP SYNC.    02040000
020500     05  PV-NULL-IND-1                  PIC S9(04)  VALUE +0      02050000
020600                                                    COMP.         02060000
020700     05  PV-NULL-IND-2                  PIC S9(04)  VALUE +0      02070000
020800                                                    COMP.         02080000
020900     05  PV-NULL-IND-3                  PIC S9(04)  VALUE +0      02090000
021000                                                    COMP.         02100000
021100     05  PV-SOFT-ABORT-MSG.                                       02110000
021200         10  FILLER            PIC X(12) VALUE ' PCKCS752 - '.    02120000
021300         10  FILLER            PIC X(09) VALUE 'SQLCODE: '.       02130000
021400         10  PV-SOFT-SQLCODE   PIC ZZZZZZZZ9-.                    02140000
021500         10  FILLER            PIC X(12) VALUE ' PARAGRAPH: '.    02150000
021600         10  PV-SOFT-PARAGRAPH PIC X(30).                         02160000
021700     05  PV-COMMAREA-LENGTH              PIC S9(04)  VALUE +0     02170000
021800                                                     COMP SYNC.   02180000
021900     05  PV-CICS-MSG-AREA                PIC  X(80)  VALUE SPACE. 02190000
022000     05  PV-CICS-MSG-AREA2               PIC  X(100) VALUE SPACE. 02200000
022100     05  PV-CICS-MSG-HOLD.                                        02210000
022200         10  FILLER                      PIC  X(01)  VALUE SPACE. 02220000
022300         10  PV-CICS-MSG-DATA            PIC  X(79)  VALUE SPACE. 02230000
022400     05  PV-CICS-MSG-HOLD2.                                       02240000
022500         10  FILLER                      PIC  X(01)  VALUE SPACE. 02250000
022600         10  PV-CICS-MSG-DATA2           PIC  X(99)  VALUE SPACE. 02260000
022700                                                                  02270000
022800     05  PV-DISPLAY-TITLE               PIC  X(13) VALUE SPACES.  02280000
022900     05  PV-SELECT-LIST-SEQ             PIC  X(01) VALUE SPACES.  02290000
023000     05  PV-NBR-ITEMS                   PIC  9(05) VALUE ZEROES.  02300000
023100     05  PV-SEL-TERM-ID                 PIC  X(04).               02310000
023200     05  PV-SEL-TASK-NUMBER             PIC  9(05).               02320000
023300     05  PV-SEL-SEQ                     PIC  9(01).               02330000
023400     05  PV-TOT-UNITS               PIC S9(15) COMP-3 VALUE ZEROS.02340000
023500     05  PV-3RD-UNITS               PIC S9(15) COMP-3 VALUE ZEROS.02350000
023600     05  PV-1ST-UNITS               PIC S9(15) COMP-3 VALUE ZEROS.02360000
023700     05  PV-2ND-UNITS               PIC S9(15) COMP-3 VALUE ZEROS.02370000
023800     05  PV-3RD-PCT                     PIC S9(05)V9 VALUE ZEROS. 02380000
023900     05  PV-1ST-PCT                     PIC S9(05)V9 VALUE ZEROS. 02390000
024000     05  PV-2ND-PCT                     PIC S9(05)V9 VALUE ZEROS. 02400000
024100     05  PV-TOT-PCT                     PIC S9(05)V9 VALUE ZEROS. 02410000
024200     05  PV-DIVIDEND                    PIC S9(03)V9999.          02420000
024210     05  PV-RCVR-SEQ-NBR                PIC S9(9) COMP.           02421000
024211     05  PV-SHFT-NBR                    PIC S9(4) COMP.           02421100
024220     05  PV-PRCG-AREA-CDE               PIC X(6).                 02422000
024230     05  PV-PO-NBR                      PIC  S9(9) COMP.          02423000
024300                                                                  02430000
024400******************************************************************02440000
024500**  THIS IS THE LAYOUT FOR THE LIST ITEMS TEMP STORAGE QUEUE.   **02450000
024600**  THIS MUST BE THE EXACT SAME FORMAT A BLOCK IN THE           **02460000
024700**  APPLICATION-SPECIFIC COMMAREA.                              **02470000
024800******************************************************************02480000
024900 01  LQW-LIST-QUEUE-WORK-AREA.                                    02490000
025000     05  LQW-BLOCK-MODIFIED             PIC  X(01)  VALUE SPACE.  02500000
025100     05  LQW-ITEM-ENTRIES               OCCURS 11 TIMES           02510000
025200                                        INDEXED BY LQW-IDX.       02520000
025300         10  LQW-LIST-ITEM-NUMBER       PIC S9(09)  COMP-3.       02530000
025400         10  LQW-TEMP-SELECTED-SW       PIC  X(01).               02540000
025500         10  LQW-SELECTED-SW            PIC  X(01).               02550000
025600             88  LQW-SELECT                         VALUE 'S'.    02560000
025700             88  LQW-DESELECT                       VALUE ' '.    02570000
025800         10  LQW-ACTION                 PIC  X(03).               02580000
025900             88  LQW-DEL                            VALUE 'DEL'.  02590000
026000             88  LQW-INQ                            VALUE 'INQ'.  02600000
026100             88  LQW-UPD                            VALUE 'UPD'.  02610000
026200             88  LQW-ERR                            VALUE 'ERR'.  02620000
026300         10  LQW-PROCESS-AREA           PIC  X(06) VALUE SPACES.  02630000
026400         10  LQW-PO-NBR                 PIC  9(08) VALUE ZEROS.   02640000
026500         10  LQW-PO-RCVR                PIC  9(03) VALUE ZEROS.   02650000
026600         10  LQW-UNITS                  PIC  9(10) VALUE ZEROS.   02660000
026610* EA 06/15/2010                                                   02661000
026700         10  LQW-CTNWK                  PIC  9(10) VALUE ZEROS.   02670000
026710* EA 06/15/2010                                                   02671000
026800         10  LQW-RETAIL                PIC  9(10)V99 VALUE ZEROS. 02680000
026900         10  LQW-SHIFT                  PIC  X(01) VALUE SPACES.  02690000
027000         10  LQW-MISDIRECTS             PIC  X(05) VALUE SPACES.  02700000
027100                                                                  02710000
027200*---------------------------------------------------------------* 02720000
027300* SELECTION QUEUE LAYOUT                                        * 02730000
027400*---------------------------------------------------------------* 02740000
027500     COPY PCWS215.                                                02750000
027600                                                                  02760000
027700*---------------------------------------------------------------* 02770000
027800*    MAP LAYOUT                                                 * 02780000
027900*---------------------------------------------------------------* 02790000
028000     COPY PCKM752.                                                02800000
028100*                                                                 02810000
028200 01  MR-OCCURS-LAYOUT                   REDEFINES  PC752AO.       02820000
028300     05  FILLER                         PIC X(194).               02830000
028400     05  MR-SCROLL-AREA                 OCCURS 11 TIMES.          02840000
028500*        10  MR-SELECTL                 PIC S9(04) COMP.          02850000
028600*        10  MR-SELECTA                 PIC  X(01).               02860000
028700*        10  MR-SELECTC                 PIC  X(01).               02870000
028800*        10  MR-SELECTH                 PIC  X(01).               02880000
028900*        10  MR-SELECTI                 PIC  X(01).               02890000
029000                                                                  02900000
029100*        10  MR-ACTIONL                 PIC S9(04) COMP.          02910000
029200*        10  MR-ACTIONA                 PIC  X(01).               02920000
029300*        10  MR-ACTIONC                 PIC  X(01).               02930000
029400*        10  MR-ACTIONH                 PIC  X(01).               02940000
029500*        10  MR-ACTION                  PIC  X(03).               02950000
029600                                                                  02960000
029700         10  MR-PROC-AREAL              PIC S9(04) COMP.          02970000
029800         10  MR-PROC-AREAA              PIC  X(01).               02980000
029900         10  MR-PROC-AREAC              PIC  X(01).               02990000
030000         10  MR-PROC-AREAH              PIC  X(01).               03000000
030100         10  MR-PROC-AREA               PIC  X(06).               03010000
030200                                                                  03020000
030300         10  MR-PO-NBRL                 PIC S9(04) COMP.          03030000
030400         10  MR-PO-NBRA                 PIC  X(01).               03040000
030500         10  MR-PO-NBRC                 PIC  X(01).               03050000
030600         10  MR-PO-NBRH                 PIC  X(01).               03060000
030700         10  MR-PO-NBR                  PIC  X(08).               03070000
030800         10  MR-PO-NBR-X REDEFINES MR-PO-NBR.                     03080000
030900             15  MR-PO-NBR-N            PIC ZZZZZZZ9.             03090000
031000                                                                  03100000
031100         10  MR-PO-RCVRL                PIC S9(04) COMP.          03110000
031200         10  MR-PO-RCVRA                PIC  X(01).               03120000
031300         10  MR-PO-RCVRC                PIC  X(01).               03130000
031400         10  MR-PO-RCVRH                PIC  X(01).               03140000
031500         10  MR-PO-RCVR                 PIC  X(03).               03150000
031600         10  MR-PO-RCVR-X REDEFINES MR-PO-RCVR.                   03160000
031700             15  MR-PO-RCVR-N              PIC  ZZ9.              03170000
031800                                                                  03180000
031900         10  MR-UNITSL                  PIC S9(04) COMP.          03190000
032000         10  MR-UNITSA                  PIC  X(01).               03200000
032100         10  MR-UNITSC                  PIC  X(01).               03210000
032200         10  MR-UNITSH                  PIC  X(01).               03220000
032300         10  MR-UNITS                   PIC  X(11).               03230000
032400         10  MR-UNIT-X REDEFINES MR-UNITS.                        03240000
032500             15  MR-UNITS-N            PIC ZZ,ZZZ,ZZ9-.           03250000
032600                                                                  03260000
032610* EA 06/15/2010                                                   03261000
032700         10  MR-CTNWKL                  PIC S9(04) COMP.          03270000
032800         10  MR-CTNWKA                  PIC  X(01).               03280000
032900         10  MR-CTNWKC                  PIC  X(01).               03290000
033000         10  MR-CTNWKH                  PIC  X(01).               03300000
033100         10  MR-CTNWK                   PIC  X(07).               03310000
033200         10  MR-CTWK-X REDEFINES MR-CTNWK.                        03320000
033300             15  MR-CTNWK-N            PIC ZZ,ZZZ9.               03330000
033310* EA 06/15/2010                                                   03331000
033400                                                                  03340000
033500         10  MR-RETAILL                 PIC S9(04) COMP.          03350000
033600         10  MR-RETAILA                 PIC  X(01).               03360000
033700         10  MR-RETAILC                 PIC  X(01).               03370000
033800         10  MR-RETAILH                 PIC  X(01).               03380000
033900         10  MR-RETAIL                  PIC  X(14).               03390000
034000         10  MR-RETAIL-X REDEFINES MR-RETAIL.                     03400000
034100             15  MR-RETAIL-N        PIC  $$,$$$,$$9.99-.          03410000
034200                                                                  03420000
034300         10  MR-SHIFTL                  PIC S9(04) COMP.          03430000
034400         10  MR-SHIFTA                  PIC  X(01).               03440000
034500         10  MR-SHIFTC                  PIC  X(01).               03450000
034600         10  MR-SHIFTH                  PIC  X(01).               03460000
034700         10  MR-SHIFT                   PIC  X(01).               03470000
034800         10  MR-SHIFT-X REDEFINES MR-SHIFT.                       03480000
034900             15  MR-SHIFT-N                PIC 9.                 03490000
035000                                                                  03500000
035100         10  MR-MISDIRECTL              PIC S9(04) COMP.          03510000
035200         10  MR-MISDIRECTA              PIC  X(01).               03520000
035300         10  MR-MISDIRECTC              PIC  X(01).               03530000
035400         10  MR-MISDIRECTH              PIC  X(01).               03540000
035500         10  MR-MISDIRECT               PIC  X(05).               03550000
035600                                                                  03560000
035700*---------------------------------------------------------------* 03570000
035800*    ATTRIBUTE SETTINGS COPYBOOK.                               * 03580000
035900*---------------------------------------------------------------* 03590000
036000     COPY DPWS015.                                                03600000
036100                                                                  03610000
036200*---------------------------------------------------------------* 03620000
036300*    FUNCTION KEYS COPYBOOK.                                    * 03630000
036400*---------------------------------------------------------------* 03640000
036500     COPY DPWS016.                                                03650000
036600                                                                  03660000
036700*---------------------------------------------------------------* 03670000
036800*    NUMERIC EDIT LAYOUT.                                       * 03680000
036900*---------------------------------------------------------------* 03690000
037000     COPY DPWS010I.                                               03700000
037100                                                                  03710000
037200*---------------------------------------------------------------* 03720000
037300*    PARAMETERS FOR CALLING CICS ARCHITECTURE API (DPKCS030).   * 03730000
037400*---------------------------------------------------------------* 03740000
037500     COPY DPWS030.                                                03750000
1122RM     COPY DPWS930.                                                03751031
037600                                                                  03760000
037700*---------------------------------------------------------------* 03770000
037800*    STANDARD COMMAREA.                                         * 03780000
037900*---------------------------------------------------------------* 03790000
038000     COPY DPWS020.                                                03800000
038100     05  FILLER REDEFINES DP020-VARIABLE-COMMAREA.                03810000
038200                                                                  03820000
038300*---------------------------------------------------------------* 03830000
038400* INTER-APPLICATION COMMAREA.                                   * 03840000
038500*   PCWS213 - IS THE INPUT LAYOUT WHEN COMING FROM THE CRIT.    * 03850000
038600*             SPEC SCREEN.                                      * 03860000
038700*   PCWS214 - IS THE OUTPUT LAYOUT THAT WILL BE PASSED FROM     * 03870000
038800*             THIS LIST PROGRAMMING FOR A LOCAL-GO FUNCTION.    * 03880000
038900*---------------------------------------------------------------* 03890000
039000         10  INTER-APPL-COMM-AREA       PIC X(200).               03900000
039100     COPY PCWS213.                                                03910000
039200     COPY PCWS214.                                                03920000
039300                                                                  03930000
039400*---------------------------------------------------------------* 03940000
039500*  THIS IS THE APPLICATION-SPECIFIC COMMAREA.                   * 03950000
039600*---------------------------------------------------------------* 03960000
039700         10  ASC-SPECIFIC-COMMAREA.                               03970000
039800             15  ASC-OPER-NBR-X              PIC  X(04).          03980000
039900             15  ASC-OPER-NBR-N REDEFINES ASC-OPER-NBR-X.         03990000
040000                 20  ASC-OPER-NBR            PIC  9(04).          04000000
040100             15  ASC-OPER-DESC               PIC  X(05).          04010000
040200             15  ASC-OPER-NAME               PIC  X(25).          04020000
040300             15  ASC-MISDIRECTS              PIC  X(05).          04030000
040400             15  ASC-DISPLAY-TITLE           PIC  X(13).          04040000
040500             15  ASC-BUSN-DATE.                                   04050000
040600                 20  ASC-BUSN-YY             PIC  X(04).          04060000
040700                 20  ASC-BUSN-MM             PIC  X(02).          04070000
040800                 20  ASC-BUSN-DD             PIC  X(02).          04080000
040900             15  ASC-FISCAL-WEEK             PIC  X(06).          04090000
041000             15  ASC-FISCAL-MONTH            PIC  X(06).          04100000
041100             15  ASC-PRINTER-ID              PIC  X(08).          04110000
041200             15  ASC-PROCESS-GROUP           PIC  X(06).          04120000
041300             15  ASC-PROCESS-AREA            PIC  X(06).          04130000
041400             15  ASC-TOT-UNITS               PIC S9(15).          04140000
041500             15  ASC-3RD-UNITS               PIC S9(15).          04150000
041600             15  ASC-1ST-UNITS               PIC S9(15).          04160000
041700             15  ASC-2ND-UNITS               PIC S9(15).          04170000
041800             15  ASC-3RD-PCT                 PIC S9(05)V9.        04180000
041900             15  ASC-1ST-PCT                 PIC S9(05)V9.        04190000
042000             15  ASC-2ND-PCT                 PIC S9(05)V9.        04200000
042100             15  ASC-TOT-PCT                 PIC S9(05)V9.        04210000
042200             15  FILLER                      PIC  X(025).         04220000
042300*-----------------------------------------------------------------04230000
042400             15  ASC-BLK-SUB                  PIC S9(04) COMP     04240000
042500                                                         SYNC.    04250000
042600             15  ASC-ITEM-SUB                 PIC S9(04) COMP     04260000
042700                                                         SYNC.    04270000
042800             15  ASC-NUMBER-OF-ITEMS-READ     PIC S9(09) COMP-3.  04280000
042900             15  ASC-NUMBER-OF-SELECTED-ITEMS PIC S9(09) COMP-3.  04290000
043000             15  ASC-ITEMS-DISPLAYED          PIC S9(03) COMP-3.  04300000
043100             15  ASC-ITEM-AT-TOP-OF-PANEL     PIC S9(09) COMP-3.  04310000
043200             15  ASC-ITEM-AT-BOT-OF-PANEL     PIC S9(09) COMP-3.  04320000
043300             15  ASC-HIGHEST-BLOCK-WRITTEN    PIC S9(04) COMP     04330000
043400                                                         SYNC.    04340000
043500             15  ASC-START-OF-SELECTED-RANGE  PIC S9(09) COMP-3.  04350000
043600             15  ASC-END-OF-SELECTED-RANGE    PIC S9(09) COMP-3.  04360000
043700             15  ASC-ITEMS-LEFT-INDICATOR     PIC  X(01).         04370000
043800                 88  ASC-ITEMS-LEFT-ON-DB          VALUE 'Y'.     04380000
043900                 88  ASC-NO-ITEMS-LEFT-ON-DB       VALUE 'N'.     04390000
044000             15  ASC-TEMP-QUEUE-UPDATE-SW     PIC  X(01).         04400000
044100                 88  ASC-UPDATE-TSQ                VALUE 'Y'.     04410000
044200                 88  ASC-NO-TSQ-UPDATE             VALUE ' '.     04420000
044300             15  ASC-LIST-QUEUE-NAME.                             04430000
044400                 20  ASC-LIST-TERM-ID         PIC  X(04).         04440000
044500                 20  ASC-LIST-TASK-NUMBER     PIC S9(05) COMP-3.  04450000
044600                 20  ASC-LIST-SEQ             PIC  9(01).         04460000
044700                                                                  04470000
044800             15  ASC-START-ITEM-REQUEST.                          04480000
044900                 20  ASC-START-ITEM-REQUEST-N PIC  9(05).         04490000
045000                                                                  04500000
045100             15  ASC-SEL-SUB                  PIC S9(4) COMP.     04510000
045200             15  ASC-SEL-ITEM                 PIC S9(4) COMP.     04520000
045300             15  ASC-USE-SELECTION-QUEUE-IND  PIC  X(1).          04530000
045400                 88  ASC-USE-SELECTION-QUEUE           VALUE 'Y'. 04540000
045500             15  ASC-SEL-QUEUE-NAME.                              04550000
045600                 20  ASC-SEL-TERM-ID          PIC  X(04).         04560000
045700                 20  ASC-SEL-TASK-NUMBER      PIC S9(05) COMP-3.  04570000
045800                 20  ASC-SEL-SEQ              PIC  9(01).         04580000
045900             15  ASC-NUMBER-OF-TS-ITEMS       PIC S9(09) COMP-3.  04590000
046000                                                                  04600000
046100*-----------------------------------------------------------------04610000
046200             15  ASC-BLOCK-ENTRIES OCCURS 2 TIMES.                04620000
046300                 20  ASC-BLOCK-MODIFIED-SW           PIC  X(01).  04630000
046400                     88  ASC-BLOCK-NOT-MODIFIED      VALUE 'N'.   04640000
046500                     88  ASC-BLOCK-MODIFIED          VALUE 'Y'.   04650000
046600                                                                  04660000
046700                 20  ASC-ITEM-ARRAY.                              04670000
046800                     25  ASC-ITEM-ENTRIES OCCURS 11 TIMES.        04680000
046900                         30  ASC-LIST-ITEM-NUMBER                 04690000
047000                                                     PIC S9(09)   04700000
047100                                                     COMP-3.      04710000
047200                         30  ASC-TEMP-SELECTED-SW    PIC  X(01).  04720000
047300                             88  ASC-VALID-SELECT    VALUE ' '    04730000
047400                                                           'S'    04740000
047500                                                           'B'    04750000
047600                                                           'E'.   04760000
047700                             88  ASC-TEMP-NO-SELECT  VALUE ' '.   04770000
047800                             88  ASC-TEMP-SELECT     VALUE 'S'.   04780000
047900                             88  ASC-TEMP-BEGIN      VALUE 'B'.   04790000
048000                             88  ASC-TEMP-END        VALUE 'E'.   04800000
048100                         30  ASC-SELECTED-SW         PIC  X(01).  04810000
048200                             88  ASC-NO-SELECT       VALUE ' '.   04820000
048300                             88  ASC-SELECT          VALUE 'S'.   04830000
048400                             88  ASC-BEGIN           VALUE 'B'.   04840000
048500                             88  ASC-END             VALUE 'E'.   04850000
048600                         30  ASC-ACTION            PIC  X(03).    04860000
048700                         30  ASC-AREA              PIC  X(06).    04870000
048800                         30  ASC-PONBR             PIC  9(08).    04880000
048900                         30  ASC-PORCVR            PIC  9(03).    04890000
049000                         30  ASC-UNITSWRKD         PIC S9(11).    04900000
049010* EA 06/15/2010                                                   04901000
049100                         30  ASC-CTNWRKD           PIC  9(07).    04910000
049110* EA 06/15/2010                                                   04911000
049200                         30  ASC-RETAILDLS         PIC S9(10)V99. 04920000
049300                         30  ASC-SHIFTWRKD         PIC  9(01).    04930000
049400                         30  ASC-MISDRCTS          PIC  X(05).    04940000
049500                                                                  04950000
049600*---------------------------------------------------------------* 04960000
049700*    ABEND PROCESSING COPYBOOK.                                 * 04970000
049800*---------------------------------------------------------------* 04980000
049900     COPY DPWS013.                                                04990000
050000                                                                  05000000
050100*---------------------------------------------------------------* 05010000
050200*    PCT_RCVR_LNE_DTL - PO RCVR LINE DETAIL INFORMATION           05020000
050300*---------------------------------------------------------------* 05030000
050400     EXEC SQL                                                     05040000
050500          INCLUDE PCT00007                                        05050000
050600     END-EXEC.                                                    05060000
050700                                                                  05070000
050800*---------------------------------------------------------------* 05080000
050900*    PCT_PRC_AREA_ASSN - PROCESS AREA TO PROCESS GROUP ASSOCIATN  05090000
051000*---------------------------------------------------------------* 05100000
051100     EXEC SQL                                                     05110000
051200          INCLUDE PCT00003                                        05120000
051300     END-EXEC.                                                    05130000
051400                                                                  05140000
051500*---------------------------------------------------------------* 05150000
051600*    PCT00005 - PCT_SUM_WRKD - SUMMARY OF UNITS WORKED            05160000
051700*---------------------------------------------------------------* 05170000
051800     EXEC SQL                                                     05180000
051900          INCLUDE PCT00005                                        05190000
052000     END-EXEC.                                                    05200000
052100                                                                  05210000
052200*---------------------------------------------------------------* 05220000
052300*    TRECEIV - RECEIVING TABLE                                    05230000
052400*---------------------------------------------------------------* 05240000
052500     EXEC SQL                                                     05250000
052600          INCLUDE TRECEIV                                         05260000
052700     END-EXEC.                                                    05270000
052800                                                                  05280000
052900*---------------------------------------------------------------* 05290000
053000*    XLT_LOC - LOCATION TABLE                                     05300000
053100*---------------------------------------------------------------* 05310000
053200     EXEC SQL                                                     05320000
053300          INCLUDE XLT00010                                        05330000
053400     END-EXEC.                                                    05340000
053500                                                                  05350000
053600*---------------------------------------------------------------* 05360000
053700*    DB2 AREA FOR COMMUNICATIONS                                * 05370000
053800*---------------------------------------------------------------* 05380000
053900     EXEC SQL                                                     05390000
054000          INCLUDE SQLCA                                           05400000
054100     END-EXEC.                                                    05410000
054200                                                                  05420000
054300*---------------------------------------------------------------* 05430000
054400*    OPER NAME CURSOR                                             05440000
054500*---------------------------------------------------------------* 05450000
054510* EA 06/15/2010 - ADDED UNION SQL FOR OPER-NAME-CSR               05451000
054600     EXEC SQL                                                     05460000
054700          DECLARE OPER-NAME-CSR CURSOR FOR                        05470000
054800              SELECT  SUM(A.UNT_QTY)                              05480000
054900                    ,SUM(A.EXTD_RTL_AMT)                          05490000
055100                    ,A.SHFT_NBR                                   05510000
055200                    ,A.PO_NBR                                     05520000
055300                    ,A.RCVR_SEQ_NBR                               05530000
055400                    ,A.PRCG_AREA_CDE                              05540000
055500                    ,B.OPER_UNT_ID                                05550000
055600                    ,C.LOC_5_ABBR_NM                              05560000
055700               FROM  PCT_RCVR_LNE_DTL A                           05570000
055800                    ,TRECEIV  B                                   05580000
055900                    ,XLT_LOC  C                                   05590000
056000              WHERE  A.OPER_UNT_ID   =  :DK-OPER-UNT-ID           05600000
056100                AND  A.BUS_DTE       =  :DK-BUSN-DATE             05610000
056200                AND  A.PO_LNE_NBR    >  :PC-0                     05620000
056300                AND  A.ACTN_CDE     <>  :PC-U                     05630000
056400                AND  A.ACTN_CDE     <>  :PC-X                     05640000
056500                AND  A.ACTN_CDE     <>  :PC-Y                     05650000
056600                AND  A.PO_NBR        =  B.ORD_NBR                 05660000
056700                AND  A.RCVR_SEQ_NBR  =  B.REC_SEQ_NBR             05670000
056800                AND  B.OPER_UNT_ID   =  C.LOC_NBR                 05680000
056900                 GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,   05690000
057000                 A.PRCG_AREA_CDE, B.OPER_UNT_ID, C.LOC_5_ABBR_NM  05700000
057001              UNION                                               05700100
057010              SELECT  SUM(A.UNT_QTY)                              05701000
057020                    ,SUM(A.EXTD_RTL_AMT)                          05702000
057040                    ,A.SHFT_NBR                                   05704000
057050                    ,A.PO_NBR                                     05705000
057060                    ,A.RCVR_SEQ_NBR                               05706000
057070                    ,A.PRCG_AREA_CDE                              05707000
057080                    ,B.LOC_NBR                                    05708000
057090                    ,B.LOC_5_ABBR_NM                              05709000
057091               FROM  PCT_RCVR_LNE_DTL A                           05709100
057093                    ,XLT_LOC  B                                   05709300
057094              WHERE  A.OPER_UNT_ID   =  :DK-OPER-UNT-ID           05709400
057095                AND  A.BUS_DTE       =  :DK-BUSN-DATE             05709500
057096                AND  A.PO_LNE_NBR    >  :PC-0                     05709600
057097                AND  A.ACTN_CDE     <>  :PC-U                     05709700
057098                AND  A.ACTN_CDE     <>  :PC-X                     05709800
057099                AND  A.ACTN_CDE     <>  :PC-Y                     05709900
057101                AND  A.PRCG_AREA_CDE =  :PC-REPLEN                05710100
057102                AND  A.RCVR_SEQ_NBR  =  :PC-0                     05710200
057103                AND  B.LOC_NBR       =  :DK-OPER-UNT-ID           05710300
057104                 GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,   05710400
057105                 A.PRCG_AREA_CDE, B.LOC_NBR, B.LOC_5_ABBR_NM      05710500
057106             ORDER BY 3,4,5,6                                     05710627
057110     END-EXEC.                                                    05711000
057200*---------------------------------------------------------------* 05720000
057300*    PROCESS GROUP CURSOR                                         05730000
057400*---------------------------------------------------------------* 05740000
057410* EA 06/15/2010 - ADDED UNION SQL FOR PROCESS-GROUP-CSR           05741000
057500     EXEC SQL                                                     05750000
057600          DECLARE PROCESS-GROUP-CSR CURSOR FOR                    05760000
057700              SELECT  SUM(A.UNT_QTY)                              05770000
057800                    ,SUM(A.EXTD_RTL_AMT)                          05780000
058000                    ,A.SHFT_NBR                                   05800000
058100                    ,A.PO_NBR                                     05810000
058200                    ,A.RCVR_SEQ_NBR                               05820000
058300                    ,A.PRCG_AREA_CDE                              05830000
058400                    ,B.OPER_UNT_ID                                05840000
058500                    ,C.LOC_5_ABBR_NM                              05850000
058600               FROM  PCT_RCVR_LNE_DTL A                           05860000
058700                    ,TRECEIV  B                                   05870000
058800                    ,XLT_LOC  C                                   05880000
058900                    ,PCT_PRC_AREA_ASSN D                          05890000
059000              WHERE  A.OPER_UNT_ID     =  :DK-OPER-UNT-ID         05900000
059100                AND  A.BUS_DTE         =  :DK-BUSN-DATE           05910000
059200                AND  A.PO_LNE_NBR      >  :PC-0                   05920000
059300                AND  A.ACTN_CDE       <>  :PC-U                   05930000
059400                AND  A.ACTN_CDE       <>  :PC-X                   05940000
059500                AND  A.ACTN_CDE       <>  :PC-Y                   05950000
059600                AND  A.PO_NBR          =  B.ORD_NBR               05960000
059700                AND  A.RCVR_SEQ_NBR    =  B.REC_SEQ_NBR           05970000
059800                AND  B.OPER_UNT_ID     =  C.LOC_NBR               05980000
059900                AND  A.PRCG_AREA_CDE   =  D.PRCG_AREA_CDE         05990000
060000                AND  A.OPER_UNT_ID     =  D.OPER_UNT_ID           06000000
060100                AND  D.PRC_AREA_GP_CDE =  :DK-PROCESS-GROUP       06010000
060200                  GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,  06020000
060300                           A.PRCG_AREA_CDE, B.OPER_UNT_ID,        06030000
060400                           C.LOC_5_ABBR_NM                        06040000
060401              UNION                                               06040100
060410              SELECT  SUM(A.UNT_QTY)                              06041000
060420                    ,SUM(A.EXTD_RTL_AMT)                          06042000
060440                    ,A.SHFT_NBR                                   06044000
060450                    ,A.PO_NBR                                     06045000
060460                    ,A.RCVR_SEQ_NBR                               06046000
060470                    ,A.PRCG_AREA_CDE                              06047000
060480                    ,B.LOC_NBR                                    06048000
060490                    ,B.LOC_5_ABBR_NM                              06049000
060491               FROM  PCT_RCVR_LNE_DTL A                           06049100
060493                    ,XLT_LOC  B                                   06049300
060494                    ,PCT_PRC_AREA_ASSN C                          06049400
060495              WHERE  A.OPER_UNT_ID     =  :DK-OPER-UNT-ID         06049500
060496                AND  A.BUS_DTE         =  :DK-BUSN-DATE           06049600
060497                AND  A.PO_LNE_NBR      >  :PC-0                   06049700
060498                AND  A.ACTN_CDE       <>  :PC-U                   06049800
060499                AND  A.ACTN_CDE       <>  :PC-X                   06049900
060500                AND  A.ACTN_CDE       <>  :PC-Y                   06050000
060501*               AND  A.PO_NBR          =  B.ORD_NBR               06050100
060502                AND  A.RCVR_SEQ_NBR    =  :PC-0                   06050200
060503                AND  B.LOC_NBR         =  :DK-OPER-UNT-ID         06050300
060504                AND  A.PRCG_AREA_CDE   =  :PC-REPLEN              06050400
060505                AND  A.OPER_UNT_ID     =  C.OPER_UNT_ID           06050500
060506                AND  C.PRC_AREA_GP_CDE =  :DK-PROCESS-GROUP       06050600
060507                AND  C.PRCG_AREA_CDE =  A.PRCG_AREA_CDE           06050700
060508                  GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,  06050800
060509                           A.PRCG_AREA_CDE, B.LOC_NBR,            06050900
060510                           B.LOC_5_ABBR_NM                        06051000
060511           ORDER BY 3,4,5                                         06051127
060520     END-EXEC.                                                    06052000
060600                                                                  06060000
060700*---------------------------------------------------------------* 06070000
060800*    PROCESS GROUP CURSOR WHEN = 'MISC'                           06080000
060900*---------------------------------------------------------------* 06090000
061000     EXEC SQL                                                     06100000
061100          DECLARE PRCSS-GRP-MISC-CSR CURSOR FOR                   06110000
061200              SELECT  SUM(A.UNT_QTY)                              06120000
061300                    ,SUM(A.EXTD_RTL_AMT)                          06130000
061400                    ,A.SHFT_NBR                                   06140000
061500                    ,A.PO_NBR                                     06150000
061600                    ,A.RCVR_SEQ_NBR                               06160000
061700                    ,A.PRCG_AREA_CDE                              06170000
061800                    ,B.OPER_UNT_ID                                06180000
061900                    ,C.LOC_5_ABBR_NM                              06190000
062000               FROM  PCT_RCVR_LNE_DTL A                           06200000
062100                    ,TRECEIV  B                                   06210000
062200                    ,XLT_LOC  C                                   06220000
062300              WHERE  A.OPER_UNT_ID     =  :DK-OPER-UNT-ID         06230000
062400                AND  A.BUS_DTE         =  :DK-BUSN-DATE           06240000
062500                AND  A.PO_LNE_NBR      >  :PC-0                   06250000
062600                AND  A.ACTN_CDE       <>  :PC-U                   06260000
062700                AND  A.ACTN_CDE       <>  :PC-X                   06270000
062800                AND  A.ACTN_CDE       <>  :PC-Y                   06280000
062900                AND  A.PO_NBR          =  B.ORD_NBR               06290000
063000                AND  A.RCVR_SEQ_NBR    =  B.REC_SEQ_NBR           06300000
063100                AND  B.OPER_UNT_ID     =  C.LOC_NBR               06310000
063200                AND NOT EXISTS                                    06320000
063300                     (SELECT *                                    06330000
063400                FROM PCT_PRC_AREA_ASSN D                          06340000
063500              WHERE  D.PRCG_AREA_CDE   =  A.PRCG_AREA_CDE         06350000
063600                AND  D.OPER_UNT_ID     =  A.OPER_UNT_ID)          06360000
063700                  GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,  06370000
063800                           A.PRCG_AREA_CDE, B.OPER_UNT_ID,        06380000
063900                           C.LOC_5_ABBR_NM                        06390000
064000     END-EXEC.                                                    06400000
064100                                                                  06410000
064200*---------------------------------------------------------------* 06420000
064300*    PROCESS AREA CURSOR                                          06430000
064400*---------------------------------------------------------------* 06440000
064410* EA 06/15/2010 - ADDED UNION SQL FOR PROCESS-AREA-CSR            06441000
064500     EXEC SQL                                                     06450000
064600          DECLARE PROCESS-AREA-CSR CURSOR FOR                     06460000
064700              SELECT  SUM(A.UNT_QTY)                              06470000
064800                    ,SUM(A.EXTD_RTL_AMT)                          06480000
064900                    ,A.SHFT_NBR                                   06490000
065000                    ,A.PO_NBR                                     06500000
065100                    ,A.RCVR_SEQ_NBR                               06510000
065200                    ,A.PRCG_AREA_CDE                              06520000
065300                    ,B.OPER_UNT_ID                                06530000
065400                    ,C.LOC_5_ABBR_NM                              06540000
065500               FROM  PCT_RCVR_LNE_DTL A                           06550000
065600                    ,TRECEIV  B                                   06560000
065700                    ,XLT_LOC  C                                   06570000
065800              WHERE  A.OPER_UNT_ID   =  :DK-OPER-UNT-ID           06580000
065900                AND  A.BUS_DTE       =  :DK-BUSN-DATE             06590000
066000                AND  A.PRCG_AREA_CDE =  :DK-PROCESS-AREA          06600000
066100                AND  A.PO_LNE_NBR    >  :PC-0                     06610000
066200                AND  A.ACTN_CDE     <>  :PC-U                     06620000
066300                AND  A.ACTN_CDE     <>  :PC-X                     06630000
066400                AND  A.ACTN_CDE     <>  :PC-Y                     06640000
066500                AND  A.PO_NBR        =  B.ORD_NBR                 06650000
066600                AND  A.RCVR_SEQ_NBR  =  B.REC_SEQ_NBR             06660000
066700                AND  B.OPER_UNT_ID   =  C.LOC_NBR                 06670000
066800                  GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,  06680000
066900                 A.PRCG_AREA_CDE, B.OPER_UNT_ID, C.LOC_5_ABBR_NM  06690000
066901              UNION                                               06690100
066910              SELECT  SUM(A.UNT_QTY)                              06691000
066920                    ,SUM(A.EXTD_RTL_AMT)                          06692000
066940                    ,A.SHFT_NBR                                   06694000
066950                    ,A.PO_NBR                                     06695000
066960                    ,A.RCVR_SEQ_NBR                               06696000
066970                    ,A.PRCG_AREA_CDE                              06697000
066980                    ,B.LOC_NBR                                    06698000
066990                    ,B.LOC_5_ABBR_NM                              06699000
066991               FROM  PCT_RCVR_LNE_DTL A                           06699100
066993                    ,XLT_LOC  B                                   06699300
066994              WHERE  A.OPER_UNT_ID   =  :DK-OPER-UNT-ID           06699400
066995                AND  A.BUS_DTE       =  :DK-BUSN-DATE             06699500
066996                AND  A.PRCG_AREA_CDE =  :DK-PROCESS-AREA          06699600
066997                AND  A.PO_LNE_NBR    >  :PC-0                     06699700
066998                AND  A.ACTN_CDE     <>  :PC-U                     06699800
066999                AND  A.ACTN_CDE     <>  :PC-X                     06699900
067000                AND  A.ACTN_CDE     <>  :PC-Y                     06700000
067001*               AND  A.PO_NBR        =  B.ORD_NBR                 06700100
067002                AND  A.RCVR_SEQ_NBR  =  :PC-0                     06700200
067004                AND  B.LOC_NBR       =  :DK-OPER-UNT-ID           06700400
067005                AND  A.PRCG_AREA_CDE =  :PC-REPLEN                06700500
067006                  GROUP BY A.SHFT_NBR, A.PO_NBR, A.RCVR_SEQ_NBR,  06700600
067007                 A.PRCG_AREA_CDE, B.LOC_NBR, B.LOC_5_ABBR_NM      06700700
067008           ORDER BY 3,4,5                                         06700827
067010     END-EXEC.                                                    06701000
067100                                                                  06710000
067200*-----------------------------------------------------------------06720000
067300 LINKAGE SECTION.                                                 06730000
067400                                                                  06740000
067500 01  DFHCOMMAREA.                                                 06750000
067600     05  FILLER                         OCCURS  1 TO 4072 TIMES   06760000
067700                                        DEPENDING ON EIBCALEN.    06770000
067800         10  FILLER                     PIC X.                    06780000
067900                                                                  06790000
068000                                                                  06800000
068100 PROCEDURE DIVISION.                                              06810000
068200******************************************************************06820000
068300**  THIS MODULE IS THE HIGHEST PROCESSING LEVEL IN THE PROGRAM. **06830000
068400**  FIRST, CALL THE CICS ARCHITECTURE API, PERFORM THE PROGRAM  **06840000
068500**  PROCESSING AND THEN CALL THE CICS ARCHITECTURE API TO EXIT. **06850000
068600******************************************************************06860000
068700 0000-MAIN-MODULE.                                                06870000
068800     INITIALIZE DP030-CICS-API-FIELDS.                            06880000
068900     MOVE +1                       TO DP030-NUMBER-OF-MAPS.       06890000
069000     MOVE PC-CURRENT-MAPSET-NAME   TO DP030-MAPSET-NAME.          06900000
069100     MOVE PC-CURRENT-MAP-NAME      TO DP030-MAP-NAME (1).         06910000
069200     SET DP030-RECEIVE-APPL-MAP    TO TRUE.                       06920000
069300     MOVE LENGTH OF PC752AI        TO DP030-MAP-LENGTH (1).       06930000
069400     MOVE 'PROGRAM ENTRY CALL'     TO DP013-MESSAGE-TEXT (1).     06940000
069500     PERFORM 0001-CALL-CICS-ARCH-API.                             06950000
069600*                                                                 06960000
069700     PERFORM 1000-CONTROL-PROCESSING                              06970000
069800*                                                                 06980000
069900     MOVE 'PROGRAM EXIT CALL'      TO DP013-MESSAGE-TEXT (1).     06990000
070000     PERFORM 0001-CALL-CICS-ARCH-API.                             07000000
070100                                                                  07010000
070200******************************************************************07020000
070300**  THIS PARAGRAPH CALLS THE CICS ARCHITECTURE API SUBROUTINE   **07030000
070400**  AND WILL ABEND IF ANY ERRORS OCCURRED IN THAT CALL.         **07040000
070500******************************************************************07050000
070600 0001-CALL-CICS-ARCH-API.                                         07060000
1122RM*    CALL 'DPKCS030' USING DFHEIBLK                               07070031
1122RM     CALL DP930-CICS-ARCH-API                                     07071031
1122RM                     USING DFHEIBLK                               07072031
070800                           DFHCOMMAREA                            07080000
070900                           DP030-CICS-API-FIELDS                  07090000
071000                           DP020-STANDARD-COMMAREA                07100000
071100                           PC752AI.                               07110000
071200*                                                                 07120000
071300     IF  DP030-RC-CALL-SUCCESSFUL                                 07130000
071400         CONTINUE                                                 07140000
071500     ELSE                                                         07150000
071600         SET DP013-NO-ROLLBACK                                    07160000
071700             DP013-XCTL-DISPLAY-RESTART                           07170000
071800             DP013-CICS-ABEND      TO TRUE                        07180000
071900         MOVE '0001-CALL-CICS-ARCH-API' TO DP013-PARAGRAPH        07190000
1122RM*        MOVE 'CALL TO DPKCS030 NOT SUCCESSFUL, RETURN-CODE ON NEX07200031
1122RM*             'T LINE'             TO DP013-MESSAGE-TEXT (2)      07210031
1122rm         MOVE 'CALL TO CICS ARCH API NOT SUCCESSFUL, RETURN-CODE O07211031
1122RM-             'N NEXT LINE'        TO DP013-MESSAGE-TEXT (2)      07212031
072200         MOVE DP030-RETURN-CODE    TO DP013-MESSAGE-TEXT (3)      07220000
072300         PERFORM DP013-0000-PROCESS-ABEND                         07230000
072400     END-IF.                                                      07240000
072500                                                                  07250000
072600*----------------------------------------------------------------*07260000
072700* PROCESS THE APPROPRIATE PARAGRAPHS BASED ON WHAT THE NEXT      *07270000
072800* COURSE OF ACTION IS FOR THIS TRANSACTION.                      *07280000
072900*                                                                *07290000
073000* NOTE:  PV-TOP-ITEM IS THE ITEM THAT IS REQUESTED TO BE AT THE  *07300000
073100*  TOP OF THE PANEL.  MOVING ASC-ITEM-AT-TOP-OF-PANEL TO THIS    *07310000
073200*  MEANS THAT POSITION WITHIN THE LIST WILL NOT CHANGE -- THIS   *07320000
073300*  IS THE DEFAULT WHICH WILL BE OVERRIDDEN BY SCROLLING ACTIONS. *07330000
073400*----------------------------------------------------------------*07340000
073500 1000-CONTROL-PROCESSING.                                         07350000
073600                                                                  07360000
073700     EVALUATE TRUE                                                07370000
073800         WHEN DP020-NEXT-ACT-INITIAL                              07380000
073900             INITIALIZE ASC-SPECIFIC-COMMAREA                     07390000
074000             MOVE EIBTRMID         TO ASC-LIST-TERM-ID            07400000
074100                                      ASC-SEL-TERM-ID             07410000
074200             MOVE DP020-SRC-TASK-NUMBER TO ASC-LIST-TASK-NUMBER   07420000
074300                                           ASC-SEL-TASK-NUMBER    07430000
074400             MOVE PC-LIST-QUEUE-SEQ  TO ASC-LIST-SEQ              07440000
074500             MOVE PC-SEL-QUEUE-SEQ TO ASC-SEL-SEQ                 07450000
074600             PERFORM 1100-PROCESS-INTER-APPL-COMM                 07460000
074700***-----$TEMPLATE NOTE$-------------------------------------------07470000
074800*** IF THE DATA EXPECTED IS NOT RECEIVED FROM CALLING APPLICATION,07480000
074900*** SETUP APPROPRIATE MESSAGE AND SEVERITY AND SET APPL-ERROR TO  07490000
075000*** TRUE, THIS WILL RETURN TO CALLING APPLICATION WHEN API CALLED.07500000
075100***---------------------------------------------------------------07510000
075200             IF  PS-COMMAREA-NOT-VALID                            07520000
075300                 SET DP020-NEXT-ACT-APPL-ERROR TO TRUE            07530000
075400             ELSE                                                 07540000
075500                 MOVE +1 TO ASC-SEL-SUB                           07550000
075600                 PERFORM 4000-BUILD-INITIAL-PANEL                 07560000
075700             END-IF                                               07570000
075800                                                                  07580000
075900         WHEN DP020-NEXT-ACT-READ-MAP                             07590000
076000             MOVE ASC-ITEM-AT-TOP-OF-PANEL TO PV-TOP-ITEM         07600000
076100             PERFORM 2000-PROCESS-PANEL                           07610000
076200                                                                  07620000
076300         WHEN DP020-NEXT-ACT-RETURN                               07630000
076400             MOVE ASC-ITEM-AT-TOP-OF-PANEL TO PV-TOP-ITEM         07640000
076500             MOVE ZERO  TO ASC-ITEM-AT-TOP-OF-PANEL               07650000
076600             PERFORM 6000-REFRESH-PANEL-FROM-TEMP                 07660000
076700             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 07670000
076800                                                                  07680000
076900         WHEN OTHER                                               07690000
077000             SET DP013-LOGIC-ABEND TO TRUE                        07700000
077100             SET DP013-NO-ROLLBACK TO TRUE                        07710000
077200             MOVE '1000-CONTROL-PROCESSING' TO DP013-PARAGRAPH    07720000
077300             MOVE 'INVALID NEXT APPLICATION ACTIVITY RECEIVED'    07730000
077400                                   TO DP013-MESSAGE-TEXT(1)       07740000
077500             PERFORM DP013-0000-PROCESS-ABEND                     07750000
077600     END-EVALUATE.                                                07760000
077700                                                                  07770000
077800*----------------------------------------------------------------*07780000
077900* DETERMINE IF DATA WAS PASSED THROUGH INTER-APPL COMMAREA OR    *07790000
078000* IF THERE IS DATA TO BE USED IN THE NAV-KEY FIELD.              *07800000
078100*----------------------------------------------------------------*07810000
078200 1100-PROCESS-INTER-APPL-COMM.                                    07820000
078300                                                                  07830000
078400     SET PS-COMMAREA-VALID         TO TRUE.                       07840000
078500     MOVE SPACE                    TO ASC-START-ITEM-REQUEST.     07850000
078600                                                                  07860000
078700     IF  DP020-INT-APPL-FORMAT-IND = PC-CRIT-SPEC-FORMAT          07870000
078800         MOVE PC213-OPER-UNT-ID       TO ASC-OPER-NBR             07880000
078900                                         DK-OPER-UNT-ID           07890000
079000         MOVE PC213-CRNT-BUS-DTE      TO ASC-BUSN-DATE            07900000
079100         MOVE PC213-PRINTER-ID        TO ASC-PRINTER-ID           07910000
079200     ELSE                                                         07920000
079300         SET ASC-USE-SELECTION-QUEUE TO TRUE                      07930000
079400         MOVE PC214-NUMBER-OF-SELECTED-ITEMS TO                   07940000
079500                                      ASC-NUMBER-OF-SELECTED-ITEMS07950000
079600         MOVE PC214-NUMBER-OF-TS-ITEMS TO ASC-NUMBER-OF-TS-ITEMS  07960000
079700         MOVE PC214-SEL-QUEUE-NAME     TO ASC-SEL-QUEUE-NAME      07970000
079800         MOVE PC214-OPER-UNT-ID       TO ASC-OPER-NBR             07980000
079900                                         DK-OPER-UNT-ID           07990000
080000         MOVE PC214-BUSN-DATE         TO ASC-BUSN-DATE            08000000
080100         MOVE PC214-PROCESS-GROUP     TO ASC-PROCESS-GROUP        08010000
080200         MOVE PC214-PROCESS-AREA      TO ASC-PROCESS-AREA         08020000
080300         MOVE PC214-PRINTER-ID        TO ASC-PRINTER-ID           08030000
080400         PERFORM 1120-PREPARE-LIST-ENTRY                          08040000
080500     END-IF.                                                      08050000
080600                                                                  08060000
080700*-----------------------------------------------------------------08070000
080800 1120-PREPARE-LIST-ENTRY.                                         08080000
080900                                                                  08090000
081000     MOVE PC215-MAX-ITEMS          TO ASC-SEL-SUB.                08100000
081100     MOVE ZERO                     TO ASC-SEL-ITEM.               08110000
081200     PERFORM 1130-GET-NEXT-RECORD.                                08120000
081300                                                                  08130000
081400*-----------------------------------------------------------------08140000
081500*    GET THE NEXT RECORD IF A LIST OF RECORDS ARE BEING PROCESSED*08150000
081600*-----------------------------------------------------------------08160000
081700 1130-GET-NEXT-RECORD.                                            08170000
081800                                                                  08180000
081900     ADD +1                       TO ASC-SEL-SUB.                 08190000
082000                                                                  08200000
082100     IF  ASC-SEL-SUB > PC215-MAX-ITEMS                            08210000
082200         ADD +1                   TO ASC-SEL-ITEM                 08220000
082300         MOVE +1                  TO ASC-SEL-SUB                  08230000
082400     END-IF.                                                      08240000
082500                                                                  08250000
082600     IF  ASC-SEL-ITEM NOT > ASC-NUMBER-OF-TS-ITEMS                08260000
082700         PERFORM 9100-READ-SEL-QUEUE                              08270000
082800         IF  PC215-ITEM (ASC-SEL-SUB) > ZERO                      08280000
082900             MOVE PC215-OPER-DESC (ASC-SEL-SUB) TO ASC-OPER-DESC  08290000
083000             MOVE PC215-AREA  (ASC-SEL-SUB) TO ASC-PROCESS-AREA   08300000
083100                                               DK-PROCESS-AREA    08310000
083200             MOVE PC215-GROUP (ASC-SEL-SUB) TO ASC-PROCESS-GROUP  08320000
083300                                               DK-PROCESS-GROUP   08330000
083400             MOVE PC215-3RD-UNITS (ASC-SEL-SUB) TO ASC-3RD-UNITS  08340000
083500             MOVE PC215-3RD-PCT (ASC-SEL-SUB)   TO ASC-3RD-PCT    08350000
083600             MOVE PC215-1ST-UNITS (ASC-SEL-SUB) TO ASC-1ST-UNITS  08360000
083700             MOVE PC215-1ST-PCT (ASC-SEL-SUB)   TO ASC-1ST-PCT    08370000
083800             MOVE PC215-2ND-UNITS (ASC-SEL-SUB) TO ASC-2ND-UNITS  08380000
083900             MOVE PC215-2ND-PCT (ASC-SEL-SUB)   TO ASC-2ND-PCT    08390000
084000             MOVE PC215-TOT-UNITS (ASC-SEL-SUB) TO ASC-TOT-UNITS  08400000
084100             MOVE PC215-TOT-PCT (ASC-SEL-SUB)   TO ASC-TOT-PCT    08410000
084200             SET PC215-INQ (ASC-SEL-SUB) TO TRUE                  08420000
084300             PERFORM 9200-REWRITE-SEL-QUEUE                       08430000
084400         ELSE                                                     08440000
084500             SUBTRACT +1 FROM ASC-SEL-SUB                         08450000
084600             MOVE PC-TSYMSG-00070 TO DP020-MSG-NUMBER             08460000
084700             SET DP020-MSG-INFORMATIONAL                          08470000
084800                 PS-LIST-END             TO TRUE                  08480000
084900         END-IF                                                   08490000
085000     ELSE                                                         08500000
085100         SUBTRACT +1 FROM ASC-SEL-ITEM                            08510000
085200         MOVE PC215-MAX-ITEMS     TO ASC-SEL-SUB                  08520000
085300         MOVE PC-TSYMSG-00070     TO DP020-MSG-NUMBER             08530000
085400         SET DP020-MSG-INFORMATIONAL                              08540000
085500             PS-LIST-END             TO TRUE                      08550000
085600     END-IF.                                                      08560000
085700                                                                  08570000
085800*-----------------------------------------------------------------08580000
085900*    GET THE PREVIOUS RECORD IF A LIST OF RECORDS ARE BEING      *08590000
086000*    PROCESSED.                                                  *08600000
086100*-----------------------------------------------------------------08610000
086200 1140-GET-PREV-RECORD.                                            08620000
086300                                                                  08630000
086400     SUBTRACT +1 FROM ASC-SEL-SUB.                                08640000
086500                                                                  08650000
086600     IF  ASC-SEL-SUB < +1                                         08660000
086700         SUBTRACT +1 FROM ASC-SEL-ITEM                            08670000
086800         MOVE PC215-MAX-ITEMS     TO ASC-SEL-SUB                  08680000
086900     END-IF.                                                      08690000
087000                                                                  08700000
087100     IF  ASC-SEL-ITEM > ZERO                                      08710000
087200         PERFORM 9100-READ-SEL-QUEUE                              08720000
087300         MOVE PC215-OPER-DESC (ASC-SEL-SUB) TO ASC-OPER-DESC      08730000
087400         MOVE PC215-AREA  (ASC-SEL-SUB) TO ASC-PROCESS-AREA       08740000
087500                                           DK-PROCESS-AREA        08750000
087600         MOVE PC215-GROUP (ASC-SEL-SUB) TO ASC-PROCESS-GROUP      08760000
087700                                           DK-PROCESS-GROUP       08770000
087800         MOVE PC215-3RD-UNITS (ASC-SEL-SUB) TO ASC-3RD-UNITS      08780000
087900         MOVE PC215-3RD-PCT (ASC-SEL-SUB)   TO ASC-3RD-PCT        08790000
088000         MOVE PC215-1ST-UNITS (ASC-SEL-SUB) TO ASC-1ST-UNITS      08800000
088100         MOVE PC215-1ST-PCT (ASC-SEL-SUB)   TO ASC-1ST-PCT        08810000
088200         MOVE PC215-2ND-UNITS (ASC-SEL-SUB) TO ASC-2ND-UNITS      08820000
088300         MOVE PC215-2ND-PCT (ASC-SEL-SUB)   TO ASC-2ND-PCT        08830000
088400         MOVE PC215-TOT-UNITS (ASC-SEL-SUB) TO ASC-TOT-UNITS      08840000
088500         MOVE PC215-TOT-PCT (ASC-SEL-SUB)   TO ASC-TOT-PCT        08850000
088600         SET PC215-INQ (ASC-SEL-SUB) TO TRUE                      08860000
088700         PERFORM 9200-REWRITE-SEL-QUEUE                           08870000
088800     ELSE                                                         08880000
088900         MOVE +1                  TO ASC-SEL-ITEM                 08890000
089000                                     ASC-SEL-SUB                  08900000
089100         MOVE PC-TSYMSG-00069     TO DP020-MSG-NUMBER             08910000
089200         SET DP020-MSG-INFORMATIONAL                              08920000
089300             PS-LIST-END             TO TRUE                      08930000
089400     END-IF.                                                      08940000
089500                                                                  08950000
089600*----------------------------------------------------------------*08960000
089700* DO ANY PROCESSING FOR KEYS FOR WHICH NO EDITTING OF THE DATA   *08970000
089800* ON THE SCREEN NEEDS TO BE DONE.  IF ONE OF THOSE KEYS IS NOT   *08980000
089900* USED, EDIT THE DATA ON THE SCREEN AND GO ON TO CHECK THE REST  *08990000
090000* OF THE FUNCTION KEYS.  NOTE THAT WITH THE API, NO INVALID      *09000000
090100* FUNCTION KEYS CAN GET THIS FAR.                                *09010000
090200*----------------------------------------------------------------*09020000
090300 2000-PROCESS-PANEL.                                              09030000
090400     EVALUATE TRUE                                                09040000
090500         WHEN DP020-SRC-AID = DP016-CLEAR                         09050000
090600             MOVE ZERO TO ASC-ITEM-AT-TOP-OF-PANEL                09060000
090700             PERFORM 3000-EDIT-DATA-IN-COMMAREA                   09070000
090800             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 09080000
090900                                                                  09090000
091000         WHEN DP020-FK-REFRESH (DP020-SRC-AID)                    09100000
091100*            PERFORM 2050-DELETE-LIST-QUEUE                       09110000
091200             PERFORM 4000-BUILD-INITIAL-PANEL                     09120000
091300             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 09130000
091400                                                                  09140000
091500         WHEN DP020-FK-NEXT-SELECTION (DP020-SRC-AID)             09150000
091600             IF  ASC-USE-SELECTION-QUEUE                          09160000
091700                 PERFORM 1130-GET-NEXT-RECORD                     09170000
091800                 IF PS-LIST-END                                   09180000
091900                     PERFORM 4400-MOVE-COMMAREA-TO-SCREEN         09190000
092000                     SET PS-NO-LIST-END TO TRUE                   09200000
092100                 ELSE                                             09210000
092200                     PERFORM 2050-DELETE-LIST-QUEUE               09220000
092300                     PERFORM 3200-RESET-ATTRIBUTES                09230000
092400                     PERFORM 4000-BUILD-INITIAL-PANEL             09240000
092500                 END-IF                                           09250000
092600              ELSE                                                09260000
092700                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             09270000
092800*                --- BOTTOM OF LIST ---                           09280000
092900                 MOVE PC-TSYMSG-00070 TO DP020-MSG-NUMBER         09290000
093000                 SET DP020-MSG-INFORMATIONAL TO TRUE              09300000
093100             END-IF                                               09310000
093200                                                                  09320000
093300         WHEN DP020-FK-PREV-SELECTION (DP020-SRC-AID)             09330000
093400             IF  ASC-USE-SELECTION-QUEUE                          09340000
093500                 PERFORM 1140-GET-PREV-RECORD                     09350000
093600                 IF PS-LIST-END                                   09360000
093700                     PERFORM 4400-MOVE-COMMAREA-TO-SCREEN         09370000
093800                     SET PS-NO-LIST-END TO TRUE                   09380000
093900                 ELSE                                             09390000
094000                     PERFORM 2050-DELETE-LIST-QUEUE               09400000
094100                     PERFORM 3200-RESET-ATTRIBUTES                09410000
094200                     PERFORM 4000-BUILD-INITIAL-PANEL             09420000
094300                 END-IF                                           09430000
094400             ELSE                                                 09440000
094500                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             09450000
094600                 MOVE PC-TSYMSG-00069 TO DP020-MSG-NUMBER         09460000
094700                 SET DP020-MSG-INFORMATIONAL TO TRUE              09470000
094800             END-IF                                               09480000
094900                                                                  09490000
095000         WHEN OTHER                                               09500000
095100             PERFORM 2200-MOVE-SCREEN-TO-COMMAREA                 09510000
095200             PERFORM 3000-EDIT-DATA-IN-COMMAREA                   09520000
095300                                                                  09530000
095400             IF  PS-NO-ERROR                                      09540000
095500                 SET DP030-CONTINUE-GO TO TRUE                    09550000
095600                 PERFORM 2100-CHECK-FUNCTION-KEY                  09560000
095700             ELSE                                                 09570000
095800                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             09580000
095900                 SET DP030-OVERRIDE-GO TO TRUE                    09590000
096000             END-IF                                               09600000
096100     END-EVALUATE.                                                09610000
096200                                                                  09620000
096300*----------------------------------------------------------------*09630000
096400*  DELETE THE LIST ITEMS TEMP STORAGE QUEUE.                     *09640000
096500*----------------------------------------------------------------*09650000
096600 2050-DELETE-LIST-QUEUE.                                          09660000
096700                                                                  09670000
096800     EXEC CICS                                                    09680000
096900         DELETEQ TS                                               09690000
097000             QUEUE (ASC-LIST-QUEUE-NAME)                          09700000
097100             RESP  (PV-CICS-RESP)                                 09710000
097200     END-EXEC.                                                    09720000
097300                                                                  09730000
097400     IF (PV-CICS-RESP = DFHRESP(NORMAL)) OR                       09740000
097500        (PV-CICS-RESP = DFHRESP(QIDERR))                          09750000
097600         CONTINUE                                                 09760000
097700     ELSE                                                         09770000
097800         SET DP013-CICS-ABEND      TO TRUE                        09780000
097900         SET DP013-NO-ROLLBACK     TO TRUE                        09790000
098000                                                                  09800000
098100         MOVE '2050-DELETE-LIST-QUEUE' TO DP013-PARAGRAPH         09810000
098200         MOVE 'ERROR TRYING TO DELETE LIST TEMP STORAGE QUEUE'    09820000
098300                                   TO DP013-MESSAGE-TEXT (1)      09830000
098400         PERFORM DP013-0000-PROCESS-ABEND                         09840000
098500     END-IF.                                                      09850000
098600                                                                  09860000
098700     MOVE +0                       TO ASC-HIGHEST-BLOCK-WRITTEN.  09870000
098800                                                                  09880000
098900*----------------------------------------------------------------*09890000
099000* ACT ON ANY FUNCTION KEYS THAT REQUIRE EDITS TO BE PASSED FIRST.*09900000
099100* NOTE THAT INVALID FUNCTION KEYS WILL NOT BE RETURNED FROM THE  *09910000
099200* CICS ARCHITECTURE API.                                         *09920000
099300*----------------------------------------------------------------*09930000
099400 2100-CHECK-FUNCTION-KEY.                                         09940000
099500                                                                  09950000
099600     EVALUATE TRUE                                                09960000
099700*                                                                 09970000
099800* F6 - FIRST PAGE                                                 09980000
099900         WHEN DP020-FK-FIRST-PAGE(DP020-SRC-AID)                  09990000
100000             MOVE +1               TO PV-TOP-ITEM                 10000000
100100             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 10010000
100200*                                                                 10020000
100300* F7 - PREVIOUS PAGE                                              10030000
100400         WHEN DP020-FK-PREV-PAGE(DP020-SRC-AID)                   10040000
100500             PERFORM 2110-BROWSE-BACKWARD                         10050000
100600             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 10060000
100700*                                                                 10070000
100800* F8 - NEXT PAGE                                                  10080000
100900         WHEN DP020-FK-NEXT-PAGE(DP020-SRC-AID)                   10090000
101000             PERFORM 2120-BROWSE-FORWARD                          10100000
101100             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 10110000
101200*                                                                 10120000
101300* ENTER KEY                                                       10130000
101400         WHEN DP020-SRC-AID = DP016-ENTER                         10140000
101500             PERFORM 2130-CHECK-FOR-JUMP-BROWSE                   10150000
101600             IF  PS-ERROR                                         10160000
101700                 CONTINUE                                         10170000
101800             ELSE                                                 10180000
101900                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             10190000
102000             END-IF                                               10200000
102100                                                                  10210000
102200         WHEN OTHER                                               10220000
102300             SET DP013-NO-ROLLBACK                                10230000
102400                 DP013-XCTL-DISPLAY-RESTART                       10240000
102500                 DP013-CICS-ABEND  TO TRUE                        10250000
102600             MOVE '2100-CHECK-FUNCTION-KEY'                       10260000
102700                                   TO DP013-PARAGRAPH             10270000
102800             MOVE 'INVALID FUNCTION KEY NOT CAPTURED BY API'      10280000
102900                                   TO DP013-MESSAGE-TEXT (1)      10290000
103000             PERFORM DP013-0000-PROCESS-ABEND                     10300000
103100     END-EVALUATE.                                                10310000
103200*                                                                 10320000
103300*----------------------------------------------------------------*10330000
103400*    IF THE USER HITS THE PAGE BACKWARD KEY, COMPUTE THE TOP     *10340000
103500*    ITEM NUMBER FOR THE NEW PAGE.  IF IT IS ABOVE THE TOP,      *10350000
103600*    SET THE TOP ITEM NUMBER TO +1 AND DISPLAY THE TOP OF LIST   *10360000
103700*    MESSAGE.                                                    *10370000
103800*----------------------------------------------------------------*10380000
103900 2110-BROWSE-BACKWARD.                                            10390000
104000     SUBTRACT PC-ITEMS-PER-PANEL FROM ASC-ITEM-AT-TOP-OF-PANEL    10400000
104100         GIVING PV-TOP-ITEM.                                      10410000
104200*                                                                 10420000
104300     IF  ((PV-TOP-ITEM < +1)                                      10430000
104400       OR (PV-TOP-ITEM = +1))                                     10440000
104500         MOVE +1                   TO PV-TOP-ITEM                 10450000
104600*        -- TOP OF LIST --                                        10460000
104700         MOVE PC-TSYMSG-00069      TO DP020-MSG-NUMBER            10470000
104800         SET DP020-MSG-INFORMATIONAL TO TRUE                      10480000
104900     END-IF.                                                      10490000
105000                                                                  10500000
105100*----------------------------------------------------------------*10510000
105200*    IF THE USER HITS THE PAGE FORWARD KEY, COMPUTE THE TOP      *10520000
105300*    ITEM NUMBER FOR THE NEW PAGE.  IF THE USER ATTEMPTS TO GO   *10530000
105400*    PAST THE END, ISSUE THE BOTTOM OF LIST MESSAGE.             *10540000
105500*----------------------------------------------------------------*10550000
105600 2120-BROWSE-FORWARD.                                             10560000
105700                                                                  10570000
105800     ADD PC-ITEMS-PER-PANEL ASC-ITEM-AT-TOP-OF-PANEL              10580000
105900         GIVING PV-TOP-ITEM.                                      10590000
106000     IF  PV-TOP-ITEM > ASC-NUMBER-OF-ITEMS-READ                   10600000
106100         MOVE ASC-ITEM-AT-TOP-OF-PANEL TO PV-TOP-ITEM             10610000
106200*        -- BOTTOM OF LIST --                                     10620000
106300         MOVE PC-TSYMSG-00070      TO DP020-MSG-NUMBER            10630000
106400         SET DP020-MSG-INFORMATIONAL  TO TRUE                     10640000
106500     ELSE                                                         10650000
106600         COMPUTE PV-BOTTOM-ITEM =                                 10660000
106700             PV-TOP-ITEM + PC-ITEMS-PER-PANEL - 1                 10670000
106800         IF  PV-BOTTOM-ITEM > ASC-NUMBER-OF-ITEMS-READ            10680000
106900*            -- BOTTOM OF LIST --                                 10690000
107000             MOVE PC-TSYMSG-00070  TO DP020-MSG-NUMBER            10700000
107100             SET DP020-MSG-INFORMATIONAL TO TRUE                  10710000
107200         END-IF                                                   10720000
107300     END-IF.                                                      10730000
107400                                                                  10740000
107500*----------------------------------------------------------------*10750000
107600*    THE USER CAN CHANGE THE CURRENT BEGINNING LIST NUMBER SO    *10760000
107700*    THAT THE TRANSACTION WILL JUMP TO THAT POINT IN THE LIST.   *10770000
107800*    THIS IS A FASTER WAY TO GET TO A CERTAIN POINT IN THE LIST  *10780000
107900*    RATHER THAN HITTING NEXT-PAGE TO GET TO THAT POINT.         *10790000
108000*    THE NEW LIST NUMBER ENTERED IS EDITED TO MAKE SURE THAT     *10800000
108100*    IT IS NUMERIC AND FALLS BETWEEN A SPECIFIED RANGE.          *10810000
108200*----------------------------------------------------------------*10820000
108300 2130-CHECK-FOR-JUMP-BROWSE.                                      10830000
108400     SET PS-NO-ERROR               TO TRUE.                       10840000
108500     IF (ASC-START-ITEM-REQUEST = SPACE)                          10850000
108600         MOVE ASC-ITEM-AT-TOP-OF-PANEL TO PV-TOP-ITEM             10860000
108700     ELSE                                                         10870000
108800         MOVE ASC-START-ITEM-REQUEST TO DP010I-UNEDITED-FIELD     10880000
108900         MOVE PC-MSG-NUMBER-LENGTH TO DP010I-MAXIMUM-DIGITS       10890000
109000         MOVE +0                   TO DP010I-MAXIMUM-DECIMALS     10900000
109100         SET DP010I-NEGATIVE-NOT-ALLOWED TO TRUE                  10910000
109210         CALL DP010I-NUMERIC-EDIT-ROUTINE                         10921028
109220                         USING DP010I-NUMERIC-EDIT-AREA           10922028
109300                                                                  10930000
109400         IF  NOT DP010I-ERROR-DETECTED                            10940000
109500             MOVE DP010I-NUMERIC-FIELD TO ASC-START-ITEM-REQUEST-N10950000
109600             IF  ASC-START-ITEM-REQUEST-N > ZERO                  10960000
109700                 IF  ASC-START-ITEM-REQUEST-N >                   10970000
109800                                          ASC-NUMBER-OF-ITEMS-READ10980000
109900                     MOVE SPACE TO ASC-START-ITEM-REQUEST         10990000
110000                     COMPUTE PV-TOP-ITEM =                        11000000
110100                             ASC-NUMBER-OF-ITEMS-READ             11010000
110200                             - PC-ITEMS-PER-PANEL + 1             11020000
110300                     IF  PV-TOP-ITEM < +1                         11030000
110400                         MOVE +1   TO PV-TOP-ITEM                 11040000
110500                         MOVE PC-TSYMSG-00070 TO DP020-MSG-NUMBER 11050000
110600                         SET DP020-MSG-INFORMATIONAL TO TRUE      11060000
110700                     END-IF                                       11070000
110800                 ELSE                                             11080000
110900                     MOVE ASC-START-ITEM-REQUEST-N TO PV-TOP-ITEM 11090000
111000                     MOVE SPACE    TO ASC-START-ITEM-REQUEST      11100000
111100                     COMPUTE PV-BOTTOM-ITEM =                     11110000
111200                         PV-TOP-ITEM + PC-ITEMS-PER-PANEL - 1     11120000
111300                     IF  PV-BOTTOM-ITEM > ASC-NUMBER-OF-ITEMS-READ11130000
111400*                        -- BOTTOM OF LIST --                     11140000
111500                         MOVE PC-TSYMSG-00070 TO DP020-MSG-NUMBER 11150000
111600                         SET DP020-MSG-INFORMATIONAL TO TRUE      11160000
111700                     END-IF                                       11170000
111800                 END-IF                                           11180000
111900             ELSE                                                 11190000
112000*                --- VALUE OUT OF RANGE ----                      11200000
112100                 MOVE PC-TSYMSG-00101  TO DP020-MSG-NUMBER        11210000
112200                 MOVE -1           TO ASTRTITL                    11220000
112300                 SET DP030-SET-CURSOR-APPL-1 TO TRUE              11230000
112400                 MOVE DP015-REVERSE TO ASTRTITH                   11240000
112500                 MOVE DP015-RED    TO ASTRTITC                    11250000
112600                 MOVE DP015-UNP-NUM-BRT-MDT TO ASTRTITA           11260000
112700                 SET DP020-MSG-FATAL                              11270000
112800                     PS-ERROR        TO TRUE                      11280000
112900             END-IF                                               11290000
113000                                                                  11300000
113100         ELSE                                                     11310000
113200             MOVE PC-TSYMSG-00008  TO DP020-MSG-NUMBER            11320000
113300             MOVE -1               TO ASTRTITL                    11330000
113400             SET DP030-SET-CURSOR-APPL-1 TO TRUE                  11340000
113500             MOVE DP015-REVERSE    TO ASTRTITH                    11350000
113600             MOVE DP015-RED        TO ASTRTITC                    11360000
113700             MOVE DP015-UNP-NUM-BRT-MDT TO ASTRTITA               11370000
113800             SET DP020-MSG-FATAL   TO TRUE                        11380000
113900             SET PS-ERROR          TO TRUE                        11390000
114000         END-IF                                                   11400000
114100     END-IF.                                                      11410000
114200                                                                  11420000
114300******************************************************************11430000
114400** MOVE ALL OF THE FIELDS THAT WERE ENTERED / CHANGED ON THE    **11440000
114500** SCREEN INTO THE COMMAREA.  ALL EDITTING IS DONE IN THE COMM. **11450000
114600******************************************************************11460000
114700 2200-MOVE-SCREEN-TO-COMMAREA.                                    11470000
114800                                                                  11480000
114900     MOVE PV-TOP-ITEM              TO PV-ITEM-IN-USE.             11490000
115000     MOVE +1                       TO PV-SUB.                     11500000
115100*                                                                 11510000
115200     PERFORM 3100-SET-SUBSCRIPTS.                                 11520000
115300     IF  ASTRTITL > ZERO                                          11530000
115400         MOVE ASTRTITI        TO ASC-START-ITEM-REQUEST           11540000
115500     ELSE                                                         11550000
115600         IF  ASTRTITF = DP015-ERASE-EOF                           11560000
115700             INITIALIZE ASC-START-ITEM-REQUEST                    11570000
115800         END-IF                                                   11580000
115900     END-IF.                                                      11590000
116000                                                                  11600000
116100     PERFORM 2210-MOVE-LINES-TO-COMMAREA                          11610000
116200         VARYING PV-SUB                                           11620000
116300         FROM 1 BY 1                                              11630000
116400         UNTIL PV-SUB > ASC-ITEMS-DISPLAYED.                      11640000
116500******************************************************************11650000
116600** MOVE THE ENTERABLE FIELDS ON EACH LIST LINE INTO THE COMMAREA**11660000
116700******************************************************************11670000
116800 2210-MOVE-LINES-TO-COMMAREA.                                     11680000
116900*    IF  MR-SELECTL (PV-SUB) > ZERO                               11690000
117000*        SET ASC-BLOCK-MODIFIED (ASC-BLK-SUB) TO TRUE             11700000
117100*        MOVE MR-SELECTI (PV-SUB)                                 11710000
117200*                                  TO ASC-TEMP-SELECTED-SW        11720000
117300*                                (ASC-BLK-SUB, ASC-ITEM-SUB)      11730000
117400*    ELSE                                                         11740000
117500*        IF  MR-SELECTA (PV-SUB) = DP015-ERASE-EOF                11750000
117600*                SET ASC-BLOCK-MODIFIED (ASC-BLK-SUB) TO TRUE     11760000
117700*                MOVE SPACE        TO ASC-TEMP-SELECTED-SW        11770000
117800*                                (ASC-BLK-SUB, ASC-ITEM-SUB)      11780000
117900*        END-IF                                                   11790000
118000*    END-IF.                                                      11800000
118100     ADD +1                        TO ASC-ITEM-SUB.               11810000
118200     IF  ASC-ITEM-SUB > PC-ITEMS-PER-PANEL                        11820000
118300         ADD +1                    TO ASC-BLK-SUB                 11830000
118400         MOVE +1                   TO ASC-ITEM-SUB                11840000
118500     END-IF.                                                      11850000
118600******************************************************************11860000
118700** EDIT ALL OF THE DATA ON THE SCREEN AS IT RESIDES IN THE      **11870000
118800** COMMAREA (EDITTING IS NOT DONE AGAINST THE SCREEN DIRECTLY). **11880000
118900******************************************************************11890000
119000 3000-EDIT-DATA-IN-COMMAREA.                                      11900000
119100     SET PS-NO-ERROR               TO TRUE.                       11910000
119200     PERFORM 3200-RESET-ATTRIBUTES.                               11920000
119300     MOVE ASC-ITEMS-DISPLAYED      TO PV-SUB.                     11930000
119400                                                                  11940000
119500**                                                                11950000
119600* CALCULATE THE POSITION OF THE LAST ITEM DISPLAYED.              11960000
119700* EDITTING IS DONE FROM THE BOTTOM UP.                            11970000
119800**                                                                11980000
119900     COMPUTE PV-ITEM-IN-USE = PV-TOP-ITEM +                       11990000
120000         ASC-ITEMS-DISPLAYED - 1.                                 12000000
120100     PERFORM 3100-SET-SUBSCRIPTS.                                 12010000
120200                                                                  12020000
120300     IF  PS-NO-ERROR                                              12030000
120400         PERFORM 3005-EDIT-COMMAREA-BLOCKS                        12040000
120500     END-IF.                                                      12050000
120600*                                                                 12060000
120700     IF  PS-NO-ERROR                                              12070000
120800         PERFORM 3400-CHECK-RANGE-SEQUENCE                        12080000
120900     END-IF.                                                      12090000
121000*                                                                 12100000
121100     IF  ((PS-NO-ERROR)                                           12110000
121200       AND (ASC-START-OF-SELECTED-RANGE > ZERO)                   12120000
121300       AND (ASC-END-OF-SELECTED-RANGE > ZERO))                    12130000
121400             PERFORM 3500-MARK-RANGE-AS-SELECTED                  12140000
121500     END-IF.                                                      12150000
121600                                                                  12160000
121700*----------------------------------------------------------------*12170000
121800*   3005-EDIT-COMMAREA-BLOCKS                                    *12180000
121900*----------------------------------------------------------------*12190000
122000 3005-EDIT-COMMAREA-BLOCKS.                                       12200000
122100     MOVE +1                       TO PV-BLOCK-NUMBER.            12210000
122200     MOVE +1                       TO ASC-BLK-SUB.                12220000
122300     MOVE PC-ITEMS-PER-PANEL       TO ASC-ITEM-SUB.               12230000
122400                                                                  12240000
122500     COMPUTE PV-BLOCK-NUMBER  =                                   12250000
122600        1 + ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB 1) /                 12260000
122700            PC-ITEMS-PER-PANEL.                                   12270000
122800                                                                  12280000
122900     MOVE  PV-BLOCK-NUMBER         TO PV-ORIGINAL-BLOCK.          12290000
123000                                                                  12300000
123100     PERFORM                                                      12310000
123200       UNTIL PV-BLOCK-NUMBER > ASC-HIGHEST-BLOCK-WRITTEN          12320000
123300          OR PS-ERROR                                             12330000
123400          OR PS-BLOCK-ERROR                                       12340000
123500                                                                  12350000
123600             COMPUTE PV-ITEMS-HOLD  =                             12360000
123700                     ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB 1) +        12370000
123800                     PC-ITEMS-PER-PANEL - 1                       12380000
123900                                                                  12390000
124000             IF  PV-ITEMS-HOLD  >  ASC-NUMBER-OF-ITEMS-READ       12400000
124100                 SUBTRACT  ASC-NUMBER-OF-ITEMS-READ               12410000
124200                     FROM  PV-ITEMS-HOLD                          12420000
124300                   GIVING  PV-ITEMS-DIFF                          12430000
124400                 SUBTRACT  PV-ITEMS-DIFF                          12440000
124500                     FROM  PC-ITEMS-PER-PANEL                     12450000
124600                   GIVING  PV-ITEMS-HOLD                          12460000
124700                     MOVE  PV-ITEMS-HOLD  TO  PV-SUB              12470000
124800                                              ASC-ITEM-SUB        12480000
124900                                              ASC-ITEMS-DISPLAYED 12490000
125000             ELSE                                                 12500000
125100                 MOVE ASC-ITEMS-DISPLAYED  TO PV-SUB              12510000
125200                 MOVE PC-ITEMS-PER-PANEL   TO ASC-ITEM-SUB        12520000
125300             END-IF                                               12530000
125400                                                                  12540000
125500             PERFORM 3300-EDIT-SELECTIONS                         12550000
125600                     VARYING PV-SUB                               12560000
125700                        FROM PV-SUB BY -1                         12570000
125800                       UNTIL PV-SUB < +1                          12580000
125900                                                                  12590000
126000             MOVE +1               TO ASC-BLK-SUB                 12600000
126100                                                                  12610000
126200             PERFORM 5105-REWRITE-ASC-LISTQ                       12620000
126300                                                                  12630000
126400             MOVE +1                TO ASC-BLK-SUB                12640000
126500                                                                  12650000
126600             IF  PS-BLOCK-ERROR                                   12660000
126700                 SET  PS-ERROR     TO TRUE                        12670000
126800                 MOVE ASC-LIST-ITEM-NUMBER (ASC-BLK-SUB 1)        12680000
126900                                   TO PV-TOP-ITEM                 12690000
127000             ELSE                                                 12700000
127100                 ADD  +1           TO PV-BLOCK-NUMBER             12710000
127200                 IF  PV-BLOCK-NUMBER >                            12720000
127300                     ASC-HIGHEST-BLOCK-WRITTEN                    12730000
127400                     MOVE +2       TO ASC-BLK-SUB                 12740000
127500                     PERFORM 4410-READ-TEMP-STORAGE               12750000
127600                     MOVE +1       TO ASC-BLK-SUB                 12760000
127700                 ELSE                                             12770000
127800                     PERFORM 4410-READ-TEMP-STORAGE               12780000
127900                     ADD  +1        TO PV-BLOCK-NUMBER            12790000
128000                     MOVE +2        TO ASC-BLK-SUB                12800000
128100                     PERFORM 4410-READ-TEMP-STORAGE               12810000
128200                     SUBTRACT +1  FROM PV-BLOCK-NUMBER            12820000
128300                     MOVE +1        TO ASC-BLK-SUB                12830000
128400                 END-IF                                           12840000
128500             END-IF                                               12850000
128600     END-PERFORM.                                                 12860000
128700                                                                  12870000
128800     IF  PV-ORIGINAL-BLOCK  = +1    OR                            12880000
128900         PS-ERROR                   OR                            12890000
129000         PS-BLOCK-ERROR                                           12900000
129100         CONTINUE                                                 12910000
129200     ELSE                                                         12920000
129300         MOVE +1                 TO PV-BLOCK-NUMBER               12930000
129400         MOVE +1                 TO ASC-BLK-SUB                   12940000
129500         MOVE PC-ITEMS-PER-PANEL TO ASC-ITEM-SUB                  12950000
129600         MOVE PC-ITEMS-PER-PANEL TO ASC-ITEMS-DISPLAYED           12960000
129700         PERFORM 4410-READ-TEMP-STORAGE                           12970000
129800                                                                  12980000
129900         PERFORM                                                  12990000
130000           UNTIL PV-BLOCK-NUMBER = PV-ORIGINAL-BLOCK              13000000
130100              OR PS-ERROR                                         13010000
130200              OR PS-BLOCK-ERROR                                   13020000
130300                                                                  13030000
130400                 COMPUTE PV-ITEMS-HOLD  =                         13040000
130500                         ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB 1) +    13050000
130600                         PC-ITEMS-PER-PANEL - 1                   13060000
130700                                                                  13070000
130800                 IF  PV-ITEMS-HOLD > ASC-NUMBER-OF-ITEMS-READ     13080000
130900                     SUBTRACT  ASC-NUMBER-OF-ITEMS-READ           13090000
131000                         FROM  PV-ITEMS-HOLD                      13100000
131100                       GIVING  PV-ITEMS-DIFF                      13110000
131200                     SUBTRACT  PV-ITEMS-DIFF                      13120000
131300                         FROM  PC-ITEMS-PER-PANEL                 13130000
131400                       GIVING  PV-ITEMS-HOLD                      13140000
131500                         MOVE  PV-ITEMS-HOLD TO PV-SUB            13150000
131600                                                ASC-ITEM-SUB      13160000
131700                                               ASC-ITEMS-DISPLAYED13170000
131800                 ELSE                                             13180000
131900                     MOVE ASC-ITEMS-DISPLAYED  TO PV-SUB          13190000
132000                     MOVE PC-ITEMS-PER-PANEL   TO ASC-ITEM-SUB    13200000
132100                 END-IF                                           13210000
132200                                                                  13220000
132300                 PERFORM 3300-EDIT-SELECTIONS                     13230000
132400                         VARYING PV-SUB                           13240000
132500                            FROM PV-SUB BY -1                     13250000
132600                           UNTIL PV-SUB < +1                      13260000
132700                                                                  13270000
132800                 MOVE +1               TO ASC-BLK-SUB             13280000
132900                                                                  13290000
133000                 PERFORM 5105-REWRITE-ASC-LISTQ                   13300000
133100                                                                  13310000
133200                 MOVE +1                TO ASC-BLK-SUB            13320000
133300                                                                  13330000
133400                 IF  PS-BLOCK-ERROR                               13340000
133500                     SET  PS-ERROR     TO TRUE                    13350000
133600                     MOVE ASC-LIST-ITEM-NUMBER (ASC-BLK-SUB 1)    13360000
133700                                       TO PV-TOP-ITEM             13370000
133800                 ELSE                                             13380000
133900                     ADD  +1            TO PV-BLOCK-NUMBER        13390000
134000                     IF  PV-BLOCK-NUMBER = PV-ORIGINAL-BLOCK      13400000
134100                         MOVE +2        TO ASC-BLK-SUB            13410000
134200                         PERFORM 4410-READ-TEMP-STORAGE           13420000
134300                         MOVE +1        TO ASC-BLK-SUB            13430000
134400                     ELSE                                         13440000
134500                         PERFORM 4410-READ-TEMP-STORAGE           13450000
134600                         ADD  +1        TO PV-BLOCK-NUMBER        13460000
134700                         MOVE +2        TO ASC-BLK-SUB            13470000
134800                         PERFORM 4410-READ-TEMP-STORAGE           13480000
134900                         SUBTRACT +1  FROM PV-BLOCK-NUMBER        13490000
135000                         MOVE +1        TO ASC-BLK-SUB            13500000
135100                     END-IF                                       13510000
135200                 END-IF                                           13520000
135300     END-PERFORM.                                                 13530000
135400                                                                  13540000
135500*----------------------------------------------------------------*13550000
135600*    DETERMINE THE VALUE OF THE ITEM SUBSCRIPT BASED ON THE ITEM *13560000
135700*    CURRENTLY IN USE AND THE FIRST ITEM IN THE ARRAY.  THIS WILL*13570000
135800*    POSITION US IN THE 1ST BLOCK OF THE ARRAY.                  *13580000
135900*                                                                *13590000
136000*    IF THE ITEM SUBSCRIPT EXCEEDS THE MAXIMUM NUMBER OF ITEMS   *13600000
136100*    IN A BLOCK, RECALCULATE THE SUBSCRIPT BY SUBTRACTING OUT    *13610000
136200*    THE MAXIMUM NUMBER OF ITEMS.  THIS WILL CORRECTLY POSITION  *13620000
136300*    US IN THE 2ND BLOCK OF THE ARRAY.                           *13630000
136400*----------------------------------------------------------------*13640000
136500 3100-SET-SUBSCRIPTS.                                             13650000
136600                                                                  13660000
136700     COMPUTE ASC-ITEM-SUB =                                       13670000
136800         (PV-ITEM-IN-USE - ASC-LIST-ITEM-NUMBER(1 1)) + 1.        13680000
136900                                                                  13690000
137000     IF ASC-ITEM-SUB > PC-ITEMS-PER-PANEL                         13700000
137100         SUBTRACT PC-ITEMS-PER-PANEL FROM ASC-ITEM-SUB            13710000
137200         MOVE PC-MAX-BLOCKS-IN-ARRAY TO ASC-BLK-SUB               13720000
137300     ELSE                                                         13730000
137400         MOVE +1                     TO ASC-BLK-SUB               13740000
137500     END-IF.                                                      13750000
137600******************************************************************13760000
137700** RESET THE ATTRIBUTES OF ALL ENTERABLE FIELDS ON THE MAP.     **13770000
137800******************************************************************13780000
137900 3200-RESET-ATTRIBUTES.                                           13790000
138000     MOVE DP015-UNP-ALP-NOR-OFF    TO ASTRTITA.                   13800000
138100     MOVE DP015-GREEN              TO ASTRTITC.                   13810000
138200     MOVE DP015-UNDERLINE          TO ASTRTITH.                   13820000
138300                                                                  13830000
138400*    PERFORM                                                      13840000
138500*        VARYING PV-SUB                                           13850000
138600*        FROM 1 BY 1                                              13860000
138700*        UNTIL PV-SUB > PC-ITEMS-PER-PANEL                        13870000
138800*            MOVE DP015-UNP-ALP-NOR-OFF TO MR-SELECTA (PV-SUB)    13880000
138900*            MOVE DP015-GREEN         TO MR-SELECTC (PV-SUB)      13890000
139000*            MOVE DP015-UNDERLINE     TO MR-SELECTH (PV-SUB)      13900000
139100*    END-PERFORM.                                                 13910000
139200                                                                  13920000
139300******************************************************************13930000
139400** EDIT THE SELECTIONS MADE.  NOTE THAT THE 'SELECTED-SW' IS    **13940000
139500** WHAT WAS PREVIOUSLY CHECKED AND CORRECT 'TEMP-SELECTED-SW'   **13950000
139600** IS WHAT HAS JUST BEEN ENTERED AND HAS NOT BEEN EDITTED OR    **13960000
139700** WAS ENTERED EARLIER, BUT DID NOT PASS THE EDITS.             **13970000
139800******************************************************************13980000
139900 3300-EDIT-SELECTIONS.                                            13990000
140000     EVALUATE TRUE                                                14000000
140100         WHEN ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)     14010000
140200             = ASC-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)         14020000
140300                 CONTINUE                                         14030000
140400         WHEN ASC-TEMP-SELECT  (ASC-BLK-SUB ASC-ITEM-SUB)         14040000
140500             IF  NOT ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)        14050000
140600                 ADD +1         TO ASC-NUMBER-OF-SELECTED-ITEMS   14060000
140700                 MOVE ASC-TEMP-SELECTED-SW                        14070000
140800                                      (ASC-BLK-SUB ASC-ITEM-SUB)  14080000
140900                                TO ASC-SELECTED-SW                14090000
141000                                      (ASC-BLK-SUB ASC-ITEM-SUB)  14100000
141100             END-IF                                               14110000
141200         WHEN ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)     14120000
141300                 = SPACE                                          14130000
141400             EVALUATE TRUE                                        14140000
141500                 WHEN ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)       14150000
141600                     SUBTRACT +1 FROM ASC-NUMBER-OF-SELECTED-ITEMS14160000
141700                     MOVE SPACE TO ASC-SELECTED-SW                14170000
141800                                      (ASC-BLK-SUB ASC-ITEM-SUB)  14180000
141900                 WHEN ASC-BEGIN (ASC-BLK-SUB ASC-ITEM-SUB)        14190000
142000                     MOVE ZERO  TO ASC-START-OF-SELECTED-RANGE    14200000
142100                     MOVE SPACE TO ASC-SELECTED-SW                14210000
142200                                      (ASC-BLK-SUB ASC-ITEM-SUB)  14220000
142300                 WHEN ASC-END (ASC-BLK-SUB ASC-ITEM-SUB)          14230000
142400                     MOVE ZERO  TO ASC-END-OF-SELECTED-RANGE      14240000
142500                     MOVE SPACE TO ASC-SELECTED-SW                14250000
142600                                      (ASC-BLK-SUB ASC-ITEM-SUB)  14260000
142700             END-EVALUATE                                         14270000
142800         WHEN ASC-TEMP-BEGIN (ASC-BLK-SUB ASC-ITEM-SUB)           14280000
142900             IF  ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)            14290000
143000                 SUBTRACT +1 FROM ASC-NUMBER-OF-SELECTED-ITEMS    14300000
143100             END-IF                                               14310000
143200             PERFORM 3310-EDIT-RANGE                              14320000
143300         WHEN ASC-TEMP-END (ASC-BLK-SUB ASC-ITEM-SUB)             14330000
143400             IF  ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)            14340000
143500                 SUBTRACT +1 FROM ASC-NUMBER-OF-SELECTED-ITEMS    14350000
143600             END-IF                                               14360000
143700             PERFORM 3310-EDIT-RANGE                              14370000
143800         WHEN OTHER                                               14380000
143900             MOVE PC-TSYMSG-00005   TO DP020-MSG-NUMBER           14390000
144000             SET DP020-MSG-FATAL    TO TRUE                       14400000
144100*            MOVE -1                TO MR-SELECTL (PV-SUB)        14410000
144200*            SET DP030-SET-CURSOR-APPL-1                          14420000
144300*                                   TO TRUE                       14430000
144400*            MOVE DP015-RED         TO MR-SELECTC (PV-SUB)        14440000
144500*            MOVE DP015-REVERSE     TO MR-SELECTH (PV-SUB)        14450000
144600             SET PS-ERROR TO TRUE                                 14460000
144700             IF  ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)            14470000
144800                 SUBTRACT 1 FROM ASC-NUMBER-OF-SELECTED-ITEMS     14480000
144900                 MOVE SPACE         TO ASC-SELECTED-SW            14490000
145000                                        (ASC-BLK-SUB ASC-ITEM-SUB)14500000
145100             END-IF                                               14510000
145200     END-EVALUATE.                                                14520000
145300                                                                  14530000
145400     SUBTRACT +1             FROM PV-ITEM-IN-USE.                 14540000
145500     SUBTRACT +1 FROM ASC-ITEM-SUB.                               14550000
145600     IF  ASC-ITEM-SUB < 1                                         14560000
145700         SUBTRACT +1 FROM ASC-BLK-SUB                             14570000
145800         MOVE PC-ITEMS-PER-PANEL   TO ASC-ITEM-SUB                14580000
145900     END-IF.                                                      14590000
146000                                                                  14600000
146100******************************************************************14610000
146200** IF A BEGINNING AND END OF RANGE WAS ENTERED TO SELECT A      **14620000
146300** RANGE OF LINES, MAKE SURE THERE IS ONLY 1 BEGINNING AND 1    **14630000
146400** ENDING AND MAKE SURE THAT THE BEGINNING IS BEFORE (LESS THAN)**14640000
146500** THE ENDING.                                                  **14650000
146600******************************************************************14660000
146700 3310-EDIT-RANGE.                                                 14670000
146800     IF  ASC-TEMP-BEGIN (ASC-BLK-SUB ASC-ITEM-SUB)                14680000
146900         IF  ASC-START-OF-SELECTED-RANGE = ZERO                   14690000
147000             MOVE ASC-TEMP-SELECTED-SW  (ASC-BLK-SUB ASC-ITEM-SUB)14700000
147100                                   TO ASC-SELECTED-SW             14710000
147200                                        (ASC-BLK-SUB ASC-ITEM-SUB)14720000
147300             MOVE PV-ITEM-IN-USE   TO ASC-START-OF-SELECTED-RANGE 14730000
147400         ELSE                                                     14740000
147500             IF  ASC-START-OF-SELECTED-RANGE = PV-ITEM-IN-USE     14750000
147600                 CONTINUE                                         14760000
147700             ELSE                                                 14770000
147800*                -- ONLY ONE BEGINNING-OF-RANGE-ALLOWED --        14780000
147900                 MOVE PC-TSYMSG-00054                             14790000
148000                                       TO DP020-MSG-NUMBER        14800000
148100*                MOVE -1               TO MR-SELECTL (PV-SUB)     14810000
148200*                MOVE DP015-RED        TO MR-SELECTC (PV-SUB)     14820000
148300*                MOVE DP015-UNDERLINE  TO MR-SELECTH (PV-SUB)     14830000
148400                 SET DP020-MSG-FATAL                              14840000
148500                     DP030-SET-CURSOR-APPL-1                      14850000
148600                     PS-ERROR          TO TRUE                    14860000
148700             END-IF                                               14870000
148800         END-IF                                                   14880000
148900     ELSE                                                         14890000
149000         IF  ASC-END-OF-SELECTED-RANGE = ZERO                     14900000
149100             MOVE ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB) 14910000
149200                                   TO ASC-SELECTED-SW             14920000
149300                                     (ASC-BLK-SUB ASC-ITEM-SUB)   14930000
149400             MOVE PV-ITEM-IN-USE   TO ASC-END-OF-SELECTED-RANGE   14940000
149500         ELSE                                                     14950000
149600             IF  ASC-END-OF-SELECTED-RANGE = PV-ITEM-IN-USE       14960000
149700                 CONTINUE                                         14970000
149800             ELSE                                                 14980000
149900*                -- ONLY ONE END-OF-RANGE ALLOWED --              14990000
150000                 MOVE PC-TSYMSG-00055                             15000000
150100                                        TO DP020-MSG-NUMBER       15010000
150200*                MOVE -1                TO MR-SELECTL (PV-SUB)    15020000
150300                 SET DP020-MSG-FATAL                              15030000
150400                     DP030-SET-CURSOR-APPL-1                      15040000
150500                     PS-ERROR           TO TRUE                   15050000
150600             END-IF                                               15060000
150700         END-IF                                                   15070000
150800     END-IF.                                                      15080000
150900*                                                                 15090000
151000******************************************************************15100000
151100** IF BOTH A BEGINNING AND END OF RANGE HAVE BEEN SPECIFIED,    **15110000
151200** MAKE SURE THAT THE BEGINNING IS BEFORE (LESS THAN) THE END.  **15120000
151300******************************************************************15130000
151400 3400-CHECK-RANGE-SEQUENCE.                                       15140000
151500     IF  ASC-START-OF-SELECTED-RANGE > ZERO                       15150000
151600       AND  ASC-END-OF-SELECTED-RANGE > ZERO                      15160000
151700       AND  ASC-START-OF-SELECTED-RANGE >                         15170000
151800                                         ASC-END-OF-SELECTED-RANGE15180000
151900*        -- END-OF-RANGE BEFORE BEGINNING-OF-RANGE                15190000
152000         MOVE PC-TSYMSG-00052 TO DP020-MSG-NUMBER                 15200000
152100         SET DP020-MSG-FATAL TO TRUE                              15210000
152200         SET PS-ERROR TO TRUE                                     15220000
152300         PERFORM 3410-POSITION-AT-ERROR                           15230000
152400     END-IF.                                                      15240000
152500******************************************************************15250000
152600** BECAUSE RANGES CAN SPAN ACROSS MULTIPLE PAGES, A SEPARATE    **15260000
152700** PARAGRAPH (THIS ONE) IS NEEDED TO DETERMINE WHERE THE CURSOR **15270000
152800** SHOULD BE POSITIONED ON A RANGE ERROR.                       **15280000
152900******************************************************************15290000
153000 3410-POSITION-AT-ERROR.                                          15300000
153100     SET DP030-SET-CURSOR-APPL-1   TO TRUE.                       15310000
153200     COMPUTE PV-SUB = ASC-START-OF-SELECTED-RANGE                 15320000
153300                    - PV-TOP-ITEM + 1.                            15330000
153400     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      15340000
153500         CONTINUE                                                 15350000
153600*    ELSE                                                         15360000
153700*        MOVE -1                   TO MR-SELECTL (PV-SUB)         15370000
153800*        MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         15380000
153900*        MOVE DP015-RED            TO MR-SELECTC (PV-SUB)         15390000
154000     END-IF.                                                      15400000
154100*                                                                 15410000
154200     COMPUTE PV-SUB = ASC-END-OF-SELECTED-RANGE                   15420000
154300                    - PV-TOP-ITEM + 1.                            15430000
154400     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      15440000
154500         CONTINUE                                                 15450000
154600*    ELSE                                                         15460000
154700*        MOVE -1                   TO MR-SELECTL (PV-SUB)         15470000
154800*        MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         15480000
154900*        MOVE DP015-RED            TO MR-SELECTC (PV-SUB)         15490000
155000     END-IF.                                                      15500000
155100                                                                  15510000
155200*----------------------------------------------------------------*15520000
155300*    WHENEVER THE USER SELECTS AN ITEM AS THE BEGINNING RANGE    *15530000
155400*    AND ONE AS THE ENDING RANGE, MARK THESE ITEMS AS WELL AS    *15540000
155500*    THOSE THAT FALL IN THE RANGE AS BEING SELECTED.             *15550000
155600*----------------------------------------------------------------*15560000
155700 3500-MARK-RANGE-AS-SELECTED.                                     15570000
155800     MOVE +1                       TO  ASC-BLK-SUB.               15580000
155900     PERFORM 3510-MARK-SELECTED-INDS                              15590000
156000         VARYING ASC-ITEM-SUB                                     15600000
156100         FROM 1 BY 1                                              15610000
156200         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 15620000
156300                                                                  15630000
156400     ADD +1                        TO ASC-BLK-SUB.                15640000
156500     PERFORM 3510-MARK-SELECTED-INDS                              15650000
156600         VARYING ASC-ITEM-SUB                                     15660000
156700         FROM 1 BY 1                                              15670000
156800         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 15680000
156900                                                                  15690000
157000     MOVE ASC-LIST-ITEM-NUMBER(1 1)                               15700000
157100                                   TO  PV-LIST-ITEM-NUMBER.       15710000
157200     COMPUTE PV-FIRST-BLOCK-IN-ARRAY =                            15720000
157300         1 + ((PV-LIST-ITEM-NUMBER - 1) /                         15730000
157400               PC-ITEMS-PER-PANEL).                               15740000
157500                                                                  15750000
157600     MOVE ASC-START-OF-SELECTED-RANGE                             15760000
157700                                   TO PV-START-OF-SELECTED-RANGE. 15770000
157800     COMPUTE PV-FIRST-BLOCK-IN-RANGE =                            15780000
157900         1 + ((PV-START-OF-SELECTED-RANGE - 1) /                  15790000
158000               PC-ITEMS-PER-PANEL).                               15800000
158100                                                                  15810000
158200     MOVE ASC-END-OF-SELECTED-RANGE                               15820000
158300                                   TO  PV-END-OF-SELECTED-RANGE.  15830000
158400     COMPUTE PV-LAST-BLOCK-IN-RANGE =                             15840000
158500         1 + ((PV-END-OF-SELECTED-RANGE - 1) /                    15850000
158600               PC-ITEMS-PER-PANEL).                               15860000
158700     COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                             15870000
158800         PV-FIRST-BLOCK-IN-ARRAY + 1.                             15880000
158900                                                                  15890000
159000     IF (PV-FIRST-BLOCK-IN-RANGE < PV-FIRST-BLOCK-IN-ARRAY) OR    15900000
159100        (PV-LAST-BLOCK-IN-RANGE  > PV-NEXT-BLOCK-IN-ARRAY)        15910000
159200         MOVE +1                   TO ASC-BLK-SUB                 15920000
159300         PERFORM 5100-WRITE-TEMP-STORAGE                          15930000
159400         COMPUTE PV-PREV-BLOCK-IN-ARRAY =                         15940000
159500             PV-FIRST-BLOCK-IN-ARRAY - 1                          15950000
159600                                                                  15960000
159700         PERFORM                                                  15970000
159800             UNTIL PV-FIRST-BLOCK-IN-RANGE >                      15980000
159900                   PV-PREV-BLOCK-IN-ARRAY                         15990000
160000             MOVE PV-FIRST-BLOCK-IN-RANGE                         16000000
160100                                   TO PV-BLOCK-NUMBER             16010000
160200             PERFORM 4410-READ-TEMP-STORAGE                       16020000
160300             PERFORM 3510-MARK-SELECTED-INDS                      16030000
160400                 VARYING ASC-ITEM-SUB                             16040000
160500                 FROM 1 BY 1                                      16050000
160600                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          16060000
160700             PERFORM 5100-WRITE-TEMP-STORAGE                      16070000
160800             ADD +1                TO PV-FIRST-BLOCK-IN-RANGE     16080000
160900         END-PERFORM                                              16090000
161000                                                                  16100000
161100         COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                         16110000
161200             PV-FIRST-BLOCK-IN-ARRAY + PC-MAX-BLOCKS-IN-ARRAY     16120000
161300         PERFORM                                                  16130000
161400             UNTIL PV-NEXT-BLOCK-IN-ARRAY >                       16140000
161500                   PV-LAST-BLOCK-IN-RANGE                         16150000
161600             MOVE PV-NEXT-BLOCK-IN-ARRAY                          16160000
161700                                   TO PV-BLOCK-NUMBER             16170000
161800             PERFORM 4410-READ-TEMP-STORAGE                       16180000
161900             PERFORM 3510-MARK-SELECTED-INDS                      16190000
162000                 VARYING ASC-ITEM-SUB                             16200000
162100                 FROM 1 BY 1                                      16210000
162200                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          16220000
162300             PERFORM 5100-WRITE-TEMP-STORAGE                      16230000
162400             ADD +1                TO PV-NEXT-BLOCK-IN-ARRAY      16240000
162500         END-PERFORM                                              16250000
162600                                                                  16260000
162700         MOVE PV-FIRST-BLOCK-IN-ARRAY                             16270000
162800                                   TO PV-BLOCK-NUMBER             16280000
162900         PERFORM 4410-READ-TEMP-STORAGE                           16290000
163000     END-IF.                                                      16300000
163100                                                                  16310000
163200     MOVE +0                       TO ASC-START-OF-SELECTED-RANGE 16320000
163300                                      ASC-END-OF-SELECTED-RANGE.  16330000
163400                                                                  16340000
163500*----------------------------------------------------------------*16350000
163600* SET THE SELECTION INDICATOR TO 'S' WITHIN THE RANGE.           *16360000
163700*----------------------------------------------------------------*16370000
163800 3510-MARK-SELECTED-INDS.                                         16380000
163900                                                                  16390000
164000     IF (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB                         16400000
164100                                ASC-ITEM-SUB) >                   16410000
164200         ASC-START-OF-SELECTED-RANGE)                             16420000
164300     OR (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB                         16430000
164400                                ASC-ITEM-SUB) =                   16440000
164500         ASC-START-OF-SELECTED-RANGE)                             16450000
164600                                                                  16460000
164700         IF (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB                     16470000
164800                                    ASC-ITEM-SUB) <               16480000
164900             ASC-END-OF-SELECTED-RANGE)                           16490000
165000         OR (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB                     16500000
165100                                    ASC-ITEM-SUB) =               16510000
165200             ASC-END-OF-SELECTED-RANGE)                           16520000
165300                                                                  16530000
165400             IF NOT ASC-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)          16540000
165500                 SET ASC-SELECT     (ASC-BLK-SUB  ASC-ITEM-SUB)   16550000
165600                     ASC-TEMP-SELECT(ASC-BLK-SUB  ASC-ITEM-SUB)   16560000
165700                               TO TRUE                            16570000
165800                 SET ASC-BLOCK-MODIFIED(ASC-BLK-SUB)              16580000
165900                               TO TRUE                            16590000
166000                 ADD +1        TO ASC-NUMBER-OF-SELECTED-ITEMS    16600000
166100             END-IF                                               16610000
166200         END-IF                                                   16620000
166300     END-IF.                                                      16630000
166400                                                                  16640000
166500*----------------------------------------------------------------*16650000
166600*    INITIALIZE BOTH BLOCKS IN THE ARRAY.                        *16660000
166700*    INITIALIZE ALL COUNTERS AND FLAGS.                          *16670000
166800*    READ THE DATA BASE FOR THE 1ST TIME AND FILL UP THE ARRAY.  *16680000
166900*    DISPLAY THE PANEL TO USER.                                  *16690000
167000*----------------------------------------------------------------*16700000
167100 4000-BUILD-INITIAL-PANEL.                                        16710000
167200                                                                  16720000
167300     INITIALIZE        ASC-BLOCK-ENTRIES (1)                      16730000
167400                       ASC-BLOCK-ENTRIES (2).                     16740000
167500     MOVE +1                   TO ASC-BLK-SUB.                    16750000
167600     SET ASC-ITEMS-LEFT-ON-DB  TO TRUE.                           16760000
167700                                                                  16770000
167800     MOVE +0           TO ASC-ITEM-SUB                            16780000
167900                          ASC-NUMBER-OF-ITEMS-READ                16790000
168000                          ASC-NUMBER-OF-SELECTED-ITEMS            16800000
168100                          ASC-HIGHEST-BLOCK-WRITTEN               16810000
168200                          ASC-START-OF-SELECTED-RANGE             16820000
168300                          ASC-END-OF-SELECTED-RANGE               16830000
168400                          ASC-ITEM-AT-TOP-OF-PANEL.               16840000
168500                                                                  16850000
168600     PERFORM 4005-CALC-TOTAL-AMOUNTS.                             16860000
168700     PERFORM 4100-PREPARE-CURSOR.                                 16870000
168800     PERFORM 4010-OPEN-CURSOR.                                    16880000
168900     PERFORM 4300-READ-ITEMS-FROM-DB.                             16890000
169000     PERFORM 4020-CLOSE-CURSOR.                                   16900000
169100                                                                  16910000
169200     MOVE +1                   TO  PV-TOP-ITEM.                   16920000
169300*    IF  ASC-NUMBER-OF-ITEMS-READ = ZERO                          16930000
169400*        SET DP020-NEXT-ACT-APPL-ERROR TO TRUE                    16940000
169500*        SET DP020-MSG-FATAL   TO  TRUE                           16950000
169600*        MOVE PC-TSYMSG-00050  TO  DP020-MSG-NUMBER               16960000
169700*    ELSE                                                         16970000
169800*        MOVE -1               TO MR-SELECTL (1)                  16980000
169900         MOVE -1               TO ASTRTITL                        16990000
170000         SET DP030-SET-CURSOR-APPL-1 TO TRUE                      17000000
170100         PERFORM 4400-MOVE-COMMAREA-TO-SCREEN.                    17010000
170200*    END-IF.                                                      17020000
170300                                                                  17030000
170400*----------------------------------------------------------------*17040000
170500*    CALCULATE COMPANY TOTALS FOR SCREEN HEADER FIELDS.           17050000
170600*----------------------------------------------------------------*17060000
170700 4005-CALC-TOTAL-AMOUNTS.                                         17070000
170800                                                                  17080000
170900     MOVE ASC-BUSN-YY        TO DK-BUSN-YY.                       17090000
171000     MOVE ASC-BUSN-MM        TO DK-BUSN-MM.                       17100000
171100     MOVE ASC-BUSN-DD        TO DK-BUSN-DD.                       17110000
171200     MOVE DK-BUSN-DATE-X     TO DK-BUSN-DATE.                     17120000
171300     MOVE ASC-OPER-NBR       TO DK-OPER-UNT-ID.                   17130000
171400     IF PC215-GROUP (ASC-SEL-SUB) > SPACES                        17140000
171500         MOVE PC215-GROUP (ASC-SEL-SUB) TO DK-PROCESS-GROUP       17150000
171600                                           ASC-PROCESS-GROUP      17160000
171700     ELSE                                                         17170000
171800         IF PC215-GROUP (PC215-IDX) > SPACES                      17180000
171900             MOVE PC215-GROUP (PC215-IDX) TO DK-PROCESS-GROUP     17190000
172000                                             ASC-PROCESS-GROUP    17200000
172100     ELSE                                                         17210000
172200         IF PC215-AREA (ASC-SEL-SUB) > SPACES                     17220000
172300             MOVE PC215-AREA (ASC-SEL-SUB) TO DK-PROCESS-AREA     17230000
172400                                              ASC-PROCESS-AREA    17240000
172500         ELSE                                                     17250000
172600             IF PC215-AREA (PC215-IDX) > SPACES                   17260000
172700                 MOVE PC215-AREA (PC215-IDX) TO DK-PROCESS-AREA   17270000
172800                                               ASC-PROCESS-AREA   17280000
172900             ELSE                                                 17290000
173000                 IF PC215-OPER-DESC (ASC-SEL-SUB) > SPACES        17300000
173100                     MOVE PC215-OPER-DESC (ASC-SEL-SUB) TO        17310000
173200                                                     DK-OPER-DESC 17320000
173300                     EXEC SQL                                     17330000
173400                          SELECT  LOC_NBR                         17340000
173500                                 ,LOC_NM                          17350000
173600                            INTO  :XLT00010-LOC-NBR               17360000
173700                                 ,:XLT00010-LOC-NM                17370000
173800                            FROM  XLT_LOC                         17380000
173900                          WHERE  LOC_5_ABBR_NM =  :DK-OPER-DESC   17390000
174000                     END-EXEC                                     17400000
174100                     EVALUATE TRUE                                17410000
174200                         WHEN SQLCODE = +0                        17420000
174300                             MOVE XLT00010-LOC-NBR TO ASC-OPER-NBR17430000
174400                                                    DK-OPER-UNT-ID17440000
174500                             MOVE XLT00010-LOC-NM  TO             17450000
174600                                                    ASC-OPER-NAME 17460000
174700                         WHEN OTHER                               17470000
174800                             MOVE ZEROES        TO ASC-OPER-NBR   17480000
174900                                                   DK-OPER-UNT-ID 17490000
175000                             MOVE SPACES        TO ASC-OPER-NAME  17500000
175100                     END-EVALUATE                                 17510000
175200                 END-IF                                           17520000
175300             END-IF                                               17530000
175400         END-IF                                                   17540000
175500     END-IF.                                                      17550000
175600     IF ASC-PROCESS-GROUP > SPACES                                17560000
175700         STRING 'GROUP  '        DELIMITED BY SIZE                17570000
175800                DK-PROCESS-GROUP DELIMITED BY SIZE                17580000
175900                    INTO PV-DISPLAY-TITLE                         17590000
176000         MOVE ASC-PROCESS-GROUP  TO  DK-PROCESS-GROUP             17600000
176100         PERFORM 4006-CALC-GROUP-AMOUNTS                          17610000
176200     ELSE                                                         17620000
176300         IF ASC-PROCESS-AREA > SPACES                             17630000
176400             STRING 'AREA  '        DELIMITED BY SIZE             17640000
176500                    DK-PROCESS-AREA DELIMITED BY SIZE             17650000
176600                        INTO PV-DISPLAY-TITLE                     17660000
176700             MOVE ASC-PROCESS-AREA  TO  DK-PROCESS-AREA           17670000
176800             PERFORM 4007-CALC-AREA-AMOUNTS                       17680000
176900         ELSE                                                     17690000
177000             MOVE ASC-OPER-NBR  TO  DK-OPER-UNT-ID                17700000
177100             PERFORM 4005A-CALC-OPER-AMOUNTS                      17710000
177200         END-IF                                                   17720000
177300     END-IF.                                                      17730000
177400     MOVE PV-DISPLAY-TITLE TO ASC-DISPLAY-TITLE.                  17740000
177500*----------------------------------------------------------------*17750000
177600*    CALCULATE OPER UNIT ID TOTALS FOR SCREEN HEADER FIELDS.      17760000
177700*----------------------------------------------------------------*17770000
177800 4005A-CALC-OPER-AMOUNTS.                                         17780000
177900                                                                  17790000
178000     EXEC SQL                                                     17800000
178100          SELECT  DECIMAL(SUM(UNT_WRKD_QTY),11,0)                 17810000
178200            INTO  :PV-TOT-UNITS                                   17820000
178300            FROM  PCT_SUM_WRKD                                    17830000
178400           WHERE  BUS_DTE        =  :DK-BUSN-DATE                 17840000
178500             AND  OPER_UNT_ID    =  :DK-OPER-UNT-ID               17850000
178600     END-EXEC.                                                    17860000
178700     EVALUATE TRUE                                                17870000
178800         WHEN SQLCODE = +0                                        17880000
178900              MOVE PV-TOT-UNITS  TO  ASC-TOT-UNITS                17890000
179000         WHEN OTHER                                               17900000
179100             MOVE ZEROES        TO  ASC-TOT-UNITS                 17910000
179200     END-EVALUATE.                                                17920000
179300     EXEC SQL                                                     17930000
179400          SELECT  FLOAT (SUM(UNT_WRKD_QTY))                       17940000
179500            INTO  :PV-1ST-UNITS                                   17950000
179600            FROM  PCT_SUM_WRKD                                    17960000
179700           WHERE  BUS_DTE        =  :DK-BUSN-DATE                 17970000
179800             AND  OPER_UNT_ID    =  :DK-OPER-UNT-ID               17980000
179900             AND  SHFT_NBR       =  :PC-1                         17990000
180000     END-EXEC.                                                    18000000
180100     EVALUATE TRUE                                                18010000
180200         WHEN SQLCODE = +0                                        18020000
180300             MOVE PV-1ST-UNITS  TO  ASC-1ST-UNITS                 18030000
180400         WHEN OTHER                                               18040000
180500             MOVE ZEROES        TO  ASC-1ST-UNITS                 18050000
180600     END-EVALUATE.                                                18060000
180700     EXEC SQL                                                     18070000
180800           SELECT  FLOAT (SUM(UNT_WRKD_QTY))                      18080000
180900            INTO  :PV-2ND-UNITS                                   18090000
181000            FROM  PCT_SUM_WRKD                                    18100000
181100           WHERE  BUS_DTE        =  :DK-BUSN-DATE                 18110000
181200             AND  OPER_UNT_ID    =  :DK-OPER-UNT-ID               18120000
181300             AND  SHFT_NBR       =  :PC-2                         18130000
181400     END-EXEC.                                                    18140000
181500     EVALUATE TRUE                                                18150000
181600         WHEN SQLCODE = +0                                        18160000
181700             MOVE PV-2ND-UNITS  TO  ASC-2ND-UNITS                 18170000
181800         WHEN OTHER                                               18180000
181900             MOVE ZEROES        TO  ASC-2ND-UNITS                 18190000
182000     END-EVALUATE.                                                18200000
182100     EXEC SQL                                                     18210000
182200          SELECT  FLOAT (SUM(UNT_WRKD_QTY))                       18220000
182300            INTO  :PV-3RD-UNITS                                   18230000
182400            FROM  PCT_SUM_WRKD                                    18240000
182500           WHERE  BUS_DTE        =  :DK-BUSN-DATE                 18250000
182600             AND  OPER_UNT_ID    =  :DK-OPER-UNT-ID               18260000
182700             AND  SHFT_NBR       =  :PC-3                         18270000
182800     END-EXEC.                                                    18280000
182900     EVALUATE TRUE                                                18290000
183000         WHEN SQLCODE = +0                                        18300000
183100             MOVE PV-3RD-UNITS  TO  ASC-3RD-UNITS                 18310000
183200         WHEN OTHER                                               18320000
183300             MOVE ZEROES        TO  ASC-3RD-UNITS                 18330000
183400     END-EVALUATE.                                                18340000
183500                                                                  18350000
183600     INITIALIZE  PV-TOT-UNITS                                     18360000
183700                 PV-1ST-UNITS                                     18370000
183800                 PV-2ND-UNITS                                     18380000
183900                 PV-3RD-UNITS.                                    18390000
184000     IF ASC-1ST-UNITS > ZERO                                      18400000
184100         DIVIDE ASC-1ST-UNITS BY ASC-TOT-UNITS                    18410000
184200             GIVING PV-DIVIDEND ROUNDED                           18420000
184300         MULTIPLY PV-DIVIDEND BY 100                              18430000
184400             GIVING ASC-1ST-PCT                                   18440000
184500         IF ASC-1ST-PCT = ZERO                                    18450000
184600             MOVE .1    TO  ASC-1ST-PCT                           18460000
184700         END-IF                                                   18470000
184800     ELSE                                                         18480000
184900         MOVE ZEROS TO  ASC-1ST-PCT                               18490000
185000     END-IF.                                                      18500000
185100     IF ASC-2ND-UNITS > ZERO                                      18510000
185200         DIVIDE ASC-2ND-UNITS BY ASC-TOT-UNITS                    18520000
185300             GIVING PV-DIVIDEND ROUNDED                           18530000
185400         MULTIPLY PV-DIVIDEND BY 100                              18540000
185500             GIVING ASC-2ND-PCT                                   18550000
185600         IF ASC-2ND-PCT = ZERO                                    18560000
185700             MOVE .1    TO  ASC-2ND-PCT                           18570000
185800         END-IF                                                   18580000
185900     ELSE                                                         18590000
186000         MOVE ZEROS TO  ASC-2ND-PCT                               18600000
186100     END-IF.                                                      18610000
186200     IF ASC-3RD-UNITS > ZERO                                      18620000
186300         DIVIDE ASC-3RD-UNITS BY ASC-TOT-UNITS                    18630000
186400             GIVING PV-DIVIDEND ROUNDED                           18640000
186500         MULTIPLY PV-DIVIDEND BY 100                              18650000
186600             GIVING ASC-3RD-PCT                                   18660000
186700         IF ASC-3RD-PCT = ZERO                                    18670000
186800             MOVE .1 TO  ASC-3RD-PCT                              18680000
186900         END-IF                                                   18690000
187000     ELSE                                                         18700000
187100         MOVE ZEROS TO  ASC-3RD-PCT                               18710000
187200     END-IF                                                       18720000
187300     STRING 'AREA  '        DELIMITED BY SIZE                     18730000
187400                INTO PV-DISPLAY-TITLE.                            18740000
187500                                                                  18750000
187600*----------------------------------------------------------------*18760000
187700*    CALCULATE PROCESS GROUP TOTALS FOR SCREEN HEADER FIELDS.     18770000
187800*----------------------------------------------------------------*18780000
187900 4006-CALC-GROUP-AMOUNTS.                                         18790000
188000                                                                  18800000
188100     IF ASC-PROCESS-GROUP = 'MISC  '                              18810000
188200         EXEC SQL                                                 18820000
188300              SELECT  DECIMAL(SUM(UNT_WRKD_QTY),11,0)             18830000
188400                INTO  :PV-TOT-UNITS                               18840000
188500                FROM  PCT_SUM_WRKD A                              18850000
188600               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         18860000
188700                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       18870000
188800                 AND NOT EXISTS                                   18880000
188900                     (SELECT *                                    18890000
189000                FROM  PCT_PRC_AREA_ASSN B                         18900000
189100               WHERE  B.PRCG_AREA_CDE    =  A.PRCG_AREA_CDE       18910000
189200                 AND  B.OPER_UNT_ID      =  A.OPER_UNT_ID)        18920000
189300         END-EXEC                                                 18930000
189400         EVALUATE TRUE                                            18940000
189500             WHEN SQLCODE = +0                                    18950000
189600                  MOVE PV-TOT-UNITS  TO  ASC-TOT-UNITS            18960000
189700             WHEN OTHER                                           18970000
189800                  MOVE ZEROES        TO  ASC-TOT-UNITS            18980000
189900         END-EVALUATE                                             18990000
190000         EXEC SQL                                                 19000000
190100              SELECT  FLOAT (SUM(UNT_WRKD_QTY))                   19010000
190200                INTO  :PV-1ST-UNITS                               19020000
190300                FROM  PCT_SUM_WRKD A                              19030000
190400               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         19040000
190500                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       19050000
190600                 AND  A.SHFT_NBR         =  :PC-1                 19060000
190700                 AND NOT EXISTS                                   19070000
190800                     (SELECT *                                    19080000
190900                FROM  PCT_PRC_AREA_ASSN B                         19090000
191000               WHERE  B.PRCG_AREA_CDE    =  A.PRCG_AREA_CDE       19100000
191100                 AND  B.OPER_UNT_ID      =  A.OPER_UNT_ID)        19110000
191200         END-EXEC                                                 19120000
191300         EVALUATE TRUE                                            19130000
191400             WHEN SQLCODE = +0                                    19140000
191500                 MOVE PV-1ST-UNITS  TO  ASC-1ST-UNITS             19150000
191600             WHEN OTHER                                           19160000
191700                 MOVE ZEROES        TO  ASC-1ST-UNITS             19170000
191800         END-EVALUATE                                             19180000
191900         EXEC SQL                                                 19190000
192000              SELECT  FLOAT (SUM(UNT_WRKD_QTY))                   19200000
192100                INTO  :PV-2ND-UNITS                               19210000
192200                FROM  PCT_SUM_WRKD A                              19220000
192300               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         19230000
192400                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       19240000
192500                 AND  A.SHFT_NBR         =  :PC-2                 19250000
192600                 AND NOT EXISTS                                   19260000
192700                     (SELECT *                                    19270000
192800                FROM  PCT_PRC_AREA_ASSN B                         19280000
192900               WHERE  B.PRCG_AREA_CDE    =  A.PRCG_AREA_CDE       19290000
193000                 AND  B.OPER_UNT_ID      =  A.OPER_UNT_ID)        19300000
193100         END-EXEC                                                 19310000
193200         EVALUATE TRUE                                            19320000
193300             WHEN SQLCODE = +0                                    19330000
193400                 MOVE PV-2ND-UNITS  TO  ASC-2ND-UNITS             19340000
193500             WHEN OTHER                                           19350000
193600                 MOVE ZEROES        TO  ASC-2ND-UNITS             19360000
193700         END-EVALUATE                                             19370000
193800         EXEC SQL                                                 19380000
193900              SELECT  FLOAT (SUM(UNT_WRKD_QTY))                   19390000
194000                INTO  :PV-3RD-UNITS                               19400000
194100                FROM  PCT_SUM_WRKD A                              19410000
194200               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         19420000
194300                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       19430000
194400                 AND  A.SHFT_NBR         =  :PC-3                 19440000
194500                 AND NOT EXISTS                                   19450000
194600                     (SELECT *                                    19460000
194700                FROM  PCT_PRC_AREA_ASSN B                         19470000
194800               WHERE  B.PRCG_AREA_CDE    =  A.PRCG_AREA_CDE       19480000
194900                 AND  B.OPER_UNT_ID      =  A.OPER_UNT_ID)        19490000
195000         END-EXEC                                                 19500000
195100         EVALUATE TRUE                                            19510000
195200             WHEN SQLCODE = +0                                    19520000
195300                 MOVE PV-3RD-UNITS  TO  ASC-3RD-UNITS             19530000
195400             WHEN OTHER                                           19540000
195500                 MOVE ZEROES        TO  ASC-3RD-UNITS             19550000
195600         END-EVALUATE                                             19560000
195700     ELSE                                                         19570000
195800         EXEC SQL                                                 19580000
195900              SELECT  DECIMAL(SUM(UNT_WRKD_QTY),11,0)             19590000
196000                INTO  :PV-TOT-UNITS                               19600000
196100                FROM  PCT_SUM_WRKD A                              19610000
196200                     ,PCT_PRC_AREA_ASSN B                         19620000
196300               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         19630000
196400                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       19640000
196500                 AND  A.PRCG_AREA_CDE    =  B.PRCG_AREA_CDE       19650000
196600                 AND  A.OPER_UNT_ID      =  B.OPER_UNT_ID         19660000
196700                 AND  B.PRC_AREA_GP_CDE  =  :DK-PROCESS-GROUP     19670000
196800         END-EXEC                                                 19680000
196900         EVALUATE TRUE                                            19690000
197000             WHEN SQLCODE = +0                                    19700000
197100                  MOVE PV-TOT-UNITS  TO  ASC-TOT-UNITS            19710000
197200             WHEN OTHER                                           19720000
197300                  MOVE ZEROES        TO  ASC-TOT-UNITS            19730000
197400         END-EVALUATE                                             19740000
197500         EXEC SQL                                                 19750000
197600              SELECT  FLOAT (SUM(UNT_WRKD_QTY))                   19760000
197700                INTO  :PV-1ST-UNITS                               19770000
197800                FROM  PCT_SUM_WRKD A                              19780000
197900                     ,PCT_PRC_AREA_ASSN B                         19790000
198000               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         19800000
198100                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       19810000
198200                 AND  A.PRCG_AREA_CDE    =  B.PRCG_AREA_CDE       19820000
198300                 AND  A.OPER_UNT_ID      =  B.OPER_UNT_ID         19830000
198400                 AND  B.PRC_AREA_GP_CDE  =  :DK-PROCESS-GROUP     19840000
198500                 AND  A.SHFT_NBR         =  :PC-1                 19850000
198600         END-EXEC                                                 19860000
198700         EVALUATE TRUE                                            19870000
198800             WHEN SQLCODE = +0                                    19880000
198900                 MOVE PV-1ST-UNITS  TO  ASC-1ST-UNITS             19890000
199000             WHEN OTHER                                           19900000
199100                 MOVE ZEROES        TO  ASC-1ST-UNITS             19910000
199200         END-EVALUATE                                             19920000
199300         EXEC SQL                                                 19930000
199400              SELECT  FLOAT (SUM(UNT_WRKD_QTY))                   19940000
199500                INTO  :PV-2ND-UNITS                               19950000
199600                FROM  PCT_SUM_WRKD A                              19960000
199700                     ,PCT_PRC_AREA_ASSN B                         19970000
199800               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         19980000
199900                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       19990000
200000                 AND  A.PRCG_AREA_CDE    =  B.PRCG_AREA_CDE       20000000
200100                 AND  A.OPER_UNT_ID      =  B.OPER_UNT_ID         20010000
200200                 AND  B.PRC_AREA_GP_CDE  =  :DK-PROCESS-GROUP     20020000
200300                 AND  A.SHFT_NBR         =  :PC-2                 20030000
200400         END-EXEC                                                 20040000
200500         EVALUATE TRUE                                            20050000
200600             WHEN SQLCODE = +0                                    20060000
200700                 MOVE PV-2ND-UNITS  TO  ASC-2ND-UNITS             20070000
200800             WHEN OTHER                                           20080000
200900                 MOVE ZEROES        TO  ASC-2ND-UNITS             20090000
201000         END-EVALUATE                                             20100000
201100         EXEC SQL                                                 20110000
201200              SELECT  FLOAT (SUM(UNT_WRKD_QTY))                   20120000
201300                INTO  :PV-3RD-UNITS                               20130000
201400                FROM  PCT_SUM_WRKD A                              20140000
201500                     ,PCT_PRC_AREA_ASSN B                         20150000
201600               WHERE  A.BUS_DTE          =  :DK-BUSN-DATE         20160000
201700                 AND  A.OPER_UNT_ID      =  :DK-OPER-UNT-ID       20170000
201800                 AND  A.PRCG_AREA_CDE    =  B.PRCG_AREA_CDE       20180000
201900                 AND  A.OPER_UNT_ID      =  B.OPER_UNT_ID         20190000
202000                 AND  B.PRC_AREA_GP_CDE  =  :DK-PROCESS-GROUP     20200000
202100                 AND  A.SHFT_NBR         =  :PC-3                 20210000
202200         END-EXEC                                                 20220000
202300         EVALUATE TRUE                                            20230000
202400             WHEN SQLCODE = +0                                    20240000
202500                 MOVE PV-3RD-UNITS  TO  ASC-3RD-UNITS             20250000
202600             WHEN OTHER                                           20260000
202700                 MOVE ZEROES        TO  ASC-3RD-UNITS             20270000
202800         END-EVALUATE                                             20280000
202900     END-IF.                                                      20290000
203000                                                                  20300000
203100     INITIALIZE  PV-TOT-UNITS                                     20310000
203200                 PV-1ST-UNITS                                     20320000
203300                 PV-2ND-UNITS                                     20330000
203400                 PV-3RD-UNITS                                     20340000
203500     IF ASC-1ST-UNITS > ZERO                                      20350000
203600        DIVIDE ASC-1ST-UNITS BY ASC-TOT-UNITS                     20360000
203700             GIVING PV-DIVIDEND ROUNDED                           20370000
203800          MULTIPLY PV-DIVIDEND BY 100                             20380000
203900              GIVING ASC-1ST-PCT                                  20390000
204000         IF ASC-1ST-PCT = ZERO                                    20400000
204100              MOVE .1    TO  ASC-1ST-PCT                          20410000
204200         END-IF                                                   20420000
204300     ELSE                                                         20430000
204400         MOVE ZEROS TO  ASC-1ST-PCT                               20440000
204500     END-IF.                                                      20450000
204600     IF ASC-2ND-UNITS > ZERO                                      20460000
204700         DIVIDE ASC-2ND-UNITS BY ASC-TOT-UNITS                    20470000
204800             GIVING PV-DIVIDEND ROUNDED                           20480000
204900         MULTIPLY PV-DIVIDEND BY 100                              20490000
205000             GIVING ASC-2ND-PCT                                   20500000
205100         IF ASC-2ND-PCT = ZERO                                    20510000
205200             MOVE .1    TO  ASC-2ND-PCT                           20520000
205300         END-IF                                                   20530000
205400     ELSE                                                         20540000
205500         MOVE ZEROS TO  ASC-2ND-PCT                               20550000
205600     END-IF.                                                      20560000
205700     IF ASC-3RD-UNITS > ZERO                                      20570000
205800         DIVIDE ASC-3RD-UNITS BY ASC-TOT-UNITS                    20580000
205900             GIVING PV-DIVIDEND ROUNDED                           20590000
206000         MULTIPLY PV-DIVIDEND BY 100                              20600000
206100             GIVING ASC-3RD-PCT                                   20610000
206200         IF ASC-3RD-PCT = ZERO                                    20620000
206300             MOVE .1 TO  ASC-3RD-PCT                              20630000
206400         END-IF                                                   20640000
206500     ELSE                                                         20650000
206600         MOVE ZEROS TO  ASC-3RD-PCT                               20660000
206700     END-IF.                                                      20670000
206800                                                                  20680000
206900*----------------------------------------------------------------*20690000
207000*    CALCULATE PROCESS AREA TOTALS FOR SCREEN HEADER FIELDS.      20700000
207100*----------------------------------------------------------------*20710000
207200 4007-CALC-AREA-AMOUNTS.                                          20720000
207300                                                                  20730000
207400     EXEC SQL                                                     20740000
207500          SELECT  DECIMAL(SUM(UNT_WRKD_QTY),11,0)                 20750000
207600            INTO  :PV-TOT-UNITS                                   20760000
207700            FROM  PCT_SUM_WRKD                                    20770000
207800           WHERE  BUS_DTE          =  :DK-BUSN-DATE               20780000
207900             AND  OPER_UNT_ID      =  :DK-OPER-UNT-ID             20790000
208000             AND  PRCG_AREA_CDE    =  :DK-PROCESS-AREA            20800000
208100     END-EXEC.                                                    20810000
208200     EVALUATE TRUE                                                20820000
208300         WHEN SQLCODE = +0                                        20830000
208400              MOVE PV-TOT-UNITS  TO  ASC-TOT-UNITS                20840000
208500         WHEN OTHER                                               20850000
208600              MOVE ZEROES        TO  ASC-TOT-UNITS                20860000
208700     END-EVALUATE.                                                20870000
208800     EXEC SQL                                                     20880000
208900          SELECT  FLOAT (SUM(UNT_WRKD_QTY))                       20890000
209000            INTO  :PV-1ST-UNITS                                   20900000
209100            FROM  PCT_SUM_WRKD                                    20910000
209200           WHERE  BUS_DTE          =  :DK-BUSN-DATE               20920000
209300             AND  OPER_UNT_ID      =  :DK-OPER-UNT-ID             20930000
209400             AND  PRCG_AREA_CDE    =  :DK-PROCESS-AREA            20940000
209500             AND  SHFT_NBR         =  :PC-1                       20950000
209600     END-EXEC.                                                    20960000
209700     EVALUATE TRUE                                                20970000
209800         WHEN SQLCODE = +0                                        20980000
209900             MOVE PV-1ST-UNITS  TO  ASC-1ST-UNITS                 20990000
210000         WHEN OTHER                                               21000000
210100             MOVE ZEROES        TO  ASC-1ST-UNITS                 21010000
210200     END-EVALUATE                                                 21020000
210300     EXEC SQL                                                     21030000
210400          SELECT  FLOAT (SUM(UNT_WRKD_QTY))                       21040000
210500            INTO  :PV-2ND-UNITS                                   21050000
210600            FROM  PCT_SUM_WRKD                                    21060000
210700           WHERE  BUS_DTE          =  :DK-BUSN-DATE               21070000
210800             AND  OPER_UNT_ID      =  :DK-OPER-UNT-ID             21080000
210900             AND  PRCG_AREA_CDE    =  :DK-PROCESS-AREA            21090000
211000             AND  SHFT_NBR         =  :PC-2                       21100000
211100     END-EXEC.                                                    21110000
211200     EVALUATE TRUE                                                21120000
211300         WHEN SQLCODE = +0                                        21130000
211400             MOVE PV-2ND-UNITS  TO  ASC-2ND-UNITS                 21140000
211500         WHEN OTHER                                               21150000
211600             MOVE ZEROES        TO  ASC-2ND-UNITS                 21160000
211700     END-EVALUATE.                                                21170000
211800     EXEC SQL                                                     21180000
211900          SELECT  FLOAT (SUM(UNT_WRKD_QTY))                       21190000
212000            INTO  :PV-3RD-UNITS                                   21200000
212100            FROM  PCT_SUM_WRKD                                    21210000
212200           WHERE  BUS_DTE          =  :DK-BUSN-DATE               21220000
212300             AND  OPER_UNT_ID      =  :DK-OPER-UNT-ID             21230000
212400             AND  PRCG_AREA_CDE    =  :DK-PROCESS-AREA            21240000
212500             AND  SHFT_NBR         =  :PC-3                       21250000
212600     END-EXEC.                                                    21260000
212700     EVALUATE TRUE                                                21270000
212800         WHEN SQLCODE = +0                                        21280000
212900             MOVE PV-3RD-UNITS  TO  ASC-3RD-UNITS                 21290000
213000         WHEN OTHER                                               21300000
213100             MOVE ZEROES        TO  ASC-3RD-UNITS                 21310000
213200     END-EVALUATE                                                 21320000
213300                                                                  21330000
213400     INITIALIZE  PV-TOT-UNITS                                     21340000
213500                 PV-1ST-UNITS                                     21350000
213600                 PV-2ND-UNITS                                     21360000
213700                 PV-3RD-UNITS                                     21370000
213800     IF ASC-1ST-UNITS > ZERO                                      21380000
213900        DIVIDE ASC-1ST-UNITS BY ASC-TOT-UNITS                     21390000
214000             GIVING PV-DIVIDEND ROUNDED                           21400000
214100          MULTIPLY PV-DIVIDEND BY 100                             21410000
214200              GIVING ASC-1ST-PCT                                  21420000
214300         IF ASC-1ST-PCT = ZERO                                    21430000
214400              MOVE .1    TO  ASC-1ST-PCT                          21440000
214500         END-IF                                                   21450000
214600     ELSE                                                         21460000
214700         MOVE ZEROS TO  ASC-1ST-PCT                               21470000
214800     END-IF.                                                      21480000
214900     IF ASC-2ND-UNITS > ZERO                                      21490000
215000         DIVIDE ASC-2ND-UNITS BY ASC-TOT-UNITS                    21500000
215100             GIVING PV-DIVIDEND ROUNDED                           21510000
215200         MULTIPLY PV-DIVIDEND BY 100                              21520000
215300             GIVING ASC-2ND-PCT                                   21530000
215400         IF ASC-2ND-PCT = ZERO                                    21540000
215500             MOVE .1    TO  ASC-2ND-PCT                           21550000
215600         END-IF                                                   21560000
215700     ELSE                                                         21570000
215800         MOVE ZEROS TO  ASC-2ND-PCT                               21580000
215900     END-IF.                                                      21590000
216000     IF ASC-3RD-UNITS > ZERO                                      21600000
216100         DIVIDE ASC-3RD-UNITS BY ASC-TOT-UNITS                    21610000
216200             GIVING PV-DIVIDEND ROUNDED                           21620000
216300         MULTIPLY PV-DIVIDEND BY 100                              21630000
216400             GIVING ASC-3RD-PCT                                   21640000
216500         IF ASC-3RD-PCT = ZERO                                    21650000
216600             MOVE .1 TO  ASC-3RD-PCT                              21660000
216700         END-IF                                                   21670000
216800     ELSE                                                         21680000
216900         MOVE ZEROS TO  ASC-3RD-PCT                               21690000
217000     END-IF.                                                      21700000
217100                                                                  21710000
217200*----------------------------------------------------------------*21720000
217300* OPEN THE CURSOR                                                 21730000
217400*   IN THIS PARTICULAR APPLICATION TWO CURSORS WILL BE            21740000
217500*   OPENED DEPENDING ON THE CRITERIA SPECIFIED BY THE             21750000
217600*   USER.                                                        *21760000
217700*----------------------------------------------------------------*21770000
217800 4010-OPEN-CURSOR.                                                21780000
217900     PERFORM                                                      21790000
218000         WITH TEST AFTER                                          21800000
218100         VARYING PV-RETRY-COUNTER                                 21810000
218200         FROM 1 BY 1                                              21820000
218300         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               21830000
218400                   OR (SQLCODE = ZERO))                           21840000
218500                                                                  21850000
218600         EVALUATE TRUE                                            21860000
218700             WHEN PS-OPER-NAME-CSR                                21870000
218800                 EXEC SQL                                         21880000
218900                      OPEN OPER-NAME-CSR                          21890000
219000                 END-EXEC                                         21900000
219100             WHEN PS-PROCESS-GROUP-CSR                            21910000
219200                 EXEC SQL                                         21920000
219300                      OPEN PROCESS-GROUP-CSR                      21930000
219400                 END-EXEC                                         21940000
219500             WHEN PS-PRCSS-GRP-MISC-CSR                           21950000
219600                 EXEC SQL                                         21960000
219700                      OPEN PRCSS-GRP-MISC-CSR                     21970000
219800                 END-EXEC                                         21980000
219900             WHEN PS-PROCESS-AREA-CSR                             21990000
220000                 EXEC SQL                                         22000000
220100                      OPEN PROCESS-AREA-CSR                       22010000
220200                 END-EXEC                                         22020000
220300         END-EVALUATE                                             22030000
220400                                                                  22040000
220500         EVALUATE TRUE                                            22050000
220600             WHEN SQLCODE = ZERO                                  22060000
220700             WHEN SQLCODE = -904                                  22070000
220800             WHEN SQLCODE = -913                                  22080000
220900                 CONTINUE                                         22090000
221000             WHEN SQLWARN0 NOT = SPACES                           22100000
221100             WHEN SQLCODE < ZERO                                  22110000
221200             WHEN SQLCODE > ZERO                                  22120000
221300                 MOVE '4010-OPEN-CURSOR' TO DP013-PARAGRAPH       22130000
221400                 MOVE 'OPEN CURSOR PROBLEM    - '                 22140000
221500                                   TO DP013-MESSAGE-TEXT (1)      22150000
221600                 MOVE SQLCA        TO DP013-SQLCA                 22160000
221700                 MOVE 'PCT_RCVR_LNE ' TO DP013-DB2-TABLE-NAME (1) 22170000
221800                 SET DP013-DB2-ABEND                              22180000
221900                     DP013-XCTL-DISPLAY-RESTART TO TRUE           22190000
222000                 PERFORM DP013-0000-PROCESS-ABEND                 22200000
222100         END-EVALUATE                                             22210000
222200     END-PERFORM.                                                 22220000
222300*                                                                 22230000
222400     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        22240000
222500         MOVE '4010-OPEN-CURSOR'   TO DP013-PARAGRAPH             22250000
222600         MOVE 'MAXIMUM RETRIES EXCEEDED ATTEMPTING TO OPEN CSR'   22260000
222700                                   TO DP013-MESSAGE-TEXT (1)      22270000
222800         MOVE SQLCA                TO DP013-SQLCA                 22280000
222900         MOVE 'PCT_RCVR_LNE_DTL'      TO DP013-DB2-TABLE-NAME (1) 22290000
223000         SET DP013-DB2-ABEND                                      22300000
223100             DP013-XCTL-DISPLAY-RESTART TO TRUE                   22310000
223200         PERFORM DP013-0000-PROCESS-ABEND                         22320000
223300     END-IF.                                                      22330000
223400                                                                  22340000
223500*----------------------------------------------------------------*22350000
223600* CLOSE THE CURSOR.                                               22360000
223700*   IN THIS PARTICULAR APPLICATION ONE OF 2 DIFFERENT CURSORS    *22370000
223800*   WILL BE CLOSED DEPENDING ON THE CRITERIA SPECIFIED BY THE    *22380000
223900*   USER.                                                        *22390000
224000*----------------------------------------------------------------*22400000
224100 4020-CLOSE-CURSOR.                                               22410000
224200                                                                  22420000
224300     EVALUATE TRUE                                                22430000
224400         WHEN PS-OPER-NAME-CSR                                    22440000
224500             EXEC SQL                                             22450000
224600                 CLOSE OPER-NAME-CSR                              22460000
224700             END-EXEC                                             22470000
224800         WHEN PS-PROCESS-GROUP-CSR                                22480000
224900             EXEC SQL                                             22490000
225000                 CLOSE PROCESS-GROUP-CSR                          22500000
225100             END-EXEC                                             22510000
225200         WHEN PS-PRCSS-GRP-MISC-CSR                               22520000
225300             EXEC SQL                                             22530000
225400                 CLOSE PRCSS-GRP-MISC-CSR                         22540000
225500             END-EXEC                                             22550000
225600         WHEN PS-PROCESS-AREA-CSR                                 22560000
225700             EXEC SQL                                             22570000
225800                 CLOSE PROCESS-AREA-CSR                           22580000
225900             END-EXEC                                             22590000
226000     END-EVALUATE.                                                22600000
226100                                                                  22610000
226200     EVALUATE TRUE                                                22620000
226300         WHEN SQLCODE = ZERO                                      22630000
226400         WHEN SQLCODE = +100                                      22640000
226500             CONTINUE                                             22650000
226600         WHEN SQLWARN0 NOT = SPACES                               22660000
226700         WHEN SQLCODE < ZERO                                      22670000
226800         WHEN SQLCODE > ZERO                                      22680000
226900             MOVE '4020-CLOSE-CURSOR' TO DP013-PARAGRAPH          22690000
227000             MOVE 'CLOSE CURSOR PROBLEM   '                       22700000
227100                               TO DP013-MESSAGE-TEXT (1)          22710000
227200             MOVE SQLCA        TO DP013-SQLCA                     22720000
227300             MOVE 'PCT_RCVR_LNE_DTL' TO DP013-DB2-TABLE-NAME (1)  22730000
227400             SET DP013-DB2-ABEND                                  22740000
227500                 DP013-XCTL-DISPLAY-RESTART TO TRUE               22750000
227600             PERFORM DP013-0000-PROCESS-ABEND                     22760000
227700     END-EVALUATE.                                                22770000
227800                                                                  22780000
227900*----------------------------------------------------------------*22790000
228000*    SET UP THE HOST VARIABLES.                                  *22800000
228100*----------------------------------------------------------------*22810000
228200 4100-PREPARE-CURSOR.                                             22820000
228300     MOVE SPACE TO PS-CURSOR-SW.                                  22830000
228400     IF ASC-PROCESS-GROUP > SPACES                                22840000
228500         IF ASC-PROCESS-GROUP = 'MISC  '                          22850000
228600             SET PS-PRCSS-GRP-MISC-CSR TO TRUE                    22860000
228700         ELSE                                                     22870000
228800             SET PS-PROCESS-GROUP-CSR TO TRUE                     22880000
228900     ELSE                                                         22890000
229000         IF ASC-PROCESS-AREA > SPACES                             22900000
229100             SET PS-PROCESS-AREA-CSR TO TRUE                      22910000
229200         ELSE                                                     22920000
229300             SET PS-OPER-NAME-CSR TO TRUE                         22930000
229400         END-IF                                                   22940000
229500     END-IF.                                                      22950000
229600                                                                  22960000
229700*----------------------------------------------------------------*22970000
229800*    READ THE ITEMS FROM THE DATA BASE AND MOVE THEM INTO THE    *22980000
229900*    BLOCKS IN THE ARRAY.  WHENEVER BOTH BLOCKS BECOME FULL,     *22990000
230000*    WRITE OUT THE 1ST BLOCK TO TEMPORARY STORAGE, MOVE THE 2ND  *23000000
230100*    BLOCK IN THE ARRAY TO THE 1ST BLOCK, AND INITIALIZE THE     *23010000
230200*    2ND BLOCK MAKING IT AVAILABLE TO BE USED.                   *23020000
230300*                                                                *23030000
230400*    DUE TO THE SIZE OF THE TABLE, AND THE ORDER IN WHICH THE    *23040000
230500*    ROWS ARE SORTED, THE ENTIRE TABLE IS READ INTO THE PROGRAM  *23050000
230600*    UPON INITIALIZATION.                                        *23060000
230700*----------------------------------------------------------------*23070000
230800                                                                  23080000
230900 4300-READ-ITEMS-FROM-DB.                                         23090000
231000     PERFORM                                                      23100000
231100         VARYING PV-READ-COUNT                                    23110000
231200         FROM 1 BY 1                                              23120000
231300         UNTIL ((PV-READ-COUNT > PC-MAX-ITEMS)                    23130000
231400            OR (ASC-NO-ITEMS-LEFT-ON-DB))                         23140000
231500                                                                  23150000
231600         PERFORM 4310-FETCH                                       23160000
231700                                                                  23170000
231800         IF  ASC-ITEMS-LEFT-ON-DB                                 23180000
231900             IF  ASC-ITEM-SUB < PC-ITEMS-PER-PANEL                23190000
232000                 ADD +1            TO ASC-ITEM-SUB                23200000
232100             ELSE                                                 23210000
232200                 ADD +1            TO ASC-BLK-SUB                 23220000
232300                 MOVE +1           TO ASC-ITEM-SUB                23230000
232400                                                                  23240000
232500                 IF  ASC-BLK-SUB > PC-MAX-BLOCKS-IN-ARRAY         23250000
232600                     MOVE +1       TO ASC-BLK-SUB                 23260000
232700                     SET ASC-BLOCK-MODIFIED (1) TO TRUE           23270000
232800                     PERFORM 5100-WRITE-TEMP-STORAGE              23280000
232900                     MOVE ASC-BLOCK-ENTRIES                       23290000
233000                                   (PC-MAX-BLOCKS-IN-ARRAY)       23300000
233100                                TO ASC-BLOCK-ENTRIES(ASC-BLK-SUB) 23310000
233200                     ADD +1        TO ASC-BLK-SUB                 23320000
233300                     INITIALIZE ASC-BLOCK-ENTRIES (ASC-BLK-SUB)   23330000
233400                     SET ASC-BLOCK-NOT-MODIFIED(ASC-BLK-SUB)      23340000
233500                                                          TO TRUE 23350000
233600                 END-IF                                           23360000
233700             END-IF                                               23370000
233800             ADD +1                TO ASC-NUMBER-OF-ITEMS-READ    23380000
233900             SET ASC-BLOCK-MODIFIED(ASC-BLK-SUB) TO TRUE          23390000
234000             MOVE ASC-NUMBER-OF-ITEMS-READ                        23400000
234100                                   TO ASC-LIST-ITEM-NUMBER        23410000
234200                                      (ASC-BLK-SUB ASC-ITEM-SUB)  23420000
234300             MOVE PCT00007-PRCG-AREA-CDE                          23430000
234400                       TO ASC-AREA (ASC-BLK-SUB ASC-ITEM-SUB)     23440000
234500             MOVE PCT00007-PO-NBR                                 23450000
234600                        TO ASC-PONBR (ASC-BLK-SUB ASC-ITEM-SUB)   23460000
234700             MOVE PCT00007-RCVR-SEQ-NBR                           23470000
234800                        TO ASC-PORCVR (ASC-BLK-SUB ASC-ITEM-SUB)  23480000
234900             MOVE PCT00007-UNT-QTY                                23490000
235000                       TO ASC-UNITSWRKD (ASC-BLK-SUB ASC-ITEM-SUB)23500000
235010* EA 06/15/2010                                                   23501000
235011             PERFORM 4320-GET-CTN-QTY-PARA                        23501100
235210* EA 06/15/2010                                                   23521000
235300             MOVE PCT00007-EXTD-RTL-AMT                           23530000
235400                       TO ASC-RETAILDLS (ASC-BLK-SUB ASC-ITEM-SUB)23540000
235500             MOVE PCT00007-SHFT-NBR                               23550000
235600                        TO ASC-SHIFTWRKD(ASC-BLK-SUB ASC-ITEM-SUB)23560000
235700             MOVE ASC-MISDIRECTS                                  23570000
235800                       TO ASC-MISDRCTS (ASC-BLK-SUB ASC-ITEM-SUB) 23580000
235900         END-IF                                                   23590000
236000     END-PERFORM.                                                 23600000
236100                                                                  23610000
236200     IF  ASC-NUMBER-OF-ITEMS-READ > ZERO                          23620000
236300         MOVE +1               TO ASC-BLK-SUB                     23630000
236400         PERFORM 5100-WRITE-TEMP-STORAGE                          23640000
236500         ADD +1                TO ASC-BLK-SUB                     23650000
236600         PERFORM 5100-WRITE-TEMP-STORAGE                          23660000
236700                                                                  23670000
236800         MOVE 1                TO ASC-BLK-SUB                     23680000
236900                                  PV-BLOCK-NUMBER                 23690000
237000         PERFORM 4410-READ-TEMP-STORAGE                           23700000
237100         IF  ASC-HIGHEST-BLOCK-WRITTEN GREATER THAN 1             23710000
237200             MOVE 2            TO ASC-BLK-SUB                     23720000
237300                                  PV-BLOCK-NUMBER                 23730000
237400             PERFORM 4410-READ-TEMP-STORAGE                       23740000
237500         END-IF                                                   23750000
237600     END-IF.                                                      23760000
237700                                                                  23770000
237800*----------------------------------------------------------------*23780000
237900*    FETCH THE CURSOR                                             23790000
238000*----------------------------------------------------------------*23800000
238100 4310-FETCH.                                                      23810000
238101                                                                  23810100
238110* EA 06/15/2010 - ADDED PCT00007-CART-QTY FOR OPER-NAME-CSR       23811000
238120*                 PROCESS-GROUP-CSR AND PROCESS-AREA-CSR.         23812000
238130                                                                  23813000
238200     EVALUATE TRUE                                                23820000
238300         WHEN PS-OPER-NAME-CSR                                    23830000
238400             EXEC SQL                                             23840000
238500                  FETCH OPER-NAME-CSR                             23850000
238600                 INTO  :PCT00007-UNT-QTY                          23860000
238700                      ,:PCT00007-EXTD-RTL-AMT                     23870000
238900                      ,:PCT00007-SHFT-NBR                         23890000
239000                      ,:PCT00007-PO-NBR                           23900000
239100                      ,:PCT00007-RCVR-SEQ-NBR                     23910000
239200                      ,:PCT00007-PRCG-AREA-CDE                    23920000
239300                      ,:RECEIV-OPER-UNT-ID                        23930000
239400                      ,:XLT00010-LOC-5-ABBR-NM                    23940000
239500             END-EXEC                                             23950000
239600         WHEN PS-PROCESS-GROUP-CSR                                23960000
239700             EXEC SQL                                             23970000
239800                  FETCH PROCESS-GROUP-CSR                         23980000
239900                 INTO  :PCT00007-UNT-QTY                          23990000
240000                      ,:PCT00007-EXTD-RTL-AMT                     24000000
240100                      ,:PCT00007-SHFT-NBR                         24010000
240200                      ,:PCT00007-PO-NBR                           24020000
240300                      ,:PCT00007-RCVR-SEQ-NBR                     24030000
240400                      ,:PCT00007-PRCG-AREA-CDE                    24040000
240500                      ,:RECEIV-OPER-UNT-ID                        24050000
240600                      ,:XLT00010-LOC-5-ABBR-NM                    24060000
240700             END-EXEC                                             24070000
240800         WHEN PS-PRCSS-GRP-MISC-CSR                               24080000
240900             EXEC SQL                                             24090000
241000                  FETCH PRCSS-GRP-MISC-CSR                        24100000
241100                 INTO  :PCT00007-UNT-QTY                          24110000
241200                      ,:PCT00007-EXTD-RTL-AMT                     24120000
241300                      ,:PCT00007-SHFT-NBR                         24130000
241400                      ,:PCT00007-PO-NBR                           24140000
241500                      ,:PCT00007-RCVR-SEQ-NBR                     24150000
241600                      ,:PCT00007-PRCG-AREA-CDE                    24160000
241700                      ,:RECEIV-OPER-UNT-ID                        24170000
241800                      ,:XLT00010-LOC-5-ABBR-NM                    24180000
241900             END-EXEC                                             24190000
242000         WHEN PS-PROCESS-AREA-CSR                                 24200000
242100             EXEC SQL                                             24210000
242200                  FETCH PROCESS-AREA-CSR                          24220000
242300                 INTO  :PCT00007-UNT-QTY                          24230000
242400                      ,:PCT00007-EXTD-RTL-AMT                     24240000
242500                      ,:PCT00007-SHFT-NBR                         24250000
242600                      ,:PCT00007-PO-NBR                           24260000
242700                      ,:PCT00007-RCVR-SEQ-NBR                     24270000
242800                      ,:PCT00007-PRCG-AREA-CDE                    24280000
242900                      ,:RECEIV-OPER-UNT-ID                        24290000
243000                      ,:XLT00010-LOC-5-ABBR-NM                    24300000
243100             END-EXEC                                             24310000
243200     END-EVALUATE.                                                24320000
243300                                                                  24330000
243400     EVALUATE TRUE                                                24340000
243500         WHEN SQLCODE = ZERO                                      24350000
243600              IF RECEIV-OPER-UNT-ID  =  DK-OPER-UNT-ID            24360000
243700                  MOVE SPACES                  TO ASC-MISDIRECTS  24370000
243800              ELSE                                                24380000
243900                  MOVE XLT00010-LOC-5-ABBR-NM  TO ASC-MISDIRECTS  24390000
244000              END-IF                                              24400000
244100         WHEN SQLCODE = +100                                      24410000
244200              CONTINUE                                            24420000
244300         WHEN SQLWARN0 NOT = SPACE                                24430000
244400         WHEN SQLCODE NOT = ZERO                                  24440000
244500              MOVE '4310-FETCH-CURSOR' TO DP013-PARAGRAPH         24450000
244600              MOVE 'FETCH CURSOR PROBLEM '                        24460000
244700                               TO DP013-MESSAGE-TEXT (1)          24470000
244800              MOVE SQLCA       TO DP013-SQLCA                     24480000
244900              MOVE 'PCT_RCVR_LNE_DTL' TO DP013-DB2-TABLE-NAME (1) 24490000
245000              SET DP013-DB2-ABEND TO TRUE                         24500000
245100              PERFORM DP013-0000-PROCESS-ABEND                    24510000
245200     END-EVALUATE.                                                24520000
245300                                                                  24530000
245400     IF  SQLCODE EQUAL +100                                       24540000
245500         SET ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                      24550000
245600     END-IF.                                                      24560000
245700                                                                  24570000
245701* EA 06/15/2010 BEG                                               24570100
245710*----------------------------------------------------------------*24571000
245720*    TO GET THE CARTON QUANTITY                                   24572000
245730*----------------------------------------------------------------*24573000
245740 4320-GET-CTN-QTY-PARA.                                           24574000
245780                                                                  24578000
245790          MOVE  PCT00007-RCVR-SEQ-NBR  TO  PV-RCVR-SEQ-NBR.       24579000
245800          MOVE  PCT00007-PRCG-AREA-CDE TO  PV-PRCG-AREA-CDE.      24580000
245810          MOVE  PCT00007-PO-NBR        TO  PV-PO-NBR.             24581000
245811          MOVE  PCT00007-SHFT-NBR      TO  PV-SHFT-NBR.           24581126
245820                                                                  24582000
245880              EXEC SQL                                            24588000
245881                   SELECT CART_QTY                                24588100
245882                     INTO :PCT00007-CART-QTY                      24588200
245883                     FROM PCT_RCVR_LNE_DTL                        24588300
245884                   WHERE OPER_UNT_ID     =  :DK-OPER-UNT-ID       24588400
245885                   AND   BUS_DTE         =  :DK-BUSN-DATE         24588500
245886                   AND   ACTN_CDE        =  :PC-W                 24588600
245887                   AND   PO_NBR          =  :PV-PO-NBR            24588700
245888                   AND   RCVR_SEQ_NBR    =  :PV-RCVR-SEQ-NBR      24588800
245889                   AND   PRCG_AREA_CDE   =  :PV-PRCG-AREA-CDE     24588900
245890                   AND   SHFT_NBR        =  :PV-SHFT-NBR          24589026
245896              END-EXEC.                                           24589600
245897                                                                  24589700
245898              EVALUATE TRUE                                       24589800
245899                  WHEN SQLCODE = +0                               24589900
245900                       MOVE PCT00007-CART-QTY                     24590000
245901                         TO ASC-CTNWRKD (ASC-BLK-SUB ASC-ITEM-SUB)24590100
245903                  WHEN OTHER                                      24590300
245904                       MOVE ZEROES                                24590400
245905                         TO ASC-CTNWRKD (ASC-BLK-SUB ASC-ITEM-SUB)24590500
245907              END-EVALUATE.                                       24590700
245908* EA 06/15/2010 END                                               24590800
245909*----------------------------------------------------------------*24590900
245910* MOVE THE DISPLAYED FIELDS FROM THE COMMAREA TO THE SCREEN.     *24591000
246000*----------------------------------------------------------------*24600000
246100 4400-MOVE-COMMAREA-TO-SCREEN.                                    24610000
246200     IF  (((PV-TOP-ITEM > ASC-LIST-ITEM-NUMBER (1 1))             24620000
246300         AND (PV-TOP-ITEM > ASC-LIST-ITEM-NUMBER (2 1)))          24630000
246400         OR  (PV-TOP-ITEM < ASC-LIST-ITEM-NUMBER (1 1)))          24640000
246500             MOVE +1    TO ASC-BLK-SUB                            24650000
246600             PERFORM 5100-WRITE-TEMP-STORAGE                      24660000
246700             ADD +1     TO ASC-BLK-SUB                            24670000
246800             PERFORM 5100-WRITE-TEMP-STORAGE                      24680000
246900             DIVIDE PV-TOP-ITEM BY PC-ITEMS-PER-PANEL             24690000
247000                 GIVING PV-BLOCK-NUMBER                           24700000
247100                 REMAINDER PV-REMAINDER                           24710000
247200             IF  PV-REMAINDER > ZERO                              24720000
247300                 ADD +1 TO PV-BLOCK-NUMBER                        24730000
247400             END-IF                                               24740000
247500             MOVE +1    TO ASC-BLK-SUB                            24750000
247600             PERFORM 4410-READ-TEMP-STORAGE                       24760000
247700             ADD +1     TO ASC-BLK-SUB                            24770000
247800                           PV-BLOCK-NUMBER                        24780000
247900             PERFORM 4410-READ-TEMP-STORAGE                       24790000
248000     END-IF.                                                      24800000
248100     MOVE +1            TO ASC-BLK-SUB.                           24810000
248200     COMPUTE ASC-ITEM-SUB =                                       24820000
248300         ((PV-TOP-ITEM - ASC-LIST-ITEM-NUMBER (1 1))              24830000
248400         + PC-ITEMS-PER-PANEL).                                   24840000
248500*                                                                 24850000
248600     IF  ASC-ITEM-SUB > PC-ITEMS-PER-PANEL                        24860000
248700         ADD +1         TO ASC-BLK-SUB                            24870000
248800         SUBTRACT PC-ITEMS-PER-PANEL FROM ASC-ITEM-SUB            24880000
248900     END-IF.                                                      24890000
249000*                                                                 24900000
249100     COMPUTE ASC-ITEM-AT-BOT-OF-PANEL =                           24910000
249200         ((PV-TOP-ITEM + PC-ITEMS-PER-PANEL) - 1).                24920000
249300     PERFORM 4430-CHECK-FOR-BEGIN-AND-END.                        24930000
249400     PERFORM 4420-FORMAT-LIST-LINES                               24940000
249500         VARYING PV-SUB                                           24950000
249600         FROM PC-ITEMS-PER-PANEL BY -1                            24960000
249700         UNTIL PV-SUB < +1.                                       24970000
249800*                                                                 24980000
249900     COMPUTE ASC-ITEMS-DISPLAYED =                                24990000
250000         ((ASC-ITEM-AT-BOT-OF-PANEL - PV-TOP-ITEM) + 1).          25000000
250100     MOVE PV-TOP-ITEM              TO ASC-ITEM-AT-TOP-OF-PANEL    25010000
250200                                      ASTRTITO.                   25020000
250300     MOVE ASC-ITEM-AT-BOT-OF-PANEL TO AENDITO.                    25030000
250400     MOVE ASC-NUMBER-OF-ITEMS-READ TO ATOTITO.                    25040000
250500     MOVE ASC-NUMBER-OF-SELECTED-ITEMS                            25050000
250600                                   TO ASELITO.                    25060000
250700                                                                  25070000
250800     MOVE ASC-OPER-NBR       TO DK-OPER-UNT-ID                    25080000
250900                                AOPERO.                           25090000
251000     EXEC SQL                                                     25100000
251100          SELECT  LOC_NM                                          25110000
251200            INTO  :XLT00010-LOC-NM                                25120000
251300            FROM  XLT_LOC                                         25130000
251400           WHERE  LOC_NBR     =  :DK-OPER-UNT-ID                  25140000
251500     END-EXEC.                                                    25150000
251600     EVALUATE TRUE                                                25160000
251700         WHEN SQLCODE = +0                                        25170000
251800             MOVE XLT00010-LOC-NM    TO  ASC-OPER-NAME            25180000
251900         WHEN OTHER                                               25190000
252000             MOVE SPACES             TO  ASC-OPER-NAME            25200000
252100     END-EVALUATE.                                                25210000
252200     MOVE ASC-OPER-NAME              TO ADESCO.                   25220000
252300     MOVE DK-BUSN-DATE               TO ADATEO.                   25230000
252400     MOVE ASC-DISPLAY-TITLE          TO ATITLEO.                  25240000
252500     MOVE ASC-3RD-UNITS              TO DK-NUMBER-FORMAT.         25250000
252600     MOVE DK-NUMBER-FORMAT           TO A3TOTLO.                  25260000
252700     MOVE ASC-1ST-UNITS              TO DK-NUMBER-FORMAT.         25270000
252800     MOVE DK-NUMBER-FORMAT           TO A1TOTLO.                  25280000
252900     MOVE ASC-2ND-UNITS              TO DK-NUMBER-FORMAT.         25290000
253000     MOVE DK-NUMBER-FORMAT           TO A2TOTLO.                  25300000
253100     MOVE ASC-TOT-UNITS              TO DK-NUMBER-FORMAT.         25310000
253200     MOVE DK-NUMBER-FORMAT           TO ATTOTLO.                  25320000
253300                                                                  25330000
253400     IF  DP020-MSG-NUMBER-X = SPACE                               25340000
253500         IF  ASC-ITEM-AT-BOT-OF-PANEL < ASC-NUMBER-OF-ITEMS-READ  25350000
253600*            --- MORE ITEMS TO DISPLAY ----                       25360000
253700             MOVE PC-TSYMSG-00279  TO DP020-MSG-NUMBER            25370000
253800             SET DP020-MSG-INFORMATIONAL TO TRUE                  25380000
253900         END-IF                                                   25390000
254000     END-IF.                                                      25400000
254100                                                                  25410000
254200*----------------------------------------------------------------*25420000
254300*    READ A BLOCK FROM TEMPORARY STORAGE INTO THE ARRAY.         *25430000
254400*----------------------------------------------------------------*25440000
254500 4410-READ-TEMP-STORAGE.                                          25450000
254600                                                                  25460000
254700     EXEC CICS                                                    25470000
254800         READQ TS                                                 25480000
254900             QUEUE (ASC-LIST-QUEUE-NAME)                          25490000
255000             INTO  (ASC-BLOCK-ENTRIES(ASC-BLK-SUB))               25500000
255100             ITEM  (PV-BLOCK-NUMBER)                              25510000
255200             RESP  (PV-CICS-RESP)                                 25520000
255300     END-EXEC.                                                    25530000
255400                                                                  25540000
255500     IF  ((PV-CICS-RESP = DFHRESP (NORMAL))                       25550000
255600       OR (PV-CICS-RESP = DFHRESP (ITEMERR)))                     25560000
255700         CONTINUE                                                 25570000
255800     ELSE                                                         25580000
255900         SET DP013-CICS-ABEND     TO TRUE                         25590000
256000         SET DP013-NO-ROLLBACK    TO TRUE                         25600000
256100         MOVE '4410-READ-TEMP-STORAGE'                            25610000
256200                                  TO DP013-PARAGRAPH              25620000
256300         MOVE 'ERROR TRYING TO READ FROM TEMP STORAGE QUEUE'      25630000
256400                                  TO DP013-MESSAGE-TEXT(1)        25640000
256500         PERFORM DP013-0000-PROCESS-ABEND                         25650000
256600     END-IF.                                                      25660000
256700                                                                  25670000
256800     SET ASC-BLOCK-NOT-MODIFIED(ASC-BLK-SUB) TO TRUE.             25680000
256900*                                                                 25690000
257000     IF  PV-CICS-RESP = DFHRESP (ITEMERR)                         25700000
257100         INITIALIZE ASC-BLOCK-ENTRIES (ASC-BLK-SUB)               25710000
257200     END-IF.                                                      25720000
257300                                                                  25730000
257400*----------------------------------------------------------------*25740000
257500*    PROCESS THE ITEMS IN THE ARRAY AND MOVE THEM TO THE MAP.    *25750000
257600*----------------------------------------------------------------*25760000
257700 4420-FORMAT-LIST-LINES.                                          25770000
257800     IF  ASC-ITEM-AT-BOT-OF-PANEL > ASC-NUMBER-OF-ITEMS-READ      25780000
257900         SUBTRACT +1 FROM ASC-ITEM-AT-BOT-OF-PANEL                25790000
258000*        MOVE DP015-ASK-DRK-OFF  TO MR-SELECTA (PV-SUB)           25800000
258100*        MOVE DP015-HL-OFF       TO MR-SELECTH (PV-SUB)           25810000
258200*        MOVE SPACE              TO MR-SELECTI (PV-SUB)           25820000
258300*                                   MR-ACTION (PV-SUB)            25830000
258400         MOVE SPACE              TO MR-PROC-AREA  (PV-SUB)        25840000
258500                                    MR-PO-NBR     (PV-SUB)        25850000
258600                                    MR-PO-RCVR    (PV-SUB)        25860000
258700                                    MR-UNITS      (PV-SUB)        25870000
258710* EA 06/15/2010                                                   25871000
258800                                    MR-CTNWK      (PV-SUB)        25880000
258810* EA 06/15/2010                                                   25881000
258900                                    MR-RETAIL     (PV-SUB)        25890000
259000                                    MR-SHIFT      (PV-SUB)        25900000
259100                                    MR-MISDIRECT  (PV-SUB)        25910000
259200     ELSE                                                         25920000
259300*        IF  ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)      25930000
259400*                                                  > SPACE        25940000
259500*            MOVE ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB) 25950000
259600*                                TO MR-SELECTI (PV-SUB)           25960000
259700*        ELSE                                                     25970000
259800*            MOVE ASC-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)      25980000
259900*                                TO MR-SELECTI (PV-SUB)           25990000
260000*        END-IF                                                   26000000
260100         IF  DP030-SET-CURSOR-TRAILER                             26010000
260200             IF  ((ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)26020000
260300                 > SPACE)                                         26030000
260400               OR (PV-SUB = 1))                                   26040000
260500                SET DP030-SET-CURSOR-APPL-1 TO TRUE               26050000
260600*               MOVE -1               TO MR-SELECTL (PV-SUB)      26060000
260700             END-IF                                               26070000
260800         END-IF                                                   26080000
260900*                                                                 26090000
261000*        MOVE ASC-ACTION (ASC-BLK-SUB ASC-ITEM-SUB)               26100000
261100*                                          TO MR-ACTION (PV-SUB)  26110000
261200         MOVE ASC-AREA (ASC-BLK-SUB ASC-ITEM-SUB)                 26120000
261300                                        TO  MR-PROC-AREA (PV-SUB) 26130000
261400         MOVE ASC-PONBR (ASC-BLK-SUB ASC-ITEM-SUB)                26140000
261500                                        TO MR-PO-NBR-N (PV-SUB)   26150000
261600         MOVE ASC-PORCVR (ASC-BLK-SUB ASC-ITEM-SUB)               26160000
261700                                        TO MR-PO-RCVR-N (PV-SUB)  26170000
261800         MOVE ASC-UNITSWRKD (ASC-BLK-SUB ASC-ITEM-SUB)            26180000
261900                                        TO MR-UNITS-N (PV-SUB)    26190000
261910* EA 06/15/2010                                                   26191000
262000         MOVE ASC-CTNWRKD (ASC-BLK-SUB ASC-ITEM-SUB)              26200000
262100                                        TO MR-CTNWK-N (PV-SUB)    26210000
262110* EA 06/15/2010                                                   26211000
262200         MOVE ASC-RETAILDLS (ASC-BLK-SUB ASC-ITEM-SUB)            26220000
262300                                         TO MR-RETAIL-N(PV-SUB)   26230000
262400         MOVE ASC-SHIFTWRKD(ASC-BLK-SUB ASC-ITEM-SUB)             26240000
262500                                        TO MR-SHIFT (PV-SUB)      26250000
262600         MOVE ASC-MISDRCTS (ASC-BLK-SUB ASC-ITEM-SUB)             26260000
262700                                         TO MR-MISDIRECT(PV-SUB)  26270000
262800     END-IF.                                                      26280000
262900     SUBTRACT +1 FROM ASC-ITEM-SUB                                26290000
263000     IF  ASC-ITEM-SUB < + 1                                       26300000
263100         MOVE PC-ITEMS-PER-PANEL TO ASC-ITEM-SUB                  26310000
263200         MOVE +1                 TO ASC-BLK-SUB                   26320000
263300     END-IF.                                                      26330000
263400                                                                  26340000
263500******************************************************************26350000
263600** IF A BEGINNING OF RANGE WAS SPECIFIED, MAKE SURE AN END OF   **26360000
263700** RANGE WAS SPECIFIED AND VICE-VERSA.  IF ONE IS MISSING,      **26370000
263800** ISSUE A WARNING.                                             **26380000
263900******************************************************************26390000
264000 4430-CHECK-FOR-BEGIN-AND-END.                                    26400000
264100     IF  ASC-START-OF-SELECTED-RANGE > ZERO                       26410000
264200         IF  ASC-END-OF-SELECTED-RANGE = ZERO                     26420000
264300*            -- NO END-OF-RANGE SPECFIED ---                      26430000
264400             MOVE PC-TSYMSG-00051  TO DP020-MSG-NUMBER            26440000
264500             SET DP020-MSG-WARNING TO TRUE                        26450000
264600             PERFORM 4431-POSITION-AT-WARNING                     26460000
264700         END-IF                                                   26470000
264800     ELSE                                                         26480000
264900         IF  ASC-END-OF-SELECTED-RANGE > ZERO                     26490000
265000*            -- NO BEGINNING-OF-RANGE SPECFIED ---                26500000
265100             MOVE PC-TSYMSG-00053  TO DP020-MSG-NUMBER            26510000
265200             SET DP020-MSG-WARNING TO TRUE                        26520000
265300             PERFORM 4431-POSITION-AT-WARNING                     26530000
265400         END-IF                                                   26540000
265500     END-IF.                                                      26550000
265600******************************************************************26560000
265700** ONCE IT HAS BEEN DETERMINED THAT A WARNING IS TO BE ISSUED,  **26570000
265800** DETERMINE IF EITHER THE BEGINNING OF RANGE OR END OF RANGE   **26580000
265900** IS ON THE CURRENT SCREEN.  IF IT IS, HIGHLIGHT IT AND        **26590000
266000** POSITION THE CURSOR THERE.                                   **26600000
266100******************************************************************26610000
266200 4431-POSITION-AT-WARNING.                                        26620000
266300     COMPUTE PV-SUB = ASC-START-OF-SELECTED-RANGE                 26630000
266400                    - PV-TOP-ITEM + 1.                            26640000
266500     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      26650000
266600         CONTINUE                                                 26660000
266700*    ELSE                                                         26670000
266800*        SET DP030-SET-CURSOR-APPL-1 TO TRUE                      26680000
266900*        MOVE -1                   TO MR-SELECTL (PV-SUB)         26690000
267000*        MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         26700000
267100*        MOVE DP015-YELLOW         TO MR-SELECTC (PV-SUB)         26710000
267200     END-IF.                                                      26720000
267300*                                                                 26730000
267400     COMPUTE PV-SUB = ASC-END-OF-SELECTED-RANGE                   26740000
267500                    - PV-TOP-ITEM + 1.                            26750000
267600     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      26760000
267700         CONTINUE                                                 26770000
267800*    ELSE                                                         26780000
267900*        SET DP030-SET-CURSOR-APPL-1 TO TRUE                      26790000
268000*        MOVE -1                   TO MR-SELECTL (PV-SUB)         26800000
268100*        MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         26810000
268200*        MOVE DP015-YELLOW         TO MR-SELECTC (PV-SUB)         26820000
268300     END-IF.                                                      26830000
268400                                                                  26840000
268500*----------------------------------------------------------------*26850000
268600* PREPARE THE SELECTED ITEMS TEMP STORAGE QUEUE.  MOVE ALL SEL-  *26860000
268700* ECTED ITEMS FROM THE LIST TEMP STORAGE QUEUE TO THE LAYOUT     *26870000
268800* FOR THE SELECTED ITEMS QUEUE.                                  *26880000
268900*                                                                *26890000
269000* FIRST, DELETE THE SELECTION QUEUE, NEXT LOAD THE SELECTION     *26900000
269100* QUEUE RECORD.  FINALLY, WRITE THE SELECTION QUEUE ITEM WHEN    *26910000
269200* THE ARRAY IS FULL.                                             *26920000
269300*----------------------------------------------------------------*26930000
269400 5000-PREPARE-SEL-QUEUE.                                          26940000
269500                                                                  26950000
269600     MOVE +1                   TO  ASC-BLK-SUB.                   26960000
269700     PERFORM 5100-WRITE-TEMP-STORAGE.                             26970000
269800     ADD +1                    TO  ASC-BLK-SUB.                   26980000
269900     PERFORM 5100-WRITE-TEMP-STORAGE.                             26990000
270000                                                                  27000000
270100     MOVE ASC-SEL-QUEUE-NAME   TO  PC214-SEL-QUEUE-NAME.          27010000
270200     PERFORM 6010-DELETE-SEL-QUEUE.                               27020000
270300                                                                  27030000
270400     SET ASC-UPDATE-TSQ        TO  TRUE.                          27040000
270500                                                                  27050000
270600     SET PC215-IDX             TO  1.                             27060000
270700     MOVE ZERO                 TO PC214-NUMBER-OF-TS-ITEMS.       27070000
270800     INITIALIZE PC215-SELECTED-ITEM-ARRAY.                        27080000
270900                                                                  27090000
271000     PERFORM 5200-FILL-SEL-QUEUE-RECORD                           27100000
271100             VARYING PV-ITEM                                      27110000
271200             FROM 1 BY 1                                          27120000
271300             UNTIL PV-ITEM GREATER ASC-HIGHEST-BLOCK-WRITTEN.     27130000
271400                                                                  27140000
271500     IF  PC215-IDX > 1                                            27150000
271600         PERFORM 5205-WRITE-SEL-QUEUE                             27160000
271700         ADD +1                TO PC214-NUMBER-OF-TS-ITEMS        27170000
271800     END-IF.                                                      27180000
271900*----------------------------------------------------------------*27190000
272000*    WRITE A NEW BLOCK FROM THE ARRAY TO TEMPORARY STORAGE.      *27200000
272100*    REWRITE AN EXISITING BLOCK ONLY IF IT HAS BEEN MODIFIED.    *27210000
272200*----------------------------------------------------------------*27220000
272300 5100-WRITE-TEMP-STORAGE.                                         27230000
272400     MOVE ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB 1)                     27240000
272500                                   TO PV-LIST-ITEM-NUMBER.        27250000
272600     COMPUTE PV-BLOCK-NUMBER =                                    27260000
272700         1 + ((PV-LIST-ITEM-NUMBER - 1) / PC-ITEMS-PER-PANEL).    27270000
272800                                                                  27280000
272900     IF (PV-BLOCK-NUMBER < ASC-HIGHEST-BLOCK-WRITTEN)             27290000
273000     OR (PV-BLOCK-NUMBER = ASC-HIGHEST-BLOCK-WRITTEN)             27300000
273100         IF  ASC-BLOCK-MODIFIED(ASC-BLK-SUB)                      27310000
273200             PERFORM 5105-REWRITE-ASC-LISTQ                       27320000
273300         END-IF                                                   27330000
273400     ELSE                                                         27340000
273500         COMPUTE PV-HIGHEST-BLOCK-WRITTEN =                       27350000
273600         ASC-HIGHEST-BLOCK-WRITTEN + 1                            27360000
273700         PERFORM 5110-WRITE-ASC-LISTQ                             27370000
273800         ADD +1                    TO ASC-HIGHEST-BLOCK-WRITTEN   27380000
273900     END-IF.                                                      27390000
274000                                                                  27400000
274100     SET ASC-BLOCK-NOT-MODIFIED(ASC-BLK-SUB) TO TRUE.             27410000
274200                                                                  27420000
274300******************************************************************27430000
274400** REWRITE THE LIST TEMP STORAGE QUEUE FROM THE APPLICATION-    **27440000
274500** SPECIFIC COMMAREA.                                           **27450000
274600******************************************************************27460000
274700 5105-REWRITE-ASC-LISTQ.                                          27470000
274800     EXEC CICS                                                    27480000
274900         WRITEQ TS                                                27490000
275000             QUEUE (ASC-LIST-QUEUE-NAME)                          27500000
275100             FROM  (ASC-BLOCK-ENTRIES(ASC-BLK-SUB))               27510000
275200             ITEM  (PV-BLOCK-NUMBER)                              27520000
275300             REWRITE                                              27530000
275400             RESP  (PV-CICS-RESP)                                 27540000
275500     END-EXEC.                                                    27550000
275600                                                                  27560000
275700     IF  PV-CICS-RESP = DFHRESP(NORMAL)                           27570000
275800         CONTINUE                                                 27580000
275900     ELSE                                                         27590000
276000         SET DP013-CICS-ABEND            TO TRUE                  27600000
276100         SET DP013-NO-ROLLBACK           TO TRUE                  27610000
276200         MOVE '5105-REWRITE-ASC-LISTQ'   TO DP013-PARAGRAPH       27620000
276300         MOVE 'ATTEMPTING TO REWRITE LIST TEMP STORAGE QUEUE'     27630000
276400                                         TO DP013-MESSAGE-TEXT(1) 27640000
276500         PERFORM DP013-0000-PROCESS-ABEND                         27650000
276600     END-IF.                                                      27660000
276700                                                                  27670000
276800******************************************************************27680000
276900** WRITE THE LIST TEMP STORAGE QUEUE FROM THE APPLICATION-      **27690000
277000** SPECIFIC COMMAREA.                                           **27700000
277100******************************************************************27710000
277200 5110-WRITE-ASC-LISTQ.                                            27720000
277300     EXEC CICS                                                    27730000
277400         WRITEQ TS                                                27740000
277500             QUEUE (ASC-LIST-QUEUE-NAME)                          27750000
277600             FROM  (ASC-BLOCK-ENTRIES(ASC-BLK-SUB))               27760000
277700             ITEM  (PV-BLOCK-NUMBER)                              27770000
277800             RESP  (PV-CICS-RESP)                                 27780000
277900     END-EXEC.                                                    27790000
278000     IF  PV-CICS-RESP NOT = DFHRESP (NORMAL)                      27800000
278100         SET DP013-CICS-ABEND      TO TRUE                        27810000
278200         SET DP013-NO-ROLLBACK     TO TRUE                        27820000
278300         MOVE '5110-WRITE-ASC-LISTQ'                              27830000
278400                                   TO DP013-PARAGRAPH             27840000
278500         MOVE 'ATTEMPTING TO DELETE TEMP STORAGE QUEUE'           27850000
278600                                   TO DP013-MESSAGE-TEXT(1)       27860000
278700         PERFORM DP013-0000-PROCESS-ABEND                         27870000
278800     END-IF.                                                      27880000
278900                                                                  27890000
279000*----------------------------------------------------------------*27900000
279100* READ A LIST QUEUE RECORD AND MOVE THE KEYS OF SELECTED OBJECTS *27910000
279200* TO THE SELECTED ITEMS TEMP STORAGE QUEUE RECORD.               *27920000
279300*----------------------------------------------------------------*27930000
279400 5200-FILL-SEL-QUEUE-RECORD.                                      27940000
279500                                                                  27950000
279600     PERFORM 6112-READ-LIST-QUEUE.                                27960000
279700                                                                  27970000
279800     IF  PV-CICS-RESP EQUAL DFHRESP(NORMAL)                       27980000
279900         PERFORM                                                  27990000
280000         VARYING LQW-IDX                                          28000000
280100         FROM 1 BY 1                                              28010000
280200         UNTIL LQW-IDX GREATER THAN PC-ITEMS-PER-PANEL            28020000
280300           OR  LQW-LIST-ITEM-NUMBER (LQW-IDX) EQUAL ZERO          28030000
280400                                                                  28040000
280500             IF  LQW-SELECT (LQW-IDX)                             28050000
280600                 MOVE LQW-LIST-ITEM-NUMBER (LQW-IDX)              28060000
280700                                   TO PC215-ITEM (PC215-IDX)      28070000
280800                 MOVE SPACE        TO PC215-ACTION-SW (PC215-IDX) 28080000
280900                                                                  28090000
281000                 MOVE LQW-PROCESS-AREA (LQW-IDX)                  28100000
281100                                        TO PC215-AREA (PC215-IDX) 28110000
281200                                                                  28120000
281300                 SET PC215-IDX UP BY 1                            28130000
281400                 IF  PC215-IDX > PC215-MAX-ITEMS                  28140000
281500                     PERFORM 5205-WRITE-SEL-QUEUE                 28150000
281600                     ADD +1        TO PC214-NUMBER-OF-TS-ITEMS    28160000
281700                     INITIALIZE PC215-SELECTED-ITEM-ARRAY         28170000
281800                     SET PC215-IDX TO  1                          28180000
281900                 END-IF                                           28190000
282000             END-IF                                               28200000
282100         END-PERFORM                                              28210000
282200     END-IF.                                                      28220000
282300                                                                  28230000
282400*----------------------------------------------------------------*28240000
282500*    WRITE THE SELECTED ITEMS TEMP STORAGE QUEUE.                *28250000
282600*----------------------------------------------------------------*28260000
282700 5205-WRITE-SEL-QUEUE.                                            28270000
282800                                                                  28280000
282900     MOVE ASC-NUMBER-OF-SELECTED-ITEMS                            28290000
283000                                   TO PC215-SELECTED-ITEMS.       28300000
283100                                                                  28310000
283200     EXEC CICS                                                    28320000
283300          WRITEQ TS                                               28330000
283400              QUEUE (ASC-SEL-QUEUE-NAME)                          28340000
283500              FROM  (PC215-SELECT-RECORD)                         28350000
283600              ITEM  (PV-SEL-QUEUE-ITEM)                           28360000
283700              RESP  (PV-CICS-RESP)                                28370000
283800     END-EXEC.                                                    28380000
283900                                                                  28390000
284000     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          28400000
284100         CONTINUE                                                 28410000
284200     ELSE                                                         28420000
284300         SET DP013-CICS-ABEND      TO TRUE                        28430000
284400         SET DP013-NO-ROLLBACK     TO TRUE                        28440000
284500         MOVE '5205-WRITE-SEL-QUEUE'                              28450000
284600                                   TO DP013-PARAGRAPH             28460000
284700         MOVE 'ATTEMPTING TO WRITE SELECTED ITEMS QUEUE'          28470000
284800                                   TO DP013-MESSAGE-TEXT(1)       28480000
284900         PERFORM DP013-0000-PROCESS-ABEND                         28490000
285000     END-IF.                                                      28500000
285100******************************************************************28510000
285200** WHEN RETURNING TO THIS TRANSACTION FROM ANOTHER TRANSACTION, **28520000
285300** SETUP THE ARRAY AS IT WAS WHEN WE HAD LEFT PREVIOUSLY.  EDIT **28530000
285400** THE SELECTIONS MADE AT THAT TIME AND DISPLAY THE PANEL TO    **28540000
285500** THE USER.                                                    **28550000
285600******************************************************************28560000
285700 6000-REFRESH-PANEL-FROM-TEMP.                                    28570000
285800     IF  ASC-UPDATE-TSQ                                           28580000
285900         SET ASC-NO-TSQ-UPDATE TO TRUE                            28590000
286000         MOVE ZERO                 TO PV-SAVE-ITEM                28600000
286100                                      PV-SEL-QUEUE-ITEM           28610000
286200         MOVE ASC-NUMBER-OF-SELECTED-ITEMS                        28620000
286300                                   TO PV-HOLD-SELECTED-ITEMS      28630000
286400         MOVE +1                   TO PV-ITEMS-PROCESSED          28640000
286500         PERFORM 6100-UPDATE-TSQ                                  28650000
286600             UNTIL PV-ITEMS-PROCESSED >                           28660000
286700                                     PV-HOLD-SELECTED-ITEMS       28670000
286800         INITIALIZE ASC-BLOCK-ENTRIES (1)                         28680000
286900                    ASC-BLOCK-ENTRIES (2)                         28690000
287000     END-IF.                                                      28700000
287100                                                                  28710000
287200*----------------------------------------------------------------*28720000
287300*    DELETE THE SELECTED ITEMS TEMP STORAGE QUEUE.               *28730000
287400*----------------------------------------------------------------*28740000
287500 6010-DELETE-SEL-QUEUE.                                           28750000
287600                                                                  28760000
287700     EXEC CICS                                                    28770000
287800         DELETEQ TS                                               28780000
287900             QUEUE (ASC-SEL-QUEUE-NAME)                           28790000
288000             RESP  (PV-CICS-RESP)                                 28800000
288100     END-EXEC.                                                    28810000
288200*                                                                 28820000
288300     IF ((PV-CICS-RESP = DFHRESP(NORMAL)) OR                      28830000
288400        (PV-CICS-RESP = DFHRESP(QIDERR)))                         28840000
288500         CONTINUE                                                 28850000
288600     ELSE                                                         28860000
288700         SET DP013-CICS-ABEND TO TRUE                             28870000
288800         SET DP013-NO-ROLLBACK TO TRUE                            28880000
288900         MOVE '6010-DELETE-SEL-QUEUE'                             28890000
289000                        TO DP013-PARAGRAPH                        28900000
289100         MOVE 'ERROR TRYING TO DELETE SELECTION TS QUEUE'         28910000
289200                        TO DP013-MESSAGE-TEXT (1)                 28920000
289300         PERFORM DP013-0000-PROCESS-ABEND                         28930000
289400     END-IF.                                                      28940000
289500                                                                  28950000
289600*----------------------------------------------------------------*28960000
289700*    INCREMENT THE TSQ ITEM NUMBER AND READ THE LIST QUEUE.      *28970000
289800*    LOOP THROUGH THE LIST QUEUE TO OBTAIN THE LINE ITEM NUMBER  *28980000
289900*    TO BE USED TO UPDATE (DESELECT) THE CORRECT LINE ITEM IN    *28990000
290000*    THE TEMP QUEUE.                                             *29000000
290100*----------------------------------------------------------------*29010000
290200 6100-UPDATE-TSQ.                                                 29020000
290300                                                                  29030000
290400     ADD 1                     TO  PV-SEL-QUEUE-ITEM.             29040000
290500     PERFORM 6150-READ-SEL-QUEUE.                                 29050000
290600     PERFORM                                                      29060000
290700         VARYING PC215-IDX                                        29070000
290800         FROM 1 BY 1                                              29080000
290900         UNTIL ((PV-ITEMS-PROCESSED > PV-HOLD-SELECTED-ITEMS)     29090000
291000         OR (PC215-IDX GREATER THAN PC215-MAX-ITEMS))             29100000
291100         IF  PC215-ACTION-SW (PC215-IDX) > SPACE                  29110000
291200             PERFORM 6110-PROCESS-ITEMS                           29120000
291300         END-IF                                                   29130000
291400         ADD +1                TO PV-ITEMS-PROCESSED              29140000
291500     END-PERFORM.                                                 29150000
291600     PERFORM 6111-WRITE-LIST-QUEUE.                               29160000
291700                                                                  29170000
291800*----------------------------------------------------------------*29180000
291900*    READ THE LIST QUEUE RECORD.                                 *29190000
292000*----------------------------------------------------------------*29200000
292100 6150-READ-SEL-QUEUE.                                             29210000
292200                                                                  29220000
292300     EXEC CICS                                                    29230000
292400          READQ TS                                                29240000
292500              QUEUE (ASC-SEL-QUEUE-NAME)                          29250000
292600              INTO  (PC215-SELECT-RECORD)                         29260000
292700              ITEM  (PV-SEL-QUEUE-ITEM)                           29270000
292800              RESP  (PV-CICS-RESP)                                29280000
292900     END-EXEC.                                                    29290000
293000*                                                                 29300000
293100     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          29310000
293200         CONTINUE                                                 29320000
293300     ELSE                                                         29330000
293400         SET DP013-CICS-ABEND      TO  TRUE                       29340000
293500         SET DP013-NO-ROLLBACK     TO  TRUE                       29350000
293600         MOVE '6150-READ-SEL-QUEUE' TO  DP013-PARAGRAPH           29360000
293700         MOVE 'ATTEMPTING TO READ SELECTED ITEMS QUEUE'           29370000
293800                                   TO  DP013-MESSAGE-TEXT(1)      29380000
293900         PERFORM DP013-0000-PROCESS-ABEND                         29390000
294000     END-IF.                                                      29400000
294100                                                                  29410000
294200*----------------------------------------------------------------*29420000
294300*    CALCULATE THE TEMP QUEUE ITEM THAT MUST BE READ AND READ IT.*29430000
294400*    REWRITE THE CURRENT TEMP QUEUE ITEM IF NECESSARY.  CALCULATE*29440000
294500*    THE LINE ITEM OCCURENCE AND UPDATE (DESELECT) IT.           *29450000
294600*----------------------------------------------------------------*29460000
294700 6110-PROCESS-ITEMS.                                              29470000
294800                                                                  29480000
294900     COMPUTE PV-ITEM = 1 + ((PC215-ITEM (PC215-IDX) - 1)          29490000
295000                     / PC-ITEMS-PER-PANEL).                       29500000
295100                                                                  29510000
295200     IF  PV-ITEM NOT EQUAL PV-SAVE-ITEM                           29520000
295300         IF  PV-SAVE-ITEM NOT EQUAL ZERO                          29530000
295400             PERFORM 6111-WRITE-LIST-QUEUE                        29540000
295500         END-IF                                                   29550000
295600         MOVE PV-ITEM          TO PV-SAVE-ITEM                    29560000
295700                                                                  29570000
295800         PERFORM 6112-READ-LIST-QUEUE                             29580000
295900         IF  PV-CICS-RESP NOT EQUAL DFHRESP(NORMAL)               29590000
296000             CONTINUE                                             29600000
296100         END-IF                                                   29610000
296200     END-IF.                                                      29620000
296300                                                                  29630000
296400     COMPUTE PV-SUB = (PC215-ITEM (PC215-IDX)                     29640000
296500                    - LQW-LIST-ITEM-NUMBER (1)) + 1.              29650000
296600     SET LQW-DESELECT (PV-SUB) TO    TRUE                         29660000
296700     MOVE LQW-SELECTED-SW (PV-SUB)                                29670000
296800                               TO LQW-TEMP-SELECTED-SW (PV-SUB).  29680000
296900                                                                  29690000
297000     EVALUATE TRUE                                                29700000
297100         WHEN PC215-INQ (PC215-IDX)                               29710000
297200              MOVE PC-INQ      TO LQW-ACTION (PV-SUB)             29720000
297300                                                                  29730000
297400         WHEN PC215-UPD (PC215-IDX)                               29740000
297500              MOVE PC-UPD      TO LQW-ACTION (PV-SUB)             29750000
297600                                                                  29760000
297700         WHEN PC215-DEL (PC215-IDX)                               29770000
297800              MOVE PC-DEL      TO LQW-ACTION (PV-SUB)             29780000
297900                                                                  29790000
298000         WHEN PC215-ERR (PC215-IDX)                               29800000
298100              MOVE PC-ERR      TO LQW-ACTION (PV-SUB)             29810000
298200     END-EVALUATE.                                                29820000
298300                                                                  29830000
298400     SUBTRACT 1 FROM ASC-NUMBER-OF-SELECTED-ITEMS.                29840000
298500                                                                  29850000
298600*----------------------------------------------------------------*29860000
298700*    WRITE THE TS QUEUE RECORD JUST UPDATED IN C600.             *29870000
298800*----------------------------------------------------------------*29880000
298900 6111-WRITE-LIST-QUEUE.                                           29890000
299000                                                                  29900000
299100     EXEC CICS                                                    29910000
299200         WRITEQ TS                                                29920000
299300             QUEUE (ASC-LIST-QUEUE-NAME)                          29930000
299400             FROM  (LQW-LIST-QUEUE-WORK-AREA)                     29940000
299500             ITEM  (PV-SAVE-ITEM)                                 29950000
299600             REWRITE                                              29960000
299700             RESP  (PV-CICS-RESP)                                 29970000
299800     END-EXEC.                                                    29980000
299900*                                                                 29990000
300000     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          30000000
300100         CONTINUE                                                 30010000
300200     ELSE                                                         30020000
300300         SET DP013-CICS-ABEND  TO  TRUE                           30030000
300400         SET DP013-NO-ROLLBACK TO  TRUE                           30040000
300500         MOVE '6111-WRITE-LIST-QUEUE'                             30050000
300600                               TO  DP013-PARAGRAPH                30060000
300700         MOVE 'ATTEMPTING TO REWRITE LIST QUEUE'                  30070000
300800                               TO  DP013-MESSAGE-TEXT(1)          30080000
300900         PERFORM DP013-0000-PROCESS-ABEND                         30090000
301000     END-IF.                                                      30100000
301100                                                                  30110000
301200*----------------------------------------------------------------*30120000
301300*    READ THE TEMPORARY STORAGE QUEUE INTO A TEMPORARY WORK AREA.*30130000
301400*----------------------------------------------------------------*30140000
301500 6112-READ-LIST-QUEUE.                                            30150000
301600                                                                  30160000
301700     EXEC CICS                                                    30170000
301800         READQ TS                                                 30180000
301900             QUEUE (ASC-LIST-QUEUE-NAME)                          30190000
302000             INTO  (LQW-LIST-QUEUE-WORK-AREA)                     30200000
302100             ITEM  (PV-ITEM)                                      30210000
302200             RESP  (PV-CICS-RESP)                                 30220000
302300     END-EXEC.                                                    30230000
302400*                                                                 30240000
302500     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          30250000
302600         CONTINUE                                                 30260000
302700     ELSE                                                         30270000
302800         SET DP013-CICS-ABEND        TO TRUE                      30280000
302900         SET DP013-NO-ROLLBACK       TO TRUE                      30290000
303000         MOVE '6112-READ-LIST-QUEUE' TO DP013-PARAGRAPH           30300000
303100         MOVE 'ATTEMPTING TO READQ LIST QUEUE'                    30310000
303200                                     TO DP013-MESSAGE-TEXT(1)     30320000
303300         PERFORM DP013-0000-PROCESS-ABEND                         30330000
303400     END-IF.                                                      30340000
303500                                                                  30350000
303600*-----------------------------------------------------------------30360000
303700*  READ THE LIST QUEUE RECORD                                     30370000
303800*-----------------------------------------------------------------30380000
303900 9100-READ-SEL-QUEUE.                                             30390000
304000                                                                  30400000
304100     EXEC CICS                                                    30410000
304200         READQ TS                                                 30420000
304300             QUEUE (ASC-SEL-QUEUE-NAME)                           30430000
304400             INTO  (PC215-SELECT-RECORD)                          30440000
304500             ITEM  (ASC-SEL-ITEM)                                 30450000
304600             RESP  (PV-CICS-RESP)                                 30460000
304700     END-EXEC.                                                    30470000
304800     IF PV-CICS-RESP EQUAL DFHRESP(NORMAL)                        30480000
304900         CONTINUE                                                 30490000
305000     ELSE                                                         30500000
305100         SET DP013-LOGIC-ABEND                                    30510000
305200             DP013-NO-ROLLBACK   TO   TRUE                        30520000
305300         MOVE '9100-READ-SEL-QUEUE' TO   DP013-PARAGRAPH          30530000
305400         MOVE 'ATTEMPTING TO READ THE LIST SELECTIONS TS QUEUE'   30540000
305500                                 TO   DP013-MESSAGE-TEXT (1)      30550000
305600         PERFORM DP013-0000-PROCESS-ABEND                         30560000
305700     END-IF.                                                      30570000
305800                                                                  30580000
305900*-----------------------------------------------------------------30590000
306000* UPDATE AN ITEM IN THE SELECTED ITEMS TEMP STORAGE QUEUE.       *30600000
306100*-----------------------------------------------------------------30610000
306200 9200-REWRITE-SEL-QUEUE.                                          30620000
306300                                                                  30630000
306400     EXEC CICS                                                    30640000
306500          WRITEQ TS                                               30650000
306600              QUEUE  (ASC-SEL-QUEUE-NAME)                         30660000
306700              FROM   (PC215-SELECT-RECORD)                        30670000
306800              ITEM   (ASC-SEL-ITEM)                               30680000
306900              RESP   (PV-CICS-RESP)                               30690000
307000              REWRITE                                             30700000
307100     END-EXEC.                                                    30710000
307200                                                                  30720000
307300     IF  PV-CICS-RESP NOT EQUAL DFHRESP(NORMAL)                   30730000
307400         SET DP013-CICS-ABEND                                     30740000
307500             DP013-NO-ROLLBACK     TO TRUE                        30750000
307600         MOVE '9200-REWRITE-SEL-QUEUE'                            30760000
307700                                   TO DP013-PARAGRAPH             30770000
307800         MOVE 'ATTEMPTING TO REWRITE THE LIST SELECTIONS QUEUE'   30780000
307900                                   TO DP013-MESSAGE-TEXT (1)      30790000
308000         PERFORM DP013-0000-PROCESS-ABEND                         30800000
308100     END-IF.                                                      30810000
308200                                                                  30820000
308300*----------------------------------------------------------------*30830000
308400*    THE DB2 RESOURCE IS NOT AVAILABLE, DISPLAY A MESSAGE ON     *30840000
308500*    THE TERMINAL INDICATING THAT THE RESOURCE IS UNAVAILABLE.   *30850000
308600*----------------------------------------------------------------*30860000
308700 9900-SOFT-ABORT.                                                 30870000
308800                                                                  30880000
308900     EXEC CICS SYNCPOINT                                          30890000
309000          ROLLBACK                                                30900000
309100     END-EXEC.                                                    30910000
309200                                                                  30920000
309300     SET  PS-ERROR                                                30930000
309400          PS-SOFT-ABORT-ERROR                                     30940000
309500          DP020-MSG-FATAL       TO  TRUE.                         30950000
309600                                                                  30960000
309700*----------------------------------------------------------------*30970000
309800*    ABEND PROCESSOR MODULE                                      *30980000
309900*----------------------------------------------------------------*30990000
310000                                                                  31000000
310100     COPY DPPD013.                                                31010000
