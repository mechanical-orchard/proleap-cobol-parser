       ID DIVISION.                                                             
       PROGRAM-ID.   DPKCS301.                                                  
       AUTHOR.       DONALD L WHITE (IBM).                                      
       INSTALLATION. KOHL DEPARTMENT STORES                                     
       ENVIRONMENT DIVISION.                                                    
       DATA DIVISION.                                                           
       WORKING-STORAGE SECTION.                                                 
                                                                                
       77  DISP-MSGS                  PIC 9(8) COMP VALUE 9999.                 
       77  IPSW-TRAN                  PIC X(4) VALUE 'Z301'.                    
       77  RC                         PIC 9(8) COMP.                            
       77  I                          PIC 9(4) COMP.                            
       77  J                          PIC 9(4) COMP.                            
       77  L                          PIC 9(4) COMP.                            
       77  LL                         PIC 9(4) COMP.                            
       77  MAX                        PIC 9(4).                                 
       77  TSQ-READA                  PIC X(80).                                
       77  TSQREC-LENGTH              PIC 9(4) COMP VALUE 80.                   
       77  EXTRA                      PIC 9(4) COMP VALUE 0.                    
       77  WS-RECEIVE                 PIC X(80) VALUE SPACES.                   
       77  WS-LEN                     PIC S9(4) COMP VALUE +80.                 
       77  FIRST-SPACE                PIC 9(4) COMP VALUE 0.                    
       77  ERR                        PIC 9(4) COMP VALUE 0.                    
       77  GWPTR                      PIC S9(8) COMP.                           
       77  DSTAMP                     PIC 9(16) COMP.                           
       77  CLENG                      PIC 9(4) BINARY.                          
       77  S                          PIC 9(4) BINARY VALUE 0.                  
       77  HOLD-QUEUE                 PIC X VALUE SPACE.                        
       01  TCPIPSWQ.                                                            
           05  FILLER                 PIC X(7) VALUE 'TCPIPSW'.                 
           05  TCPIPSWQ-ONE           PIC X(1) VALUE SPACE.                     
       01  TCPCICS-MSG-AREA.                                                    
          02 TCPCICS-MSG-1.                                                     
             05 FILLER                PIC X(1) VALUE SPACES.                    
             05 MSGDATE               PIC 9(8).                                 
             05 FILLER                PIC X(1) VALUE SPACES.                    
             05 MSGTIME               PIC 9(8).                                 
             05 FILLER                PIC X(3) VALUE ' > '.                     
             05 MODULE                PIC X(4) VALUE 'Z301'.                    
             05 FILLER                PIC X(1) VALUE SPACES.                    
          02 TCPCICS-MSG-2.                                                     
             05 MSG-AREA              PIC X(50).                                
          02 MSG-OUT REDEFINES TCPCICS-MSG-2.                                   
             05  CALL-NO              PIC X(10).                                
             05  FIELDXX              PIC X(7).                                 
             05  ERR-CODE             PIC X(8).                                 
             05  FIELDYY              PIC X(7).                                 
             05  RET-CODE             PIC X(10).                                
             05  FILLER               PIC X(8).                                 
                                                                                
       01  SEND-MSG.                                                            
           02  FILLER                 PIC X(6) VALUE X'1140401D4013'.           
           02  FILLER                 PIC X(5) VALUE X'115CF01DF8'.             
           02  SEND-AREA              PIC X(48).                                
           02  FILLER                 PIC X(40) VALUE SPACES.                   
                                                                                
       01  IPUT-HEADER.                                                         
           05 IPUT-CMD                PIC X(4) VALUE 'RSND'.                    
           05 IPUT-STORE-NBR          PIC 9(4)   VALUE 9999.                    
           05 IPUT-BUS-DAY.                                                     
              10 IPUT-BUS-DAY-Y       PIC 9(4)   VALUE 1995.                    
              10 IPUT-BUS-DAY-M       PIC 9(2)   VALUE 1.                       
              10 IPUT-BUS-DAY-D       PIC 9(2)   VALUE 1.                       
           05 IPUT-BATCH-NBR          PIC 9(3)   VALUE 999.                     
           05 IPUT-STATUS             PIC X(4) VALUE SPACES.                    
                                                                                
       01  IPWR-HEADER.                                                         
           05 IPWR-TSQ-MAX            PIC 9(8)   VALUE 99.                      
           05 IPWR-CMD                PIC X(4).                                 
           05 IPWR-TSQ-NAME           PIC X(8) VALUE SPACES.                    
           05 IPWR-STORE-NBR          PIC 9(4)   VALUE 9999.                    
           05 IPWR-BUS-DAY.                                                     
              10 IPWR-BUS-DAY-Y       PIC 9(4)   VALUE 1995.                    
              10 IPWR-BUS-DAY-M       PIC 9(2)   VALUE 1.                       
              10 IPWR-BUS-DAY-D       PIC 9(2)   VALUE 1.                       
           05 IPWR-BATCH-NBR          PIC 9(3)   VALUE 999.                     
           05 IPWR-BATCH-SIZ          PIC 9(8)   VALUE 4.                       
           05 IPWR-DATA-LEN           PIC 9(4)   VALUE 0.                       
           05 IPWR-DATA               PIC X(4096) VALUE SPACES.                 
           05 IPWR-STATUS             PIC X(4) VALUE SPACES.                    
                                                                                
       01  IPRD-HEADER.                                                         
           05 IPRD-CMD                PIC X(4).                                 
           05 IPRD-TSQ-NAME           PIC X(8).                                 
           05 IPRD-STORE-NBR          PIC 9(4)   VALUE 9999.                    
           05 IPRD-BUS-DAY.                                                     
              10 IPRD-BUS-DAY-Y       PIC 9(4)   VALUE 1995.                    
              10 IPRD-BUS-DAY-M       PIC 9(2)   VALUE 1.                       
              10 IPRD-BUS-DAY-D       PIC 9(2)   VALUE 1.                       
           05 IPRD-BATCH-NBR          PIC 9(3)   VALUE 999.                     
           05 IPRD-DATA-LEN           PIC 9(4)   VALUE 1024.                    
           05 IPRD-DATA               PIC X(4096) VALUE SPACES.                 
           05 IPRD-STATUS             PIC X(4) VALUE SPACES.                    
                                                                                
      ***************************************************************           
      *  PARMS FOR TCPIP SOCKETS INTERFACE                          *           
      ***************************************************************           
                                                                                
       77  TCP-TOKEN               PIC X(16) VALUE 'TCPIPIUCVSTREAMS'.          
       77  TOEBCDIC-TOKEN          PIC X(16) VALUE 'TCPIPTOEBCDICXLT'.          
       77  TOASCII-TOKEN           PIC X(16) VALUE 'TCPIPTOASCIIXLAT'.          
       77  RECV-FLAG                  PIC 9(8) BINARY VALUE 0.                  
                                                                                
       01  TCP-BUF.                                                             
           05 FILLER                  PIC X(80) VALUE SPACES.                   
                                                                                
       01  TCPIP-API-PARMS.                                                     
           02  INTAIDNT               PIC X(8) VALUE 'IUCVAPI '.                
           02  INTAMAXS               PIC 9(4) COMP VALUE 251.                  
           02  INTAAPI                PIC 9(4) COMP VALUE 2.                    
           02  INTASUBT.                                                        
               05 SUBTASKNO           PIC X(7) VALUE LOW-VALUES.                
               05 SUBT-CHAR           PIC X VALUE 'S'.                          
           02  INTAF0                 PIC 9(8) COMP VALUE 0.                    
           02  MAX-SOCK-NUM           PIC 9(8) COMP VALUE 0.                    
                                                                                
           02  SELRETC                PIC S9(8) COMP.                           
           02  EZRETC                 PIC S9(8) COMP.                           
           02  EZERRNO                PIC S9(8) COMP.                           
                                                                                
           02  SOCKH0                 PIC 9(4) COMP VALUE 0.                    
           02  SOCKAFIN               PIC 9(8) COMP VALUE 2.                    
           02  SOCKTYPE               PIC 9(8) COMP VALUE 1.                    
           02  SOCKPCOL               PIC 9(8) COMP VALUE 0.                    
           02  SOCKSNO                PIC 9(8) COMP VALUE 0.                    
                                                                                
           02  SSOLEN                 PIC 9(8) COMP VALUE 4.                    
           02  SSOLEVEL               PIC X(4) VALUE X'0000FFFF'.               
           02  SSOOPTNM               PIC 9(8) COMP VALUE 4.                    
           02  SSOOPVAL               PIC X(4) VALUE '1   '.                    
           02  SSOREUSE               PIC 9(8) COMP VALUE 4.                    
                                                                                
           02  BINDNAME.                                                        
               05  BINDAFIN           PIC 9(4) COMP.                            
               05  BINDPORT           PIC 9(4) COMP.                            
               05  BINDIPAD           PIC 9(8) COMP.                            
               05  BINDZERO           PIC 9(16) COMP.                           
                                                                                
           02  LISTF0                 PIC 9(8) COMP.                            
           02  LISTBCKL               PIC 9(8) COMP VALUE 25.                   
                                                                                
           02  ACC0FWRD               PIC 9(8) COMP.                            
           02  ACCNEWS                PIC 9(8) COMP.                            
                                                                                
           02  ACCEPT-ZERO            PIC 9(8) COMP VALUE 0.                    
           02  ACCEPT-NEW             PIC 9(8) COMP.                            
           02  ACCEPT-NAME.                                                     
               03  ACCEPT-AF-INET     PIC 9(4) COMP.                            
               03  ACCEPT-PORT        PIC 9(4) COMP.                            
               03  ACCEPT-IP-ADDR     PIC 9(8) COMP.                            
               03  FILLER             PIC X(8).                                 
                                                                                
      **********************************************************                
      *    SPECIALIZED PARAMETERS FOR CONNECT                  *                
      **********************************************************                
           02  CONN-NAME.                                                       
               05  CONN-AF-INET PIC 9(4) COMP VALUE 2.                          
               05  CONN-PORT    PIC 9(4) COMP.                                  
               05  CONN-IP-ADDR PIC 9(8) COMP.                                  
               05  FILLER       PIC X(8).                                       
                                                                                
                                                                                
       01  X2D-VARIABLES.                                                       
      **********************************************************                
      *    WORKING STORAGE FOR THE X2D CONVERSION ROUTINE      *                
      **********************************************************                
           03  X2CSUB-PARAMETERS.                                               
               05  X2D-IN               JUSTIFIED RIGHT PIC X(8).               
               05  X2D-FW               PIC S9(8) COMP-4.                       
               05  X2D-OUT              REDEFINES X2D-FW.                       
                   07  FILLER           PIC X(2).                               
                   07  X2D-HW           PIC S9(4) COMP-4.                       
      *                                                                         
               05  X2D-INBYTES          PIC X(23)                               
                                       VALUE ' 0123456789ABCDEFABCDEF'.         
               05  X2D-USEBYTES         PIC X(23)                               
            VALUE X'00000102030405060708090A0B0C0D0E0F0A0B0C0D0E0F'.            
               05  X2D-OUT-BYTE         PIC 9 COMP-3.                           
               05  X2D-I                PIC 9 COMP-3.                           
               05  X2D-J                PIC S9(4) COMP-4.                       
               05  FILLER               REDEFINES X2D-J.                        
                   07  FILLER           PIC X.                                  
                   07  X2D-J-CHAR       PIC X.                                  
               05  X2D-K                PIC S9(4) COMP-4.                       
               05  FILLER               REDEFINES X2D-K.                        
                   07  FILLER           PIC X.                                  
                   07  X2D-K-CHAR       PIC X.                                  
                                                                                
       01  ZERO-PARM                  PIC X(16) VALUE IS LOW-VALUES.            
       01  DUMMY-MASK REDEFINES ZERO-PARM.                                      
           05 DUMYMASK                PIC X(8).                                 
           05 ZERO-FLD-8              PIC X(8).                                 
       01  ZERO-FLD REDEFINES ZERO-PARM.                                        
           05 ZERO-FWRD               PIC 9(8)  BINARY.                         
           05 ZERO-HWRD               PIC 9(4)  BINARY.                         
           05 ZERO-DUM                PIC X(10).                                
                                                                                
       01  INITAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!INITIAL IUCV API FAIL- ERRNO ='.                         
           05  INIT-ERRNO             PIC 9(8).                                 
                                                                                
       01  SOCKAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!SOCKET IUCV API FAIL-  ERRNO ='.                         
           05  SOCK-ERRNO             PIC 9(8).                                 
                                                                                
       01  CONNAPI-ERR.                                                         
           05  FILLER                 PIC X(32)                                 
               VALUE '!CONNECT IUCV API FAIL- ERRNO ='.                         
           05  CONN-ERRNO             PIC 9(8).                                 
                                                                                
                                                                                
                                                                                
      ****************************************************************          
                                                                                
       PROCEDURE DIVISION.                                                      
                                                                                
           PERFORM INITIALIZATION THRU INITIALIZATION-EXIT.                     
           EXEC CICS EXTRACT EXIT PROGRAM('EZACIC01') GASET(GWPTR)              
                GALENGTH(L) RESP(RC) END-EXEC.                                  
           IF RC NOT = 0 THEN                                                   
              MOVE 'TCP/IP TRUE INTERFACE NOT ACTIVE' TO SEND-AREA              
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
                                                                                
           EXEC CICS RECEIVE INTO(WS-RECEIVE) LENGTH(WS-LEN)                    
                RESP(RC) END-EXEC.                                              
           IF WS-RECEIVE(1:1) = X'11' THEN                                      
              MOVE 'WRITE STRUCTURE IN PARMS' TO MSG-AREA                       
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
              MOVE SPACES TO TSQ-READA                                          
              MOVE WS-RECEIVE(4:37) TO TSQ-READA                                
              MOVE TSQ-READA TO WS-RECEIVE                                      
           END-IF.                                                              
           MOVE 'PARMS=' TO MSG-AREA.                                           
           MOVE WS-RECEIVE TO MSG-AREA(7:40).                                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           IF WS-RECEIVE(1:4) = 'Z301' THEN                                     
              MOVE WS-RECEIVE(6:31) TO TSQ-READA                                
              MOVE TSQ-READA TO WS-RECEIVE                                      
           END-IF.                                                              
           IF RC NOT = 0 THEN                                                   
              MOVE 'RECV-RC=' TO FIELDXX                                        
              MOVE RC TO ERR-CODE                                               
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
      *       GO TO PGM-EXIT                                                    
           END-IF.                                                              
                                                                                
           MOVE WS-RECEIVE TO MSG-AREA.                                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
           PERFORM REMOVE-EXTRA-SPACES THRU REMOVE-EXTRA-SPACES-EXIT.           
                                                                                
           PERFORM VALIDATE-CMD THRU VALIDATE-CMD-EXIT.                         
                                                                                
           IF HOLD-QUEUE = 2 THEN                                               
              MOVE '1' TO TCPIPSWQ-ONE                                          
           END-IF.                                                              
                                                                                
           IF HOLD-QUEUE = 3 THEN                                               
              MOVE '2' TO TCPIPSWQ-ONE                                          
           END-IF.                                                              
                                                                                
           IF TCPIPSWQ-ONE = SPACE THEN                                         
              MOVE 'NO PORT / BAD PORT PASSED' TO SEND-AREA                     
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
              GO TO PGM-EXIT                                                    
           END-IF.                                                              
                                                                                
           MOVE WS-RECEIVE TO MSG-AREA.                                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
      * SEARCH TO TSQ FOR A DUPLICATE REQUEST                                   
                                                                                
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 100                          
              EXEC CICS READQ TS QUEUE(TCPIPSWQ) INTO(TSQ-READA)                
                   ITEM(I) LENGTH(TSQREC-LENGTH) END-EXEC                       
              IF TSQ-READA = WS-RECEIVE THEN                                    
                 MOVE 'REQUEST ALREADY IN QUEUE' TO SEND-AREA                   
                 PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                  
                 GO TO PGM-EXIT                                                 
              END-IF                                                            
              IF TSQ-READA = SPACES AND FIRST-SPACE = 0 THEN                    
                 MOVE I TO FIRST-SPACE                                          
              END-IF                                                            
           END-PERFORM.                                                         
                                                                                
           IF FIRST-SPACE = 0 THEN                                              
              MOVE '!TCPIPSWQ IS FULL' TO SEND-AREA                             
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
              GO TO PGM-EXIT                                                    
           ELSE                                                                 
              EXEC CICS WRITEQ TS QUEUE(TCPIPSWQ) FROM(WS-RECEIVE)              
                   ITEM(FIRST-SPACE) LENGTH(TSQREC-LENGTH)                      
                   MAIN REWRITE END-EXEC                                        
              MOVE FIRST-SPACE TO MAX                                           
              MOVE 'SWQ=' TO MSG-AREA                                           
              MOVE MAX TO MSG-AREA(5:4)                                         
              MOVE WS-RECEIVE TO MSG-AREA(14:36)                                
              PERFORM WRITE-CICS THRU WRITE-CICS-EXIT                           
           END-IF.                                                              
           GO TO PGM-EXIT.                                                      
       MAIN-EXIT.                                                               
           EXIT.                                                                
                                                                                
       PGM-EXIT.                                                                
           MOVE 'END OF IPSW PROGRAM' TO MSG-AREA.                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           EXEC CICS RETURN  END-EXEC.                                          
           GOBACK.                                                              
           EXIT.                                                                
                                                                                
      ****************************************************************          
      * THIS ROUTE DOES ALL OF THE INITIALIZATION FOR THIS TASK.     *          
      ****************************************************************          
                                                                                
       INITIALIZATION.                                                          
      *    EXEC CICS IGNORE CONDITION TERMERR EOC SIGNAL END-EXEC.              
                                                                                
           EXEC CICS HANDLE CONDITION                                           
                                      INVREQ  (INVREQ-ERR-SEC)                  
                                      IOERR   (IOERR-SEC)                       
                                      ENDDATA (ENDDATA-SEC)                     
                                      LENGERR (LENGERR-SEC)                     
                                      NOSPACE (NOSPACE-ERR-SEC)                 
                                      NOSTG   (NOSPACE-ERR-SEC)                 
                                      QIDERR  (QIDERR-SEC)                      
                                      ITEMERR (ITEMERR-SEC)                     
                                      QZERO   (QZERO-SEC)                       
                END-EXEC.                                                       
                                                                                
           MOVE '!INITIALIZATION DONE' TO MSG-AREA.                             
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
       INITIALIZATION-EXIT.                                                     
           EXIT.                                                                
                                                                                
      ****************************************************************          
      *  THIS ROUTE WILL VALIDATE THE COMMAND FROM THE PARMS         *          
      ****************************************************************          
                                                                                
       VALIDATE-CMD.                                                            
                                                                                
           IF WS-RECEIVE(1:5) = 'TRACE' THEN                                    
              MOVE 'TRACE TURNED ON FOR STORE' TO SEND-AREA                     
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
              MOVE WS-RECEIVE(6:1) TO HOLD-QUEUE                                
              GO TO VALIDATE-CMD-EXIT                                           
           END-IF                                                               
           IF WS-RECEIVE(1:7) = 'NOTRACE' THEN                                  
              MOVE 'TRACE TURNED OFF FOR STORE' TO SEND-AREA                    
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
              MOVE WS-RECEIVE(8:1) TO HOLD-QUEUE                                
              GO TO VALIDATE-CMD-EXIT                                           
           END-IF                                                               
           IF WS-RECEIVE(1:6) = 'CANCEL' THEN                                   
              MOVE 'CANCEL REQUESTED FOR TRAN' TO SEND-AREA                     
              PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT                     
              MOVE WS-RECEIVE(7:1) TO HOLD-QUEUE                                
              GO TO VALIDATE-CMD-EXIT                                           
           END-IF.                                                              
                                                                                
           MOVE '!' TO MSG-AREA.                                                
           MOVE WS-RECEIVE TO MSG-AREA(2:44).                                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE 'INVALID COMMAND ENTERED - PLEASE RETRY' TO SEND-AREA.          
           PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT.                       
           GO TO PGM-EXIT.                                                      
                                                                                
       VALIDATE-CMD-EXIT.                                                       
           EXIT.                                                                
                                                                                
      ****************************************************************          
      *  THIS ROUTE WILL REMOVE EXTRA SPACES IN THE WS-RECEIVE       *          
      ****************************************************************          
       REMOVE-EXTRA-SPACES.                                                     
           PERFORM VARYING I FROM 1 BY 1 UNTIL I > WS-LEN                       
              IF EXTRA > 1 AND WS-RECEIVE(I:1) NOT = ' ' THEN                   
                 COMPUTE J = I - EXTRA + 1                                      
                 COMPUTE L = WS-LEN - I + 1                                     
                 MOVE WS-RECEIVE(I:L) TO WS-RECEIVE(J:L)                        
                 COMPUTE J = J + L                                              
                 COMPUTE L = WS-LEN - J + 1                                     
                 MOVE SPACES TO WS-RECEIVE(J:L)                                 
                 MOVE J TO I                                                    
              END-IF                                                            
              IF WS-RECEIVE(I:1) = ' ' THEN                                     
                 ADD 1 TO EXTRA                                                 
              ELSE                                                              
                 MOVE 0 TO EXTRA                                                
              END-IF                                                            
           END-PERFORM.                                                         
                                                                                
       REMOVE-EXTRA-SPACES-EXIT.                                                
           EXIT.                                                                
                                                                                
      ****************************************************************          
      *                                                              *          
      * THIS ROUTE WRITES OUT A MESSAGE TO THE DISPLAY               *          
      *                                                              *          
      ****************************************************************          
      *                                                                         
       WRITE-MESSAGE.                                                           
                                                                                
           MOVE LENGTH OF SEND-MSG TO L.                                        
           EXEC CICS SEND FROM(SEND-MSG) LENGTH(L) END-EXEC.                    
           MOVE SEND-AREA TO MSG-AREA.                                          
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
                                                                                
       WRITE-MESSAGE-EXIT.                                                      
           EXIT.                                                                
                                                                                
      ****************************************************************          
      *                                                              *          
      * THIS ROUTE WRITES OUT A MESSAGE TO THE DISPLAY               *          
      *                                                              *          
      ****************************************************************          
      * X2D ======================================================**            
      * X2D COB - SUBROUTINE TO CONVERT DISPLAYABLE HEX VALUE TO                
      *           TO THE EQUIVALENT FULLWORD OR HALFWORD                        
      * MOVE 'DISPLAYABLE HEX VALUE' TO X2D-IN                                  
      * PERFORM X2D                                                             
      * EITHER                                                                  
      *   MOVE X2D-FW TO 'REQUIRED FULLWORD'                                    
      * ORTHER                                                                  
      *   MOVE X2D-HW TO 'REQUIRED HALFWORD'                                    
      *                                                                         
      **************************************************************            
      *                                                                         
       X2D-ROUTINE.                                                             
                                                                                
           INSPECT X2D-IN CONVERTING X2D-INBYTES TO X2D-USEBYTES.               
                                                                                
           MOVE ZERO TO X2D-OUT-BYTE.                                           
           PERFORM VARYING X2D-I FROM 1 BY 2                                    
             UNTIL X2D-I > LENGTH OF X2D-IN                                     
               MOVE ZERO TO X2D-J X2D-K                                         
               MOVE X2D-IN( X2D-I     : 1 ) TO X2D-J-CHAR                       
               MOVE X2D-IN( X2D-I + 1 : 1 ) TO X2D-K-CHAR                       
               MULTIPLY 16 BY X2D-J                                             
               ADD X2D-K TO X2D-J                                               
               ADD 1 TO X2D-OUT-BYTE                                            
               MOVE X2D-J-CHAR TO X2D-OUT( X2D-OUT-BYTE : 1)                    
           END-PERFORM.                                                         
                                                                                
       X2D-ROUTINE-EXIT.                                                        
           EXIT.                                                                
      * X2D END ==================================================              
                                                                                
      ****************************************************************          
      * THIS ROUTE WRITES OUT A MESSAGE TO THE CICS LOG              *          
      ****************************************************************          
                                                                                
       WRITE-CICS.                                                              
                                                                                
           IF MSG-AREA(1:1) = '!' OR DISP-MSGS > 0                              
              MOVE LENGTH OF TCPCICS-MSG-AREA TO CLENG                          
              EXEC CICS ASKTIME ABSTIME(DSTAMP) NOHANDLE END-EXEC               
              EXEC CICS FORMATTIME ABSTIME(DSTAMP) MMDDYY(MSGDATE)              
                   TIME(MSGTIME) DATESEP TIMESEP(':') NOHANDLE END-EXEC         
              MOVE IPSW-TRAN TO MODULE                                          
              EXEC CICS WRITEQ TD QUEUE('CSSL') FROM (TCPCICS-MSG-AREA)         
                   LENGTH(CLENG) END-EXEC                                       
           END-IF.                                                              
                                                                                
           IF DISP-MSGS > 0 AND DISP-MSGS < 9999                                
              SUBTRACT 1 FROM DISP-MSGS.                                        
           MOVE SPACES TO MSG-AREA.                                             
                                                                                
                                                                                
       WRITE-CICS-EXIT.                                                         
           EXIT.                                                                
                                                                                
       EJECT                                                                    
      *---------------------------------------------------------------*         
      *                                                               *         
      *  CONTROL IS GIVEN TO THE FOLLOWING ERROR ROUTINES BY 'HANDLES'*         
      *  ISSUED AT THE BEGINNING OF THE PROGRAM.                      *         
      *                                                               *         
      *---------------------------------------------------------------*         
      * N.B.  WE CAN NOT EXIT IF ERROR, WE MUST ONLY EXIT IF                    
      *       THERE ARE NO SOCKETS IN THE TABLE TO SERVICE ! ! !                
      *       CHANGE THE LOGIC BELOW                                            
                                                                                
       INVREQ-ERR-SEC.                                                          
           MOVE '!INTERFACE IS NOT ACTIVE' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       IOERR-SEC.                                                               
           MOVE '!IOERR OCCURS           ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       QZERO-SEC.                                                               
           MOVE '!QZERO OCCURRS          ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       LENGERR-SEC.                                                             
           MOVE '!*Z301* LENGTH ERROR READING TD QUEUE' TO MSG-AREA.            
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           MOVE '!' TO MSG-AREA.                                                
           MOVE 'READQTD' TO FIELDXX.                                           
           MOVE CLENG TO ERR-CODE.                                              
           MOVE 'READQTD' TO FIELDYY.                                           
           MOVE CLENG TO RET-CODE.                                              
           MOVE '****' TO CALL-NO.                                              
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       NOSPACE-ERR-SEC.                                                         
           MOVE '!NOSPACE CONDITION      ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       QIDERR-SEC.                                                              
           MOVE '!QIDERR  CONDITION      ' TO MSG-AREA.                         
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
                                                                                
       ITEMERR-SEC.                                                             
           MOVE 'NO TCPIPSWQ-SOCKET TASK NOT ACTIVE' TO SEND-AREA               
           PERFORM WRITE-MESSAGE THRU WRITE-MESSAGE-EXIT.                       
           GO TO PGM-EXIT.                                                      
                                                                                
       ENDDATA-SEC.                                                             
           MOVE '!RETRIEVE DATA CAN NT BE FOUND' TO MSG-AREA.                   
           PERFORM WRITE-CICS THRU WRITE-CICS-EXIT.                             
           GO TO PGM-EXIT.                                                      
