000100 IDENTIFICATION DIVISION.                                         00010000
000200 PROGRAM-ID.    VNKUP001.                                         00020000
000300 AUTHOR.        JIM SCHNEIDER.                                    00030000
000400 DATE-WRITTEN.  08/99.                                            00040000
000500*----------------------------------------------------------------*00050000
000600*   VENDOR RANKING                                                00060000
000700*                                                                 00070000
000800*       THIS PROGRAM RANKS ALL MERCHANDISE VENDORS BY YTD SALES.  00080000
000810*       THE SALES DATA IS RETRIEVED FROM MERCHANDISE LEDGER       00090000
000820*       (TVADPT). VENDOR RANKS ARE STORED ON THE TEXTENT TABLE.   00100000
000830*----------------------------------------------------------------*00110000
CH3309***************************************************************** 00120000
CH3309* CHANGE RECORD:                                                * 00130000
CH3309*                                                               * 00140000
CH3309******************************************************************00150000
CH3309* 02/04/2014  COGNIZANT   CHG0073309                              00160000
CH3309*  - MODIFIED IS TO PROCESS AN INPUT FILE THAT WILL  CONTROL THE  00170000
CH3309*    COMMITS ON TABLE TEXTENT TO RELEASE THE LOCKS  IN A TIMELY   00180000
CH3309*    MANNER. AT YEAR END, WHEN THE CURRENT YEAR NEEDS   TO BE     00190000
CH3309*    ROLLED TO THE PREVIOUS YEAR FIELD, THE PROGRAM DOES THIS THIS00200000
CH3309*    IN A SINGLE UPDATE STATEMENT, THAT HOLDS LOCKS ON THE TABLE. 00210000
CH3309*                                                                 00220000
CH3309******************************************************************00230000
CH3309******************************************************************00240000
CH3309*                                                               * 00250000
000840 ENVIRONMENT DIVISION.                                            00260000
000850 INPUT-OUTPUT SECTION.                                            00270000
000860                                                                  00280000
000870 FILE-CONTROL.                                                    00290000
CH3309                                                                  00300000
CH3309     SELECT SALES-RANK-EXTRACT-INPUT                              00310000
CH3309        ASSIGN         TO UT-S-INP01.                             00320000
CH3309                                                                  00330000
000880 DATA DIVISION.                                                   00340000
000890 FILE SECTION.                                                    00350000
000900                                                                  00360000
CH3309 FD  SALES-RANK-EXTRACT-INPUT                                     00370000
CH3309         LABEL RECORDS  ARE STANDARD                              00380000
CH3309         RECORDING MODE IS  F                                     00390000
CH3309         DATA RECORD    IS  SALES-RANK-EXTRACT-REC.               00400000
CH3309 01  SALES-RANK-EXTRACT-REC           PIC X(08).                  00410000
CH3309                                                                  00420000
001000 WORKING-STORAGE SECTION.                                         00430000
001100                                                                  00440000
001200 01  PS-PROGRAM-SWITCHES.                                         00450000
001300     05  PS-END-OF-CURSOR-SW           PIC X        VALUE 'N'.    00460000
001400         88  PS-NOT-END-OF-CURSOR                   VALUE 'N'.    00470000
001500         88  PS-END-OF-CURSOR                       VALUE 'Y'.    00480000
CH3309                                                                  00490000
CH3309 01  PE-PROGRAM-EOF.                                              00500000
CH3309     05  PE-SALES-RANK-EXTRACT         PIC X        VALUE 'N'.    00510000
CH3309         88  PE-SALES-RANK-EXTRACT-EOF              VALUE 'Y'.    00520000
CH3309         88  PE-SALES-RANK-EXTRACT-NOT-EOF          VALUE 'N'.    00530000
001600                                                                  00540000
001700 01  PC-PROGRAM-CONSTANTS.                                        00550000
001800     05  PC-PROGRAM-NAME               PIC X(8)     VALUE         00560000
001900                                                    'VNKUP001'.   00570000
002000     05  PC-MAX-RETRIES                PIC S9(4)    VALUE +3.     00580000
002100                                                                  00590000
002200 01  PV-PROGRAM-VARIABLES.                                        00600000
002300     05  PV-DB2-OPERATION-ATTEMPTED    PIC X(30)    VALUE SPACES. 00610000
002400     05  PV-SELECT-COUNTER             PIC S9(04)   COMP          00620000
002500                                                    VALUE ZEROS.  00630000
002600     05  PV-ABEND-PARAGRAPH            PIC X(50)    VALUE SPACES. 00640000
002700     05  PV-ABEND-CODE                 PIC S9(4)    COMP SYNC     00650000
002800                                                    VALUE ZERO.   00660000
002900         88  PV-DB2-ABEND                           VALUE +4013.  00670000
003000                                                                  00680000
003100     05  PV-1ST-FSCL-PER-END-DT.                                  00690000
003200         10  PV-1ST-FSCL-PER-END-DT-CC PIC X(2)   VALUE SPACES.   00700000
003300         10  PV-1ST-FSCL-PER-END-DT-YY PIC X(2)   VALUE SPACES.   00710000
003400         10  FILLER                    PIC X(1)   VALUE '-'.      00720000
003500         10  PV-1ST-FSCL-PER-END-DT-MM PIC X(2)   VALUE SPACES.   00730000
003600         10  FILLER                    PIC X(1)   VALUE '-'.      00740000
003700         10  PV-1ST-FSCL-PER-END-DT-DD PIC X(2)   VALUE SPACES.   00750000
003710     05  PV-P12M-FSCL-PER-END-DT.                                 00760000
003720         10  PV-P12M-FSCL-PER-END-DT-CC PIC X(2)   VALUE SPACES.  00770000
003730         10  PV-P12M-FSCL-PER-END-DT-YY PIC X(2)   VALUE SPACES.  00780000
003740         10  FILLER                     PIC X(1)   VALUE '-'.     00790000
003750         10  PV-P12M-FSCL-PER-END-DT-MM PIC X(2)   VALUE SPACES.  00800000
003760         10  FILLER                     PIC X(1)   VALUE '-'.     00810000
003770         10  PV-P12M-FSCL-PER-END-DT-DD PIC X(2)   VALUE SPACES.  00820000
003800     05  PV-CUR-FSCL-PER-END-DT.                                  00830000
003900         10  PV-CUR-FSCL-PER-END-DT-YR.                           00840000
004000             15  PV-CUR-FSCL-PER-END-DT-CC                        00850000
004100                                       PIC X(2).                  00860000
004200             15  PV-CUR-FSCL-PER-END-DT-YY                        00870000
004300                                       PIC X(2).                  00880000
004700         10  FILLER                    PIC X(1)   VALUE '-'.      00890000
004800         10  PV-CUR-FSCL-PER-END-DT-MM PIC X(2)   VALUE SPACES.   00900000
004900         10  FILLER                    PIC X(1)   VALUE '-'.      00910000
005000         10  PV-CUR-FSCL-PER-END-DT-DD PIC X(2)   VALUE SPACES.   00920000
005300     05  PV-CURRENT-YR                 PIC X(4)   VALUE SPACES.   00930000
005400     05  PV-CFY-SLSRNK                 PIC S9(9)  COMP VALUE +0.  00940000
005410     05  PV-12M-SLSRNK                 PIC S9(9)  COMP VALUE +0.  00950000
005500     05  PV-TOTAL-SALES                PIC S9(13)V99              00960000
005600                                                  COMP-3 VALUE +0.00970000
005700     05  PV-VENDOR-CTR                 PIC 9(2)   VALUE ZEROS.    00980000
005800     05  PV-BEGIN-RANGE-DT             PIC X(10)  VALUE SPACES.   00990000
005900     05  PV-END-RANGE-DT               PIC X(10)  VALUE SPACES.   01000000
005910     05  PV-HOLD-FISCAL-PERIOD         PIC 9(6)   VALUE ZEROS.    01010000
CH3309                                                                  01020000
CH3309     05  PV-SALES-RANK-EXTRACT-INPUT.                             01030000
CH3309         10  PV-EXTENT-ENT-ID          PIC  S9(9) COMP.           01040000
CH3309         10  PV-EXTENT-CFY-SLSRNK-NBR  PIC  S9(4) COMP.           01050000
CH3309         10  PV-EXTENT-PFY-SLSRNK-NBR  PIC  S9(4) COMP.           01060000
006100*----------------------------------------------------------------*01070000
006200* CONTAINS THE FIELDS NECESSARY TO CALL THE SQLCA MESSAGE MODULE  01080000
006300* 'DSNTIAR' AND DISPLAY THE FORMATTED RESULTS                     01090000
006400*----------------------------------------------------------------*01100000
006500     COPY DPWS004.                                                01110000
006600                                                                  01120000
006700*----------------------------------------------------------------*01130000
006800*   CALENDAR ROUTINE COPYBOOK                                     01140000
006900*----------------------------------------------------------------*01150000
007000     COPY DPWS500.                                                01160000
007100                                                                  01170000
007200*----------------------------------------------------------------*01180000
007300*   DB2 SQL COMMUNICATION AREA                                    01190000
007400*----------------------------------------------------------------*01200000
007500     EXEC SQL                                                     01210000
007600          INCLUDE SQLCA                                           01220000
007700     END-EXEC.                                                    01230000
007800                                                                  01240000
007900*----------------------------------------------------------------*01250000
008000*   DB2 DCLGEN FOR EXTERNAL ENTERPRISE TABLE                      01260000
008100*----------------------------------------------------------------*01270000
008200     EXEC SQL                                                     01280000
008300          INCLUDE TEXTENT                                         01290000
008400     END-EXEC.                                                    01300000
008500                                                                  01310000
008600*----------------------------------------------------------------*01320000
008700* DB2 DCLGEN FOR MERCH LEDGER - DEPARTMENT/MAJOR CLASS/VENDOR TBL 01330000
008800*----------------------------------------------------------------*01340000
008900     EXEC SQL                                                     01350000
009000          INCLUDE TVADPT                                          01360000
009100     END-EXEC.                                                    01370000
009200                                                                  01380000
009210*----------------------------------------------------------------*01390000
009220* DB2 DCLGEN FOR VENDER NUMBER LAST ASSIGNED TABLE                01400000
009230*----------------------------------------------------------------*01410000
009240     EXEC SQL                                                     01420000
009250          INCLUDE TVNDCTL                                         01430000
009260     END-EXEC.                                                    01440000
009270                                                                  01450000
009300*----------------------------------------------------------------*01460000
009400*  DECLARE SALES CURSOR                                           01470000
009500*      RETRIEVES TOTAL SALES FOR ALL MERCHANDISE VENDORS          01480000
009600*      AND ORDERS THEM FROM THE LARGEST SALES TOTAL TO THE        01490000
009700*      SMALLEST ELIMINATING ANY VENDORS WITH ZERO OR NEGATIVE     01500000
009800*      SALES NUMBERS. ENT ID 5161 REPRESENTS THE "UNKNOWN VENDOR".01510000
009820*      IT WILL ALSO BE EXCLUDED FROM THE RANKING PROCESS.         01520000
009900*----------------------------------------------------------------*01530000
010000                                                                  01540000
010100     EXEC SQL                                                     01550000
010200         DECLARE SALES_CSR CURSOR WITH HOLD FOR                   01560000
010300          SELECT AA.ENT_ID,                                       01570000
010400                 AA.SALES                                         01580000
010500            FROM                                                  01590000
010600                (SELECT A.ENT_ID, SUM(A.SLS_REG_RTL_AMT +         01600000
010700                                      A.SLS_PROMO_RTL_AMT +       01610000
010800                                      A.SLS_PROCLR_RTL_AMT +      01620000
010900                                      A.SLS_CLR_RTL_AMT +         01630000
011000                                      A.SLS_OTH_RTL_AMT) AS SALES 01640000
011100                   FROM TVADPT  A,                                01650000
011200                        TEXTENT B                                 01660000
011210                  WHERE A.FSCL_MN_END_DTE BETWEEN                 01670000
011220                         :PV-BEGIN-RANGE-DT AND                   01680000
011230                         :PV-END-RANGE-DT                         01690000
011240                    AND A.ENT_ID = B.ENT_ID                       01700000
011241                    AND A.ENT_ID <> 5161                          01710000
011250                    AND B.MDSE_VENDOR_IND = 'Y'                   01720000
011260                  GROUP BY A.ENT_ID) AA                           01730000
011270           WHERE AA.SALES > 0                                     01740000
011280        ORDER BY AA.SALES   DESC                                  01750000
011290     END-EXEC.                                                    01760000
011300                                                                  01770000
011310 PROCEDURE DIVISION.                                              01780000
011320                                                                  01790000
011330     INITIALIZE PV-CUR-FSCL-PER-END-DT-YR                         01800000
011340                PV-VENDOR-CTR                                     01810000
011350                PV-CFY-SLSRNK                                     01820000
011351                PV-12M-SLSRNK.                                    01830000
011360     SET PS-NOT-END-OF-CURSOR TO TRUE.                            01840000
011370                                                                  01850000
011380     PERFORM 1000-RETRIEVE-FIRST-FISCAL-PER.                      01860000
011390                                                                  01870000
011400*    IF THE BEGINNING RANGE = THE ENDING RANGE, THAT MEANS THE    01880000
011500*    FIRST FISCAL MONTH OF THE YEAR IS BEING PROCESSED. THEREFORE 01890000
011600*    BOTH LAST YEAR AND THIS YEAR'S RANKS WILL BE UPDATED.        01900000
011700     IF PV-BEGIN-RANGE-DT = PV-END-RANGE-DT                       01910000
011800         PERFORM 2000-NEW-YEAR-PROCESSING                         01920000
011900     END-IF.                                                      01930000
011910                                                                  01940000
011920     PERFORM 2300-INITIALIZE-TY-RANKS.                            01950000
011930                                                                  01960000
011931*    CALCULATE YTD SALES RANKS                                    01970000
011940     PERFORM 3000-OPEN-SALES-CURSOR.                              01980000
011950     PERFORM 3500-FETCH-SALES-CURSOR                              01990000
011960       UNTIL PS-END-OF-CURSOR.                                    02000000
011970     PERFORM 3900-CLOSE-SALES-CURSOR.                             02010000
011980                                                                  02020000
011981     SET PS-NOT-END-OF-CURSOR TO TRUE.                            02030000
011982     INITIALIZE PV-TOTAL-SALES                                    02040000
012031                PV-VENDOR-CTR.                                    02050000
012035                                                                  02060000
012036*    CALCULATE 12 MONTH SALES RANKS                               02070000
012037     MOVE PV-P12M-FSCL-PER-END-DT TO PV-BEGIN-RANGE-DT.           02080000
012038     PERFORM 3000-OPEN-SALES-CURSOR.                              02090000
012039     PERFORM 3600-FETCH-12M-SALES-CURSOR                          02100000
012040       UNTIL PS-END-OF-CURSOR.                                    02110000
012041     PERFORM 3900-CLOSE-SALES-CURSOR.                             02120000
012042                                                                  02130000
012043     GOBACK.                                                      02140000
012050                                                                  02150000
012100*----------------------------------------------------------------*02160000
012200* THE MERCHANDISE LEDGER TABLES STORE FINANCIAL INFORMATION      *02170000
012300* FOR A FISCAL PERIOD BASED ON THE LAST DAY OF THAT FISCAL       *02180000
012400* PERIOD. THIS PARAGRAPH WILL RETRIEVE THE LAST DAY OF THE FIRST *02190000
012500* FISCAL PERIOD AND THE LAST DAY OF THE CURRENT FISCAL PERIOD.   *02200000
012600* TO FORM THE YTD RANGE. IT ALSO RETRIEVES THE LAST DAY OF THE   *02210000
012610* FISCAL PERIOD 12 PERIODS AGO IN ORDER TO GENERATE THE 12 MONTH *02220000
012620* SALES RANKS.                                                   *02230000
012700*----------------------------------------------------------------*02240000
012800* THIS JOB RUNS WITH THE MONTH END PROCESSING. TYPICALLY MONTH   *02250000
012900* END RUNS A WEEK AFTER THE FISCAL MONTH ENDS. ONE IS SUBTRACTED *02260000
013000* FROM THE PERIOD TO RETRIEVE THE FISCAL PERIOD BEING PROCESSED. *02270000
013100*----------------------------------------------------------------*02280000
013200                                                                  02290000
013300 1000-RETRIEVE-FIRST-FISCAL-PER.                                  02300000
013400                                                                  02310000
013410*    RETRIEVE THE CURRENT FISCAL PERIOD USING THE CURRENT DATE    02320000
013500     INITIALIZE DPG51 DPG52 DPG53 DPG54 DPG55 DPG56.              02330000
013600     SET DPG51-FISCAL-454-CALENDAR    TO TRUE.                    02340000
013700     SET DPG52-LK-DTE-ISO             TO TRUE.                    02350000
013800     MOVE FUNCTION CURRENT-DATE (1:8) TO DPG52-DB2-ISO-DATE.      02360000
014000     CALL DP500-KOHLS-CALENDAR-ROUTINE USING                      02370000
014100          DPG51 DPG52 DPG53 DPG54 DPG55 DPG56.                    02380000
014200                                                                  02390000
014300     IF  DPG54-NO-ERROR                                           02400000
014400                                                                  02410000
014410*         RETRIEVE THE PROCESSING END PERIOD BY SUBTRACTING 1 FROM02420000
014420*         THE CURRENT PERIOD (RETURN THE LAST DAY OF THE PERIOD)  02430000
014500          INITIALIZE DPG51 DPG52 DPG53                            02440000
014600          SET DPG51-FISCAL-454-CALENDAR TO TRUE                   02450000
014700          SET DPG52-LK-DTE-FISC-PRD-CC  TO TRUE                   02460000
014800          MOVE DPG56-FISCAL-YEAR-CCYY   TO DPG52-FISCAL-CC-PRD-YR 02470000
014900          MOVE DPG56-FISCAL-PERIOD-NBR  TO DPG52-FISCAL-CC-PRD-PP 02480000
014910          MOVE DPG52-FISCAL-CC-PRD      TO PV-HOLD-FISCAL-PERIOD  02490000
015000          SET DPG51-DECREMENT-DATE      TO TRUE                   02500000
015100          MOVE 1 TO DPG51-INCR-DECR-FISCAL-PRD-9                  02510000
015200          INITIALIZE DPG54 DPG55 DPG56                            02520000
015300                                                                  02530000
015400          CALL DP500-KOHLS-CALENDAR-ROUTINE USING                 02540000
015500               DPG51 DPG52 DPG53 DPG54 DPG55 DPG56                02550000
015600                                                                  02560000
015700          IF  DPG54-NO-ERROR                                      02570000
015800              MOVE DPG56-LAST-FP-DB2-ISO-FMT                      02580000
015900                                        TO PV-CUR-FSCL-PER-END-DT 02590000
015910*             RETRIEVE THE PROCESSING BEGIN PERIOD FOR YTD RANK   02600000
015911*             BY TAKING THE FIRST DAY OF THE FISCAL YEAR AND      02610000
015912*             FINDING THE CURRENT PERIOD                          02620000
015920*             (RETURN THE LAST DAY OF THE PERIOD)                 02630000
016000              INITIALIZE DPG51 DPG52 DPG53                        02640000
016100              SET DPG51-FISCAL-454-CALENDAR TO TRUE               02650000
016200              SET DPG52-LK-DTE-ISO-FMT      TO TRUE               02660000
016300              MOVE DPG56-FIRST-FD-DB2-ISO-FMT                     02670000
016400                                        TO DPG52-DB2-ISO-DATE-FMT 02680000
016500              INITIALIZE DPG54 DPG55 DPG56                        02690000
016600                                                                  02700000
016700              CALL DP500-KOHLS-CALENDAR-ROUTINE USING             02710000
016800                   DPG51 DPG52 DPG53 DPG54 DPG55 DPG56            02720000
016900                                                                  02730000
017000              IF  DPG54-NO-ERROR                                  02740000
017100                  MOVE DPG56-LAST-FP-DB2-ISO-FMT                  02750000
017110                                        TO PV-1ST-FSCL-PER-END-DT 02760000
017111*                 RETRIEVE THE PROCESSING BEGIN PERIOD FOR THE 12 02770000
017112*                 MONTH RANK BY SUBTRACTING 12 PERIODS FROM THE   02780000
017113*                 CURRENT FISCAL PERIOD                           02790000
017114*                 (RETURN THE LAST DAY OF THE PERIOD)             02800000
017120                  INITIALIZE DPG51 DPG52 DPG53                    02810000
017121                  SET DPG51-FISCAL-454-CALENDAR TO TRUE           02820000
017122                  SET DPG52-LK-DTE-FISC-PRD-CC  TO TRUE           02830000
017124                  MOVE PV-HOLD-FISCAL-PERIOD                      02840000
017125                                        TO DPG52-FISCAL-CC-PRD    02850000
017128                  SET DPG51-DECREMENT-DATE      TO TRUE           02860000
017129                  MOVE 12 TO DPG51-INCR-DECR-FISCAL-PRD-9         02870000
017130                  INITIALIZE DPG54 DPG55 DPG56                    02880000
017131                                                                  02890000
017132                  CALL DP500-KOHLS-CALENDAR-ROUTINE USING         02900000
017133                       DPG51 DPG52 DPG53 DPG54 DPG55 DPG56        02910000
017134                                                                  02920000
017135                  IF  DPG54-NO-ERROR                              02930000
017136                      MOVE DPG56-LAST-FP-DB2-ISO-FMT              02940000
017137                                    TO PV-P12M-FSCL-PER-END-DT    02950000
017138                  END-IF                                          02960000
017139              END-IF                                              02970000
017140          END-IF                                                  02980000
017141     END-IF.                                                      02990000
017160     MOVE PV-1ST-FSCL-PER-END-DT TO PV-BEGIN-RANGE-DT.            03000000
017170     MOVE PV-CUR-FSCL-PER-END-DT TO PV-END-RANGE-DT.              03010000
017180                                                                  03020000
017190*----------------------------------------------------------------*03030000
017200* THIS PARAGRAPH WILL ONLY BE EXECUTED WHEN A NEW FISCAL YEAR IS *03040000
017210* BEGINNING. IT WILL MOVE THE CURRENT FISCAL YEAR TO THE         *03050000
017220* TVNDCTL TABLE. IT WILL MOVE THE CURRENT YEAR RANKS TO THE      *03060000
017230* PREVIOUS YEAR RANKS. IT THEN INITIALIZES THE PREV YEAR RANKS.  *03070000
017240*----------------------------------------------------------------*03080000
017250 2000-NEW-YEAR-PROCESSING.                                        03090000
017260                                                                  03100000
017270     MOVE PV-CUR-FSCL-PER-END-DT-YR   TO PV-CURRENT-YR.           03110000
017280                                                                  03120000
CH3309     OPEN INPUT SALES-RANK-EXTRACT-INPUT.                         03130000
CH3309*    PERFORM 2100-INITIALIZE-PFY-RANKS.                           03140000
CH3309     PERFORM 2100-READ-SALES-RANK-EXTRACT.                        03150000
017311     PERFORM 2150-RESET-CURRENT-FISCAL-YR.                        03160000
CH3309     PERFORM 2200-LOAD-PFY-RANKS                                  03170000
CH3309                        UNTIL PE-SALES-RANK-EXTRACT-EOF.          03180000
017330                                                                  03190000
CH3309     IF PE-SALES-RANK-EXTRACT-EOF                                 03200000
CH3309        CLOSE SALES-RANK-EXTRACT-INPUT                            03210000
CH3309     END-IF.                                                      03220000
CH3309*----------------------------------------------------------------*03230000
CH3309* READ THE FIRST RECORD ON THE INPUT FILE.                       *03240000
CH3309*----------------------------------------------------------------*03250000
CH3309 2100-READ-SALES-RANK-EXTRACT.                                    03260000
CH3309                                                                  03270000
CH3309     READ SALES-RANK-EXTRACT-INPUT                                03280000
CH3309                  INTO PV-SALES-RANK-EXTRACT-INPUT                03290000
CH3309        AT END                                                    03300000
CH3309           SET PE-SALES-RANK-EXTRACT-EOF TO TRUE                  03310000
CH3309     END-READ.                                                    03320000
019104*----------------------------------------------------------------*03330000
019105* THIS PARAGRAPH IS EXECUTED WHEN A NEW FISCAL YEAR IS BEING     *03340000
019106* PROCESSED. IT WILL UPDATE THE TVNDCTL TABLE WITH THE NEW       *03350000
019107* FISCAL YEAR.                                                   *03360000
019108*----------------------------------------------------------------*03370000
019109 2150-RESET-CURRENT-FISCAL-YR.                                    03380000
019110                                                                  03390000
019111     PERFORM                                                      03400000
019112         WITH TEST AFTER                                          03410000
019113             VARYING PV-SELECT-COUNTER                            03420000
019114             FROM 1 BY 1                                          03430000
019115             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            03440000
019116                OR  SQLCODE = 0)                                  03450000
019117                                                                  03460000
019118         EXEC SQL                                                 03470000
019119             UPDATE TVNDCTL                                       03480000
019120                 SET PRCG_FSCL_YR_NBR = :PV-CURRENT-YR            03490000
019121         END-EXEC                                                 03500000
019122                                                                  03510000
019123         EVALUATE TRUE                                            03520000
019124             WHEN SQLCODE = ZERO                                  03530000
019126             WHEN SQLCODE = -904                                  03540000
019127             WHEN SQLCODE = -911                                  03550000
019128             WHEN SQLCODE = -913                                  03560000
019129                  CONTINUE                                        03570000
019130                                                                  03580000
019131             WHEN OTHER                                           03590000
019133                  MOVE '2150-RESET-CURRENT-FISCAL-YR'             03600000
019134                        TO PV-ABEND-PARAGRAPH                     03610000
019135                  PERFORM 9500-DB2-ABEND                          03620000
019136         END-EVALUATE                                             03630000
019137     END-PERFORM.                                                 03640000
019138                                                                  03650000
019139     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        03660000
019141         MOVE '2150-RESET-CURRENT-FISCAL-YR'                      03670000
019142                                     TO PV-ABEND-PARAGRAPH        03680000
019143         MOVE 'TIMEOUT ON TVNDCTL TABLE UPDATE'                   03690000
019144                     TO PV-DB2-OPERATION-ATTEMPTED                03700000
019145         PERFORM 9500-DB2-ABEND                                   03710000
019146     END-IF.                                                      03720000
019147                                                                  03730000
019148*----------------------------------------------------------------*03740000
019149* THIS PARAGRAPH TAKES THE VALUES FROM THE VENDOR RANK "THIS     *03750000
019150* YEAR" COLUMN AND MOVES THEM TO THE VENDOR RANK "LAST YEAR"     *03760000
019151* COLUMN IF THE VENDOR HAD A RANK ASSIGNED TO IT.                *03770000
019152*----------------------------------------------------------------*03780000
019153 2200-LOAD-PFY-RANKS.                                             03790000
019154                                                                  03800000
019155     PERFORM                                                      03810000
019156         WITH TEST AFTER                                          03820000
019157             VARYING PV-SELECT-COUNTER                            03830000
019158             FROM 1 BY 1                                          03840000
019160             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            03850000
019170                OR  SQLCODE = 0)                                  03860000
019180                                                                  03870000
019190         EXEC SQL                                                 03880000
019200             UPDATE TEXTENT                                       03890000
CH3309                 SET PFY_SLSRNK_NBR = :PV-EXTENT-CFY-SLSRNK-NBR   03900000
CH3309               WHERE ENT_ID = :PV-EXTENT-ENT-ID                   03910000
019320         END-EXEC                                                 03920000
019330                                                                  03930000
019331         EVALUATE TRUE                                            03940000
019332             WHEN SQLCODE = ZERO                                  03950000
CH3309                  ADD 1          TO PV-VENDOR-CTR                 03960000
CH3309                  IF PV-VENDOR-CTR > 50                           03970000
CH3309                     PERFORM 8500-COMMIT                          03980000
CH3309                     INITIALIZE PV-VENDOR-CTR                     03990000
CH3309                  END-IF                                          04000000
CH3309                                                                  04010000
019334             WHEN SQLCODE = -904                                  04020000
019335             WHEN SQLCODE = -911                                  04030000
019336             WHEN SQLCODE = -913                                  04040000
019337                  CONTINUE                                        04050000
019338                                                                  04060000
019339             WHEN OTHER                                           04070000
019340                  MOVE '2200-LOAD-PFY-RANKS'                      04080000
019341                        TO PV-ABEND-PARAGRAPH                     04090000
019342                  PERFORM 9500-DB2-ABEND                          04100000
019343         END-EVALUATE                                             04110000
019344     END-PERFORM.                                                 04120000
019345                                                                  04130000
019346     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        04140000
019347         MOVE '2200-LOAD-PFY-RANKS'                               04150000
019348                                     TO PV-ABEND-PARAGRAPH        04160000
019349         MOVE 'TIMEOUT ON TEXTENT TABLE UPDATE'                   04170000
019350                     TO PV-DB2-OPERATION-ATTEMPTED                04180000
019351         PERFORM 9500-DB2-ABEND                                   04190000
019352     END-IF.                                                      04200000
019353                                                                  04210000
CH3309      PERFORM 2100-READ-SALES-RANK-EXTRACT.                       04220000
CH3309                                                                  04230000
019354*----------------------------------------------------------------*04240000
019355* INITIALIZE THE "THIS YEAR" VENDOR RANK AS WELL AS THE 12 MONTH *04250000
019356* RANK FOR ALL VENDORS                                           *04260000
019357*----------------------------------------------------------------*04270000
019358 2300-INITIALIZE-TY-RANKS.                                        04280000
019359                                                                  04290000
019360     PERFORM                                                      04300000
019361         WITH TEST AFTER                                          04310000
019362             VARYING PV-SELECT-COUNTER                            04320000
019363             FROM 1 BY 1                                          04330000
019364             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            04340000
019365                OR  SQLCODE = 0)                                  04350000
019366                                                                  04360000
019367         EXEC SQL                                                 04370000
019368             UPDATE TEXTENT                                       04380000
019369                 SET CFY_SLSRNK_NBR = 0,                          04390000
019370                     P12MN_SLSRNK_NBR = 0                         04400000
CH3309                 WHERE CFY_SLSRNK_NBR   <> 0 OR                   04410000
CH3309                       P12MN_SLSRNK_NBR <> 0                      04420000
019371         END-EXEC                                                 04430000
019372                                                                  04440000
019380         EVALUATE TRUE                                            04450000
019381             WHEN SQLCODE = ZERO                                  04460000
019382                  PERFORM 8500-COMMIT                             04470000
019383             WHEN SQLCODE = -904                                  04480000
019384             WHEN SQLCODE = -911                                  04490000
019385             WHEN SQLCODE = -913                                  04500000
019386                  CONTINUE                                        04510000
019387                                                                  04520000
019388             WHEN OTHER                                           04530000
019389                  MOVE '2300-INITIALIZE-TY-RANKS'                 04540000
019390                        TO PV-ABEND-PARAGRAPH                     04550000
019391                  PERFORM 9500-DB2-ABEND                          04560000
019392         END-EVALUATE                                             04570000
019393     END-PERFORM.                                                 04580000
019394                                                                  04590000
019395     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        04600000
019396         MOVE '2300-INITIALIZE-TY-RANKS'                          04610000
019397                                     TO PV-ABEND-PARAGRAPH        04620000
019398         MOVE 'TIMEOUT ON TEXTENT TABLE UPDATE'                   04630000
019399                     TO PV-DB2-OPERATION-ATTEMPTED                04640000
019400         PERFORM 9500-DB2-ABEND                                   04650000
019401     END-IF.                                                      04660000
019402                                                                  04670000
019403*----------------------------------------------------------------*04680000
019404* OPEN THE SALES CURSOR                                          *04690000
019405*----------------------------------------------------------------*04700000
019406 3000-OPEN-SALES-CURSOR.                                          04710000
019407                                                                  04720000
019408     PERFORM                                                      04730000
019409         WITH TEST AFTER                                          04740000
019410             VARYING PV-SELECT-COUNTER                            04750000
019411             FROM 1 BY 1                                          04760000
019412             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            04770000
019413                OR  SQLCODE = 0)                                  04780000
019414                                                                  04790000
019415         EXEC SQL                                                 04800000
019416             OPEN SALES_CSR                                       04810000
019417         END-EXEC                                                 04820000
019418                                                                  04830000
019419         EVALUATE TRUE                                            04840000
019420             WHEN SQLCODE = 0                                     04850000
019421             WHEN SQLCODE = -904                                  04860000
019422             WHEN SQLCODE = -911                                  04870000
019423             WHEN SQLCODE = -913                                  04880000
019424                 CONTINUE                                         04890000
019425             WHEN SQLWARN0 NOT = SPACES                           04900000
019426             WHEN SQLCODE < 0                                     04910000
019427             WHEN SQLCODE > 0                                     04920000
019428                 PERFORM 9500-DB2-ABEND                           04930000
019429         END-EVALUATE                                             04940000
019430     END-PERFORM.                                                 04950000
019431                                                                  04960000
019432     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        04970000
019433         MOVE '3000-OPEN-SALES-CURSOR'                            04980000
019434                                     TO PV-ABEND-PARAGRAPH        04990000
019435         MOVE 'TIMEOUT ON TVADPT/TEXTENT TABLE OPEN'              05000000
019436                     TO PV-DB2-OPERATION-ATTEMPTED                05010000
019437         PERFORM 9500-DB2-ABEND                                   05020000
019438     END-IF.                                                      05030000
019439                                                                  05040000
019440*----------------------------------------------------------------*05050000
019441* FETCH THE SALES CURSOR. FOR EACH VENDOR RETURNED, THE CURRENT  *05060000
019442* YEAR'S SALES RANK WILL BE INCREMENTED. THAT VALUE WILL THEN    *05070000
019443* BE INSERTED INTO THE TEXTENT TABLE AS THE CURRENT YEAR RANK.   *05080000
019444*----------------------------------------------------------------*05090000
019445 3500-FETCH-SALES-CURSOR.                                         05100000
019446                                                                  05110000
019447     PERFORM                                                      05120000
019448         WITH TEST AFTER                                          05130000
019449             VARYING PV-SELECT-COUNTER                            05140000
019450             FROM 1 BY 1                                          05150000
019451             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            05160000
019452                OR  SQLCODE = 0 OR SQLCODE = +100)                05170000
019453                                                                  05180000
019454         EXEC SQL                                                 05190000
019455             FETCH SALES_CSR                                      05200000
019456              INTO :VADPT-ENT-ID,                                 05210000
019457                   :PV-TOTAL-SALES                                05220000
019458         END-EXEC                                                 05230000
019459                                                                  05240000
019460         EVALUATE TRUE                                            05250000
019461             WHEN SQLCODE = 0                                     05260000
019462                  ADD 1 TO PV-CFY-SLSRNK                          05270000
019463                           PV-VENDOR-CTR                          05280000
019464                  PERFORM 4000-LOAD-TY-RANK                       05290000
019465             WHEN SQLCODE = +100                                  05300000
019466                  SET PS-END-OF-CURSOR TO TRUE                    05310000
019467             WHEN SQLCODE = -904                                  05320000
019468             WHEN SQLCODE = -911                                  05330000
019469             WHEN SQLCODE = -913                                  05340000
019470                 CONTINUE                                         05350000
019471             WHEN SQLWARN0 NOT = SPACES                           05360000
019472             WHEN SQLCODE < 0                                     05370000
019473             WHEN SQLCODE > 0                                     05380000
019474                 PERFORM 9500-DB2-ABEND                           05390000
019475         END-EVALUATE                                             05400000
019476     END-PERFORM.                                                 05410000
019477                                                                  05420000
019478     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        05430000
019479         MOVE '3500-FETCH-SALES-CURSOR'                           05440000
019480                                     TO PV-ABEND-PARAGRAPH        05450000
019481         MOVE 'TIMEOUT ON TVADPT/TEXTENT TABLE FETCH'             05460000
019482                     TO PV-DB2-OPERATION-ATTEMPTED                05470000
019483         PERFORM 9500-DB2-ABEND                                   05480000
019484     END-IF.                                                      05490000
019485                                                                  05500000
019486*----------------------------------------------------------------*05510000
019487* FETCH THE SALES CURSOR. FOR EACH VENDOR RETURNED, THE CURRENT  *05520000
019488* YEAR'S SALES RANK WILL BE INCREMENTED. THAT VALUE WILL THEN    *05530000
019489* BE INSERTED INTO THE TEXTENT TABLE AS THE CURRENT YR 12M RANK. *05540000
019490*----------------------------------------------------------------*05550000
019491 3600-FETCH-12M-SALES-CURSOR.                                     05560000
019492                                                                  05570000
019493     PERFORM                                                      05580000
019494         WITH TEST AFTER                                          05590000
019495             VARYING PV-SELECT-COUNTER                            05600000
019496             FROM 1 BY 1                                          05610000
019497             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            05620000
019498                OR  SQLCODE = 0 OR SQLCODE = +100)                05630000
019499                                                                  05640000
019500         EXEC SQL                                                 05650000
019501             FETCH SALES_CSR                                      05660000
019502              INTO :VADPT-ENT-ID,                                 05670000
019503                   :PV-TOTAL-SALES                                05680000
019504         END-EXEC                                                 05690000
019505                                                                  05700000
019506         EVALUATE TRUE                                            05710000
019507             WHEN SQLCODE = 0                                     05720000
019508                  ADD 1 TO PV-12M-SLSRNK                          05730000
019509                           PV-VENDOR-CTR                          05740000
019510                  PERFORM 4100-LOAD-12M-RANK                      05750000
019511             WHEN SQLCODE = +100                                  05760000
019512                  SET PS-END-OF-CURSOR TO TRUE                    05770000
019513             WHEN SQLCODE = -904                                  05780000
019514             WHEN SQLCODE = -911                                  05790000
019515             WHEN SQLCODE = -913                                  05800000
019516                 CONTINUE                                         05810000
019517             WHEN SQLWARN0 NOT = SPACES                           05820000
019518             WHEN SQLCODE < 0                                     05830000
019519             WHEN SQLCODE > 0                                     05840000
019520                 PERFORM 9500-DB2-ABEND                           05850000
019521         END-EVALUATE                                             05860000
019522     END-PERFORM.                                                 05870000
019523                                                                  05880000
019524     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        05890000
019525         MOVE '3600-FETCH-12M-SALES-CURSOR'                       05900000
019526                                     TO PV-ABEND-PARAGRAPH        05910000
019527         MOVE 'TIMEOUT ON TVADPT/TEXTENT TABLE FETCH'             05920000
019528                     TO PV-DB2-OPERATION-ATTEMPTED                05930000
019529         PERFORM 9500-DB2-ABEND                                   05940000
019530     END-IF.                                                      05950000
019531                                                                  05960000
019532*----------------------------------------------------------------*05970000
019533* CLOSE THE SALES CURSOR                                         *05980000
019534*----------------------------------------------------------------*05990000
019535 3900-CLOSE-SALES-CURSOR.                                         06000000
019536                                                                  06010000
019537     PERFORM                                                      06020000
019538         WITH TEST AFTER                                          06030000
019539             VARYING PV-SELECT-COUNTER                            06040000
019540             FROM 1 BY 1                                          06050000
019541             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            06060000
019542                OR  SQLCODE = 0)                                  06070000
019543                                                                  06080000
019544         EXEC SQL                                                 06090000
019545             CLOSE SALES_CSR                                      06100000
019546         END-EXEC                                                 06110000
019547                                                                  06120000
019548         EVALUATE TRUE                                            06130000
019549             WHEN SQLCODE = 0                                     06140000
019550             WHEN SQLCODE = -904                                  06150000
019551             WHEN SQLCODE = -911                                  06160000
019552             WHEN SQLCODE = -913                                  06170000
019553                 CONTINUE                                         06180000
019554             WHEN SQLWARN0 NOT = SPACES                           06190000
019555             WHEN SQLCODE < 0                                     06200000
019556             WHEN SQLCODE > 0                                     06210000
019557                 PERFORM 9500-DB2-ABEND                           06220000
019558         END-EVALUATE                                             06230000
019559     END-PERFORM.                                                 06240000
019560                                                                  06250000
019561     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        06260000
019562         MOVE '3900-CLOSE-SALES-CURSOR'                           06270000
019563                                     TO PV-ABEND-PARAGRAPH        06280000
019564         MOVE 'TIMEOUT ON TVADPT/TEXTENT TABLE CLOSE'             06290000
019565                     TO PV-DB2-OPERATION-ATTEMPTED                06300000
019566         PERFORM 9500-DB2-ABEND                                   06310000
019567     END-IF.                                                      06320000
019568                                                                  06330000
019569*----------------------------------------------------------------*06340000
019570* THIS PARAGRAPH LOADS THE VENDOR RANK FOR "THIS YEAR"           *06350000
019571*----------------------------------------------------------------*06360000
019572 4000-LOAD-TY-RANK.                                               06370000
019573                                                                  06380000
019574     PERFORM                                                      06390000
019575         WITH TEST AFTER                                          06400000
019576             VARYING PV-SELECT-COUNTER                            06410000
019577             FROM 1 BY 1                                          06420000
019578             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            06430000
019579                OR  SQLCODE = 0)                                  06440000
019580                                                                  06450000
019581         EXEC SQL                                                 06460000
019582             UPDATE TEXTENT                                       06470000
019583                 SET CFY_SLSRNK_NBR = :PV-CFY-SLSRNK              06480000
019584               WHERE ENT_ID = :VADPT-ENT-ID                       06490000
019585         END-EXEC                                                 06500000
019586                                                                  06510000
019587         EVALUATE TRUE                                            06520000
019588             WHEN SQLCODE = ZERO                                  06530000
019589                  IF PV-VENDOR-CTR >= 50                          06540000
019590                      PERFORM 8500-COMMIT                         06550000
019591                      INITIALIZE PV-VENDOR-CTR                    06560000
019592                  END-IF                                          06570000
019593             WHEN SQLCODE = -904                                  06580000
019594             WHEN SQLCODE = -911                                  06590000
019595             WHEN SQLCODE = -913                                  06600000
019596                  CONTINUE                                        06610000
019597                                                                  06620000
019598             WHEN OTHER                                           06630000
019599                  MOVE '4000-LOAD-TY-RANKS'                       06640000
019600                        TO PV-ABEND-PARAGRAPH                     06650000
019601                  PERFORM 9500-DB2-ABEND                          06660000
019602         END-EVALUATE                                             06670000
019603     END-PERFORM.                                                 06680000
019604                                                                  06690000
019605     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        06700000
019606         MOVE '4000-LOAD-TY-RANKS'                                06710000
019607                                     TO PV-ABEND-PARAGRAPH        06720000
019608         MOVE 'TIMEOUT ON TEXTENT TABLE UPDATE'                   06730000
019609                     TO PV-DB2-OPERATION-ATTEMPTED                06740000
019610         PERFORM 9500-DB2-ABEND                                   06750000
019611     END-IF.                                                      06760000
019612                                                                  06770000
019613*----------------------------------------------------------------*06780000
019614* THIS PARAGRAPH LOADS THE 12 MONTH VENDOR RANK FOR "THIS YEAR"  *06790000
019615*----------------------------------------------------------------*06800000
019616 4100-LOAD-12M-RANK.                                              06810000
019617                                                                  06820000
019618     PERFORM                                                      06830000
019619         WITH TEST AFTER                                          06840000
019620             VARYING PV-SELECT-COUNTER                            06850000
019621             FROM 1 BY 1                                          06860000
019622             UNTIL (PV-SELECT-COUNTER > PC-MAX-RETRIES            06870000
019623                OR  SQLCODE = 0)                                  06880000
019624                                                                  06890000
019625         EXEC SQL                                                 06900000
019626             UPDATE TEXTENT                                       06910000
019627                 SET P12MN_SLSRNK_NBR = :PV-12M-SLSRNK            06920000
019628               WHERE ENT_ID = :VADPT-ENT-ID                       06930000
019629         END-EXEC                                                 06940000
019630                                                                  06950000
019631         EVALUATE TRUE                                            06960000
019632             WHEN SQLCODE = ZERO                                  06970000
019633                  IF PV-VENDOR-CTR >= 50                          06980000
019634                      PERFORM 8500-COMMIT                         06990000
019635                      INITIALIZE PV-VENDOR-CTR                    07000000
019636                  END-IF                                          07010000
019637             WHEN SQLCODE = -904                                  07020000
019638             WHEN SQLCODE = -911                                  07030000
019639             WHEN SQLCODE = -913                                  07040000
019640                  CONTINUE                                        07050000
019641                                                                  07060000
019642             WHEN OTHER                                           07070000
019643                  MOVE '4100-LOAD-12M-RANKS'                      07080000
019644                        TO PV-ABEND-PARAGRAPH                     07090000
019645                  PERFORM 9500-DB2-ABEND                          07100000
019646         END-EVALUATE                                             07110000
019647     END-PERFORM.                                                 07120000
019648                                                                  07130000
019649     IF PV-SELECT-COUNTER > PC-MAX-RETRIES                        07140000
019650         MOVE '4100-LOAD-12M-RANKS'                               07150000
019651                                     TO PV-ABEND-PARAGRAPH        07160000
019652         MOVE 'TIMEOUT ON TEXTENT TABLE UPDATE'                   07170000
019653                     TO PV-DB2-OPERATION-ATTEMPTED                07180000
019654         PERFORM 9500-DB2-ABEND                                   07190000
019655     END-IF.                                                      07200000
019656                                                                  07210000
019657 8500-COMMIT.                                                     07220000
019658                                                                  07230000
019659     EXEC SQL                                                     07240000
019660         COMMIT                                                   07250000
019661     END-EXEC.                                                    07260000
019662                                                                  07270000
019670 9500-DB2-ABEND.                                                  07280000
019700                                                                  07290000
019800     DISPLAY '** ABEND     **'.                                   07300000
019900     DISPLAY '** PROGRAM   ** = ' PC-PROGRAM-NAME.                07310000
020000     DISPLAY '** PARAGRAPH ** = ' PV-ABEND-PARAGRAPH.             07320000
020100     DISPLAY '** OPERATION ** = ' PV-DB2-OPERATION-ATTEMPTED.     07330000
020200                                                                  07340000
020300     COPY DPPD004.                                                07350000
020400                                                                  07360000
020500     SET PV-DB2-ABEND TO TRUE.                                    07370000
020600     CALL 'ILBOABN0' USING PV-ABEND-CODE.                         07380000
