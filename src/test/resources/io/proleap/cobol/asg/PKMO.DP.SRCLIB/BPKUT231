000100******************************************************************00010001
000200 IDENTIFICATION DIVISION.                                         00020001
000300******************************************************************00030001
000400*                                                                 00040001
000500 PROGRAM-ID.     BPKUT231.                                        00050022
000600 AUTHOR.         TKMAZA9. COGNIZANT TECHNOLOGY SOLUTIONS.         00060001
000700 INSTALLATION.   KOHLS DEPARTMENT STORES.                         00070001
000800 DATE-WRITTEN.   09/21/2010.                                      00080001
000900 DATE-COMPILED.                                                   00090001
001000                                                                  00100001
001100******************************************************************00110001
001200*                                                                *00120001
001300*  THIS PROGRAM EXTRACTS MARKDOWNS, PURCHASE ADJUSTMENTS,         00130001
001400*     AND SHRINK FROM THE MERCH LEDGER TABLE MLT_WKLY_SUM         00140001
001500*     FOR THE ENTERPRISE PLANNING SYSTEM.  OUTPUT WILL BE         00150001
001600*     FORMATED AND FTP'D TO INFORMATICA TO BE LOADED INTO EP.     00160001
001700*                                                                *00170001
001800*  EXTRACT DATES:                                                 00180001
001900*     DEFAULT = USE THE CURRENT PROCESSING DATE FROM              00190001
002000*      THE MERCHANDISE LEDGER CONTROL TABLE (TMLCNTL)             00200001
002100*     OVERRIDE = SUBMIT CONTROL CARD IN THIS FORMAT:              00210001
002200*       2004-10-24 2004-10-30 2004-10-03                          00220001
002300*       COL 1 -10   WEEK BEGIN DATE                               00230022
002400*       COL 12-21   WEEK END DATE                                 00240001
002500*       COL 23-32   MONTH BEGIN DATE                              00250001
002600*                                                                 00260001
002700******************************************************************00270001
002800                                                                  00280001
002900******************************************************************00290001
003000*  CHANGES:                                                       00300001
003100*                                                                 00310001
003200*  MM/DD/CCYY                                                     00320001
003300*                                                                 00330001
003400*  04/22/10  COGNIZANT                                            00340001
003500*            CHANGES FOR WR# 2344                                 00350001
003600*           - NEW PROGRAM                                         00360001
003700*                                                                 00370001
003800*  12/14/2011     COGNIZANT    CRQ# 16360                         00380001
003900*     -  MODIFY EXTRACT DATE LOGIC TO HAVE THE MONTH BEGIN DATE   00390001
004000*        AS START DATE AND LAST WEEKEND DATE AS END DATE.         00400001
004100*                                                                 00410001
004200*  08/21/2012     COGNIZANT    CRQ# 31190                         00420009
004300*     -  UPDATED PGM TO FETCH TRN_TYP_CDE AND TO CHECK IT         00430003
004400*        FOR VALUE OF '030', FOR UPDATE TO MLT00039-PADJ-RTL-AMT. 00440003
004500*        (SAME CHANGES AS WERE MADE TO BPKUT320)                  00450003
004600*     -  REMOVED REFERENCES TO ENT_ID, ENT-ID, LBL_SEQ_NBR,       00460003
004700*        AND LBL-SEQ-NBR, SINCE THEY WERE NOT BEING USED.         00470003
11752A*                                                                 00470122
P51476* 02/26/2015      COGNIZANT    PRB0051476                         00471011
P51476*     -  MAPPED TWO NEW AP CODES 2U & 2V WHICH BELONGS TO         00472011
P51476*        BEAUTY ADVISOR COMMISION(BAC) UNDER LICENSE FEES         00473011
11752A*                                                                 00473122
11752A* 03/31/2017      J SELWITSCHKA                                   00474012
11752A*     -  CHANGES FOR EP UPGRADE                                   00475012
11752A*                                                                 00476022
11752A* 06/23/2017      J SELWITSCHKA                                   00477022
11752A*     - NEW VERSION BPKUT231 IS A COPY OF BPKUT230 WITH EP        00478022
11752A*       UPGRADE CHANGES. CREATED BECAUSE EP UPGRADE VERSION       00479022
11752A*       WILL BE RUNNING IN PARALLEL WITH OLD VERSION.             00479122
11752A*                                                                 00479222
11752A* 07/20/2017      J SELWITSCHKA                                   00479329
11752A*     - REMOVE 07 (DEBIT ALLOWANCE REVERSAL)  FROM DEBIT          00479429
11752A*       ALLOWANCE.                                                00479529
11752A*                                                                 00479729
RONNA * 02/15/2019      RONNA MCDONALD                                  00479830
RONNA *     - INCLUDE PRICE CHANGE REASON CODE 0796 TO LAND IN          00479930
RONNA *       THE PLU/PROMO BUCKET (INSTEAD OF THE OTHER BUCKET)        00480030
RONNA *                                                                 00480130
RONNA * 06/24/2020      RONNA MCDONALD                                  00480231
RONNA *     - INCLUDE PRICE CHANGE REASON CODE 0780 TO LAND IN          00480331
RONNA *       THE MARKETING BUCKET (INSTEAD OF THE OTHER BUCKET)        00480431
RONNA *                                                                 00480531
004800******************************************************************00481003
004900                                                                  00490001
005000******************************************************************00500001
005100 ENVIRONMENT DIVISION.                                            00510001
005200******************************************************************00520001
005300                                                                  00530001
005400******************************************************************00540001
005500 CONFIGURATION SECTION.                                           00550001
005600******************************************************************00560001
005700                                                                  00570001
005800 SOURCE-COMPUTER.        IBM-3090.                                00580001
005900 OBJECT-COMPUTER.        IBM-3090.                                00590001
006000                                                                  00600001
006100******************************************************************00610001
006200 INPUT-OUTPUT SECTION.                                            00620001
006300******************************************************************00630001
006400                                                                  00640001
006500 FILE-CONTROL.                                                    00650001
006600                                                                  00660001
006700     SELECT MLT-ACT-MKDNS-FILE                                    00670001
006800         ASSIGN TO OUT01.                                         00680001
006900                                                                  00690001
007000     SELECT MLT-ACT-OTHINV-FILE                                   00700001
007100         ASSIGN TO OUT02.                                         00710001
007200                                                                  00720001
007300******************************************************************00730001
007400 DATA DIVISION.                                                   00740001
007500******************************************************************00750001
007600                                                                  00760001
007700******************************************************************00770001
007800 FILE SECTION.                                                    00780001
007900******************************************************************00790001
008000                                                                  00800001
008100 FD  MLT-ACT-MKDNS-FILE                                           00810001
008200     RECORDING MODE IS F                                          00820001
008300     LABEL RECORDS ARE STANDARD                                   00830001
008400     BLOCK CONTAINS 0 RECORDS.                                    00840001
008500                                                                  00850001
008600 01  MLT-MKDNSB-REC                   PIC X(350).                 00860001
008700                                                                  00870001
008800 FD  MLT-ACT-OTHINV-FILE                                          00880001
008900     RECORDING MODE IS F                                          00890001
009000     LABEL RECORDS ARE STANDARD                                   00900001
009100     BLOCK CONTAINS 0 RECORDS.                                    00910001
009200                                                                  00920001
009300 01  MLT-OTHINV-REC                   PIC X(350).                 00930001
009400                                                                  00940001
009500******************************************************************00950001
009600 WORKING-STORAGE SECTION.                                         00960001
009700******************************************************************00970001
009800                                                                  00980001
009900 01  PC-PROGRAM-CONSTANTS.                                        00990001
010000     05  PC-1                         PIC 9(01)  VALUE 1.         01000001
010100     05  WS-PHYSSTR                   PIC X(07)  VALUE 'PHYSSTR'. 01010001
010200     05  WS-VIRTSTR                   PIC X(07)  VALUE 'VIRTSTR'. 01020001
010300     05  WS-PRCHG-RSN-CDE             PIC X(04)  VALUE SPACE.     01030001
010400         88  GOLDSTAR-PRCHG-RSN-CDE   VALUES '0753'.              01040001
010500         88  PERM-PRCHG-RSN-CDE       VALUES '0024' '0025'        01050001
11752A*                                            '0026' '0050'        01060013
11752A                                             '0026' '0051' '0052' 01061013
010700                                             '0189'.              01070001
010800         88  PROMO-PRCHG-RSN-CDE      VALUES '0746' '0775'        01080001
RONNA                                              '0777' '0796'.       01090030
011000         88  ASSC-PRCHG-RSN-CDE       VALUES '0790'.              01100001
011100         88  MKTOFF-PRCHG-RSN-CDE     VALUES '0733' '0760'        01110001
011200                                             '0761' '0762'        01120001
RONNA                                               '0763' '0764'       01130031
RONNA                                               '0780'.             01131031
011400                                                                  01140001
011500     05  WS-AP-TRN-CDE                PIC X(02)  VALUE SPACE.     01150001
011600         88  BO-ADJ-AP-TRN-CDE        VALUES '50' '51' '56'       01160001
011700                                             '57' '5A'.           01170001
011800         88  DA-ADJ-AP-TRN-CDE        VALUES '24' '2F' '2H'       01180001
11752A                                             '2I'.                01190028
11752A*        88  DA-REV-ADJ-AP-TRN-CDE    VALUES '2I' '07'.           01200012
012100         88  RTV-ADJ-AP-TRN-CDE       VALUES '20' '21' '22'       01210001
012200                                             '55' '54' '0A'.      01220001
P51476         88  LIC-ADJ-AP-TRN-CDE       VALUES '0D' '0F' '2V'       01230011
P51476                                             '2U'.                01231010
012400 01  PS-PROGRAM-SWITCHES.                                         01240001
012500     05  PS-FETCH-DONE                PIC X      VALUE 'N'.       01250001
012600         88  PS-FETCH-IS-DONE                    VALUE 'Y'.       01260001
012700         88  PS-FETCH-IS-NOT-DONE                VALUE 'N'.       01270001
012800     05  PS-MKDNS-DONE                PIC X      VALUE 'N'.       01280001
012900         88  PS-FETCH-MKDNS-DONE                 VALUE 'Y'.       01290001
013000         88  PS-FETCH-MKDNS-NOT-DONE             VALUE 'N'.       01300001
013100     05  PS-ADJ-DONE                  PIC X      VALUE 'N'.       01310001
013200         88  PS-FETCH-ADJ-DONE                   VALUE 'Y'.       01320001
013300         88  PS-FETCH-ADJ-NOT-DONE               VALUE 'N'.       01330001
013400     05  PS-OTH-ADJ-DONE              PIC X      VALUE 'N'.       01340001
013500         88  PS-FETCH-OTH-ADJ-DONE               VALUE 'Y'.       01350001
013600         88  PS-FETCH-OTH-ADJ-NOT-DONE           VALUE 'N'.       01360001
013700                                                                  01370001
013800 01  PV-PROGRAM-VARIABLES.                                        01380001
013900     05  WS-NINES                     PIC 9(4)  VALUE 9999.       01390001
014000     05  WS-PREV-HOLD-DATE            PIC X(10) VALUE SPACES.     01400001
014100     05  WS-HOLD-DATE                 PIC X(10) VALUE SPACES.     01410001
014200     05  WS-HOLD-ML-LO                PIC S9(9) COMP VALUE ZEROS. 01420001
014300     05  WS-END-COST2-NULLIND         PIC S9(4) COMP VALUE ZEROS. 01430001
014400     05  WS-E-BUS-IND-NULLIND         PIC S9(4) COMP VALUE ZEROS. 01440001
014500     05  WS-HOLD-BP300-DEPT-NBR       PIC 9(4)  VALUE ZEROS.      01450001
014600     05  PV-SEASON                    PIC X(01) VALUE SPACE.      01460001
014700     05  PV-YEAR-WEEK.                                            01470001
014800         10  PV-YEAR                  PIC X(04) VALUE SPACE.      01480001
014900         10  PV-WEEK-NBR              PIC X(02) VALUE SPACE.      01490001
015000     05  PV-WEEK-OF-PERIOD            PIC 9(02) VALUE 99.         01500001
015100     05  PV-WEEKS-IN-PERIOD           PIC 9(02) VALUE 1.          01510001
015200     05  PV-NEXT-PERIOD-SEASON        PIC X(01) VALUE SPACE.      01520001
015300         88  PV-BOP-NOT-NEEDED                  VALUE SPACE.      01530001
015400         88  PV-BOP-NEEDED                      VALUE 'F' 'S'.    01540001
015500     05  PV-NEXT-PERIOD-YEAR          PIC X(04) VALUE SPACE.      01550001
015600     05  PV-NEXT-PERIOD-FIRST-WEEK    PIC X(02) VALUE SPACE.      01560001
015700     05  PV-ABEND-CODE                PIC S9(04) COMP VALUE ZERO. 01570001
015800         88  PV-DB2-ERROR                             VALUE +4013.01580001
015900         88  PV-CALENDAR-ROUTINE-ERROR                VALUE +4019.01590001
016000     05  WS-PARTN-NBR                 PIC S9(4)V COMP.            01600001
016100     05  PV-DB2-OPERATION             PIC X(30).                  01610001
016200     05  PV-PARAGRAPH-NAME            PIC X(30).                  01620001
016300     05  PV-MESSAGE                   PIC X(30).                  01630001
016400     05  WS-ABEND-CODE                PIC S9(04) COMP             01640001
016500                                                 VALUE ZERO.      01650001
016600     05  WS-COST-OUT                  PIC 9(11)V9(2) VALUE ZEROS. 01660001
11752A     05  WS-DISPLAY                   PIC +9(11).99999.           01661014
016700                                                                  01670001
016800 01  WS-COUNTERS.                                                 01680001
016900     05  WS-SLS-DLR-OUT-COUNT         PIC 9(13) VALUE ZEROS.      01690001
017000     05  WS-EOP-DLR-OUT-COUNT         PIC 9(13) VALUE ZEROS.      01700001
017100     05  WS-BOP-CST-OUT-COUNT         PIC 9(13) VALUE ZEROS.      01710001
017200     05  WS-MKDNS-OUT-CNT             PIC 9(13) VALUE ZEROS.      01720001
017300     05  WS-OTHINV-OUT-CNT            PIC 9(13) VALUE ZEROS.      01730001
017400 01  PV-EXTRACT-DATES.                                            01740001
017500     05  PV-EXTRACT-START-DTE         PIC X(10) VALUE SPACE.      01750001
017600     05  PV-EXTRACT-END-DTE           PIC X(10) VALUE SPACE.      01760001
017700     05  PV-FSCL-WK-BEG-DTE           PIC X(10) VALUE SPACE.      01770001
017800     05  PV-FSCL-MN-BEG-DTE           PIC X(10) VALUE SPACE.      01780001
017900     05  PV-FSCL-WK-END-DTE           PIC X(10) VALUE SPACE.      01790001
018000     05  PV-FSCL-WK-LY-BEG-DTE        PIC X(10) VALUE SPACE.      01800001
018100     05  PV-FSCL-WK-LY-END-DTE        PIC X(10) VALUE SPACE.      01810001
018200     05  PV-PFW-BEG-DTE               PIC X(10) VALUE SPACE.      01820001
018300     05  PV-PFW-END-DTE               PIC X(10) VALUE SPACE.      01830001
018400     05  PV-PFM-END-DTE               PIC X(10) VALUE SPACE.      01840001
018500     05  PV-CURR-FSCL-WK-NBR          PIC X(02) VALUE SPACE.      01850001
018600     05  PV-CURR-FSCL-YR-NBR          PIC X(04) VALUE SPACE.      01860001
018700     05  PV-CLO-FSCL-WK-NBR           PIC X(02) VALUE SPACE.      01870001
018800     05  PV-CLO-FSCL-YR-NBR           PIC X(04) VALUE SPACE.      01880001
018900                                                                  01890001
019000 01  LEFT-JUST-TABLE.                                             01900001
019100     05  WS-SUB1                      PIC 9(02)   VALUE ZERO.     01910001
019200     05  WS-SUB2                      PIC 9(02)   VALUE ZERO.     01920001
019300     05  WS-FROM-LBL-VALUE            PIC 9(4) VALUE ZEROS.       01930001
019400     05  WS-FROM-ENT-VALUE            PIC 9(9) VALUE ZEROS.       01940001
019500     05  WS-FROM-VALUE                PIC X(9) VALUE SPACES.      01950001
019600     05  WS-FROM-VALUE-JUST REDEFINES WS-FROM-VALUE               01960001
019700                                      PIC X    OCCURS 9.          01970001
019800     05  WS-TO-VALUE                  PIC X(9) VALUE SPACES.      01980001
019900     05  WS-TO-VALUE-JUST REDEFINES WS-TO-VALUE                   01990001
020000                                      PIC X    OCCURS 9.          02000001
020100                                                                  02010001
020200 01  WS-HOLD-OUTPUT.                                              02020001
020300     05  WS-HOLD-DEPT-NBR             PIC 9(4).                   02030001
020400     05  WS-HOLD-DEPT-NBR-R REDEFINES WS-HOLD-DEPT-NBR.           02040001
020500         10  FILLER                   PIC 9.                      02050001
020600         10  WS-HOLD-DEPT-NBR3        PIC 9(3).                   02060001
020700     05  WS-HOLD-MAJ-CL-NBR           PIC 9(4).                   02070001
020800     05  WS-HOLD-MAJ-CL-NBR-R REDEFINES WS-HOLD-MAJ-CL-NBR.       02080001
020900         10  FILLER                   PIC 9(2).                   02090001
021000         10  WS-HOLD-MAJ-CL-NBR2      PIC 9(2).                   02100001
021100                                                                  02110001
021200**********************************************                    02120001
021300*  KEY FIELDS FOR OUTPUT                                          02130001
021400**********************************************                    02140001
021500 01  WS-FIELDS-OUT.                                               02150001
021600     05  WS-SEASON-OUT                PIC X       VALUE SPACES.   02160001
021700     05  WS-YEAR-OUT                  PIC X(4)    VALUE SPACES.   02170001
021800     05  WS-WEEK-NBR-OUT              PIC X(2)    VALUE SPACES.   02180001
021900     05  WS-VARIABLE-OUT              PIC X(14)   VALUE SPACES.   02190001
022000     05  WS-VALUE-OUT                 PIC                         02200001
022100                                      S9(11)V9(5) COMP-3.         02210001
022200     05  WS-DEPT-NBR-OUT              PIC X(3)    VALUE SPACES.   02220001
022300     05  WS-MAJ-CL-OUT                PIC X(2)    VALUE SPACES.   02230001
022400*                                                                 02240001
022500****************************************************************  02250001
022600* RECORD LAYOUT FOR CONTROL CARD FILE.                            02260001
022700****************************************************************  02270001
022800                                                                  02280001
022900 01  CC-CONTROL-CARD.                                             02290001
023000     05  CC-WK-BEG-DATE               PIC X(10).                  02300001
023100     05  FILLER                       PIC X(01).                  02310001
023200     05  CC-WK-END-DATE               PIC X(10).                  02320001
023300     05  FILLER                       PIC X(01).                  02330001
023400     05  CC-MN-BEG-DATE               PIC X(10).                  02340001
023500     05  FILLER                       PIC X(01).                  02350001
023600                                                                  02360001
023700******************************************************************02370001
023800*  COPYBOOK FOR THE CALENDAR ROUTINE                              02380001
023900******************************************************************02390001
024000                                                                  02400001
024100     COPY DPWS500.                                                02410001
024200 EJECT                                                            02420001
024300                                                                  02430001
024400****************************************************************  02440001
024500*    BRAND-VENDOR ACUTALS DATA OUTPUT TO BP LAYOUT                02450001
024600****************************************************************  02460001
024700     COPY BPRD350.                                                02470001
024800                                                                  02480001
024900****************************************************************  02490001
025000*    COPYBOOK FOR TRANSACTION CODES                               02500001
025100****************************************************************  02510001
025200     COPY MLRD039.                                                02520001
025300                                                                  02530001
025400****************************************************************  02540001
025500* MERCHANDISE LEDGER CONTROL TABLE                                02550001
025600****************************************************************  02560001
025700     EXEC SQL                                                     02570001
025800         INCLUDE TMLCNTL                                          02580001
025900     END-EXEC.                                                    02590001
026000                                                                  02600001
026100****************************************************************  02610001
026200* MERCHANDISE LEDGER WEEKLY CHANNEL TABLE                         02620001
026300****************************************************************  02630001
026400     EXEC SQL                                                     02640001
026500         INCLUDE TWKMCLC                                          02650001
026600     END-EXEC.                                                    02660001
026700                                                                  02670001
026800******************************************************************02680001
026900*  DB2 MLT_WKLY_SUM TABLE LAYOUT                                  02690001
027000******************************************************************02700001
027100     EXEC SQL                                                     02710001
027200          INCLUDE MLT00005                                        02720001
027300     END-EXEC.                                                    02730001
027400*                                                                 02740001
027500******************************************************************02750001
027600*  DB2 MLV_BRND_VND DATALESS KEY LOOKUP                           02760001
027700******************************************************************02770001
027800     EXEC SQL                                                     02780001
027900          INCLUDE MLV00000                                        02790001
028000     END-EXEC.                                                    02800001
028100*                                                                 02810001
028200******************************************************************02820001
028300* MLT_PRCHG_TRN_DTL - PRICE CHANGE AUDIT TABLE                    02830001
028400******************************************************************02840001
028500     EXEC SQL                                                     02850001
028600         INCLUDE MLT00038                                         02860001
028700     END-EXEC.                                                    02870001
028800*                                                                 02880001
028900******************************************************************02890001
029000* MLT_PADJ_TRN_DTL - PURCHASE ADJUSTMENT AUDIT TABLE              02900001
029100******************************************************************02910001
029200     EXEC SQL                                                     02920001
029300         INCLUDE MLT00039                                         02930001
029400     END-EXEC.                                                    02940001
029500*                                                                 02950001
029600******************************************************************02960001
029700*  BRAND VENDOR UTILITY FUNCTIONS.                               *02970001
029800******************************************************************02980001
029900     COPY BVWS001.                                                02990001
030000*                                                                 03000001
030100****************************************************************  03010001
030200* DATE ATTRIBUTE TABLE                                            03020001
030300****************************************************************  03030001
030400     EXEC SQL                                                     03040001
030500         INCLUDE TDTATTR                                          03050001
030600     END-EXEC.                                                    03060001
030700                                                                  03070001
030800****************************************************************  03080001
030900* XMT_LOC TABLE                                                   03090001
031000****************************************************************  03100001
031100     EXEC SQL                                                     03110001
031200         INCLUDE XMT00001                                         03120001
031300     END-EXEC.                                                    03130001
031400                                                                  03140001
031500****************************************************************  03150001
031600* MLT_BRND_VND_DTE_CNTL TABLE                                     03160001
031700****************************************************************  03170001
031800     EXEC SQL                                                     03180001
031900         INCLUDE MLT00021                                         03190001
032000     END-EXEC.                                                    03200001
032100                                                                  03210001
032200****************************************************************  03220001
032300*  COMMUNICATION AREAS FOR DB2                                    03230001
032400****************************************************************  03240001
032500     EXEC SQL                                                     03250001
032600         INCLUDE SQLCA                                            03260001
032700     END-EXEC.                                                    03270001
032800                                                                  03280001
032900******************************************************************03290001
033000* DB2 COMMUNICATION AREA 2                                        03300001
033100******************************************************************03310001
033200                                                                  03320001
033300     COPY SQLCA2.                                                 03330001
033400                                                                  03340001
033500******************************************************************03350001
033600*  DB2 MLT_WKLY_SUM ACTUALS CURSOR                                03360001
033700*     PV-EXTRACT-START DATE = WEEK BEGIN FOR SLS, MKDN, ETC...    03370001
033800*                           = MONTH BEGIN FOR EOP RTL & SHRINK    03380001
033900*     PV EXTRACT-END-DATE   = MONTH END DATE FOR ALL METRICS      03390001
034000*     TAPLAVL = 'BP':  VALID DEPT TO BE SENT TO BP/EP.            03400001
034100*                                                                 03410001
034200******************************************************************03420001
034300     EXEC SQL                                                     03430001
034400        DECLARE ACTUALS_CURSOR CURSOR FOR                         03440001
034500          SELECT A.FSCL_WK_END_DTE                                03450001
034600                ,A.PARTN_NBR                                      03460001
034700                ,A.DEPT_NBR                                       03470001
034800                ,A.MAJ_CL_NBR                                     03480001
034900                ,A.ML_LO_MDSE_LVL_ID                              03490001
035000                ,A.LOC_NBR                                        03500001
035100                                                                  03510001
035200                ,SUM(A.SHNK_RTL_AMT)                              03520001
035300                ,SUM(A.END_INV_RTL_AMT)                           03530001
035400                ,SUM(A.INV_ADJ_RTL_AMT)                           03540001
035500                ,SUM(A.END_INV_COST2_AMT)                         03550001
035600           FROM MLT_WKLY_SUM A                                    03560001
035700                                                                  03570001
035800           WHERE                                                  03580001
035900                                                                  03590001
036000                  PARTN_NBR IN                                    03600001
036100                 (SELECT DISTINCT PARTN_NBR                       03610001
036200                     FROM MLT_PARTN_CNTL C,                       03620001
036300                     (SELECT *                                    03630001
036400                       FROM                                       03640001
036500                        (SELECT B.EFF_BEG_DTE,                    03650001
036600                                B.EFF_END_DTE,                    03660001
036700                                B.DEPT_GP_CDE                     03670001
036800                           FROM MLT_PARTN_BAL B                   03680001
036900                         WHERE                                    03690001
037000                               :PV-EXTRACT-START-DTE <=           03700001
037100                                B.EFF_END_DTE                     03710001
037200                            AND TBL_TM_LVL_CDE = 'W'              03720001
037300                        )VT1                                      03730001
037400                      WHERE                                       03740001
037500                            :PV-EXTRACT-END-DTE >=                03750001
037600                             VT1.EFF_BEG_DTE                      03760001
037700                     )VT2                                         03770001
037800                  WHERE C.TBL_TM_LVL_CDE = 'W'                    03780001
037900                    AND C.DEPT_GP_CDE = VT2.DEPT_GP_CDE           03790001
038000                    AND C.FSCL_DTE BETWEEN                        03800001
038100                          VT2.EFF_BEG_DTE AND VT2.EFF_END_DTE     03810001
038200                    AND C.FSCL_DTE                                03820001
038300               BETWEEN :PV-EXTRACT-START-DTE AND                  03830001
038400                       :PV-EXTRACT-END-DTE                        03840001
038500                 )                                                03850001
038600                                                                  03860001
038700          GROUP BY A.FSCL_WK_END_DTE                              03870001
038800                  ,A.PARTN_NBR                                    03880001
038900                  ,A.DEPT_NBR                                     03890001
039000                  ,A.MAJ_CL_NBR                                   03900001
039100                  ,A.ML_LO_MDSE_LVL_ID                            03910001
039200                  ,A.LOC_NBR                                      03920001
039300          ORDER BY A.FSCL_WK_END_DTE                              03930001
039400                  ,A.PARTN_NBR                                    03940001
039500                  ,A.DEPT_NBR                                     03950001
039600                  ,A.MAJ_CL_NBR                                   03960001
039700                  ,A.ML_LO_MDSE_LVL_ID                            03970001
039800                  ,A.LOC_NBR                                      03980001
039900             WITH UR                                              03990001
040000     END-EXEC.                                                    04000001
040100                                                                  04010001
040200******************************************************************04020001
040300*  DB2 TWKMCLC FREIGHT CURSOR                                     04030001
040400*     PV-EXTRACT-START DATE = WEEK BEGIN FOR SLS, MKDN, ETC...    04040001
040500*                           = MONTH BEGIN FOR EOP RTL & SHRINK    04050001
040600*     PV EXTRACT-END-DATE   = MONTH END DATE FOR ALL METRICS      04060001
040700*                                                                 04070001
040800******************************************************************04080001
040900     EXEC SQL                                                     04090001
041000        DECLARE FREIGHT_CURSOR CURSOR FOR                         04100001
041100          SELECT A.FSCL_WK_END_DTE                                04110001
041200                ,A.DEPT_NBR                                       04120001
041300                ,A.MAJ_CL_NBR                                     04130001
041400                ,A.CHNL_CDE                                       04140001
041500                ,SUM(A.PADJ_FRGT_COST_AMT)                        04150001
041600           FROM TWKMCLC A                                         04160001
041700           WHERE                                                  04170001
041800                A.FSCL_WK_END_DTE                                 04180001
041900                BETWEEN :PV-EXTRACT-START-DTE AND                 04190001
042000                        :PV-EXTRACT-END-DTE   AND                 04200001
042100                A.CHNL_CDE IN ('P','V')                           04210001
042200          GROUP BY A.FSCL_WK_END_DTE                              04220001
042300                  ,A.DEPT_NBR                                     04230001
042400                  ,A.MAJ_CL_NBR                                   04240001
042500                  ,A.CHNL_CDE                                     04250001
042600          ORDER BY A.FSCL_WK_END_DTE                              04260001
042700                  ,A.DEPT_NBR                                     04270001
042800                  ,A.MAJ_CL_NBR                                   04280001
042900                  ,A.CHNL_CDE                                     04290001
043000          WITH UR                                                 04300001
043100     END-EXEC.                                                    04310001
043200                                                                  04320001
043300******************************************************************04330001
043400*  DB2 MLT_PRCHG_TRN_DTL ACTUALS CURSOR  - TO RETRIEVE THE        04340001
043500*  MARKDOWNS AMOUNT FROM THE AUDIT TABLE.                         04350001
043600******************************************************************04360001
043700     EXEC SQL                                                     04370001
043800        DECLARE MKDWNS_CURSOR CURSOR FOR                          04380001
043900         SELECT PRCHG.FSCL_WK_END_DTE,                            04390001
044000                PRCHG.DEPT_NBR,                                   04400001
044100                PRCHG.MAJ_CL_NBR,                                 04410001
044200                PRCHG.LOC_NBR,                                    04420001
044300                PRCHG.PRCHG_RSN_CDE,                              04430001
044400                PRCHG.TRN_TYP_CDE,                                04440001
044500                SUM(PRCHG.PRCHG_RTL_AMT)                          04450001
044600         FROM   MLT_PRCHG_TRN_DTL PRCHG                           04460001
044700         WHERE  PRCHG.FSCL_WK_END_DTE >= :PV-EXTRACT-START-DTE    04470001
044800           AND  PRCHG.FSCL_WK_END_DTE <= :PV-EXTRACT-END-DTE      04480001
044900           AND  PRCHG.TRN_TYP_CDE IN ('040','050')                04490001
045000         GROUP BY  PRCHG.DEPT_NBR,                                04500001
045100                   PRCHG.MAJ_CL_NBR,                              04510001
045200                   PRCHG.LOC_NBR,                                 04520001
045300                   PRCHG.PRCHG_RSN_CDE,                           04530001
045400                   PRCHG.TRN_TYP_CDE,                             04540001
045500                   PRCHG.FSCL_WK_END_DTE                          04550001
045600         WITH UR                                                  04560001
045700     END-EXEC.                                                    04570001
045800                                                                  04580001
045900******************************************************************04590001
046000*  DB2 MLT_PADJ_TRN_DTL ACTUALS CURSOR  - TO RETRIEVE THE         04600001
046100*  ADJUSTMENT RETAIL AMOUNT FROM AUDIT TABLE.                     04610001
046200******************************************************************04620001
046300     EXEC SQL                                                     04630001
046400        DECLARE ADJ_CURSOR CURSOR FOR                             04640001
046500         SELECT PADJ.FSCL_WK_END_DTE,                             04650001
046600                PADJ.DEPT_NBR,                                    04660001
046700                PADJ.MAJ_CL_NBR,                                  04670001
046800                PADJ.LOC_NBR,                                     04680001
046900                PADJ.AP_TRN_CDE,                                  04690001
047000                PADJ.TRN_TYP_CDE,                                 04700001
047100                SUM (PADJ.PADJ_RTL_AMT),                          04710001
047200                SUM (PADJ_GRO_COST_AMT),                          04720001
047300                SUM (PADJ_DISC_COST_AMT),                         04730001
047400                PADJ.DRCR_CDE,                                    04740001
047500                PADJ.FINCL_PRC_GP_CDE                             04750001
047600         FROM   MLT_PADJ_TRN_DTL PADJ                             04760001
047700         WHERE  PADJ.TRN_TYP_CDE IN ('015','030','031')           04770001
047800           AND  PADJ.FSCL_WK_END_DTE >= :PV-EXTRACT-START-DTE     04780001
047900           AND  PADJ.FSCL_WK_END_DTE <= :PV-EXTRACT-END-DTE       04790001
048000           AND  PADJ.AP_TRN_CDE IN (                              04800001
048100                '50','51','56','57','5A',                         04810001
048200                '24','2F','2H','2I','07',                         04820001
048300                '20','21','22','55','54','0A',                    04830001
P51476                '0D','0F','2V','2U')                              04840011
048500         GROUP BY  PADJ.DEPT_NBR,                                 04850001
048600                   PADJ.MAJ_CL_NBR,                               04860001
048700                   PADJ.LOC_NBR,                                  04870001
048800                   PADJ.AP_TRN_CDE,                               04880001
048900                   PADJ.TRN_TYP_CDE,                              04890001
049000                   PADJ.FSCL_WK_END_DTE,                          04900001
049100                   PADJ.DRCR_CDE,                                 04910001
049200                   PADJ.FINCL_PRC_GP_CDE                          04920001
049300         WITH UR                                                  04930001
049400     END-EXEC.                                                    04940001
049500                                                                  04950001
049600******************************************************************04960001
049700*  DB2 MLT_PADJ_TRN_DTL ACTUALS CURSOR  - TO RETRIEVE THE         04970001
049800*  OTHER ADJUSTMENT RETAIL AMOUNT FROM AUDIT TABLE.               04980001
049900******************************************************************04990001
050000     EXEC SQL                                                     05000001
050100        DECLARE OTH_ADJ_CURSOR CURSOR FOR                         05010001
050200         SELECT PADJ.FSCL_WK_END_DTE,                             05020001
050300                PADJ.DEPT_NBR,                                    05030001
050400                PADJ.MAJ_CL_NBR,                                  05040001
050500                PADJ.LOC_NBR,                                     05050001
050600                SUM (PADJ.PADJ_RTL_AMT),                          05060001
050700                SUM (PADJ_GRO_COST_AMT),                          05070001
050800                SUM (PADJ_DISC_COST_AMT),                         05080001
050900                PADJ.DRCR_CDE,                                    05090001
051000                PADJ.FINCL_PRC_GP_CDE,                            05100001
051100                PADJ.TRN_TYP_CDE                                  05110001
051200         FROM   MLT_PADJ_TRN_DTL PADJ                             05120001
051300         WHERE  PADJ.TRN_TYP_CDE IN ('015','030','031')           05130001
051400           AND  PADJ.FSCL_WK_END_DTE >= :PV-EXTRACT-START-DTE     05140001
051500           AND  PADJ.FSCL_WK_END_DTE <= :PV-EXTRACT-END-DTE       05150001
051600           AND  PADJ.AP_TRN_CDE NOT IN (                          05160001
051700                '50','51','56','57','5A',                         05170001
051800                '24','2F','2H','2I',                              05180001
051900                '20','21','22','55','54','0A',                    05190001
P51476                '0D','0F','2V','2U')                              05200011
052100         GROUP BY  PADJ.DEPT_NBR,                                 05210001
052200                   PADJ.MAJ_CL_NBR,                               05220001
052300                   PADJ.LOC_NBR,                                  05230001
052400                   PADJ.FSCL_WK_END_DTE,                          05240001
052500                   PADJ.DRCR_CDE,                                 05250001
052600                   PADJ.FINCL_PRC_GP_CDE,                         05260001
052700                   PADJ.TRN_TYP_CDE                               05270001
052800         WITH UR                                                  05280001
052900     END-EXEC.                                                    05290001
053000                                                                  05300001
053100******************************************************************05310001
053200 PROCEDURE DIVISION.                                              05320001
053300******************************************************************05330001
053400                                                                  05340001
053500 0000-MAINLINE.                                                   05350001
053600                                                                  05360001
053700     DISPLAY ' '.                                                 05370001
053800     DISPLAY '******************'.                                05380001
053900     DISPLAY '* BEGIN BPKUT231 *'.                                05390022
054000     DISPLAY '******************'.                                05400001
054100     DISPLAY ' '.                                                 05410001
054200                                                                  05420001
054300     PERFORM 1000-INITIALIZE.                                     05430001
054400                                                                  05440001
054500*    ***************************************                      05450001
054600*    * DATES = FISCAL MONTH START DATE/PREV FISCAL MONTH START    05460001
054700*    *         DATE THRU CURR WK END                              05470001
054800*    ***************************************                      05480001
054900     PERFORM 2000-ACTUALS.                                        05490001
055000                                                                  05500001
055100*    *************************                                    05510001
055200*    * EOP RTL AND SHRINK RTL                                     05520001
055300*    *************************                                    05530001
055400     PERFORM 2500-EOP-SHR.                                        05540001
055500                                                                  05550001
055600*    ***************************************                      05560001
055700*    * MARKDOWN                                                   05570001
055800*    ***************************************                      05580001
055900     PERFORM 5000-ACTUAL-MKDNS.                                   05590001
056000                                                                  05600001
056100*    ***************************************                      05610001
056200*    * PURCHASE ADJUSTMENTS                                       05620001
056300*    ***************************************                      05630001
056400     PERFORM 5500-ACTUAL-ADJ.                                     05640001
056500                                                                  05650001
056600     PERFORM 6500-ACTUAL-OTH-ADJ.                                 05660001
056700                                                                  05670001
056800     PERFORM 9000-END-OF-JOB.                                     05680001
056900                                                                  05690001
057000     DISPLAY ' '.                                                 05700001
057100     DISPLAY '******************'.                                05710001
057200     DISPLAY '* END   BPKUT231 *'.                                05720022
057300     DISPLAY '******************'.                                05730001
057400     DISPLAY ' '.                                                 05740001
057500                                                                  05750001
057600     STOP RUN.                                                    05760001
057700     EJECT                                                        05770001
057800******************************************************************05780001
057900*   OPEN INPUT AND OUTPUT FILE AND PERFORM THE INITIAL READ.     *05790001
058000******************************************************************05800001
058100 1000-INITIALIZE.                                                 05810001
058200                                                                  05820001
058300*    DISPLAY '1000-INITIALIZE'.                                   05830001
058400                                                                  05840001
058500     OPEN OUTPUT                                                  05850001
058600                 MLT-ACT-MKDNS-FILE                               05860001
058700                 MLT-ACT-OTHINV-FILE.                             05870001
058800                                                                  05880001
058900     PERFORM 1100-SET-EXTRACT-DATES.                              05890001
059000                                                                  05900001
059100******************************************************************05910001
059200*  IF THERE ARE DATES ON THE CONTROL CARD, WE WILL USE THEM       05920001
059300*  IN OUR PROCESSING (OVERRIDE).  IF NOT, WE WILL EXTRACT THE     05930001
059400*  PROCESSING DATES FROM THE BV CONTROL TABLE.                    05940001
059500******************************************************************05950001
059600                                                                  05960001
059700 1100-SET-EXTRACT-DATES.                                          05970001
059800                                                                  05980001
059900*    DISPLAY '1100-SET-EXTRACT-DATES'.                            05990001
060000                                                                  06000001
060100     ACCEPT CC-CONTROL-CARD.                                      06010001
060200                                                                  06020001
060300     IF CC-WK-BEG-DATE = SPACE                                    06030001
060400         DISPLAY '1100- CONTROL CARD = SPACES'                    06040001
060500                 ', USE TMLCNTL DATES'                            06050001
060600                                                                  06060001
060700         PERFORM 1200-USE-ML-CNTL-DATES                           06070001
060800         PERFORM 1400-SET-FISCAL-DATES                            06080001
060900         PERFORM 1600-SET-PROCESS-DATES                           06090001
061000     ELSE                                                         06100001
061100         DISPLAY '****************************************'       06110001
061200         DISPLAY '** OVERRIDE DATE USED:'                         06120001
061300         DISPLAY '** 1100-SET-EXTRACT-DATES'                      06130001
061400         DISPLAY '** ' CC-CONTROL-CARD                            06140001
061500         DISPLAY '****************************************'       06150001
061600         PERFORM 1300-USE-OVERRIDE-DATE                           06160001
061700     END-IF.                                                      06170001
061800                                                                  06180001
061900     DISPLAY ' ' .                                                06190001
062000     DISPLAY '***********************************************'.   06200001
062100     DISPLAY 'BPKUT231 - 1100-SET-EXTRACT-DATES'.                 06210022
062200     DISPLAY 'BPKUT231 - FSCL WK BEG DATE ' PV-FSCL-WK-BEG-DTE.   06220022
062300     DISPLAY 'BPKUT231 - FSCL WK END DATE ' PV-FSCL-WK-END-DTE.   06230022
062400     DISPLAY 'BPKUT231 - FSCL MN BEG DATE ' PV-FSCL-MN-BEG-DTE.   06240022
062500     DISPLAY '***********************************************'.   06250001
062600     DISPLAY ' ' .                                                06260001
062700     PERFORM 1500-CHECK-FOR-END-OF-PERIOD.                        06270001
062800******************************************************************06280001
062900* IF THERE ARE NO DATES ON THE CONTROL CARD,                      06290001
063000* EXTRACT THE FISCAL END DATE FROM THE MERCHANDISE                06300001
063100* LEDGER CONTROL TABLE                                            06310001
063200******************************************************************06320001
063300                                                                  06330001
063400 1200-USE-ML-CNTL-DATES.                                          06340001
063500                                                                  06350001
063600*    DISPLAY '1200-USE-ML-CNTL-DATES'.                            06360001
063700                                                                  06370001
063800     EXEC SQL                                                     06380001
063900          SELECT                                                  06390001
064000                 FSCL_WK_BEG_DTE                                  06400001
064100                ,FSCL_MN_BEG_DTE                                  06410001
064200                ,MXPSTG_FSCL_WK_DTE                               06420001
064300            INTO                                                  06430001
064400                 :DTATTR-FSCL-WK-BEG-DTE                          06440001
064500                ,:DTATTR-FSCL-MN-BEG-DTE                          06450001
064600                ,:MLCNTL-MXPSTG-FSCL-WK-DTE                       06460001
064700            FROM                                                  06470001
064800                 TMLCNTL                                          06480001
064900                ,TDTATTR                                          06490001
065000            WHERE                                                 06500001
065100                 KY_DTE = OPN_FSCL_WK_DTE                         06510001
065200            WITH UR                                               06520001
065300     END-EXEC.                                                    06530001
065400                                                                  06540001
065500     EVALUATE TRUE                                                06550001
065600         WHEN SQLCODE = ZERO                                      06560001
065700             MOVE DTATTR-FSCL-WK-BEG-DTE    TO                    06570001
065800                  PV-FSCL-WK-BEG-DTE                              06580001
065900             MOVE DTATTR-FSCL-MN-BEG-DTE    TO                    06590001
066000                  PV-FSCL-MN-BEG-DTE                              06600001
066100             MOVE MLCNTL-MXPSTG-FSCL-WK-DTE TO                    06610001
066200                  PV-FSCL-WK-END-DTE                              06620001
066300         WHEN OTHER                                               06630001
066400             MOVE '1200-USE-ML-CNTL-DATES'  TO PV-PARAGRAPH-NAME  06640001
066500             MOVE 'SELECT ROW FROM TMLCNTL'                       06650001
066600                                            TO PV-DB2-OPERATION   06660001
066700             PERFORM 9999-SQL-ABEND                               06670001
066800     END-EVALUATE.                                                06680001
066900                                                                  06690001
067000******************************************************************06700001
067100* IF THERE ARE DATES ON THE CONTROL CARD, WE WILL USE THEM IN OUR 06710001
067200* PROCESSING (OVERRIDE).                                          06720001
067300******************************************************************06730001
067400 1300-USE-OVERRIDE-DATE.                                          06740001
067500                                                                  06750001
067600*    DISPLAY '1300-USE-OVERRIDE-DATE'.                            06760001
067700                                                                  06770001
067800     MOVE CC-WK-BEG-DATE     TO PV-FSCL-WK-BEG-DTE.               06780001
067900     MOVE CC-MN-BEG-DATE     TO PV-FSCL-MN-BEG-DTE.               06790001
068000     MOVE CC-WK-END-DATE     TO PV-FSCL-WK-END-DTE.               06800001
068100                                                                  06810001
068200     MOVE PV-FSCL-WK-BEG-DTE TO PV-EXTRACT-START-DTE.             06820001
068300     MOVE PV-FSCL-WK-END-DTE TO PV-EXTRACT-END-DTE.               06830001
068400                                                                  06840001
068500******************************************************************06850001
068600* SET FISCAL DATES TO BE USED IN FINDING PROCESS DATE.            06860001
068700******************************************************************06870001
068800 1400-SET-FISCAL-DATES.                                           06880001
068900                                                                  06890001
069000*    GET PREV MONTH END DATE FOR FINDING THE PROCESSING DATE      06900001
069100                                                                  06910001
069200     EXEC SQL                                                     06920001
069300          SELECT                                                  06930001
069400              PFW_END_DTE                                         06940001
069500             ,PFM_END_DTE                                         06950001
069600          INTO                                                    06960001
069700              :DTATTR-FSCL-WK-END-DTE                             06970001
069800             ,:DTATTR-PFM-END-DTE                                 06980001
069900          FROM                                                    06990001
070000              TDTATTR A                                           07000001
070100          WHERE                                                   07010001
070200              A.KY_DTE = :PV-FSCL-MN-BEG-DTE                      07020001
070300          WITH UR                                                 07030001
070400     END-EXEC.                                                    07040001
070500                                                                  07050001
070600     EVALUATE TRUE                                                07060001
070700         WHEN SQLCODE = ZERO                                      07070001
070800             MOVE DTATTR-FSCL-WK-END-DTE TO PV-PFW-END-DTE        07080001
070900             MOVE DTATTR-PFM-END-DTE     TO PV-PFM-END-DTE        07090001
071000         WHEN OTHER                                               07100001
071100             DISPLAY '** SELECT PFW/PFM END DATE FROM MN BEG'     07110001
071200             DISPLAY '** CURR MN BEG DATE = ' PV-FSCL-MN-BEG-DTE  07120001
071300             MOVE    '1400-SET-FISCAL-DATES'                      07130001
071400                                         TO PV-PARAGRAPH-NAME     07140001
071500             MOVE    'SELECT ROW FROM TDTATTR'                    07150001
071600                                         TO PV-DB2-OPERATION      07160001
071700             PERFORM 9999-SQL-ABEND                               07170001
071800     END-EVALUATE.                                                07180001
071900                                                                  07190001
072000*    GET PREV WEEK END DATE FROM CURR WK END DATE                 07200001
072100*    GET FISCAL WEEK/YR NO FOR THE CURRENT FISCAL WEEK END DATE   07210001
072200*                                                                 07220001
072300     EXEC SQL                                                     07230001
072400          SELECT                                                  07240001
072500              PFW_END_DTE                                         07250001
072600             ,FSCL_WK_NBR                                         07260001
072700             ,FSCL_YR_NBR                                         07270001
072800          INTO                                                    07280001
072900              :DTATTR-FSCL-WK-END-DTE                             07290001
073000             ,:DTATTR-FSCL-WK-NBR                                 07300001
073100             ,:DTATTR-FSCL-YR-NBR                                 07310001
073200          FROM                                                    07320001
073300              TDTATTR A                                           07330001
073400          WHERE                                                   07340001
073500              A.KY_DTE = :PV-FSCL-WK-END-DTE                      07350001
073600          WITH UR                                                 07360001
073700     END-EXEC.                                                    07370001
073800                                                                  07380001
073900     EVALUATE TRUE                                                07390001
074000         WHEN SQLCODE = ZERO                                      07400001
074100             MOVE DTATTR-FSCL-WK-END-DTE TO PV-PFW-END-DTE        07410001
074200             MOVE DTATTR-FSCL-WK-NBR     TO PV-CURR-FSCL-WK-NBR   07420001
074300             MOVE DTATTR-FSCL-YR-NBR     TO PV-CURR-FSCL-YR-NBR   07430001
074400         WHEN OTHER                                               07440001
074500             DISPLAY '** SELECT PFW END DATE FROM CURR WK'        07450001
074600             DISPLAY '** CURR WK END DATE = ' PV-FSCL-WK-END-DTE  07460001
074700             MOVE    '1400-SET-FISCAL-DATES'                      07470001
074800                                          TO PV-PARAGRAPH-NAME    07480001
074900             MOVE    'SELECT ROW FROM TDTATTR'                    07490001
075000                                          TO PV-DB2-OPERATION     07500001
075100             PERFORM 9999-SQL-ABEND                               07510001
075200     END-EVALUATE.                                                07520001
075300                                                                  07530001
075400******************************************************************07540001
075500*  DETERMINE IF DATA FROM THIS RUN INCLUDES THE END OF PERIOD     07550001
075600*    WEEK.  IF YES THEN GET THE SEASON, YEAR, AND WEEK OF THE     07560001
075700*    NEXT PERIOD FOR THE BOP_DLR.                                 07570001
075800******************************************************************07580001
075900 1500-CHECK-FOR-END-OF-PERIOD.                                    07590001
076000                                                                  07600001
076100     INITIALIZE DPG51                                             07610001
076200                DPG52                                             07620001
076300                DPG53                                             07630001
076400                DPG54                                             07640001
076500                DPG55                                             07650001
076600                DPG56.                                            07660001
076700                                                                  07670001
076800     MOVE PV-FSCL-WK-END-DTE       TO DPG52-LK-DATE-INPUT.        07680001
076900     SET DPG51-FISCAL-454-CALENDAR TO TRUE.                       07690001
077000     SET DPG52-LK-DTE-ISO-FMT      TO TRUE.                       07700001
077100     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51                07710001
077200                                             DPG52                07720001
077300                                             DPG53                07730001
077400                                             DPG54                07740001
077500                                             DPG55                07750001
077600                                             DPG56.               07760001
077700                                                                  07770001
077800     EVALUATE TRUE                                                07780001
077900         WHEN DPG54-NO-ERROR                                      07790001
078000            MOVE DPG56-FISCAL-PERIOD-WEEK TO PV-WEEK-OF-PERIOD    07800001
078100            MOVE DPG56-NBR-FISCAL-PERIOD-WEEKS                    07810001
078200                                          TO PV-WEEKS-IN-PERIOD   07820001
078300         WHEN (DPG54-SEVERE-ERROR OR DPG54-DATE-INVALID)          07830001
078400             DISPLAY '** ABEND ** IN BPKUT231'                    07840022
078500             DISPLAY '1500-CHECK-FOR-END-OF-PERIOD'               07850001
078600             DISPLAY 'DATE USED AS INPUT ' PV-EXTRACT-END-DTE     07860001
078700             DISPLAY 'ERROR CALLING THE CALENDAR ROUTINE'         07870001
078800             DISPLAY 'DATE TODAY = ' DPG52-DB2-ISO-DATE           07880001
078900             SET PV-CALENDAR-ROUTINE-ERROR TO TRUE                07890001
079000             PERFORM 9999-SQL-ABEND.                              07900001
079100                                                                  07910001
079200     IF PV-WEEK-OF-PERIOD EQUAL PV-WEEKS-IN-PERIOD                07920001
079300        MOVE DPG56-FISCAL-WEEK-NBR    TO PV-WEEK-NBR              07930001
079400        MOVE DPG56-FISCAL-YEAR-CCYY   TO PV-YEAR                  07940001
079500        PERFORM 1600-GET-NEXT-WEEK-INFO.                          07950001
079600                                                                  07960001
079700******************************************************************07970001
079800*   THIS RUN OF PROGRAM IS FOR A PERIOD END WEEK.  DETERMINE THE  07980001
079900*   INFORMATION NEEDED FOR THE FIRST WEEK OF NEXT PERIOD.         07990001
080000******************************************************************08000001
080100 1600-GET-NEXT-WEEK-INFO.                                         08010001
080200     INITIALIZE DPG51                                             08020001
080300                DPG52                                             08030001
080400                DPG53                                             08040001
080500                DPG54                                             08050001
080600                DPG55                                             08060001
080700                DPG56.                                            08070001
080800                                                                  08080001
080900     MOVE PV-YEAR-WEEK             TO DPG52-LK-DATE-INPUT.        08090001
081000     SET DPG51-FISCAL-454-CALENDAR TO TRUE.                       08100001
081100     SET DPG52-LK-DTE-FISC-WEEK-CC TO TRUE.                       08110001
081200     SET DPG51-INCREMENT-DATE      TO TRUE.                       08120001
081300     MOVE PC-1                     TO                             08130001
081400                                   DPG51-INCR-DECR-FISCAL-WEEK-9. 08140001
081500     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51                08150001
081600                                             DPG52                08160001
081700                                             DPG53                08170001
081800                                             DPG54                08180001
081900                                             DPG55                08190001
082000                                             DPG56.               08200001
082100                                                                  08210001
082200     EVALUATE TRUE                                                08220001
082300         WHEN DPG54-NO-ERROR                                      08230001
082400            MOVE DPG56-FISCAL-WEEK-NBR    TO                      08240001
082500                                         PV-NEXT-PERIOD-FIRST-WEEK08250001
082600            MOVE DPG56-FISCAL-YEAR-CCYY   TO PV-NEXT-PERIOD-YEAR  08260001
082700            MOVE DPG56-CURR-FISCAL-SEASON TO PV-NEXT-PERIOD-SEASON08270001
082800            DISPLAY ' '                                           08280001
082900            DISPLAY '*******************************************' 08290001
083000            DISPLAY 'BPKUT231 - NEXT WEEK INFO'                   08300022
083100            DISPLAY 'BPKUT231 - SEASON  ' PV-NEXT-PERIOD-SEASON   08310022
083200            DISPLAY 'BPKUT231 - YEAR    ' PV-NEXT-PERIOD-YEAR     08320022
083300            DISPLAY 'BPKUT231 - WEEK    '                         08330022
083400                                         PV-NEXT-PERIOD-FIRST-WEEK08340001
083500            DISPLAY '*******************************************' 08350001
083600            DISPLAY ' '                                           08360001
083700         WHEN (DPG54-SEVERE-ERROR OR DPG54-DATE-INVALID)          08370001
083800            DISPLAY '** ABEND ** IN BPKUT231'                     08380022
083900            DISPLAY '1600-GET-NEXT-WEEK-INFO'                     08390001
084000            DISPLAY 'DATE USED AS INPUT ' DPG52-LK-DATE-INPUT     08400001
084100            DISPLAY 'ERROR CALLING THE CALENDAR ROUTINE'          08410001
084200            DISPLAY 'DATE TODAY = ' DPG52-DB2-ISO-DATE            08420001
084300            SET PV-CALENDAR-ROUTINE-ERROR TO TRUE                 08430001
084400            PERFORM 9999-SQL-ABEND.                               08440001
084500                                                                  08450001
084600******************************************************************08460001
084700* TO SELECT THE PROCESS START DATE AND END DATE BASED ON THE      08470001
084800* BV DATE CONTROL TABLE.                                          08480001
084900******************************************************************08490001
085000                                                                  08500001
085100 1600-SET-PROCESS-DATES.                                          08510001
085200                                                                  08520001
085300*    DISPLAY '1600-SET-PROCESS-DATES'.                            08530001
085400                                                                  08540001
085500     EXEC SQL                                                     08550001
085600          SELECT                                                  08560001
085700                CLO_DTE                                           08570001
085800            INTO                                                  08580001
085900                :MLT00021-CLO-DTE                                 08590001
086000            FROM                                                  08600001
086100                 MLT_BRND_VND_DTE_CNTL                            08610001
086200            WITH UR                                               08620001
086300     END-EXEC.                                                    08630001
086400                                                                  08640001
086500     EVALUATE TRUE                                                08650001
086600         WHEN SQLCODE = ZERO                                      08660001
086700                                                                  08670001
11752A*             MOVE PV-FSCL-MN-BEG-DTE TO PV-EXTRACT-START-DTE     08680021
11752A              MOVE PV-FSCL-WK-BEG-DTE TO PV-EXTRACT-START-DTE     08681021
086900                                                                  08690001
087000              MOVE PV-FSCL-WK-END-DTE   TO PV-EXTRACT-END-DTE     08700001
087100                                                                  08710001
087200              DISPLAY 'PROCESS START DATE' PV-EXTRACT-START-DTE   08720001
087300                      'PROCESS END   DATE' PV-EXTRACT-END-DTE     08730001
087400         WHEN OTHER                                               08740001
087500             MOVE '1600-SET-PROCESS-DATES'  TO PV-PARAGRAPH-NAME  08750001
087600             MOVE 'SELECT ROW FROM MLT_BRND_VND_DTE_CNTL'         08760001
087700                                            TO PV-DB2-OPERATION   08770001
087800             PERFORM 9999-SQL-ABEND                               08780001
087900     END-EVALUATE.                                                08790001
088000                                                                  08800001
088100******************************************************************08810001
088200* TO SELECT THE CLO FISCAL MONTH NUMBER BASED ON THE CLO DATE.    08820001
088300******************************************************************08830001
088400                                                                  08840001
088500 1625-SET-CLO-MTH-NUM.                                            08850001
088600                                                                  08860001
088700*    DISPLAY '1625-SET-CLO-MTH-NUM'.                              08870001
088800                                                                  08880001
088900     EXEC SQL                                                     08890001
089000            SELECT                                                08900001
089100                FSCL_WK_NBR                                       08910001
089200               ,FSCL_YR_NBR                                       08920001
089300            INTO                                                  08930001
089400                :DTATTR-FSCL-WK-NBR                               08940001
089500               ,:DTATTR-FSCL-YR-NBR                               08950001
089600            FROM                                                  08960001
089700                TDTATTR                                           08970001
089800            WHERE                                                 08980001
089900                KY_DTE  = :MLT00021-CLO-DTE                       08990001
090000            WITH UR                                               09000001
090100     END-EXEC                                                     09010001
090200                                                                  09020001
090300     EVALUATE TRUE                                                09030001
090400         WHEN SQLCODE = ZERO                                      09040001
090500              MOVE DTATTR-FSCL-WK-NBR     TO PV-CLO-FSCL-WK-NBR   09050001
090600              MOVE DTATTR-FSCL-YR-NBR     TO PV-CLO-FSCL-YR-NBR   09060001
090700                                                                  09070001
090800         WHEN OTHER                                               09080001
090900             DISPLAY '** SELECT FISCAL WEEK NO FROM CLO DATE'     09090001
091000             DISPLAY '** CLO DATE = ' MLT00021-CLO-DTE            09100001
091100             MOVE    '1625-SET-CLO-MTH-NUM'                       09110001
091200                                          TO PV-PARAGRAPH-NAME    09120001
091300             MOVE    'SELECT ROW FROM TDTATTR'                    09130001
091400                                          TO PV-DB2-OPERATION     09140001
091500             PERFORM 9999-SQL-ABEND                               09150001
091600     END-EVALUATE.                                                09160001
091700******************************************************************09170001
091800* TO SELECT THE PREVEIOUS MONTH FISCAL START DATE                 09180001
091900******************************************************************09190001
092000                                                                  09200001
092100 1650-SET-PREV-MTH-DATES.                                         09210001
092200                                                                  09220001
092300*    DISPLAY '1650-SET-PREV-MTH-DATES'.                           09230001
092400                                                                  09240001
092500     EXEC SQL                                                     09250001
092600            SELECT                                                09260001
092700                DISTINCT                                          09270001
092800                FSCL_MN_BEG_DTE                                   09280001
092900            INTO                                                  09290001
093000                :DTATTR-FSCL-MN-BEG-DTE                           09300001
093100            FROM                                                  09310001
093200                TDTATTR                                           09320001
093300            WHERE                                                 09330001
093400                FSCL_MN_END_DTE = :DTATTR-PFM-END-DTE             09340001
093500            WITH UR                                               09350001
093600     END-EXEC                                                     09360001
093700                                                                  09370001
093800     EVALUATE TRUE                                                09380001
093900         WHEN SQLCODE = ZERO                                      09390001
094000             MOVE DTATTR-FSCL-MN-BEG-DTE TO PV-EXTRACT-START-DTE  09400001
094100                                                                  09410001
094200         WHEN OTHER                                               09420001
094300             DISPLAY '** SELECT PFM BEGIN DATE FROM PFM END DATE' 09430001
094400             DISPLAY '** PFM END DATE = ' DTATTR-PFM-END-DTE      09440001
094500             MOVE    '1650-SET-PREV-MTH-DATES'                    09450001
094600                                          TO PV-PARAGRAPH-NAME    09460001
094700             MOVE    'SELECT ROW FROM TDTATTR'                    09470001
094800                                          TO PV-DB2-OPERATION     09480001
094900             PERFORM 9999-SQL-ABEND                               09490001
095000     END-EVALUATE.                                                09500001
095100******************************************************************09510001
095200*  PROCESS ALL ACTUALS.                                           09520001
095300******************************************************************09530001
095400 2000-ACTUALS.                                                    09540001
095500                                                                  09550001
095600*    DISPLAY '2000-ACTUALS'.                                      09560001
095700                                                                  09570001
095800     DISPLAY '2000- ACTUALS START DTE = ' PV-EXTRACT-START-DTE.   09580001
095900     DISPLAY '2000- ACTUALS END DTE   = ' PV-EXTRACT-END-DTE.     09590001
096000     DISPLAY ' '.                                                 09600001
096100                                                                  09610001
096200     PERFORM 2550-OPEN-FREIGHT-CURSOR.                            09620001
096300                                                                  09630001
096400     PERFORM 2560-FETCH-FREIGHT-CURSOR.                           09640001
096500                                                                  09650001
096600     PERFORM                                                      09660001
096700       UNTIL PS-FETCH-IS-DONE                                     09670001
096800         PERFORM 2530-FORMAT-FREIGHT-OUT                          09680001
096900         PERFORM 2560-FETCH-FREIGHT-CURSOR                        09690001
097000     END-PERFORM.                                                 09700001
097100                                                                  09710001
097200     PERFORM 2570-CLOSE-FREIGHT-CURSOR.                           09720001
097300                                                                  09730001
097400******************************************************************09740001
097500 2510-OPEN-ACTUAL-CURSOR.                                         09750001
097600******************************************************************09760001
097700     DISPLAY '2510-OPEN-ACTUAL-CURSOR'.                           09770001
097800                                                                  09780001
097900     EXEC SQL                                                     09790001
098000         OPEN ACTUALS_CURSOR                                      09800001
098100     END-EXEC.                                                    09810001
098200                                                                  09820001
098300     EVALUATE TRUE                                                09830001
098400         WHEN SQLCODE = 0                                         09840001
098500             DISPLAY '2510-OPEN O.K.'                             09850001
098600             DISPLAY ' '                                          09860001
098700         WHEN OTHER                                               09870001
098800             DISPLAY '2510- OPEN FAILED'                          09880001
098900             MOVE    '2510-OPEN-ACTUAL-CURSOR'                    09890001
099000                                 TO PV-PARAGRAPH-NAME             09900001
099100             MOVE    'MLT_WKLY_SUM TABLE ERROR'                   09910001
099200                                 TO PV-MESSAGE                    09920001
099300             MOVE    'OPEN CURSOR'                                09930001
099400                                 TO PV-DB2-OPERATION              09940001
099500             PERFORM 9999-SQL-ABEND                               09950001
099600     END-EVALUATE.                                                09960001
099700                                                                  09970001
099800 EJECT                                                            09980001
099900                                                                  09990001
100000******************************************************************10000001
100100 2550-OPEN-FREIGHT-CURSOR.                                        10010001
100200******************************************************************10020001
100300     DISPLAY '2550-OPEN-FREIGHT-CURSOR'.                          10030001
100400                                                                  10040001
100500     EXEC SQL                                                     10050001
100600         OPEN FREIGHT_CURSOR                                      10060001
100700     END-EXEC.                                                    10070001
100800                                                                  10080001
100900     EVALUATE TRUE                                                10090001
101000         WHEN SQLCODE = 0                                         10100001
101100             DISPLAY '2550-OPEN O.K.'                             10110001
101200             DISPLAY ' '                                          10120001
101300         WHEN OTHER                                               10130001
101400             DISPLAY '2550- OPEN FAILED'                          10140001
101500             MOVE    '2550-OPEN-ACTUAL-CURSOR'                    10150001
101600                                 TO PV-PARAGRAPH-NAME             10160001
101700             MOVE    'TWKMCLC TABLE ERROR'                        10170001
101800                                 TO PV-MESSAGE                    10180001
101900             MOVE    'OPEN CURSOR'                                10190001
102000                                 TO PV-DB2-OPERATION              10200001
102100             PERFORM 9999-SQL-ABEND                               10210001
102200     END-EVALUATE.                                                10220001
102300                                                                  10230001
102400 EJECT                                                            10240001
102500                                                                  10250001
102600******************************************************************10260001
102700 2520-FETCH-ACTUAL-CURSOR.                                        10270001
102800******************************************************************10280001
102900                                                                  10290001
103000*    DISPLAY '2520-FETCH-ACTUAL-CURSOR'.                          10300001
103100                                                                  10310001
103200     INITIALIZE DCLMLT00005                                       10320001
103300                WS-END-COST2-NULLIND                              10330001
103400                WS-E-BUS-IND-NULLIND.                             10340001
103500     EXEC SQL                                                     10350001
103600         FETCH ACTUALS_CURSOR                                     10360001
103700          INTO :MLT00005-FSCL-WK-END-DTE                          10370001
103800              ,:MLT00005-PARTN-NBR                                10380001
103900              ,:MLT00005-DEPT-NBR                                 10390001
104000              ,:MLT00005-MAJ-CL-NBR                               10400001
104100              ,:MLT00005-ML-LO-MDSE-LVL-ID                        10410001
104200              ,:MLT00005-LOC-NBR                                  10420001
104300               :WS-E-BUS-IND-NULLIND                              10430001
104400              ,:MLT00005-SHNK-RTL-AMT                             10440001
104500              ,:MLT00005-END-INV-RTL-AMT                          10450001
104600              ,:MLT00005-INV-ADJ-RTL-AMT                          10460001
104700              ,:MLT00005-END-INV-COST2-AMT                        10470001
104800               :WS-END-COST2-NULLIND                              10480001
104900     END-EXEC.                                                    10490001
105000                                                                  10500001
105100     EVALUATE TRUE                                                10510001
105200         WHEN SQLCODE = 0                                         10520001
105300             IF WS-END-COST2-NULLIND < 0                          10530001
105400                MOVE ZERO TO MLT00005-END-INV-COST2-AMT           10540001
105500             END-IF                                               10550001
105600                                                                  10560001
105700         WHEN SQLCODE = +100                                      10570001
105800             MOVE 'Y'     TO PS-FETCH-DONE                        10580001
105900                                                                  10590001
106000         WHEN OTHER                                               10600001
106100             MOVE '2520-FETCH-ACTUAL-CURSOR'                      10610001
106200                          TO PV-PARAGRAPH-NAME                    10620001
106300             MOVE 'MLT_WKLY_SUM TABLE ERROR'                      10630001
106400                          TO PV-MESSAGE                           10640001
106500             MOVE 'FETCH' TO PV-DB2-OPERATION                     10650001
106600             PERFORM 9999-SQL-ABEND                               10660001
106700     END-EVALUATE.                                                10670001
106800                                                                  10680001
106900 EJECT                                                            10690001
107000                                                                  10700001
107100******************************************************************10710001
107200 2560-FETCH-FREIGHT-CURSOR.                                       10720001
107300******************************************************************10730001
107400                                                                  10740001
107500*    DISPLAY '2560-FETCH-FREIGHT-CURSOR'.                         10750001
107600                                                                  10760001
107700     INITIALIZE DCLTWKMCLC.                                       10770001
107800                                                                  10780001
107900     EXEC SQL                                                     10790001
108000         FETCH FREIGHT_CURSOR                                     10800001
108100          INTO :WKMCLC-FSCL-WK-END-DTE                            10810001
108200              ,:WKMCLC-DEPT-NBR                                   10820001
108300              ,:WKMCLC-MAJ-CL-NBR                                 10830001
108400              ,:WKMCLC-CHNL-CDE                                   10840001
108500              ,:WKMCLC-PADJ-FRGT-COST-AMT                         10850001
108600     END-EXEC.                                                    10860001
108700                                                                  10870001
108800     EVALUATE TRUE                                                10880001
108900         WHEN SQLCODE = 0                                         10890001
109000             CONTINUE                                             10900001
109100                                                                  10910001
109200         WHEN SQLCODE = +100                                      10920001
109300             MOVE 'Y'     TO PS-FETCH-DONE                        10930001
109400                                                                  10940001
109500         WHEN OTHER                                               10950001
109600             MOVE '2560-FETCH-FREIGHT-CURSOR'                     10960001
109700                          TO PV-PARAGRAPH-NAME                    10970001
109800             MOVE 'TWKMCLC TABLE ERROR'                           10980001
109900                          TO PV-MESSAGE                           10990001
110000             MOVE 'FETCH' TO PV-DB2-OPERATION                     11000001
110100             PERFORM 9999-SQL-ABEND                               11010001
110200     END-EVALUATE.                                                11020001
110300                                                                  11030001
110400 EJECT                                                            11040001
110500                                                                  11050001
110600******************************************************************11060001
110700 2540-CLOSE-ACTUAL-CURSOR.                                        11070001
110800******************************************************************11080001
110900     EXEC SQL                                                     11090001
111000         CLOSE ACTUALS_CURSOR                                     11100001
111100     END-EXEC.                                                    11110001
111200                                                                  11120001
111300     EVALUATE TRUE                                                11130001
111400         WHEN SQLCODE = 0                                         11140001
111500             CONTINUE                                             11150001
111600         WHEN OTHER                                               11160001
111700             MOVE '2540-CLOSE-ACTUAL-CURSOR'                      11170001
111800                                 TO PV-PARAGRAPH-NAME             11180001
111900             MOVE 'MLT_WKLY_SUM TABLE ERROR'                      11190001
112000                                 TO PV-MESSAGE                    11200001
112100             MOVE 'CLOSE CURSOR' TO PV-DB2-OPERATION              11210001
112200             PERFORM 9999-SQL-ABEND                               11220001
112300     END-EVALUATE.                                                11230001
112400                                                                  11240001
112500******************************************************************11250001
112600 2570-CLOSE-FREIGHT-CURSOR.                                       11260001
112700******************************************************************11270001
112800     EXEC SQL                                                     11280001
112900         CLOSE FREIGHT_CURSOR                                     11290001
113000     END-EXEC.                                                    11300001
113100                                                                  11310001
113200     EVALUATE TRUE                                                11320001
113300         WHEN SQLCODE = 0                                         11330001
113400             CONTINUE                                             11340001
113500         WHEN OTHER                                               11350001
113600             MOVE '2570-CLOSE-FREIGHT-CURSOR'                     11360001
113700                                 TO PV-PARAGRAPH-NAME             11370001
113800             MOVE 'TWKMCLC TABLE ERROR'                           11380001
113900                                 TO PV-MESSAGE                    11390001
114000             MOVE 'CLOSE CURSOR' TO PV-DB2-OPERATION              11400001
114100             PERFORM 9999-SQL-ABEND                               11410001
114200     END-EVALUATE.                                                11420001
114300                                                                  11430001
114400******************************************************************11440001
114500*  FORMAT ACTUALS OUTPUT                                          11450001
114600******************************************************************11460001
114700 2530-FORMAT-FREIGHT-OUT.                                         11470001
114800*                                                                 11480001
114900*    DISPLAY '2530-FORMAT-FREIGHT-OUT'.                           11490001
115000*                                                                 11500001
115100     INITIALIZE BP350-RECORD.                                     11510001
115200*                                                                 11520001
115300     MOVE WKMCLC-DEPT-NBR     TO WS-HOLD-DEPT-NBR.                11530001
115400     MOVE WKMCLC-MAJ-CL-NBR   TO WS-HOLD-MAJ-CL-NBR.              11540001
115500                                                                  11550001
115600*    ********************************                             11560001
115700*    * DO NOT OUTPUT CURRENT RECORD IF                            11570001
115800*    *  DKEY IS NOT FOUND!                                        11580001
115900*    *  ==> DKEY SHOULD = ZEROS, AND NO                           11590001
116000*    *      ACTUALS SHOULD EXIST!                                 11600001
116100*    ********************************                             11610001
116200                                                                  11620001
116300     PERFORM 2110-ACTUAL-OUT.                                     11630001
116400                                                                  11640001
116500******************************************************************11650001
116600*  FORMAT AND OUTPUT ACTUALS OUTPUT                               11660001
116700******************************************************************11670001
116800 2110-ACTUAL-OUT.                                                 11680001
116900*                                                                 11690001
117000*    DISPLAY '2110-ACTUAL-OUT'.                                   11700001
117100*                                                                 11710001
117200     MOVE WKMCLC-FSCL-WK-END-DTE                                  11720001
117300                          TO WS-HOLD-DATE.                        11730001
117400                                                                  11740001
117500     IF WS-HOLD-DATE NOT = WS-PREV-HOLD-DATE                      11750001
117600        PERFORM 2200-GET-EOP-DATE-ATTRIBUTES.                     11760001
117700                                                                  11770001
117800     MOVE PV-SEASON       TO WS-SEASON-OUT.                       11780001
117900     MOVE PV-YEAR         TO WS-YEAR-OUT.                         11790001
118000     MOVE PV-WEEK-NBR     TO WS-WEEK-NBR-OUT.                     11800001
118100                                                                  11810001
118200*   **********************************************************    11820001
118300*    EP STANDARD IS ML DATA IN THE THOUSANDTHS (/ BY 1000)        11830001
118400*   **********************************************************    11840001
118500                                                                  11850001
118600*   CALCULATION OF ADJUSTMENT COST AMOUNTS                        11860001
118700                                                                  11870001
118800     DIVIDE WKMCLC-PADJ-FRGT-COST-AMT BY  1000                    11880001
118900                 GIVING BP350-FRT-CST-BTY                         11890001
119000                                                                  11900001
119100*   POPULATION OF PHYSICAL/VIRTUAL STORES BASED ON LOCATION NO    11910001
119200                                                                  11920001
119300     IF  WKMCLC-CHNL-CDE = 'V'                                    11930001
119400         MOVE WS-VIRTSTR        TO  BP350-ORGANIZATION-NAME-OTH   11940001
119500     END-IF                                                       11950001
119600                                                                  11960001
119700     IF  WKMCLC-CHNL-CDE = 'P'                                    11970001
119800         MOVE WS-PHYSSTR        TO  BP350-ORGANIZATION-NAME-OTH   11980001
119900     END-IF                                                       11990001
120000                                                                  12000001
120100*   WRITING THE RECORDS INTO THE OUTPUT FILE                      12010001
120200                                                                  12020001
120300     PERFORM 8300-WRITE-ACTUAL-OTHINV-REC.                        12030001
120400                                                                  12040001
120500******************************************************************12050001
120600* USING THE FSCL-WK-END-DTE, GET THE SEASON DESCRIPTION, FISCAL  *12060001
120700* YEAR # AND FISCAL WEEK # FROM THE DATE ATTRIBUTE TABLE FOR     *12070001
120800* CREATING THE TIME MEMBER FOR THE FORMATTED AIM FILE.           *12080001
120900******************************************************************12090001
121000 2200-GET-EOP-DATE-ATTRIBUTES.                                    12100001
121100                                                                  12110001
121200     MOVE WS-HOLD-DATE              TO WS-PREV-HOLD-DATE.         12120001
121300                                                                  12130001
121400     INITIALIZE DPG51                                             12140001
121500                DPG52                                             12150001
121600                DPG53                                             12160001
121700                DPG54                                             12170001
121800                DPG55                                             12180001
121900                DPG56.                                            12190001
122000                                                                  12200001
122100     MOVE WS-HOLD-DATE                     TO DPG52-LK-DATE-INPUT.12210001
122200     SET DPG51-FISCAL-454-CALENDAR         TO TRUE.               12220001
122300     SET DPG52-LK-DTE-ISO-FMT              TO TRUE.               12230001
122400     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51                12240001
122500                                             DPG52                12250001
122600                                             DPG53                12260001
122700                                             DPG54                12270001
122800                                             DPG55                12280001
122900                                             DPG56.               12290001
123000     EVALUATE TRUE                                                12300001
123100         WHEN DPG54-NO-ERROR                                      12310001
123200             MOVE DPG56-FISCAL-WEEK-NBR    TO PV-WEEK-NBR         12320001
123300             MOVE DPG56-FISCAL-YEAR-CCYY   TO PV-YEAR             12330001
123400             MOVE DPG56-CURR-FISCAL-SEASON TO PV-SEASON           12340001
123500             MOVE DPG56-FISCAL-PERIOD-WEEK TO PV-WEEK-OF-PERIOD   12350001
123600             MOVE DPG56-NBR-FISCAL-PERIOD-WEEKS                   12360001
123700                                           TO PV-WEEKS-IN-PERIOD  12370001
123800                                                                  12380001
123900         WHEN (DPG54-SEVERE-ERROR OR DPG54-DATE-INVALID)          12390001
124000             DISPLAY '** ABEND ** IN BPKUT231'                    12400022
124100             DISPLAY '2200-GET-EOP-DATE-ATTRIBUTES'               12410001
124200             DISPLAY 'DATE USED AS INPUT ' PV-EXTRACT-END-DTE     12420001
124300             DISPLAY 'DPG52-LK-DATE-INPUT ' DPG52-LK-DATE-INPUT   12430001
124400             DISPLAY 'ERROR CALLING THE CALENDAR ROUTINE'         12440001
124500             DISPLAY 'DATE TODAY = ' DPG52-DB2-ISO-DATE           12450001
124600             SET PV-CALENDAR-ROUTINE-ERROR TO TRUE                12460001
124700             PERFORM 9999-SQL-ABEND                               12470001
124800     END-EVALUATE.                                                12480001
124900                                                                  12490001
125000******************************************************************12500001
125100*  PROCESS ALL EOP RTL AND SHRINK RTL FOR THE PROCESS DATES       12510001
125200******************************************************************12520001
125300                                                                  12530001
125400 2500-EOP-SHR.                                                    12540001
125500                                                                  12550001
125600*    DISPLAY '2500-EOP-SHR '.                                     12560001
125700                                                                  12570001
125800     DISPLAY ' '.                                                 12580001
125900     DISPLAY '2500- EOP/SHR START DTE = ' PV-EXTRACT-START-DTE.   12590001
126000     DISPLAY '2500- EOP/SHR END DTE   = ' PV-EXTRACT-END-DTE.     12600001
126100     DISPLAY ' '.                                                 12610001
126200                                                                  12620001
126300     MOVE 'N' TO PS-FETCH-DONE.                                   12630001
126400                                                                  12640001
126500     PERFORM 2510-OPEN-ACTUAL-CURSOR.                             12650001
126600                                                                  12660001
126700     PERFORM 2520-FETCH-ACTUAL-CURSOR.                            12670001
126800                                                                  12680001
126900     PERFORM                                                      12690001
127000       UNTIL PS-FETCH-IS-DONE                                     12700001
127100         PERFORM 2600-FORMAT-EOP-SHR-OUT                          12710001
127200         PERFORM 2520-FETCH-ACTUAL-CURSOR                         12720001
127300     END-PERFORM.                                                 12730001
127400                                                                  12740001
127500     PERFORM 2540-CLOSE-ACTUAL-CURSOR.                            12750001
127600                                                                  12760001
127700******************************************************************12770001
127800*  FORMAT CLSBRDVND EOP AND SHRINK RTL OUTPUT                     12780001
127900******************************************************************12790001
128000 2600-FORMAT-EOP-SHR-OUT.                                         12800001
128100*                                                                 12810001
128200     INITIALIZE BP350-RECORD.                                     12820001
128300                                                                  12830001
128400     MOVE MLT00005-DEPT-NBR     TO WS-HOLD-DEPT-NBR.              12840001
128500     MOVE MLT00005-MAJ-CL-NBR   TO WS-HOLD-MAJ-CL-NBR.            12850001
128600                                                                  12860001
128700*    ********************************                             12870001
128800*    * DO NOT OUTPUT CURRENT RECORD IF                            12880001
128900*    *  DKEY IS NOT FOUND!                                        12890001
129000*    *  ==> DKEY SHOULD = ZEROS, AND NO                           12900001
129100*    *      ACTUALS SHOULD EXIST!                                 12910001
129200*    ********************************                             12920001
129300     PERFORM 2610-EOP-SHR-OUT.                                    12930001
129400                                                                  12940001
129500******************************************************************12950001
129600*  FORMAT AND OUTPUT EOP AND SHRINK RTL                           12960001
129700******************************************************************12970001
129800                                                                  12980001
129900 2610-EOP-SHR-OUT.                                                12990001
130000*    DISPLAY '2610-EOP-SHR-OUT'.                                  13000001
130100                                                                  13010001
130200     MOVE MLT00005-FSCL-WK-END-DTE TO WS-HOLD-DATE.               13020001
130300                                                                  13030001
130400     IF WS-HOLD-DATE NOT = WS-PREV-HOLD-DATE                      13040001
130500         PERFORM 2200-GET-EOP-DATE-ATTRIBUTES.                    13050001
130600                                                                  13060001
130700     MOVE PV-SEASON                TO WS-SEASON-OUT.              13070001
130800     MOVE PV-YEAR                  TO WS-YEAR-OUT.                13080001
130900     MOVE PV-WEEK-NBR              TO WS-WEEK-NBR-OUT.            13090001
131000                                                                  13100001
131100******************************************************************13110001
131200*    EP STANDARD IS ML DATA IN THE THOUSANDTHS (/ BY 1000)       *13120001
131300******************************************************************13130001
131400                                                                  13140001
131500*   CALCULATION OF EOP & SHRINK AMOUNTS                           13150001
131600                                                                  13160001
131700     ADD MLT00005-INV-ADJ-RTL-AMT      TO MLT00005-SHNK-RTL-AMT.  13170001
131800     DIVIDE MLT00005-SHNK-RTL-AMT      BY 1000                    13180001
131900                GIVING BP350-SHR-DLR-BTY.                         13190001
132000                                                                  13200001
132100*   POPULATION OF PHYSICAL/VIRTUAL STORES BASED ON LOCATION NO    13210001
132200                                                                  13220001
132300     IF  MLT00005-LOC-NBR   > 0                                   13230001
132400         MOVE WS-VIRTSTR        TO  BP350-ORGANIZATION-NAME-OTH   13240001
132500     ELSE                                                         13250001
132600         MOVE WS-PHYSSTR        TO  BP350-ORGANIZATION-NAME-OTH   13260001
132700     END-IF                                                       13270001
132800                                                                  13280001
132900*   WRITING THE RECORDS INTO THE OUTPUT FILE                      13290001
133000                                                                  13300001
133100     PERFORM 8300-WRITE-ACTUAL-OTHINV-REC.                        13310001
133200                                                                  13320001
133300******************************************************************13330001
133400*  PROCESS ALL MARK DOWN AMOUNTS FROM AUDIT TABLE                 13340001
133500******************************************************************13350001
133600 5000-ACTUAL-MKDNS.                                               13360001
133700*    DISPLAY '5000-ACTUALS'.                                      13370001
133800*                                                                 13380001
133900     PERFORM 5100-OPEN-MKDNS-CURSOR.                              13390001
134000                                                                  13400001
134100     PERFORM 5200-FETCH-MKDNS-CURSOR.                             13410001
134200                                                                  13420001
134300     PERFORM                                                      13430001
134400       UNTIL PS-FETCH-MKDNS-DONE                                  13440001
134500         PERFORM 5300-FORMAT-ACTUAL-MKDNS-OUT                     13450001
134600         PERFORM 5200-FETCH-MKDNS-CURSOR                          13460001
134700     END-PERFORM.                                                 13470001
134800                                                                  13480001
134900     PERFORM 5400-CLOSE-MKDNS-CURSOR.                             13490001
135000                                                                  13500001
135100******************************************************************13510001
135200 5100-OPEN-MKDNS-CURSOR.                                          13520001
135300******************************************************************13530001
135400     DISPLAY '5100-OPEN-MKDNS-CURSOR'.                            13540001
135500                                                                  13550001
135600     EXEC SQL                                                     13560001
135700         OPEN MKDWNS_CURSOR                                       13570001
135800     END-EXEC.                                                    13580001
135900                                                                  13590001
136000     EVALUATE TRUE                                                13600001
136100         WHEN SQLCODE = 0                                         13610001
136200             DISPLAY '5100-OPEN O.K.'                             13620001
136300             DISPLAY ' '                                          13630001
136400         WHEN OTHER                                               13640001
136500             DISPLAY '5100- OPEN FAILED'                          13650001
136600             MOVE    '5100-OPEN-MKDNS-CURSOR'                     13660001
136700                                 TO PV-PARAGRAPH-NAME             13670001
136800             MOVE    'MLT_PRCHG_TRN_DTL ERROR'                    13680001
136900                                 TO PV-MESSAGE                    13690001
137000             MOVE    'OPEN CURSOR'                                13700001
137100                                 TO PV-DB2-OPERATION              13710001
137200             PERFORM 9999-SQL-ABEND                               13720001
137300     END-EVALUATE.                                                13730001
137400                                                                  13740001
137500 EJECT                                                            13750001
137600                                                                  13760001
137700******************************************************************13770001
137800 5200-FETCH-MKDNS-CURSOR.                                         13780001
137900******************************************************************13790001
138000*    DISPLAY '5200-FETCH-MKDNS-CURSOR'.                           13800001
138100     INITIALIZE DCLMLT00038.                                      13810001
138200                                                                  13820001
138300     EXEC SQL                                                     13830001
138400         FETCH MKDWNS_CURSOR                                      13840001
138500          INTO :MLT00038-FSCL-WK-END-DTE                          13850001
138600              ,:MLT00038-DEPT-NBR                                 13860001
138700              ,:MLT00038-MAJ-CL-NBR                               13870001
138800              ,:MLT00038-LOC-NBR                                  13880001
138900              ,:MLT00038-PRCHG-RSN-CDE                            13890001
139000              ,:MLT00038-TRN-TYP-CDE                              13900001
139100              ,:MLT00038-PRCHG-RTL-AMT                            13910001
139200     END-EXEC.                                                    13920001
139300                                                                  13930001
139400     EVALUATE TRUE                                                13940001
139500         WHEN SQLCODE = 0                                         13950001
139600             CONTINUE                                             13960027
139700                                                                  13970001
139800         WHEN SQLCODE = +100                                      13980001
139900             MOVE 'Y'            TO PS-MKDNS-DONE                 13990001
140000                                                                  14000001
140100         WHEN OTHER                                               14010001
140200             MOVE '5200-FETCH-MKDNS-CURSOR'                       14020001
140300                                 TO PV-PARAGRAPH-NAME             14030001
140400             MOVE 'MLT_PRCHG_TRN_DTL  ERROR'                      14040001
140500                                 TO PV-MESSAGE                    14050001
140600             MOVE 'FETCH'        TO PV-DB2-OPERATION              14060001
140700             PERFORM 9999-SQL-ABEND                               14070001
140800     END-EVALUATE.                                                14080001
140900                                                                  14090001
141000 EJECT                                                            14100001
141100                                                                  14110001
141200******************************************************************14120001
141300*  FORMAT THE DATA & WRITE INTO THE OUTPUT FILE.                  14130001
141400******************************************************************14140001
141500 5300-FORMAT-ACTUAL-MKDNS-OUT.                                    14150001
141600*    DISPLAY '5300-FORMAT-ACTUAL-MKDNS-OUT'.                      14160001
141700     INITIALIZE BP350-RECORD.                                     14170001
141800*                                                                 14180001
141900     MOVE MLT00038-DEPT-NBR     TO WS-HOLD-DEPT-NBR.              14190001
142000     MOVE MLT00038-MAJ-CL-NBR   TO WS-HOLD-MAJ-CL-NBR.            14200001
142100     MOVE MLT00038-FSCL-WK-END-DTE                                14210001
142200                                TO WS-HOLD-DATE.                  14220001
142300     IF WS-HOLD-DATE NOT = WS-PREV-HOLD-DATE                      14230001
142400        PERFORM 2200-GET-EOP-DATE-ATTRIBUTES.                     14240001
142500                                                                  14250001
142600     MOVE PV-SEASON             TO WS-SEASON-OUT.                 14260001
142700     MOVE PV-YEAR               TO WS-YEAR-OUT.                   14270001
142800     MOVE PV-WEEK-NBR           TO WS-WEEK-NBR-OUT.               14280001
142900                                                                  14290001
143000*   POPULATION OF PHYSICAL/VIRTUAL STORES BASED ON LOCATION NO    14300001
143100                                                                  14310001
143200     IF  MLT00038-LOC-NBR   > 0                                   14320001
143300         MOVE WS-VIRTSTR        TO BP350-ORGANIZATION-NAME-MKD    14330001
143400                                   BP350-ORGANIZATION-NAME-OTH    14340001
143500     ELSE                                                         14350001
143600         MOVE WS-PHYSSTR        TO BP350-ORGANIZATION-NAME-MKD    14360001
143700                                   BP350-ORGANIZATION-NAME-OTH    14370001
143800     END-IF                                                       14380001
143900                                                                  14390001
144000* COMPUTING MARKDOWN RETAIL AMOUNTS                               14400001
144100                                                                  14410001
144200     IF  MLT00038-TRN-TYP-CDE  = '040'                            14420001
144300                                                                  14430001
144400        MOVE MLT00038-PRCHG-RSN-CDE                               14440001
144500                                   TO WS-PRCHG-RSN-CDE            14450001
144600        EVALUATE TRUE                                             14460001
144700                                                                  14470001
144800        WHEN GOLDSTAR-PRCHG-RSN-CDE                               14480001
144900            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14490001
145000                    GIVING BP350-GOLDSTAR-DLR-BTY                 14500001
145100                                                                  14510001
145200        WHEN PERM-PRCHG-RSN-CDE                                   14520001
145300                                                                  14530001
145400            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14540001
145500            GIVING BP350-PERM-DLR-BTY                             14550001
145600                                                                  14560001
145700        WHEN PROMO-PRCHG-RSN-CDE                                  14570001
145800            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14580001
145900            GIVING BP350-PROMO-DLR-BTY                            14590001
146000                                                                  14600001
146100        WHEN ASSC-PRCHG-RSN-CDE                                   14610001
146200            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14620001
146300            GIVING BP350-ASSC-DISC-DLR-BTY                        14630001
146400                                                                  14640001
146500        WHEN MKTOFF-PRCHG-RSN-CDE                                 14650001
146600                                                                  14660001
146700            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14670001
146800            GIVING BP350-MKTOFF-DLR-BTY                           14680001
146900                                                                  14690001
147000        WHEN OTHER                                                14700001
147100            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14710001
147200            GIVING BP350-OTHRMKDN-DLR-BTY                         14720001
147300                                                                  14730001
147400        END-EVALUATE                                              14740001
147500*   WRITING THE RECORDS INTO THE OUTPUT FILE                      14750001
147600                                                                  14760001
147700        PERFORM 8200-WRITE-ACTUAL-MKDNS-REC                       14770001
147800                                                                  14780001
147900* COMPUTING MARKUP RETAIL AMOUNTS                                 14790001
148000     ELSE                                                         14800001
148100            DIVIDE MLT00038-PRCHG-RTL-AMT BY  1000                14810001
148200            GIVING BP350-OTHER-ADJ-DLR-BTY                        14820001
148300                                                                  14830001
148400*   WRITING THE RECORDS INTO THE OUTPUT FILE                      14840001
148500            PERFORM 8300-WRITE-ACTUAL-OTHINV-REC                  14850001
148600     END-IF.                                                      14860001
148700                                                                  14870001
148800******************************************************************14880001
148900 5400-CLOSE-MKDNS-CURSOR.                                         14890001
149000******************************************************************14900001
149100     EXEC SQL                                                     14910001
149200         CLOSE MKDWNS_CURSOR                                      14920001
149300     END-EXEC.                                                    14930001
149400                                                                  14940001
149500     EVALUATE TRUE                                                14950001
149600         WHEN SQLCODE = 0                                         14960001
149700             CONTINUE                                             14970001
149800         WHEN OTHER                                               14980001
149900             MOVE '4400-CLOSE-MKDNS-CURSOR'                       14990001
150000                                 TO PV-PARAGRAPH-NAME             15000001
150100             MOVE 'MLT_PRCHG_TRN_DTL  ERROR'                      15010001
150200                                 TO PV-MESSAGE                    15020001
150300             MOVE 'CLOSE CURSOR' TO PV-DB2-OPERATION              15030001
150400             PERFORM 9999-SQL-ABEND                               15040001
150500     END-EVALUATE.                                                15050001
150600                                                                  15060001
150700******************************************************************15070001
150800*  PROCESS ALL ADJUSTMENT RETAIL AMOUNTS OTHER THAN OTHER         15080001
150900*  ADJUSTMENT AMOUNTS.                                            15090001
151000******************************************************************15100001
151100 5500-ACTUAL-ADJ.                                                 15110001
151200*    DISPLAY '5500-ACTUAL-ADJ'.                                   15120001
151300*                                                                 15130001
151400     DISPLAY '5500- ACTUALS START DTE = ' PV-EXTRACT-START-DTE.   15140001
151500     DISPLAY '5500- ACTUALS END DTE   = ' PV-EXTRACT-END-DTE.     15150001
151600                                                                  15160001
151700     SET  ML039-ADJUSTMENT     TO TRUE                            15170001
151800                                                                  15180001
151900     PERFORM 5600-OPEN-ADJ-CURSOR.                                15190001
152000                                                                  15200001
152100     PERFORM 5700-FETCH-ADJ-CURSOR.                               15210001
152200                                                                  15220001
152300     PERFORM                                                      15230001
152400       UNTIL PS-FETCH-ADJ-DONE                                    15240001
152500         PERFORM 5800-FORMAT-ACTUAL-ADJ-OUT                       15250001
152600         PERFORM 5700-FETCH-ADJ-CURSOR                            15260001
152700     END-PERFORM.                                                 15270001
152800                                                                  15280001
152900     PERFORM 5900-CLOSE-ADJ-CURSOR.                               15290001
153000                                                                  15300001
153100******************************************************************15310001
153200 5600-OPEN-ADJ-CURSOR.                                            15320001
153300******************************************************************15330001
153400*    DISPLAY '5600-OPEN-ADJ-CURSOR'.                              15340001
153500                                                                  15350001
153600     EXEC SQL                                                     15360001
153700         OPEN ADJ_CURSOR                                          15370001
153800     END-EXEC.                                                    15380001
153900                                                                  15390001
154000     EVALUATE TRUE                                                15400001
154100         WHEN SQLCODE = 0                                         15410001
154200             DISPLAY '5600-OPEN O.K.'                             15420001
154300             DISPLAY ' '                                          15430001
154400         WHEN OTHER                                               15440001
154500             DISPLAY '5600- OPEN FAILED'                          15450001
154600             MOVE    '5600-OPEN-ADJ-CURSOR'                       15460001
154700                                 TO PV-PARAGRAPH-NAME             15470001
154800             MOVE    'MLT_PADJ_TRN_DTL ERROR'                     15480001
154900                                 TO PV-MESSAGE                    15490001
155000             MOVE    'OPEN CURSOR'                                15500001
155100                                 TO PV-DB2-OPERATION              15510001
155200             PERFORM 9999-SQL-ABEND                               15520001
155300     END-EVALUATE.                                                15530001
155400                                                                  15540001
155500 EJECT                                                            15550001
155600                                                                  15560001
155700******************************************************************15570001
155800 5700-FETCH-ADJ-CURSOR.                                           15580001
155900******************************************************************15590001
156000*    DISPLAY '5700-FETCH-ADJ-CURSOR'.                             15600001
156100     INITIALIZE DCLMLT00039.                                      15610001
156200                                                                  15620001
156300     EXEC SQL                                                     15630001
156400         FETCH ADJ_CURSOR                                         15640001
156500          INTO :MLT00039-FSCL-WK-END-DTE                          15650001
156600              ,:MLT00039-DEPT-NBR                                 15660001
156700              ,:MLT00039-MAJ-CL-NBR                               15670001
156800              ,:MLT00039-LOC-NBR                                  15680001
156900              ,:MLT00039-AP-TRN-CDE                               15690001
157000              ,:MLT00039-TRN-TYP-CDE                              15700002
157100              ,:MLT00039-PADJ-RTL-AMT                             15710001
157200              ,:MLT00039-PADJ-GRO-COST-AMT                        15720001
157300              ,:MLT00039-PADJ-DISC-COST-AMT                       15730001
157400              ,:MLT00039-DRCR-CDE                                 15740001
157500              ,:MLT00039-FINCL-PRC-GP-CDE                         15750001
157600     END-EXEC.                                                    15760001
157700                                                                  15770001
157800     EVALUATE TRUE                                                15780001
157900         WHEN SQLCODE = 0                                         15790001
158000             CONTINUE                                             15800001
158100                                                                  15810001
158200         WHEN SQLCODE = +100                                      15820001
158300             MOVE 'Y'            TO PS-ADJ-DONE                   15830001
158400                                                                  15840001
158500         WHEN OTHER                                               15850001
158600             MOVE '5700-FETCH-ADJ-CURSOR'                         15860001
158700                                 TO PV-PARAGRAPH-NAME             15870001
158800             MOVE 'MLT_PADJ_TRN_DTL ERROR'                        15880001
158900                                 TO PV-MESSAGE                    15890001
159000             MOVE 'FETCH'        TO PV-DB2-OPERATION              15900001
159100             PERFORM 9999-SQL-ABEND                               15910001
159200     END-EVALUATE.                                                15920001
159300                                                                  15930001
159400 EJECT                                                            15940001
159500                                                                  15950001
159600******************************************************************15960001
159700*  FORMAT THE DATA & WRITE INTO THE OUTPUT FILE                   15970001
159800******************************************************************15980001
159900 5800-FORMAT-ACTUAL-ADJ-OUT.                                      15990001
160000*    DISPLAY '5800-FORMAT-ACTUAL-ADJ-OUT'.                        16000001
160100     INITIALIZE BP350-RECORD.                                     16010001
160200*                                                                 16020001
160300     MOVE MLT00039-DEPT-NBR     TO WS-HOLD-DEPT-NBR.              16030001
160400     MOVE MLT00039-MAJ-CL-NBR   TO WS-HOLD-MAJ-CL-NBR.            16040001
160500     MOVE MLT00039-FSCL-WK-END-DTE                                16050001
160600                                TO WS-HOLD-DATE.                  16060001
160700     IF WS-HOLD-DATE NOT = WS-PREV-HOLD-DATE                      16070001
160800        PERFORM 2200-GET-EOP-DATE-ATTRIBUTES.                     16080001
160900                                                                  16090001
161000     MOVE PV-SEASON             TO WS-SEASON-OUT.                 16100001
161100     MOVE PV-YEAR               TO WS-YEAR-OUT.                   16110001
161200     MOVE PV-WEEK-NBR           TO WS-WEEK-NBR-OUT.               16120001
161300                                                                  16130001
161400* APPLYING DEBIT CREDIT LOGIC                                     16140001
161500                                                                  16150001
161600     EVALUATE TRUE                                                16160001
161700         WHEN (MLT00039-DRCR-CDE = '02' OR '08') AND              16170001
161800              MLT00039-FINCL-PRC-GP-CDE = 'BVEDIT'                16180001
161900              COMPUTE MLT00039-PADJ-RTL-AMT                       16190001
162000                        = MLT00039-PADJ-RTL-AMT * (-1)            16200001
162100              COMPUTE MLT00039-PADJ-GRO-COST-AMT                  16210001
162200                        = MLT00039-PADJ-GRO-COST-AMT * (-1)       16220001
162300         WHEN (MLT00039-DRCR-CDE = '01') AND                      16230001
162400              MLT00039-FINCL-PRC-GP-CDE = 'BVEDIT'                16240001
162500              COMPUTE MLT00039-PADJ-DISC-COST-AMT                 16250001
162600                        = MLT00039-PADJ-DISC-COST-AMT * (-1)      16260001
162700         WHEN (MLT00039-TRN-TYP-CDE = '030')                      16270005
162800              COMPUTE MLT00039-PADJ-RTL-AMT                       16280004
162900                        = MLT00039-PADJ-RTL-AMT * (-1)            16290004
163000         WHEN (MLT00039-TRN-TYP-CDE = '031')                      16300006
163100              CONTINUE                                            16310006
163200         WHEN OTHER                                               16320001
163300              MOVE ZEROES TO MLT00039-PADJ-RTL-AMT                16330001
163400              MOVE ZEROES TO MLT00039-PADJ-GRO-COST-AMT           16340001
163500              MOVE ZEROES TO MLT00039-PADJ-DISC-COST-AMT          16350001
163600     END-EVALUATE                                                 16360001
163700                                                                  16370001
163800     ADD MLT00039-PADJ-DISC-COST-AMT  TO                          16380001
163900                                      MLT00039-PADJ-GRO-COST-AMT  16390001
164000                                                                  16400001
164100* COMPUTING PURCHASE ADJUSTMENT AMOUNTS                           16410001
164200                                                                  16420001
164300     MOVE MLT00039-AP-TRN-CDE         TO WS-AP-TRN-CDE            16430001
164400     EVALUATE TRUE                                                16440001
164500                                                                  16450001
164600     WHEN BO-ADJ-AP-TRN-CDE                                       16460001
164700                                                                  16470001
164800         DIVIDE  MLT00039-PADJ-GRO-COST-AMT                       16480001
164900                 BY     1000                                      16490001
165000                 GIVING BP350-BO-ADJ-CST-BTY                      16500001
165100                                                                  16510001
165200     WHEN  DA-ADJ-AP-TRN-CDE                                      16520001
165300                                                                  16530001
165400         DIVIDE  MLT00039-PADJ-RTL-AMT                            16540001
165500                 BY     1000                                      16550001
165600                 GIVING BP350-DA-ADJ-DLR-BTY                      16560001
165700                                                                  16570001
165800         DIVIDE  MLT00039-PADJ-GRO-COST-AMT                       16580001
165900                 BY     1000                                      16590001
166000                 GIVING BP350-DA-ADJ-CST-BTY                      16600001
166100                                                                  16610001
11752A*        IF WS-AP-TRN-CDE  = '2I'                                 16620012
11752A*          DIVIDE  MLT00039-PADJ-RTL-AMT                          16630012
11752A*                  BY     1000                                    16640012
11752A*                  GIVING BP350-DA-REV-ADJ-DLR-BTY                16650012
11752A*                                                                 16660012
11752A*          DIVIDE  MLT00039-PADJ-GRO-COST-AMT                     16670012
11752A*                  BY     1000                                    16680012
11752A*                  GIVING BP350-DA-REV-ADJ-CST-BTY                16690012
11752A*        END-IF                                                   16700012
11752A*                                                                 16710012
11752A*    WHEN DA-REV-ADJ-AP-TRN-CDE                                   16720012
11752A*        DIVIDE  MLT00039-PADJ-RTL-AMT                            16730012
11752A*                BY     1000                                      16740012
11752A*                GIVING BP350-DA-REV-ADJ-DLR-BTY                  16750012
11752A*                                                                 16760012
11752A*        DIVIDE  MLT00039-PADJ-GRO-COST-AMT                       16770012
11752A*                BY     1000                                      16780012
11752A*                GIVING BP350-DA-REV-ADJ-CST-BTY                  16790012
11752A*                                                                 16800012
168100     WHEN RTV-ADJ-AP-TRN-CDE                                      16810001
168200                                                                  16820001
168300         DIVIDE  MLT00039-PADJ-RTL-AMT                            16830001
168400                 BY     1000                                      16840001
168500                 GIVING BP350-RTV-ADJ-DLR-BTY                     16850001
168600                                                                  16860001
168700         DIVIDE  MLT00039-PADJ-GRO-COST-AMT                       16870001
168800                 BY     1000                                      16880001
168900                 GIVING BP350-RTV-ADJ-CST-BTY                     16890001
169000                                                                  16900001
169100     WHEN  LIC-ADJ-AP-TRN-CDE                                     16910001
169200         DIVIDE  MLT00039-PADJ-GRO-COST-AMT                       16920001
169300                 BY     1000                                      16930001
169400                 GIVING BP350-LIC-FEE-CST-BTY                     16940001
169500                                                                  16950001
169600     END-EVALUATE.                                                16960001
169700                                                                  16970001
169800*   POPULATION OF PHYSICAL/VIRTUAL STORES BASED ON LOCATION NO    16980001
169900                                                                  16990001
170000     IF  MLT00039-LOC-NBR   > 0                                   17000001
170100         MOVE WS-VIRTSTR   TO      BP350-ORGANIZATION-NAME-OTH    17010001
170200                                   BP350-ORGANIZATION-NAME-MKD    17020001
170300     ELSE                                                         17030001
170400         MOVE WS-PHYSSTR   TO      BP350-ORGANIZATION-NAME-OTH    17040001
170500                                   BP350-ORGANIZATION-NAME-MKD    17050001
170600     END-IF                                                       17060001
170700                                                                  17070001
170800*   WRITING THE RECORDS INTO THE OUTPUT FILE                      17080001
170900     PERFORM 8300-WRITE-ACTUAL-OTHINV-REC.                        17090001
171000                                                                  17100001
171100*   SUBTRACTING DA ADJUSTMENT DOLLAR TO OTHER MARKDOWN DOLLARS.   17110001
171200                                                                  17120001
171300     IF BP350-DA-ADJ-DLR-BTY  NOT =  ZEROES                       17130001
171400        MOVE BP350-DA-ADJ-DLR-BTY   TO  BP350-OTHRMKDN-DLR-BTY    17140001
171500        COMPUTE BP350-OTHRMKDN-DLR-BTY  =                         17150001
171600                               BP350-OTHRMKDN-DLR-BTY * -1        17160001
171700        PERFORM 8200-WRITE-ACTUAL-MKDNS-REC                       17170001
171800     END-IF.                                                      17180001
171900                                                                  17190001
172000******************************************************************17200001
172100 5900-CLOSE-ADJ-CURSOR.                                           17210001
172200******************************************************************17220001
172300     EXEC SQL                                                     17230001
172400         CLOSE ADJ_CURSOR                                         17240001
172500     END-EXEC.                                                    17250001
172600                                                                  17260001
172700     EVALUATE TRUE                                                17270001
172800         WHEN SQLCODE = 0                                         17280001
172900             CONTINUE                                             17290001
173000         WHEN OTHER                                               17300001
173100             MOVE '5900-CLOSE-ADJ-CURSOR'                         17310001
173200                                 TO PV-PARAGRAPH-NAME             17320001
173300             MOVE 'MLT_PADJ_TRN_DTL   ERROR'                      17330001
173400                                 TO PV-MESSAGE                    17340001
173500             MOVE 'CLOSE CURSOR' TO PV-DB2-OPERATION              17350001
173600             PERFORM 9999-SQL-ABEND                               17360001
173700     END-EVALUATE.                                                17370001
173800                                                                  17380001
173900******************************************************************17390001
174000*  PROCESS ALL ADJUSTMENT RETAIL AMOUNTS OTHER THAN OTHER         17400001
174100*  ADJUSTMENT AMOUNTS.                                            17410001
174200******************************************************************17420001
174300 6500-ACTUAL-OTH-ADJ.                                             17430001
174400*    DISPLAY '6500-ACTUAL-OTH-ADJ'.                               17440001
174500*                                                                 17450001
174600     DISPLAY '6500- ACTUALS START DTE = ' PV-EXTRACT-START-DTE.   17460001
174700     DISPLAY '6500- ACTUALS END DTE   = ' PV-EXTRACT-END-DTE.     17470001
174800                                                                  17480001
174900     MOVE PV-FSCL-WK-END-DTE   TO PV-EXTRACT-END-DTE.             17490001
175000                                                                  17500001
175100     PERFORM 6600-OPEN-OTH-ADJ-CURSOR.                            17510001
175200                                                                  17520001
175300     PERFORM 6700-FETCH-OTH-ADJ-CURSOR.                           17530001
175400                                                                  17540001
175500     PERFORM                                                      17550001
175600       UNTIL PS-FETCH-OTH-ADJ-DONE                                17560001
175700         PERFORM 6800-FORMAT-ACTUAL-OTHADJ-OUT                    17570001
175800         PERFORM 6700-FETCH-OTH-ADJ-CURSOR                        17580001
175900     END-PERFORM.                                                 17590001
176000                                                                  17600001
176100     PERFORM 6900-CLOSE-OTH-ADJ-CURSOR.                           17610001
176200                                                                  17620001
176300******************************************************************17630001
176400 6600-OPEN-OTH-ADJ-CURSOR.                                        17640001
176500******************************************************************17650001
176600*    DISPLAY '6600-OPEN-OTH-ADJ-CURSOR'.                          17660001
176700                                                                  17670001
176800     EXEC SQL                                                     17680001
176900         OPEN OTH_ADJ_CURSOR                                      17690001
177000     END-EXEC.                                                    17700001
177100                                                                  17710001
177200     EVALUATE TRUE                                                17720001
177300         WHEN SQLCODE = 0                                         17730001
177400             DISPLAY '6600-OPEN O.K.'                             17740001
177500             DISPLAY ' '                                          17750001
177600         WHEN OTHER                                               17760001
177700             DISPLAY '6600- OPEN FAILED'                          17770001
177800             MOVE    '6600-OPEN-OTH-ADJ-CURSOR'                   17780001
177900                                 TO PV-PARAGRAPH-NAME             17790001
178000             MOVE    'MLT_PADJ_TRN_DTL ERROR'                     17800001
178100                                 TO PV-MESSAGE                    17810001
178200             MOVE    'OPEN CURSOR'                                17820001
178300                                 TO PV-DB2-OPERATION              17830001
178400             PERFORM 9999-SQL-ABEND                               17840001
178500     END-EVALUATE.                                                17850001
178600                                                                  17860001
178700 EJECT                                                            17870001
178800                                                                  17880001
178900******************************************************************17890001
179000 6700-FETCH-OTH-ADJ-CURSOR.                                       17900001
179100******************************************************************17910001
179200*    DISPLAY '6700-FETCH-OTH-ADJ-CURSOR'.                         17920001
179300     INITIALIZE DCLMLT00039.                                      17930001
179400                                                                  17940001
179500     EXEC SQL                                                     17950001
179600         FETCH OTH_ADJ_CURSOR                                     17960001
179700          INTO :MLT00039-FSCL-WK-END-DTE                          17970001
179800              ,:MLT00039-DEPT-NBR                                 17980001
179900              ,:MLT00039-MAJ-CL-NBR                               17990001
180000              ,:MLT00039-LOC-NBR                                  18000001
180100              ,:MLT00039-PADJ-RTL-AMT                             18010001
180200              ,:MLT00039-PADJ-GRO-COST-AMT                        18020001
180300              ,:MLT00039-PADJ-DISC-COST-AMT                       18030001
180400              ,:MLT00039-DRCR-CDE                                 18040001
180500              ,:MLT00039-FINCL-PRC-GP-CDE                         18050001
180600              ,:MLT00039-TRN-TYP-CDE                              18060001
180700     END-EXEC.                                                    18070001
180800                                                                  18080001
180900     EVALUATE TRUE                                                18090001
181000         WHEN SQLCODE = 0                                         18100001
181100             CONTINUE                                             18110001
181200                                                                  18120001
181300         WHEN SQLCODE = +100                                      18130001
181400             MOVE 'Y'            TO PS-OTH-ADJ-DONE               18140001
181500                                                                  18150001
181600         WHEN OTHER                                               18160001
181700             MOVE '6700-FETCH-OTH-ADJ-CURSOR'                     18170001
181800                                 TO PV-PARAGRAPH-NAME             18180001
181900             MOVE 'MLT_PADJ_TRN_DTL ERROR'                        18190001
182000                                 TO PV-MESSAGE                    18200001
182100             MOVE 'FETCH'        TO PV-DB2-OPERATION              18210001
182200             PERFORM 9999-SQL-ABEND                               18220001
182300     END-EVALUATE.                                                18230001
182400                                                                  18240001
182500 EJECT                                                            18250001
182600                                                                  18260001
182700******************************************************************18270001
182800*  FORMAT THE DATA & WRITE INTO THE OUTPUT FILE                   18280001
182900******************************************************************18290001
183000 6800-FORMAT-ACTUAL-OTHADJ-OUT.                                   18300001
183100*    DISPLAY '6800-FORMAT-ACTUAL-OTHADJ-OUT'.                     18310001
183200     INITIALIZE BP350-RECORD.                                     18320001
183300*                                                                 18330001
183400     MOVE MLT00039-DEPT-NBR     TO WS-HOLD-DEPT-NBR.              18340001
183500     MOVE MLT00039-MAJ-CL-NBR   TO WS-HOLD-MAJ-CL-NBR.            18350001
183600     MOVE MLT00039-FSCL-WK-END-DTE                                18360001
183700                                TO WS-HOLD-DATE.                  18370001
183800     IF WS-HOLD-DATE NOT = WS-PREV-HOLD-DATE                      18380001
183900        PERFORM 2200-GET-EOP-DATE-ATTRIBUTES.                     18390001
184000                                                                  18400001
184100     MOVE PV-SEASON             TO WS-SEASON-OUT.                 18410001
184200     MOVE PV-YEAR               TO WS-YEAR-OUT.                   18420001
184300     MOVE PV-WEEK-NBR           TO WS-WEEK-NBR-OUT.               18430001
184400                                                                  18440001
184500* APPLYING DEBIT CREDIT LOGIC                                     18450001
184600                                                                  18460001
184700     EVALUATE TRUE                                                18470001
184800         WHEN (MLT00039-DRCR-CDE = '02' OR '08') AND              18480001
184900              MLT00039-FINCL-PRC-GP-CDE = 'BVEDIT'                18490001
185000              COMPUTE MLT00039-PADJ-RTL-AMT                       18500001
185100                        = MLT00039-PADJ-RTL-AMT * (-1)            18510001
185200              COMPUTE MLT00039-PADJ-GRO-COST-AMT                  18520001
185300                        = MLT00039-PADJ-GRO-COST-AMT * (-1)       18530001
185400         WHEN (MLT00039-DRCR-CDE = '01') AND                      18540001
185500              MLT00039-FINCL-PRC-GP-CDE = 'BVEDIT'                18550001
185600              COMPUTE MLT00039-PADJ-DISC-COST-AMT                 18560001
185700                        = MLT00039-PADJ-DISC-COST-AMT * (-1)      18570001
185800         WHEN OTHER                                               18580001
185900              MOVE ZEROES TO MLT00039-PADJ-RTL-AMT                18590001
186000              MOVE ZEROES TO MLT00039-PADJ-GRO-COST-AMT           18600001
186100              MOVE ZEROES TO MLT00039-PADJ-DISC-COST-AMT          18610001
186200     END-EVALUATE                                                 18620001
186300                                                                  18630001
186400     ADD MLT00039-PADJ-DISC-COST-AMT  TO                          18640001
186500                                      MLT00039-PADJ-GRO-COST-AMT  18650001
186600* COMPUTING PURCHASE ADJUSTMENT - OTHER ADJUSTMENT AMOUNTS        18660001
186700                                                                  18670001
186800     DIVIDE      MLT00039-PADJ-RTL-AMT                            18680001
186900             BY         1000                                      18690001
187000             GIVING BP350-OTHER-ADJ-DLR-BTY                       18700001
187100                                                                  18710001
187200     DIVIDE      MLT00039-PADJ-GRO-COST-AMT                       18720001
187300             BY         1000                                      18730001
187400             GIVING BP350-OTHER-ADJ-CST-BTY                       18740001
187500                                                                  18750001
187600*   POPULATION OF PHYSICAL/VIRTUAL STORES BASED ON LOCATION NO    18760001
187700                                                                  18770001
187800     IF  MLT00039-LOC-NBR   > 0                                   18780001
187900         MOVE WS-VIRTSTR   TO      BP350-ORGANIZATION-NAME-OTH    18790001
188000     ELSE                                                         18800001
188100         MOVE WS-PHYSSTR   TO      BP350-ORGANIZATION-NAME-OTH    18810001
188200     END-IF                                                       18820001
188300                                                                  18830001
188400*   WRITING THE RECORDS INTO THE OUTPUT FILE                      18840001
188500     PERFORM 8300-WRITE-ACTUAL-OTHINV-REC.                        18850001
188600                                                                  18860001
188700******************************************************************18870001
188800 6900-CLOSE-OTH-ADJ-CURSOR.                                       18880001
188900******************************************************************18890001
189000     EXEC SQL                                                     18900001
189100         CLOSE OTH_ADJ_CURSOR                                     18910001
189200     END-EXEC.                                                    18920001
189300                                                                  18930001
189400     EVALUATE TRUE                                                18940001
189500         WHEN SQLCODE = 0                                         18950001
189600             CONTINUE                                             18960001
189700         WHEN OTHER                                               18970001
189800             MOVE '6900-CLOSE-OTH-ADJ-CURSOR'                     18980001
189900                                 TO PV-PARAGRAPH-NAME             18990001
190000             MOVE 'MLT_PADJ_TRN_DTL   ERROR'                      19000001
190100                                 TO PV-MESSAGE                    19010001
190200             MOVE 'CLOSE CURSOR' TO PV-DB2-OPERATION              19020001
190300             PERFORM 9999-SQL-ABEND                               19030001
190400     END-EVALUATE.                                                19040001
190500                                                                  19050001
190600******************************************************************19060001
190700*  BRAND VENDOR RELATIONSHIP UTILITY FUNCTIONS.                   19070001
190800******************************************************************19080001
190900     COPY BVPD001.                                                19090001
191000                                                                  19100001
191100******************************************************************19110001
191200*  WRITE ACTUALS OUTPUT                                           19120001
191300******************************************************************19130001
191400 8200-WRITE-ACTUAL-MKDNS-REC.                                     19140001
191500                                                                  19150001
191600     STRING                                                       19160001
191700          'C'                                                     19170001
191800          WS-HOLD-DEPT-NBR3                                       19180001
191900          WS-HOLD-MAJ-CL-NBR2                                     19190001
192000          DELIMITED BY ' '                                        19200001
192100          INTO BP350-PRODUCT-NAME-MKD.                            19210001
192200                                                                  19220001
192300      STRING                                                      19230001
192400          WS-SEASON-OUT                                           19240001
192500          WS-YEAR-OUT                                             19250001
192600          'W'                                                     19260001
192700          WS-WEEK-NBR-OUT                                         19270001
192800          DELIMITED BY SIZE                                       19280001
192900          INTO BP350-CALENDAR-NAME-MKD.                           19290001
193000                                                                  19300001
193100      WRITE MLT-MKDNSB-REC FROM BP350-ACTUAL-MKDNS-B.             19310001
193200      ADD  01              TO  WS-MKDNS-OUT-CNT.                  19320001
193300                                                                  19330001
193400******************************************************************19340001
193500*  WRITE ACTUALS OUTPUT                                           19350001
193600******************************************************************19360001
193700 8300-WRITE-ACTUAL-OTHINV-REC.                                    19370001
193800*    DISPLAY ' 8000-WRITE-ACTUAL-REC'.                            19380001
193900                                                                  19390001
194000     MOVE MLT00005-ML-LO-MDSE-LVL-ID                              19400001
194100                        TO WS-HOLD-ML-LO.                         19410001
194200*    *****************************************************        19420001
194300*    * USE DELIMITED BY SIZE FOLLOWING WS-VARIABLE-OUT            19430001
194400*    * TO KEEP THE FULL 14 CHAR.                                  19440001
194500*    *****************************************************        19450001
194600                                                                  19460001
194700*    *********************************************                19470001
194800*    * OUTPUT ACTUALS, BOP/EOP RTL & SHRINK TO BP                 19480001
194900*    *   FROM MLT_WKLY_SUM                                        19490001
195000*    *********************************************                19500001
195100                                                                  19510001
195200*    *******************************************                  19520001
195300*    * CHECK IF DEPT-NBR ON INPUT ACTUALS =                       19530001
195400*    *   DEPT-NBR ON D/B/V RELATIONSHIP TABLE                     19540001
195500*    *   FOR THE DATALESS KEY ON THE ACTUALS ROW                  19550001
195600*    *******************************************                  19560001
195700                                                                  19570001
195800*       PERFORM 8100-CHECK-DEPT-NBR                               19580001
195900                                                                  19590001
196000     STRING                                                       19600001
196100          'C'                                                     19610001
196200          WS-HOLD-DEPT-NBR3                                       19620001
196300          WS-HOLD-MAJ-CL-NBR2                                     19630001
196400          DELIMITED BY ' '                                        19640001
196500          INTO BP350-PRODUCT-NAME-OTH.                            19650001
196600                                                                  19660001
196700      STRING                                                      19670001
196800          WS-SEASON-OUT                                           19680001
196900          WS-YEAR-OUT                                             19690001
197000          'W'                                                     19700001
197100          WS-WEEK-NBR-OUT                                         19710001
197200          DELIMITED BY SIZE                                       19720001
197300          INTO BP350-CALENDAR-NAME-OTH.                           19730001
197400                                                                  19740001
197500      WRITE MLT-OTHINV-REC FROM BP350-ACTUAL-OTHINV-B.            19750001
197600      ADD  01              TO  WS-OTHINV-OUT-CNT.                 19760001
197700                                                                  19770001
197800******************************************************************19780001
197900*  CLOSE ALL OPEN FILES.                                          19790001
198000******************************************************************19800001
198100 9000-END-OF-JOB.                                                 19810001
198200                                                                  19820001
198300     CLOSE                                                        19830001
198400           MLT-ACT-MKDNS-FILE                                     19840001
198500           MLT-ACT-OTHINV-FILE.                                   19850001
198600                                                                  19860001
198700     DISPLAY ' '.                                                 19870001
198800     DISPLAY '*****************************************'          19880001
198900     DISPLAY ' '.                                                 19890001
199000     DISPLAY ' OUTPUT TO BP COUNTS:'                              19900001
199100     DISPLAY ' '.                                                 19910001
199200     DISPLAY '*****************************************'.         19920001
199300     DISPLAY ' '.                                                 19930001
199400     DISPLAY 'MKDNS   WRITE COUNT : '  WS-MKDNS-OUT-CNT           19940001
199500     DISPLAY 'OTHINV  WRITE COUNT : '  WS-OTHINV-OUT-CNT          19950001
199600                                                                  19960001
199700     DISPLAY ' '.                                                 19970001
199800     DISPLAY '*****************************************'          19980001
199900     DISPLAY ' '.                                                 19990001
200000                                                                  20000001
200100******************************************************************20010001
200200*  PERFORMS THE ABEND FOR THE PROGRAM IN THE EVENT THAT AN SQL   *20020001
200300*                 ERROR OR WARNING CODE OCCURS.                  *20030001
200400******************************************************************20040001
200500 9999-SQL-ABEND.                                                  20050001
200600                                                                  20060001
200700     MOVE SQLCODE        TO  SQLCODE2.                            20070001
200800     MOVE SQLERRD(3)     TO  SQLERRD3.                            20080001
200900                                                                  20090001
201000     DISPLAY '***************************'                        20100001
201100     DISPLAY '**       ABEND           **'                        20110001
201200     DISPLAY '**  IN PROGRAM BPKUT231   **'                       20120022
201300     DISPLAY '***************************'                        20130001
201400     DISPLAY '** PARAGRAPH **      = ' PV-PARAGRAPH-NAME          20140001
201500     DISPLAY '** OPERATION **      = ' PV-DB2-OPERATION           20150001
201600     DISPLAY '** MESSAGE   **      = ' PV-MESSAGE                 20160001
201700     DISPLAY '** ROWS PROCESSED ** = ' SQLERRD3.                  20170001
201800     DISPLAY '** SQLCODE **        = ' SQLCODE2.                  20180001
201900                                                                  20190001
202000     MOVE +4013          TO WS-ABEND-CODE                         20200001
202100     CALL 'ILBOABN0'     USING WS-ABEND-CODE.                     20210001
