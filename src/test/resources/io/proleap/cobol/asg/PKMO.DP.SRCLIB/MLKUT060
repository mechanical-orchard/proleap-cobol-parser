       IDENTIFICATION DIVISION.                                                 
       PROGRAM-ID.              MLKUT060.                                       
       AUTHOR.                  LEE YANG.                                       
       INSTALLATION.            KOHLS DEPARTMENT STORES.                        
       DATE-WRITTEN.            09/30/2004.                                     
       DATE-COMPILED.                                                           
      ******************************************************************        
      *                                                                *        
      *  PARTITION BALANCE AND CONTROL SETUP                           *        
      *                                                                *        
      *  THIS PROGRAM CREATES CONTROL FOR UPDATING THE PARTITION       *        
      *  BALANCE AND CONTROL TABLE FOR MERCHANDISE LEDGER'S BASE TABLE *        
      *                                                                *        
      ******************** HISTORY OF CHANGES **************************        
      * CHG ID/                                                        *        
      * WR/PROJ  DATE        DESCRIPTION OF CHANGES                    *        
      * -------  ----------  ----------------------------------------  *        
W26006* 26006    2005-01-06  ADD LOGIC TO HANDLE ALLOCATING PARTITION  *        
W26006*                      PRIOR TO THE CURRENTLY ALLOCATED.         *        
947581*P00947581 2006-11-20  MONTH END ABEND LOOKING FOR THE MAX PARTN          
947581*                      NUMBER FOR WEEKLY PROCESSING......                 
      ******************************************************************        
                                                                                
       ENVIRONMENT DIVISION.                                                    
       CONFIGURATION SECTION.                                                   
       INPUT-OUTPUT SECTION.                                                    
       FILE-CONTROL.                                                            
                                                                                
           SELECT OPTIONAL REQUEST-CNTL-FILE                                    
               ASSIGN TO INP01.                                                 
                                                                                
           SELECT PARTN-INFO-EXTRACT                                            
               ASSIGN TO OUT01.                                                 
                                                                                
           SELECT RECYCLE-WK-PARTN-EXTRACT                                      
               ASSIGN TO OUT02.                                                 
                                                                                
           SELECT RECYCLE-MN-PARTN-EXTRACT                                      
               ASSIGN TO OUT03.                                                 
                                                                                
       DATA DIVISION.                                                           
       FILE SECTION.                                                            
                                                                                
       FD  REQUEST-CNTL-FILE                                                    
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE STANDARD                                           
           BLOCK CONTAINS 0 RECORDS.                                            
       01  REQUEST-CNTL-REC                PIC X(80).                           
                                                                                
       FD  PARTN-INFO-EXTRACT                                                   
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE OMITTED                                            
           RECORD CONTAINS 080 CHARACTERS                                       
           DATA RECORD IS PARTN-INFO-REC.                                       
       01  PARTN-INFO-REC                  PIC X(080).                          
                                                                                
       FD  RECYCLE-WK-PARTN-EXTRACT                                             
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE OMITTED                                            
           RECORD CONTAINS 080 CHARACTERS                                       
           DATA RECORD IS RECYCLE-WK-PARTN-REC.                                 
       01  RECYCLE-WK-PARTN-REC            PIC X(080).                          
                                                                                
       FD  RECYCLE-MN-PARTN-EXTRACT                                             
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE OMITTED                                            
           RECORD CONTAINS 080 CHARACTERS                                       
           DATA RECORD IS RECYCLE-MN-PARTN-REC.                                 
       01  RECYCLE-MN-PARTN-REC            PIC X(080).                          
                                                                                
       EJECT                                                                    
       WORKING-STORAGE SECTION.                                                 
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** WORKING STORAGE AREA BEGIN ***'.                                
                                                                                
      ******************************************************************        
      *  PARTITION INFORMATION DATA EXTRACT                                     
      ******************************************************************        
      *01  ML060-PARTN-INFO-EXTRACT.                                            
           COPY MLRD060.                                                        
                                                                                
      ******************************************************************        
      *  RECYCLE PARTITION INFORMATION DATA EXTRACT                             
      ******************************************************************        
       01  WS-RECYCLE-PARTN-EXT.                                                
           05  FILLER                      PIC X(12)       VALUE SPACES.        
           05  WS-PARTN-NBR                PIC 9(04)       VALUE ZEROES.        
           05  FILLER                      PIC X(01)       VALUE SPACE.         
               88  WS-MORE-PARTN-NBR                       VALUE ','.           
               88  WS-NO-MORE-PARTN-NBR                    VALUE SPACE.         
           05  FILLER                      PIC X(63)       VALUE SPACES.        
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING CONSTANT BEGIN ***'.                                
                                                                                
       01  PC-PROGRAM-CONSTANTS-AREA.                                           
      *        MAX WEEKLY PARTITION = 120 WEEK * PARTITION PER WEEK             
           05  PC-MAX-WK-PARTN             PIC S9(04)      VALUE +240           
                               COMP-3.                                          
           05  PC-NBR-PARTN-PER-WK         PIC S9(04)      VALUE +2             
                               COMP-3.                                          
      *        MAX MONTHLY PARTITION = 27 MONTH * PARTITION PER MONTH           
           05  PC-MAX-MN-PARTN             PIC S9(04)      VALUE +216           
                               COMP-3.                                          
           05  PC-NBR-PARTN-PER-MN         PIC S9(04)      VALUE +8             
                               COMP-3.                                          
           05  PC-NULL-DTE                 PIC X(10)       VALUE                
                                                           '9999-12-31'.        
           05  PC-Y                        PIC X           VALUE 'Y'.           
           05  PC-N                        PIC X           VALUE 'N'.           
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING SWITCHES BEGIN ***'.                                
                                                                                
       01  PS-SWITCHES-AREA.                                                    
           05  PS-FIRST-TIME-THRU          PIC X           VALUE 'N'.           
               88  FIRST-TIME-THRU                         VALUE 'Y'.           
               88  NOT-FIRST-TIME-THRU                     VALUE 'N'.           
           05  PS-END-OF-REQUEST-CNTL      PIC X           VALUE 'N'.           
               88  END-OF-REQUEST-CNTL                     VALUE 'Y'.           
               88  NOT-END-OF-REQUEST-CNTL                 VALUE 'N'.           
           05  PS-END-OF-TDTATTR           PIC X           VALUE 'N'.           
               88  END-OF-TDTATTR                          VALUE 'Y'.           
               88  NOT-END-OF-TDTATTR                      VALUE 'N'.           
           05  PS-END-OF-TMDSEAR           PIC X           VALUE 'N'.           
               88  END-OF-TMDSEAR                          VALUE 'Y'.           
               88  NOT-END-OF-TMDSEAR                      VALUE 'N'.           
           05  PS-END-OF-MNLY-COUNT        PIC X           VALUE 'N'.           
               88  END-OF-MNLY-COUNT                       VALUE 'Y'.           
               88  NOT-END-OF-MNLY-COUNT                   VALUE 'N'.           
           05  PS-COUNT-SOURCE             PIC X           VALUE SPACE.         
               88  MAIN-COUNT-SOURCE                       VALUE 'M'.           
               88  ALTERNATE-COUNT-SOURCE                  VALUE 'A'.           
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** REPORT REQUEST CONTROL REC ***'.                                
                                                                                
       01  RQ-CNTL-AREA.                                                        
           05  RQ-COMMENT-IND              PIC X(01)       VALUE SPACE.         
               88  RQ-COMMENTS                             VALUE '*'.           
           05  RQ-BEG-DATE                 PIC X(10)       VALUE SPACES.        
           05  FILLER REDEFINES RQ-BEG-DATE.                                    
               10  RQ-BEG-DATE-CCYY        PIC X(04).                           
               10  RQ-BEG-DATE-DASH-1      PIC X(01).                           
                   88  REQ-BEG-DATE-VALID-DASH-1           VALUE '-'.           
               10  RQ-BEG-DATE-MM          PIC X(02).                           
               10  RQ-BEG-DATE-DASH-2      PIC X(01).                           
                   88  REQ-BEG-DATE-VALID-DASH-2           VALUE '-'.           
               10  RQ-BEG-DATE-DD          PIC X(02).                           
           05  FILLER                      PIC X(01)       VALUE SPACE.         
           05  RQ-END-DATE                 PIC X(10)       VALUE SPACES.        
           05  FILLER REDEFINES RQ-END-DATE.                                    
               10  RQ-END-DATE-CCYY        PIC X(04).                           
               10  RQ-END-DATE-DASH-1      PIC X(01).                           
                   88  REQ-END-DATE-VALID-DASH-1           VALUE '-'.           
               10  RQ-END-DATE-MM          PIC X(02).                           
               10  RQ-END-DATE-DASH-2      PIC X(01).                           
                   88  REQ-END-DATE-VALID-DASH-2           VALUE '-'.           
               10  RQ-END-DATE-DD          PIC X(02).                           
           05  FILLER                      PIC X(58)       VALUE SPACES.        
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING VARIABLE BEGIN ***'.                                
                                                                                
       01  PV-PROGRAM-VARIABLES-AREA.                                           
           05  PV-AVG-DEPT-COUNT           PIC S9(09)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-COUNTED-DEPTS            PIC S9(07)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-ACTIVE-DEPTS             PIC S9(07)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-RECORD-EXTRACTED         PIC S9(07)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-RECYCLE-WK-PARTN         PIC S9(07)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-RECYCLE-MN-PARTN         PIC S9(07)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-START-MN-PARTN-NBR       PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
           05  PV-START-WK-PARTN-NBR       PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
W26006     05  PV-NBR-OF-PERIOD            PIC S9(04)      VALUE ZEROES         
W26006                         COMP.                                            
W26006     05  PV-PARTN-NBR-PER-PERIOD     PIC S9(04)      VALUE ZEROES         
W26006                         COMP.                                            
W26006     05  PV-PARTN-NBR-LIMIT          PIC S9(04)      VALUE ZEROES         
W26006                         COMP.                                            
           05  PV-PREV-PARTN               PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
           05  PV-NUMBER-OF-WEEK           PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
           05  PV-PARTN-NBR-OFFSET         PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
           05  PV-PARTN-COUNT              PIC S9(09)      VALUE ZEROES         
                               COMP.                                            
           05  PV-TOT-DEPT-COUNT           PIC S9(13)      VALUE ZEROES         
                               COMP.                                            
           05  PV-DEPT-COUNT               PIC S9(09)      VALUE ZEROES         
                               COMP.                                            
           05  PV-DEPT-NBR-9               PIC 9(04)       VALUE ZEROES.        
           05  PV-DEPT-NBR-X REDEFINES PV-DEPT-NBR-9                            
                                           PIC X(04).                           
           05  FILLER REDEFINES PV-DEPT-NBR-9.                                  
               10  FILLER                  PIC X(01).                           
               10  PV-DEPT-NBR-3X          PIC X(03).                           
           05  PV-RQ-FSCL-BEG-DATE         PIC X(10)       VALUE SPACES.        
           05  PV-RQ-FSCL-END-DATE         PIC X(10)       VALUE SPACES.        
           05  PV-PREV-FSCL-BEG-DATE       PIC X(10)       VALUE SPACES.        
           05  PV-PREV-FSCL-END-DATE       PIC X(10)       VALUE SPACES.        
           05  PV-CURR-MN-BEG-DATE         PIC X(10)       VALUE SPACES.        
           05  PV-CURR-MN-END-DATE         PIC X(10)       VALUE SPACES.        
           05  PV-OPER-ATTEMPTED           PIC X(25)       VALUE SPACES.        
           05  PV-PROCESSING-DATE          PIC X(10)       VALUE SPACES.        
           05  PV-PROCESSING-DATE-RDF REDEFINES PV-PROCESSING-DATE.             
               10  PV-PROCESSING-CC        PIC X(02).                           
               10  PV-PROCESSING-YY        PIC X(02).                           
               10  PV-PROC-DSH1            PIC X(01).                           
               10  PV-PROCESSING-MM        PIC X(02).                           
               10  PV-PROC-DSH2            PIC X(01).                           
               10  PV-PROCESSING-DD        PIC X(02).                           
           05  PV-TODAYS-DATE.                                                  
               10  PV-TODAYS-DATE-YY       PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-DATE-MM       PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-DATE-DD       PIC 9(02)       VALUE ZEROES.        
           05  PV-TODAYS-TIME.                                                  
               10  PV-TODAYS-TIME-HR       PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-TIME-MIN      PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-TIME-SEC      PIC 9(02)       VALUE ZEROES.        
               10  FILLER                  PIC 9(02)       VALUE ZEROES.        
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** WORKING STORAGE TABLE AREA ***'.                                
                                                                                
       01  PT-PROGRAM-TABLE-AREA.                                               
           05  PT-MN-INDX                  PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-MN-COUNT                 PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-MN-INDX-MAX              PIC S9(04)      VALUE +99            
                               COMP-3.                                          
           05  PT-MN-DATE-TABLE OCCURS 99 TIMES.                                
               10  PT-MN-BEG-DATE          PIC X(10)       VALUE SPACES.        
               10  PT-MN-END-DATE          PIC X(10)       VALUE SPACES.        
                                                                                
           05  PT-WK-INDX                  PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-WK-START-INDX            PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-WK-COUNT                 PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-WK-INDX-MAX              PIC S9(04)      VALUE +999           
                               COMP-3.                                          
           05  PT-WK-DATE-TABLE OCCURS 999 TIMES.                               
               10  PT-MONTH-INDEX          PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
               10  PT-WK-BEG-DATE          PIC X(10)       VALUE SPACES.        
               10  PT-WK-END-DATE          PIC X(10)       VALUE SPACES.        
                                                                                
           05  PT-DEPT-INDX                PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-DEPT-INDX-MAX            PIC S9(04)      VALUE +9999          
                               COMP-3.                                          
           05  PT-DEPT-INFO-TABLE OCCURS 9999 TIMES.                            
               10  PT-DEPT-NBR-9           PIC 9(04)       VALUE ZEROES.        
               10  PT-DEPT-NBR-X REDEFINES PT-DEPT-NBR-9                        
                                           PIC X(04).                           
               10  FILLER REDEFINES PT-DEPT-NBR-9.                              
                   15  FILLER              PIC X(01).                           
                   15  PT-DEPT-NBR-3X      PIC X(03).                           
               10  PT-DEPT-COUNT           PIC S9(09)      VALUE ZEROES         
                               COMP-3.                                          
               10  PT-DEPT-PROCESSED-SW    PIC X(01)       VALUE SPACE.         
                   88  PT-DEPT-PROCESSED                   VALUE 'Y'.           
                   88  PT-DEPT-NOT-PROCESSED               VALUE 'N'.           
               10  PT-DEPT-MN-EFF-BEG-DTE  PIC X(10)       VALUE SPACES.        
               10  PT-DEPT-MN-GP-CDE       PIC X(01)       VALUE SPACE.         
               10  PT-DEPT-WK-EFF-BEG-DTE  PIC X(10)       VALUE SPACES.        
               10  PT-DEPT-WK-GP-CDE       PIC X(01)       VALUE SPACE.         
                                                                                
           05  PT-PARTN-INDX               PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-PARTN-INDX-MAX           PIC S9(04)      VALUE +254           
                               COMP-3.                                          
           05  PT-PARTN-TABLE OCCURS 254 TIMES.                                 
               10  PT-PARTN-NBR            PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
               10  PT-MN-PARTN-STATUS      PIC X(01)       VALUE SPACE.         
                   88  PT-MN-PARTN-RECYCLE                 VALUE 'Y'.           
                   88  PT-MN-PARTN-NOT-RECYCLE             VALUE 'N'.           
                   88  PT-MN-PARTN-UNKNOWN                 VALUE SPACE.         
               10  PT-WK-PARTN-STATUS      PIC X(01)       VALUE SPACE.         
                   88  PT-WK-PARTN-RECYCLE                 VALUE 'Y'.           
                   88  PT-WK-PARTN-NOT-RECYCLE             VALUE 'N'.           
                   88  PT-WK-PARTN-UNKNOWN                 VALUE SPACE.         
                                                                                
           05  PT-MN-DEPT-GP-INDX          PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-MN-DEPT-GP-INDX-MAX      PIC S9(04)      VALUE +16            
                               COMP-3.                                          
           05  PT-MN-DEPT-GP-TABLE-VALUE   PIC X(16)       VALUE                
               '1234567887654321'.                                              
           05  FILLER REDEFINES PT-MN-DEPT-GP-TABLE-VALUE.                      
               10  PT-MN-DEPT-GP-CDE OCCURS 16 TIMES                            
                                           PIC X(01).                           
                                                                                
           05  PT-WK-DEPT-GP-INDX          PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PT-WK-DEPT-GP-INDX-MAX      PIC S9(04)      VALUE +04            
                               COMP-3.                                          
           05  PT-WK-DEPT-GP-TABLE-VALUE   PIC X(04)       VALUE                
               '1221'.                                                          
           05  FILLER REDEFINES PT-WK-DEPT-GP-TABLE-VALUE.                      
               10  PT-WK-DEPT-GP-CDE OCCURS 04 TIMES                            
                                           PIC X(01).                           
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** SQL WORK AREA BEGIN ***'.                                       
                                                                                
      *****************************************************************         
      *  SQL ABEND ROUTINE WORKING STORAGE                                      
      *****************************************************************         
      *01  DP004-DB2-ERROR-FIELDS.                                              
           COPY DPWS004.                                                        
                                                                                
       01  ABEND-CODE                      PIC S9(04)      VALUE ZEROES         
                               COMP SYNC.                                       
           88  CONTROL-CARD-ABEND                          VALUE +4001.         
           88  TABLE-AREA-ABEND                            VALUE +4002.         
           88  NON-SQL-ABEND-CODE                          VALUE +4004.         
           88  LOGICAL-ISSUE-ABEND                         VALUE +4012.         
           88  SQL-ABEND-CODE                              VALUE +4016.         
                                                                                
           EXEC SQL                                                             
               INCLUDE SQLCA                                                    
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    TMLCNTL - ML'S DATE CONTROL TABLE                          *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE TMLCNTL                                                  
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    TDTATTR - ML'S DATE ATTRIBUTE TABLE                        *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE TDTATTR                                                  
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    TMDSEAR - MERCHANDISE HIERARCHY TABLE                      *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE TMDSEAR                                                  
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    TAPLAVL - APPLICATION AVAILABILITY                         *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE TAPLAVL                                                  
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    MLT_PARTN_BAL - ML'S PARTITION BALANCING TABLE             *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE MLT00002                                                 
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    MLT_PARTN_CNTL - ML'S PARTITION CONTROL TABLE              *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE MLT00003                                                 
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    MLT_MNLY_SUM - ML'S MONTHLY DETAIL DATA TABLE              *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE MLT00004                                                 
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    TMNSCLS - ML'S MONTHLY SUB-CLASS/STORE TABLE               *         
      *---------------------------------------------------------------*         
           EXEC SQL                                                             
               INCLUDE TMNSCLS                                                  
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    MONTH AND WEEK END DATA CURSOR                             *         
      *---------------------------------------------------------------*         
           EXEC SQL   DECLARE FISCAL-DATE-CSR CURSOR FOR                        
                SELECT DISTINCT                                                 
                        A.FSCL_MN_BEG_DTE                                       
                       ,A.FSCL_MN_END_DTE                                       
                       ,A.FSCL_WK_BEG_DTE                                       
                       ,A.FSCL_WK_END_DTE                                       
                FROM                                                            
                        TDTATTR    A                                            
                WHERE                                                           
                      A.KY_DTE BETWEEN :PV-RQ-FSCL-BEG-DATE                     
                          AND :PV-RQ-FSCL-END-DATE                              
                ORDER BY                                                        
                        A.FSCL_MN_END_DTE                                       
                       ,A.FSCL_WK_END_DTE                                       
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    ML'S ACTIVE DEPTS CURSOR                                   *         
      *---------------------------------------------------------------*         
           EXEC SQL DECLARE ACTIVE-DEPT-CSR CURSOR FOR                          
                SELECT DISTINCT                                                 
                        A.DEPT_NBR                                              
                  FROM                                                          
                        TMDSEAR A                                               
                       ,TAPLAVL B                                               
                  WHERE                                                         
                         A.OPERCO_NBR       = '03'                              
                    AND  A.MDSELV_CDE       = 'DPT'                             
      *  GET ROWS FROM TAPLAVL THAT ARE EFFECTIVE FROM CURRENT                  
      *  MONTH BEGINNING DATE ALL THE WAY THROUGH CURRENT MONTH                 
      *  ENDING DATE    ----BEG>>>>>>>>END>>>                                   
                    AND  A.STRT_DTE        <= :PV-CURR-MN-END-DATE              
                    AND  A.END_DTE         >= :PV-CURR-MN-BEG-DATE              
                    AND  A.MDSEAR_DKEY      = B.MDSEAR_DKEY                     
      *  GET ROWS FROM TMDSEAR THAT ARE EFFECTIVE FROM CURRENT                  
      *  MONTH BEGINNING DATE ALL THE WAY THROUGH CURRENT MONTH                 
      *  ENDING DATE    ----BEG>>>>>>>>END>>>                                   
                    AND  B.MDSEAR_STRT_DTE <= :PV-CURR-MN-END-DATE              
                    AND  B.MDSEAR_END_DTE  >= :PV-CURR-MN-BEG-DATE              
                    AND  B.APLSYS_CDE       = 'ML'                              
                  ORDER BY                                                      
                         A.DEPT_NBR                                             
                  WITH UR                                                       
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    MONTHLY COUNT BY DEPT CURSOR                               *         
      *---------------------------------------------------------------*         
           EXEC SQL   DECLARE MNLY-COUNT-CSR CURSOR FOR                         
                SELECT                                                          
                        X.DEPT_NBR                                              
                       ,X.COUNT_FOR_DEPT                                        
                  FROM                                                          
                       (SELECT                                                  
                                C.DEPT_NBR                                      
                               ,COUNT(*)   AS COUNT_FOR_DEPT                    
                        FROM                                                    
                                MLT_PARTN_CNTL   A                              
                               ,MLT_PARTN_BAL    B                              
                               ,MLT_MNLY_SUM     C                              
                        WHERE                                                   
                              A.TBL_TM_LVL_CDE = 'M'                            
W26006*                   AND A.FSCL_DTE       = :PV-CURR-MN-END-DATE           
W26006                    AND A.FSCL_DTE       = :PV-PREV-FSCL-END-DATE         
                          AND A.PARTN_NBR      = C.PARTN_NBR                    
                          AND A.DEPT_GP_CDE    = B.DEPT_GP_CDE                  
                          AND A.FSCL_DTE                                        
                                 BETWEEN B.EFF_BEG_DTE AND B.EFF_END_DTE        
                          AND A.TBL_TM_LVL_CDE = B.TBL_TM_LVL_CDE               
                          AND B.DEPT_NBR       = C.DEPT_NBR                     
                        GROUP BY                                                
                                 C.DEPT_NBR                                     
                       ) AS X                                                   
                  ORDER BY                                                      
                        X.COUNT_FOR_DEPT  DESC                                  
           END-EXEC.                                                            
                                                                                
      *---------------------------------------------------------------*         
      *    ALTERNATE MONTHLY COUNT BY DEPT CURSOR                     *         
      *---------------------------------------------------------------*         
           EXEC SQL   DECLARE ALT-MNLY-COUNT-CSR CURSOR FOR                     
                SELECT                                                          
                        X.DEC_DEPT_NBR                                          
                       ,X.COUNT_FOR_DEPT                                        
                  FROM                                                          
                       (SELECT                                                  
                                DECIMAL(A.DEPT_NBR, 4,0) AS DEC_DEPT_NBR        
                               ,COUNT(*)   AS COUNT_FOR_DEPT                    
                        FROM                                                    
                                TMNSCLS  A                                      
                               ,TDTATTR  B                                      
                        WHERE                                                   
W26006*                       A.FSCL_MN_END_DTE = :PV-CURR-MN-END-DATE          
W26006                        A.FSCL_MN_END_DTE = :PV-PREV-FSCL-END-DATE        
                          AND B.KY_DTE          = A.FSCL_MN_END_DTE             
                          AND B.FSCL_MN_NBR     = A.FSCL_MN_NBR                 
                        GROUP BY                                                
                                 A.DEPT_NBR                                     
                       ) AS X                                                   
                  ORDER BY                                                      
                        X.COUNT_FOR_DEPT  DESC                                  
           END-EXEC.                                                            
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** WORKING STORAGE END ***'.                                       
                                                                                
       EJECT                                                                    
       PROCEDURE DIVISION.                                                      
                                                                                
       A100-MAIN-MODULE.                                                        
      ******************************************************************        
      *  MAIN PROCESSING.                                                       
      ******************************************************************        
                                                                                
           PERFORM B100-HOUSEKEEPING.                                           
                                                                                
           PERFORM Z225-FETCH-TDTATTR.                                          
           PERFORM B200-PROCESS-TDTATTR                                         
               UNTIL END-OF-TDTATTR.                                            
           MOVE PT-MN-INDX        TO PT-MN-COUNT.                               
           MOVE PT-WK-INDX        TO PT-WK-COUNT.                               
                                                                                
           IF PT-MN-COUNT > ZEROES AND PT-WK-COUNT > ZEROES                     
               SET ML060-ACTIVE-CARD             TO TRUE                        
                                                                                
               MOVE +1                           TO PT-WK-START-INDX            
               PERFORM B300-PROCESS-MONTH                                       
                   VARYING PT-MN-INDX FROM 1 BY 1                               
                   UNTIL PT-MN-INDX > PT-MN-COUNT                               
                                                                                
               PERFORM B400-PROCESS-MN-PARTN                                    
                                                                                
               PERFORM B500-PROCESS-WK-PARTN                                    
           ELSE                                                                 
               SET CONTROL-CARD-ABEND     TO TRUE                               
               DISPLAY ' *** NOTHING TO PROCESS, CHECK TDTATTR TABLE'           
               PERFORM Z999-ABEND                                               
           END-IF.                                                              
                                                                                
           PERFORM B900-FINALIZE.                                               
                                                                                
           STOP RUN.                                                            
                                                                                
      ******************************************************************        
      * GET THE SYSTEM TIME AND MOVE IT TO THE REPORT HEADING. SET              
      * THE REPORT NAME AND NUMBER.                                             
      ******************************************************************        
       B100-HOUSEKEEPING.                                                       
                                                                                
           SET FIRST-TIME-THRU    TO TRUE.                                      
                                                                                
           ACCEPT PV-TODAYS-DATE FROM DATE.                                     
           ACCEPT PV-TODAYS-TIME FROM TIME.                                     
                                                                                
           MOVE PV-TODAYS-DATE-YY TO PV-PROCESSING-YY.                          
           MOVE PV-TODAYS-DATE-MM TO PV-PROCESSING-MM.                          
           MOVE PV-TODAYS-DATE-DD TO PV-PROCESSING-DD.                          
                                                                                
           MOVE '-' TO PV-PROC-DSH1.                                            
           MOVE '-' TO PV-PROC-DSH2.                                            
                                                                                
           IF PV-TODAYS-DATE-YY > '80'                                          
               MOVE '19' TO PV-PROCESSING-CC                                    
           ELSE                                                                 
               MOVE '20' TO PV-PROCESSING-CC                                    
           END-IF.                                                              
                                                                                
           OPEN INPUT  REQUEST-CNTL-FILE                                        
                OUTPUT PARTN-INFO-EXTRACT                                       
                       RECYCLE-WK-PARTN-EXTRACT                                 
                       RECYCLE-MN-PARTN-EXTRACT.                                
                                                                                
           PERFORM C100-PROCESS-RQ-CNTL.                                        
                                                                                
           PERFORM Z200-OPEN-TDTATTR.                                           
                                                                                
           MOVE ZEROES             TO PT-PARTN-INDX.                            
           PERFORM                                                              
               PT-PARTN-INDX-MAX TIMES                                          
               ADD +1                  TO PT-PARTN-INDX                         
               SET PT-WK-PARTN-UNKNOWN(PT-PARTN-INDX)                           
                   PT-MN-PARTN-UNKNOWN(PT-PARTN-INDX) TO TRUE                   
               MOVE ZEROES         TO PT-PARTN-NBR(PT-PARTN-INDX)               
           END-PERFORM.                                                         
                                                                                
      ******************************************************************        
      *    PROCESS TDTATTR CURSOR AND WRITE OUT COMMON EXTRACT                  
      ******************************************************************        
       B200-PROCESS-TDTATTR.                                                    
                                                                                
           IF PV-CURR-MN-END-DATE NOT = DTATTR-FSCL-MN-END-DTE                  
               ADD +1                      TO PT-MN-INDX                        
               IF PT-MN-INDX > PT-MN-INDX-MAX                                   
                   SET TABLE-AREA-ABEND       TO TRUE                           
                   DISPLAY ' *** MONTH END DATE TABLE ENTRIES EXCEEDED'         
                   PERFORM Z999-ABEND                                           
               END-IF                                                           
               MOVE DTATTR-FSCL-MN-BEG-DTE TO PV-CURR-MN-BEG-DATE               
                                              PT-MN-BEG-DATE(PT-MN-INDX)        
               MOVE DTATTR-FSCL-MN-END-DTE TO PV-CURR-MN-END-DATE               
                                              PT-MN-END-DATE(PT-MN-INDX)        
           END-IF.                                                              
           ADD +1                      TO PT-WK-INDX.                           
           IF PT-WK-INDX > PT-WK-INDX-MAX                                       
               SET TABLE-AREA-ABEND       TO TRUE                               
               DISPLAY ' *** WEEK END DATE TABLE ENTRIES EXCEEDED'              
               PERFORM Z999-ABEND                                               
           END-IF.                                                              
           MOVE PT-MN-INDX             TO PT-MONTH-INDEX(PT-WK-INDX).           
           MOVE DTATTR-FSCL-WK-BEG-DTE TO PT-WK-BEG-DATE(PT-WK-INDX).           
           MOVE DTATTR-FSCL-WK-END-DTE TO PT-WK-END-DATE(PT-WK-INDX).           
                                                                                
           PERFORM Z225-FETCH-TDTATTR.                                          
                                                                                
      ******************************************************************        
      *    BUILD THE CONTROL FOR MONTHLY LEVEL                                  
      ******************************************************************        
       B300-PROCESS-MONTH.                                                      
                                                                                
           SET ML060-TM-MONTHLY-LVL-CODE     TO TRUE.                           
           MOVE PT-MN-END-DATE(PT-MN-INDX)   TO PV-CURR-MN-END-DATE.            
                                                                                
           MOVE PT-MN-BEG-DATE(PT-MN-INDX)   TO ML060-EFF-BEG-DTE               
                                                PV-CURR-MN-BEG-DATE.            
                                                                                
           PERFORM C200-GET-LAST-MN-PARTN.                                      
                                                                                
           PERFORM C300-GET-LAST-WK-PARTN.                                      
                                                                                
           DISPLAY ' '.                                                         
           DISPLAY ' LAST MONTHLY PARTITION: '                                  
                   PV-START-MN-PARTN-NBR                                        
                   ' AND LAST WEEKLY PARTITION: '                               
                   PV-START-WK-PARTN-NBR.                                       
                                                                                
           PERFORM Z300-OPEN-TMDSEAR.                                           
           PERFORM Z325-LOAD-TMDSEAR                                            
               UNTIL END-OF-TMDSEAR.                                            
           PERFORM Z350-CLOSE-TMDSEAR.                                          
                                                                                
           DISPLAY '     PROCESS/GET DEPT COUNTS USING MLT_MNLY_SUM'            
           SET MAIN-COUNT-SOURCE  TO TRUE.                                      
           PERFORM Z400-OPEN-MNLY-COUNT.                                        
           PERFORM Z425-FETCH-MNLY-COUNT.                                       
           MOVE ZEROES         TO PT-MN-DEPT-GP-INDX                            
                                  PT-WK-DEPT-GP-INDX.                           
           PERFORM C500-PROCESS-MNLY-COUNT                                      
               UNTIL END-OF-MNLY-COUNT.                                         
           PERFORM Z450-CLOSE-MNLY-COUNT.                                       
           IF PV-COUNTED-DEPTS > ZEROES                                         
               CONTINUE                                                         
           ELSE                                                                 
      *  REPROCESS COUNTS USING TMNSCLS INSTEAD OF MLT_MNLY_SUM                 
               DISPLAY '     PROCESS/GET DEPT COUNTS USING TMNSCLS'             
               SET ALTERNATE-COUNT-SOURCE  TO TRUE                              
               PERFORM Z400-OPEN-MNLY-COUNT                                     
               PERFORM Z425-FETCH-MNLY-COUNT                                    
               MOVE ZEROES         TO PT-MN-DEPT-GP-INDX                        
                                      PT-WK-DEPT-GP-INDX                        
               PERFORM C500-PROCESS-MNLY-COUNT                                  
                   UNTIL END-OF-MNLY-COUNT                                      
               PERFORM Z450-CLOSE-MNLY-COUNT                                    
           END-IF.                                                              
                                                                                
           PERFORM C400-CREATE-ZERO-COUNT.                                      
                                                                                
           COMPUTE PV-NUMBER-OF-WEEK = PT-WK-INDX - PT-WK-START-INDX.           
           MOVE PT-WK-INDX             TO PT-WK-START-INDX.                     
           MOVE PV-CURR-MN-BEG-DATE    TO PV-PREV-FSCL-BEG-DATE.                
           MOVE PV-CURR-MN-END-DATE    TO PV-PREV-FSCL-END-DATE.                
           SET  NOT-FIRST-TIME-THRU    TO TRUE.                                 
                                                                                
      ******************************************************************        
      *    PROCESS RECYCLE MONTHLY PARTITION NUMBER                             
      ******************************************************************        
       B400-PROCESS-MN-PARTN.                                                   
                                                                                
           MOVE ZEROES             TO PT-PARTN-INDX                             
                                      WS-PARTN-NBR.                             
           PERFORM                                                              
               PT-PARTN-INDX-MAX TIMES                                          
               ADD +1                  TO PT-PARTN-INDX                         
               IF PT-MN-PARTN-RECYCLE(PT-PARTN-INDX)                            
                   IF WS-PARTN-NBR NOT = ZEROES                                 
                       SET WS-MORE-PARTN-NBR  TO TRUE                           
                       PERFORM Z850-WRITE-RECYCLE-MN-PARTN                      
                   END-IF                                                       
                   MOVE PT-PARTN-NBR(PT-PARTN-INDX)                             
                       TO WS-PARTN-NBR                                          
               END-IF                                                           
           END-PERFORM.                                                         
           IF WS-PARTN-NBR NOT = ZEROES                                         
               SET WS-NO-MORE-PARTN-NBR  TO TRUE                                
               PERFORM Z850-WRITE-RECYCLE-MN-PARTN                              
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    PROCESS RECYCLE WEEKLY PARTITION NUMBER                              
      ******************************************************************        
       B500-PROCESS-WK-PARTN.                                                   
                                                                                
           MOVE ZEROES             TO PT-PARTN-INDX                             
                                      WS-PARTN-NBR.                             
           PERFORM                                                              
               PT-PARTN-INDX-MAX TIMES                                          
               ADD +1                  TO PT-PARTN-INDX                         
               IF PT-WK-PARTN-RECYCLE(PT-PARTN-INDX)                            
                   IF WS-PARTN-NBR NOT = ZEROES                                 
                       SET WS-MORE-PARTN-NBR  TO TRUE                           
                       PERFORM Z800-WRITE-RECYCLE-WK-PARTN                      
                   END-IF                                                       
                   MOVE PT-PARTN-NBR(PT-PARTN-INDX)                             
                       TO WS-PARTN-NBR                                          
               END-IF                                                           
           END-PERFORM.                                                         
           IF WS-PARTN-NBR NOT = ZEROES                                         
               SET WS-NO-MORE-PARTN-NBR  TO TRUE                                
               PERFORM Z800-WRITE-RECYCLE-WK-PARTN                              
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    FINALIZE THE REPORT AND CLOSE OUT FILES                              
      ******************************************************************        
       B900-FINALIZE.                                                           
                                                                                
           DISPLAY ' '.                                                         
           DISPLAY ' **** RECORDS EXTRACTED: '                                  
                   PV-RECORD-EXTRACTED.                                         
           DISPLAY ' **** RECYCLE WEEKLY PARTITION COUNT:  '                    
                   PV-RECYCLE-WK-PARTN.                                         
           DISPLAY ' **** RECYCLE MONTHLY PARTITION COUNT: '                    
                   PV-RECYCLE-MN-PARTN.                                         
                                                                                
           PERFORM Z250-CLOSE-TDTATTR.                                          
                                                                                
           CLOSE   REQUEST-CNTL-FILE                                            
                   PARTN-INFO-EXTRACT                                           
                   RECYCLE-WK-PARTN-EXTRACT                                     
                   RECYCLE-MN-PARTN-EXTRACT.                                    
                                                                                
      ******************************************************************        
      *    PROCESS REQUEST CONTROL CARD AND/OR GET REQUEST DATES                
      ******************************************************************        
       C100-PROCESS-RQ-CNTL.                                                    
                                                                                
           DISPLAY 'EXTRACT REQUESTED:'.                                        
           DISPLAY '  ----+----1----+----2----+----3----+----4'.                
           PERFORM Z100-READ-REQUEST-CNTL.                                      
                                                                                
           PERFORM                                                              
               UNTIL END-OF-REQUEST-CNTL                                        
                   OR NOT RQ-COMMENTS                                           
                                                                                
               DISPLAY '  ' RQ-CNTL-AREA                                        
               PERFORM Z100-READ-REQUEST-CNTL                                   
                                                                                
           END-PERFORM.                                                         
                                                                                
           DISPLAY ' '.                                                         
           IF NOT RQ-COMMENTS                                                   
               AND NOT END-OF-REQUEST-CNTL                                      
               DISPLAY '  ' RQ-CNTL-AREA                                        
               IF RQ-BEG-DATE-CCYY IS NUMERIC                                   
                   AND RQ-BEG-DATE-MM IS NUMERIC                                
                   AND RQ-BEG-DATE-DD IS NUMERIC                                
                   AND REQ-BEG-DATE-VALID-DASH-1                                
                   AND REQ-BEG-DATE-VALID-DASH-2                                
                   IF RQ-END-DATE-CCYY IS NUMERIC                               
                       AND RQ-END-DATE-MM IS NUMERIC                            
                       AND RQ-END-DATE-DD IS NUMERIC                            
                       AND REQ-END-DATE-VALID-DASH-1                            
                       AND REQ-END-DATE-VALID-DASH-2                            
                       IF RQ-BEG-DATE > RQ-END-DATE                             
                           DISPLAY ' *** SWAP REQUEST BEG AND END DATE'         
                           MOVE RQ-BEG-DATE   TO DTATTR-KY-DTE                  
                           MOVE RQ-END-DATE   TO RQ-BEG-DATE                    
                           MOVE DTATTR-KY-DTE TO RQ-END-DATE                    
                       END-IF                                                   
                   ELSE                                                         
                       DISPLAY ' *** USE REQUESTED BEG AS END DATE'             
                       MOVE RQ-BEG-DATE TO RQ-END-DATE                          
                   END-IF                                                       
               ELSE                                                             
                   MOVE SPACES TO RQ-BEG-DATE                                   
                                  RQ-END-DATE                                   
               END-IF                                                           
           ELSE                                                                 
               MOVE SPACES TO RQ-BEG-DATE                                       
                              RQ-END-DATE                                       
           END-IF.                                                              
           IF RQ-BEG-DATE = SPACES                                              
               PERFORM C150-GET-ML-CONTROL                                      
               DISPLAY ' *** DEFAULT TO ML CONTROL DATES: '                     
                       RQ-BEG-DATE ' - '                                        
                       RQ-END-DATE                                              
           ELSE                                                                 
               EXEC SQL                                                         
                    SELECT                                                      
                           B.FSCL_MN_BEG_DTE                                    
                          ,B.FSCL_MN_END_DTE                                    
                      INTO                                                      
                           :DTATTR-FSCL-MN-BEG-DTE                              
                          ,:DTATTR-FSCL-MN-END-DTE                              
                      FROM                                                      
                           TDTATTR    B                                         
                      WHERE                                                     
                           B.KY_DTE + 1 DAY  = :RQ-BEG-DATE                     
               END-EXEC                                                         
               IF SQLCODE = +0                                                  
                   MOVE DTATTR-FSCL-MN-BEG-DTE TO PV-PREV-FSCL-BEG-DATE         
                   MOVE DTATTR-FSCL-MN-END-DTE TO PV-PREV-FSCL-END-DATE         
               ELSE                                                             
                   MOVE 'SELECT PREV DATES' TO PV-OPER-ATTEMPTED                
                   PERFORM Z900-SQL-ABEND                                       
               END-IF                                                           
           END-IF.                                                              
                                                                                
      *  GET THE FISCAL MONTH BEGINNING DATE FOR REQUESTED BEGIN DATE           
           EXEC SQL                                                             
                SELECT  X.FSCL_MN_BEG_DTE                                       
                  INTO :PV-RQ-FSCL-BEG-DATE                                     
                  FROM  TDTATTR    X                                            
                  WHERE X.KY_DTE = :RQ-BEG-DATE                                 
           END-EXEC.                                                            
                                                                                
           IF SQLCODE = +0                                                      
               CONTINUE                                                         
           ELSE                                                                 
               MOVE 'GET REQ. FSCL BEG DATE' TO PV-OPER-ATTEMPTED               
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      *  GET THE FISCAL MONTH ENDING DATE FOR REQUESTED END DATE                
           EXEC SQL                                                             
                SELECT  Y.FSCL_MN_END_DTE                                       
                  INTO :PV-RQ-FSCL-END-DATE                                     
                  FROM  TDTATTR    Y                                            
                  WHERE Y.KY_DTE = :RQ-END-DATE                                 
           END-EXEC.                                                            
                                                                                
           IF SQLCODE = +0                                                      
               CONTINUE                                                         
           ELSE                                                                 
               MOVE 'GET REQ. FSCL END DATE' TO PV-OPER-ATTEMPTED               
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    GET DEFAULT DATES FROM ML CONTROL                                    
      ******************************************************************        
       C150-GET-ML-CONTROL.                                                     
                                                                                
           EXEC SQL                                                             
                SELECT                                                          
                       B.FSCL_MN_BEG_DTE                                        
                      ,B.FSCL_MN_END_DTE                                        
                  INTO                                                          
                       :DTATTR-FSCL-MN-BEG-DTE                                  
                      ,:DTATTR-FSCL-MN-END-DTE                                  
                  FROM                                                          
                       TMLCNTL    A                                             
                      ,TDTATTR    B                                             
                  WHERE                                                         
                       B.KY_DTE    = A.OPN_FSCL_MN_DTE                          
           END-EXEC.                                                            
           IF SQLCODE = +0                                                      
               MOVE DTATTR-FSCL-MN-BEG-DTE TO PV-PREV-FSCL-BEG-DATE             
               MOVE DTATTR-FSCL-MN-END-DTE TO PV-PREV-FSCL-END-DATE             
               EXEC SQL                                                         
                    SELECT                                                      
                           B.FSCL_MN_BEG_DTE                                    
                          ,B.FSCL_MN_END_DTE                                    
                      INTO                                                      
                           :DTATTR-FSCL-MN-BEG-DTE                              
                          ,:DTATTR-FSCL-MN-END-DTE                              
                      FROM                                                      
                           TMLCNTL    A                                         
                          ,TDTATTR    B                                         
                      WHERE                                                     
                           B.KY_DTE    = A.OPN_FSCL_MN_DTE + 1 DAY              
               END-EXEC                                                         
               IF SQLCODE = +0                                                  
                   MOVE DTATTR-FSCL-MN-BEG-DTE TO RQ-BEG-DATE                   
                   MOVE DTATTR-FSCL-MN-END-DTE TO RQ-END-DATE                   
               ELSE                                                             
                   MOVE 'GET BEG/END REQ DATE' TO PV-OPER-ATTEMPTED             
                   PERFORM Z900-SQL-ABEND                                       
               END-IF                                                           
           ELSE                                                                 
               MOVE 'GET BEG/END PREV DATE' TO PV-OPER-ATTEMPTED                
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    DETERMINE THE LAST MONTHLY PARTITION NUMBER USED                     
      ******************************************************************        
       C200-GET-LAST-MN-PARTN.                                                  
                                                                                
           MOVE 'M'             TO MLT00003-TBL-TM-LVL-CDE.                     
W26006     MOVE PC-NBR-PARTN-PER-MN TO PV-PARTN-NBR-PER-PERIOD.                 
W26006     MOVE PT-MN-COUNT         TO PV-NBR-OF-PERIOD.                        
W26006     MOVE PC-MAX-MN-PARTN     TO PV-PARTN-NBR-LIMIT.                      
           PERFORM Z500-GET-PARTN-NBR.                                          
           IF MLT00003-PARTN-NBR = ZEROES                                       
               AND NOT-FIRST-TIME-THRU                                          
               ADD PC-NBR-PARTN-PER-MN TO PV-START-MN-PARTN-NBR                 
               IF PV-START-MN-PARTN-NBR > PC-MAX-MN-PARTN                       
                   COMPUTE PV-START-MN-PARTN-NBR = PV-START-MN-PARTN-NBR        
                                                 - PC-MAX-MN-PARTN              
               END-IF                                                           
           ELSE                                                                 
               IF FIRST-TIME-THRU                                               
                   OR MLT00003-PARTN-NBR >= PV-START-MN-PARTN-NBR               
                   MOVE MLT00003-PARTN-NBR TO PV-START-MN-PARTN-NBR             
               ELSE                                                             
                   SET LOGICAL-ISSUE-ABEND TO TRUE                              
                   DISPLAY ' *** BUILDING PARTITION OUT OF ORDER'               
                   DISPLAY '     ASSIGNED MONTHLY PARTITION: '                  
                           PV-START-MN-PARTN-NBR                                
                           ' AND EXISTING PARTITION IN DB: '                    
                           MLT00003-PARTN-NBR                                   
                   PERFORM Z999-ABEND                                           
               END-IF                                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    DETERMINE THE LAST WEEKLY PARTITION NUMBER USED                      
      ******************************************************************        
       C300-GET-LAST-WK-PARTN.                                                  
                                                                                
           MOVE 'W'            TO MLT00003-TBL-TM-LVL-CDE.                      
W26006     MOVE PC-NBR-PARTN-PER-WK TO PV-PARTN-NBR-PER-PERIOD.                 
W26006     MOVE PT-WK-COUNT         TO PV-NBR-OF-PERIOD.                        
W26006     MOVE PC-MAX-WK-PARTN TO PV-PARTN-NBR-LIMIT.                          
           PERFORM Z500-GET-PARTN-NBR.                                          
           IF MLT00003-PARTN-NBR = ZEROES                                       
               AND NOT-FIRST-TIME-THRU                                          
               COMPUTE PV-START-WK-PARTN-NBR = PV-START-WK-PARTN-NBR            
                                             + (PC-NBR-PARTN-PER-WK             
                                                * PV-NUMBER-OF-WEEK)            
               IF PV-START-WK-PARTN-NBR > PC-MAX-WK-PARTN                       
                   COMPUTE PV-START-WK-PARTN-NBR = PV-START-WK-PARTN-NBR        
                                                 - PC-MAX-WK-PARTN              
               END-IF                                                           
           ELSE                                                                 
               IF FIRST-TIME-THRU                                               
                   OR MLT00003-PARTN-NBR >= PV-START-WK-PARTN-NBR               
                   MOVE MLT00003-PARTN-NBR TO PV-START-WK-PARTN-NBR             
               ELSE                                                             
                   SET LOGICAL-ISSUE-ABEND TO TRUE                              
                   DISPLAY ' *** BUILDING PARTITION OUT OF ORDER'               
                   DISPLAY '     ASSIGNED WEEKLY PARTITION: '                   
                           PV-START-WK-PARTN-NBR                                
                           ' AND EXISTING PARTITION IN DB: '                    
                           MLT00003-PARTN-NBR                                   
                   PERFORM Z999-ABEND                                           
               END-IF                                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    CREATE REMAINING CONTROL FOR ZERO COUNT DEPT                         
      ******************************************************************        
       C400-CREATE-ZERO-COUNT.                                                  
                                                                                
           MOVE ZEROES         TO PT-DEPT-INDX.                                 
           PERFORM                                                              
               PT-DEPT-INDX-MAX TIMES                                           
               ADD +1              TO PT-DEPT-INDX                              
               IF PT-DEPT-NBR-9(PT-DEPT-INDX) = PT-DEPT-INDX                    
                   AND PT-DEPT-NOT-PROCESSED(PT-DEPT-INDX)                      
                   PERFORM D100-BUILD-MN-CONTROL                                
               END-IF                                                           
               SET PT-DEPT-NOT-PROCESSED(PT-DEPT-INDX) TO TRUE                  
           END-PERFORM.                                                         
                                                                                
      ******************************************************************        
      *    PROCESS MONTHLY COUNTS                                               
      ******************************************************************        
       C500-PROCESS-MNLY-COUNT.                                                 
                                                                                
           PERFORM D100-BUILD-MN-CONTROL.                                       
                                                                                
           PERFORM Z425-FETCH-MNLY-COUNT.                                       
                                                                                
      ******************************************************************        
      *    BUILD THE CONTROL FOR MONTHLY LEVEL                                  
      ******************************************************************        
       D100-BUILD-MN-CONTROL.                                                   
                                                                                
           SET PT-DEPT-PROCESSED(PT-DEPT-INDX)     TO TRUE.                     
           ADD +1                            TO PT-MN-DEPT-GP-INDX.             
           IF PT-MN-DEPT-GP-INDX > PT-MN-DEPT-GP-INDX-MAX                       
               MOVE +1                           TO PT-MN-DEPT-GP-INDX          
           END-IF.                                                              
                                                                                
           SET ML060-TM-MONTHLY-LVL-CODE     TO TRUE.                           
           MOVE PT-MN-END-DATE(PT-MN-INDX)   TO ML060-FSCL-DTE.                 
                                                                                
           MOVE PT-MN-DEPT-GP-CDE(PT-MN-DEPT-GP-INDX)                           
               TO ML060-DEPT-GP-CDE                                             
                  PV-PARTN-NBR-OFFSET.                                          
                                                                                
           IF ML060-DEPT-GP-CDE = PT-DEPT-MN-GP-CDE(PT-DEPT-INDX)               
               MOVE PT-DEPT-MN-EFF-BEG-DTE(PT-DEPT-INDX)                        
                   TO ML060-EFF-BEG-DTE                                         
           ELSE                                                                 
               MOVE PT-MN-BEG-DATE(PT-MN-INDX)                                  
                   TO ML060-EFF-BEG-DTE                                         
                      PT-DEPT-MN-EFF-BEG-DTE(PT-DEPT-INDX)                      
               MOVE ML060-DEPT-GP-CDE                                           
                   TO PT-DEPT-MN-GP-CDE(PT-DEPT-INDX)                           
           END-IF.                                                              
                                                                                
           COMPUTE ML060-PARTN-NBR = PV-START-MN-PARTN-NBR                      
                                   + PV-PARTN-NBR-OFFSET.                       
           IF ML060-PARTN-NBR > PC-MAX-MN-PARTN                                 
               COMPUTE ML060-PARTN-NBR = ML060-PARTN-NBR                        
                                       - PC-MAX-MN-PARTN                        
           END-IF.                                                              
           MOVE ML060-PARTN-NBR     TO  PT-PARTN-INDX.                          
           IF PT-MN-PARTN-UNKNOWN(PT-PARTN-INDX)                                
               MOVE 'M'             TO MLT00003-TBL-TM-LVL-CDE                  
               MOVE ML060-PARTN-NBR TO MLT00003-PARTN-NBR                       
                                       PT-PARTN-NBR(PT-PARTN-INDX)              
               PERFORM Z700-CHECK-PARTN-NBR                                     
               IF PV-PARTN-COUNT > ZEROES                                       
                   SET PT-MN-PARTN-RECYCLE(PT-PARTN-INDX) TO TRUE               
               ELSE                                                             
                   SET PT-MN-PARTN-NOT-RECYCLE(PT-PARTN-INDX) TO TRUE           
               END-IF                                                           
           END-IF.                                                              
                                                                                
           MOVE PT-DEPT-NBR-9(PT-DEPT-INDX)  TO ML060-DEPT-NBR-9.               
                                                                                
           PERFORM Z600-WRITE-PARTN-INFO.                                       
                                                                                
           PERFORM D200-PROCESS-WK-CONTROL.                                     
                                                                                
      ******************************************************************        
      *    BUILD THE CONTROL FOR WEEKLY LEVEL                                   
      ******************************************************************        
       D200-PROCESS-WK-CONTROL.                                                 
                                                                                
           SET ML060-TM-WEEKLY-LVL-CODE      TO TRUE.                           
           ADD +1                            TO PT-WK-DEPT-GP-INDX.             
           IF PT-WK-DEPT-GP-INDX > PT-WK-DEPT-GP-INDX-MAX                       
               MOVE +1                           TO PT-WK-DEPT-GP-INDX          
           END-IF.                                                              
                                                                                
           PERFORM E100-BUILD-WK-CONTROL                                        
               VARYING PT-WK-INDX FROM PT-WK-START-INDX BY 1                    
               UNTIL PT-WK-INDX > PT-WK-COUNT                                   
                   OR PT-MONTH-INDEX(PT-WK-INDX) NOT = PT-MN-INDX.              
                                                                                
      ******************************************************************        
      *    BUILD THE CONTROL FOR WEEKLY LEVEL                                   
      ******************************************************************        
       E100-BUILD-WK-CONTROL.                                                   
                                                                                
           MOVE PT-WK-END-DATE(PT-WK-INDX)   TO ML060-FSCL-DTE.                 
                                                                                
           IF ML060-DEPT-GP-CDE = PT-DEPT-WK-GP-CDE(PT-DEPT-INDX)               
               MOVE PT-DEPT-WK-EFF-BEG-DTE(PT-DEPT-INDX)                        
                   TO ML060-EFF-BEG-DTE                                         
           ELSE                                                                 
               MOVE PT-WK-BEG-DATE(PT-WK-INDX)                                  
                   TO ML060-EFF-BEG-DTE                                         
                      PT-DEPT-WK-EFF-BEG-DTE(PT-DEPT-INDX)                      
               MOVE ML060-DEPT-GP-CDE                                           
                   TO PT-DEPT-WK-GP-CDE(PT-DEPT-INDX)                           
           END-IF.                                                              
                                                                                
           MOVE PT-WK-DEPT-GP-CDE(PT-WK-DEPT-GP-INDX)                           
               TO ML060-DEPT-GP-CDE                                             
                  PV-PARTN-NBR-OFFSET.                                          
           COMPUTE ML060-PARTN-NBR = PV-START-WK-PARTN-NBR                      
                                   + PV-PARTN-NBR-OFFSET                        
                                   + (PC-NBR-PARTN-PER-WK                       
                                      * (PT-WK-INDX                             
                                         - PT-WK-START-INDX)).                  
           IF ML060-PARTN-NBR > PC-MAX-WK-PARTN                                 
               COMPUTE ML060-PARTN-NBR = ML060-PARTN-NBR                        
                                       - PC-MAX-WK-PARTN                        
           END-IF.                                                              
           MOVE ML060-PARTN-NBR     TO  PT-PARTN-INDX.                          
           IF PT-WK-PARTN-UNKNOWN(PT-PARTN-INDX)                                
               MOVE 'W'             TO MLT00003-TBL-TM-LVL-CDE                  
               MOVE ML060-PARTN-NBR TO MLT00003-PARTN-NBR                       
                                       PT-PARTN-NBR(PT-PARTN-INDX)              
               PERFORM Z700-CHECK-PARTN-NBR                                     
               IF PV-PARTN-COUNT > ZEROES                                       
                   SET PT-WK-PARTN-RECYCLE(PT-PARTN-INDX) TO TRUE               
               ELSE                                                             
                   SET PT-WK-PARTN-NOT-RECYCLE(PT-PARTN-INDX) TO TRUE           
               END-IF                                                           
           END-IF.                                                              
                                                                                
           PERFORM Z600-WRITE-PARTN-INFO.                                       
                                                                                
      ******************************************************************        
      *    READ CONTROL CARD                                                    
      ******************************************************************        
       Z100-READ-REQUEST-CNTL.                                                  
                                                                                
           READ REQUEST-CNTL-FILE INTO RQ-CNTL-AREA                             
               AT END SET END-OF-REQUEST-CNTL TO TRUE.                          
                                                                                
      ******************************************************************        
      *    OPEN TDTATTR CURSOR                                                  
      ******************************************************************        
       Z200-OPEN-TDTATTR.                                                       
                                                                                
           DISPLAY ' REQUEST DATE: ' RQ-BEG-DATE                                
                   ' THROUGH ' RQ-END-DATE.                                     
           DISPLAY ' REQUESTED FISCAL DATE: ' PV-RQ-FSCL-BEG-DATE               
                   ' THROUGH ' PV-RQ-FSCL-END-DATE.                             
           EXEC SQL                                                             
               OPEN FISCAL-DATE-CSR                                             
           END-EXEC.                                                            
                                                                                
           IF SQLCODE = +0                                                      
               MOVE ZEROES                TO PT-MN-INDX                         
                                             PT-MN-COUNT                        
                                             PT-WK-INDX                         
                                             PT-WK-COUNT                        
               SET NOT-END-OF-TDTATTR     TO TRUE                               
           ELSE                                                                 
               MOVE 'OPEN FISCAL-DATE-CSR' TO PV-OPER-ATTEMPTED                 
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    FETCH THE NEXT RECORD FROM TDTATTR CURSOR                            
      ******************************************************************        
       Z225-FETCH-TDTATTR.                                                      
                                                                                
           EXEC SQL                                                             
                FETCH FISCAL-DATE-CSR                                           
                  INTO                                                          
                       :DTATTR-FSCL-MN-BEG-DTE                                  
                      ,:DTATTR-FSCL-MN-END-DTE                                  
                      ,:DTATTR-FSCL-WK-BEG-DTE                                  
                      ,:DTATTR-FSCL-WK-END-DTE                                  
           END-EXEC.                                                            
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN +100                                                        
                   SET END-OF-TDTATTR TO TRUE                                   
               WHEN OTHER                                                       
                   MOVE 'FETCH FISCAL-DATE-CSR' TO PV-OPER-ATTEMPTED            
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    CLOSE TDTATTR CURSOR                                                 
      ******************************************************************        
       Z250-CLOSE-TDTATTR.                                                      
                                                                                
           EXEC SQL                                                             
                CLOSE FISCAL-DATE-CSR                                           
           END-EXEC.                                                            
                                                                                
           IF SQLCODE NOT = +0                                                  
               MOVE 'CLOSE FISCAL-DATE-CSR' TO PV-OPER-ATTEMPTED                
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    OPEN TMDSEAR CURSOR                                                  
      ******************************************************************        
       Z300-OPEN-TMDSEAR.                                                       
                                                                                
           DISPLAY '   BUILDING DEPT FOR DATE: ' PV-CURR-MN-BEG-DATE            
                   ' THROUGH ' PV-CURR-MN-END-DATE.                             
           EXEC SQL                                                             
               OPEN ACTIVE-DEPT-CSR                                             
           END-EXEC.                                                            
                                                                                
           IF SQLCODE = +0                                                      
               SET NOT-END-OF-TMDSEAR   TO TRUE                                 
               MOVE ZEROES              TO PT-DEPT-INDX                         
                                           PV-ACTIVE-DEPTS                      
               PERFORM                                                          
                   PT-DEPT-INDX-MAX TIMES                                       
                   ADD +1               TO PT-DEPT-INDX                         
                   MOVE ZEROES          TO PT-DEPT-NBR-9(PT-DEPT-INDX)          
                                           PT-DEPT-COUNT(PT-DEPT-INDX)          
                   SET PT-DEPT-NOT-PROCESSED(PT-DEPT-INDX) TO TRUE              
      *    NOTE: PURPOSELY NOT INITIALIZING PT-DEPT-MN-GP-CDE,                  
      *          PT-DEPT-WK-GP-CDE, AND PT-DEPT-EFF-BEG-DTE                     
               END-PERFORM                                                      
           ELSE                                                                 
               MOVE 'OPEN ACTIVE-DEPT-CSR' TO PV-OPER-ATTEMPTED                 
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    FETCH THE NEXT RECORD FROM TMDSEAR CURSOR                            
      ******************************************************************        
       Z325-LOAD-TMDSEAR.                                                       
                                                                                
           EXEC SQL                                                             
                FETCH ACTIVE-DEPT-CSR                                           
                  INTO                                                          
                       :MDSEAR-DEPT-NBR                                         
           END-EXEC.                                                            
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   ADD +1                 TO PV-ACTIVE-DEPTS                    
                   MOVE ZEROES            TO PV-DEPT-NBR-9                      
                   MOVE MDSEAR-DEPT-NBR   TO PV-DEPT-NBR-3X                     
                   MOVE PV-DEPT-NBR-9     TO PT-DEPT-INDX                       
                   MOVE PV-DEPT-NBR-9     TO PT-DEPT-NBR-9(PT-DEPT-INDX)        
               WHEN +100                                                        
                   SET END-OF-TMDSEAR TO TRUE                                   
               WHEN OTHER                                                       
                   MOVE 'FETCH ACTIVE-DEPT-CSR' TO PV-OPER-ATTEMPTED            
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    CLOSE TMDSEAR CURSOR                                                 
      ******************************************************************        
       Z350-CLOSE-TMDSEAR.                                                      
                                                                                
           DISPLAY '   ACTIVE DEPT COUNT: ' PV-ACTIVE-DEPTS                     
           EXEC SQL                                                             
                CLOSE ACTIVE-DEPT-CSR                                           
           END-EXEC.                                                            
                                                                                
           IF SQLCODE NOT = +0                                                  
               MOVE 'CLOSE ACTIVE-DEPT-CSR' TO PV-OPER-ATTEMPTED                
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    OPEN MNLY-COUNT CURSOR                                               
      ******************************************************************        
       Z400-OPEN-MNLY-COUNT.                                                    
                                                                                
           IF MAIN-COUNT-SOURCE                                                 
               MOVE 'OPEN MNLY-COUNT-CSR' TO PV-OPER-ATTEMPTED                  
               EXEC SQL                                                         
                   OPEN MNLY-COUNT-CSR                                          
               END-EXEC                                                         
           ELSE                                                                 
               MOVE 'OPEN ALT-MNLY-COUNT-CSR' TO PV-OPER-ATTEMPTED              
               EXEC SQL                                                         
                   OPEN ALT-MNLY-COUNT-CSR                                      
               END-EXEC                                                         
           END-IF.                                                              
                                                                                
           IF SQLCODE = +0                                                      
               SET NOT-END-OF-MNLY-COUNT TO TRUE                                
               MOVE ZEROES               TO PV-COUNTED-DEPTS                    
                                            PV-TOT-DEPT-COUNT                   
           ELSE                                                                 
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    FETCH THE NEXT RECORD FROM MNLY-COUNT CURSOR                         
      ******************************************************************        
       Z425-FETCH-MNLY-COUNT.                                                   
                                                                                
           IF MAIN-COUNT-SOURCE                                                 
               MOVE 'FETCH MNLY-COUNT-CSR' TO PV-OPER-ATTEMPTED                 
               EXEC SQL                                                         
                    FETCH MNLY-COUNT-CSR                                        
                      INTO                                                      
                           :MLT00004-DEPT-NBR                                   
                          ,:PV-DEPT-COUNT                                       
               END-EXEC                                                         
           ELSE                                                                 
               MOVE 'FETCH ALT-MNLY-COUNT-CSR' TO PV-OPER-ATTEMPTED             
               EXEC SQL                                                         
                    FETCH ALT-MNLY-COUNT-CSR                                    
                      INTO                                                      
                           :MLT00004-DEPT-NBR                                   
                          ,:PV-DEPT-COUNT                                       
               END-EXEC                                                         
           END-IF.                                                              
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   ADD +1                 TO PV-COUNTED-DEPTS                   
                   ADD PV-DEPT-COUNT      TO PV-TOT-DEPT-COUNT                  
                   MOVE MLT00004-DEPT-NBR TO PT-DEPT-INDX                       
                   MOVE PV-DEPT-COUNT     TO PT-DEPT-COUNT(PT-DEPT-INDX)        
               WHEN +100                                                        
                   SET END-OF-MNLY-COUNT TO TRUE                                
               WHEN OTHER                                                       
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    CLOSE MNLY-COUNT CURSOR                                              
      ******************************************************************        
       Z450-CLOSE-MNLY-COUNT.                                                   
                                                                                
           COMPUTE PV-AVG-DEPT-COUNT = PV-TOT-DEPT-COUNT                        
                                     / PV-COUNTED-DEPTS                         
               ON SIZE ERROR MOVE ZEROES TO PV-AVG-DEPT-COUNT                   
           END-COMPUTE.                                                         
           DISPLAY '   NUMBER OF DEPT: ' PV-COUNTED-DEPTS                       
                   ' WITH ' PV-TOT-DEPT-COUNT                                   
                   ' COUNTS AND AVERAGE ' PV-AVG-DEPT-COUNT.                    
                                                                                
           IF MAIN-COUNT-SOURCE                                                 
               MOVE 'CLOSE MNLY-COUNT-CSR' TO PV-OPER-ATTEMPTED                 
               EXEC SQL                                                         
                    CLOSE MNLY-COUNT-CSR                                        
               END-EXEC                                                         
           ELSE                                                                 
               MOVE 'CLOSE ALT-MNLY-COUNT-CSR' TO PV-OPER-ATTEMPTED             
               EXEC SQL                                                         
                    CLOSE ALT-MNLY-COUNT-CSR                                    
               END-EXEC                                                         
           END-IF.                                                              
                                                                                
           IF SQLCODE NOT = +0                                                  
               PERFORM Z900-SQL-ABEND                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    GET THE LAST USED PARTITION NUMBER FOR PRIOR FISCAL PERIOD           
      ******************************************************************        
       Z500-GET-PARTN-NBR.                                                      
                                                                                
947581     EXEC SQL                                                             
947581         SELECT MAX(A.PARTN_NBR)                                          
947581         INTO :MLT00003-PARTN-NBR                                         
947581         FROM MLT_PARTN_CNTL A                                            
947581         WHERE A.FSCL_DTE =                                               
947581               (SELECT MAX(B.FSCL_DTE)                                    
947581                FROM MLT_PARTN_CNTL B                                     
947581                WHERE B.TBL_TM_LVL_CDE = :MLT00003-TBL-TM-LVL-CDE         
947581                  AND FSCL_DTE BETWEEN :PV-PREV-FSCL-BEG-DATE             
947581                                   AND :PV-PREV-FSCL-END-DATE)            
947581           AND A.TBL_TM_LVL_CDE = :MLT00003-TBL-TM-LVL-CDE                
947581         WITH UR                                                          
947581     END-EXEC.                                                            
947581*    EXEC SQL                                                             
947581*         SELECT                                                          
947581*                 MAX(PARTN_NBR)                                          
947581*           INTO                                                          
947581*                 :MLT00003-PARTN-NBR                                     
947581*           FROM                                                          
947581*                 MLT_PARTN_CNTL                                          
947581*           WHERE                                                         
947581*                 TBL_TM_LVL_CDE  = :MLT00003-TBL-TM-LVL-CDE              
947581*             AND FSCL_DTE BETWEEN :PV-PREV-FSCL-BEG-DATE                 
947581*                     AND :PV-PREV-FSCL-END-DATE                          
947581*    END-EXEC.                                                            
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN +100                                                        
               WHEN -305                                                        
W26006* TRY TO SEE IF THERE IS ANY PARTITION ALLOCATED IN HISTORY               
W26006* WHICH MAY NOT BE IN THE PRIOR FISCAL PERIOD FOR THE FIRST               
W26006* TIME THROUGH.                                                           
W26006             IF FIRST-TIME-THRU                                           
W26006                 PERFORM Z550-GET-MAX-MIN-PARTN                           
W26006             ELSE                                                         
W26006                 MOVE ZEROES           TO MLT00003-PARTN-NBR              
W26006             END-IF                                                       
               WHEN OTHER                                                       
                   MOVE 'SELECT PARTN-NBR' TO PV-OPER-ATTEMPTED                 
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
W26006******************************************************************        
W26006*    GET THE LAST USED PARTITION NUMBER FOR ALL FISCAL PERIOD             
W26006******************************************************************        
W26006 Z550-GET-MAX-MIN-PARTN.                                                  
W26006                                                                          
W26006     EXEC SQL                                                             
W26006          SELECT                                                          
W26006                  MAX(PARTN_NBR)                                          
W26006                 ,MIN(PARTN_NBR)                                          
W26006            INTO                                                          
W26006                  :MLT00003-PARTN-NBR                                     
W26006                 ,:PV-PREV-PARTN                                          
W26006            FROM                                                          
W26006                  MLT_PARTN_CNTL                                          
W26006            WHERE                                                         
W26006                  TBL_TM_LVL_CDE  = :MLT00003-TBL-TM-LVL-CDE              
W26006                      AND FSCL_DTE > :PV-PREV-FSCL-END-DATE               
W26006     END-EXEC.                                                            
W26006                                                                          
W26006     EVALUATE SQLCODE                                                     
W26006         WHEN +0                                                          
W26006* FUTURE PARTITION IS AVAILABLE, BUILD WITH WRAP AROUND FROM THE          
W26006* MINIMUM PARTITION NUMBER                                                
W26006             DISPLAY ' ** COMPUTE WRAP AROUND USING -'                    
W26006                     ' LIMIT: ' PV-PARTN-NBR-LIMIT                        
W26006                     ', PER PERIOD: ' PV-PARTN-NBR-PER-PERIOD             
W26006                     ', PERIODS: ' PV-NBR-OF-PERIOD                       
W26006             COMPUTE PV-PREV-PARTN = PV-PARTN-NBR-LIMIT                   
W26006                     - (PV-PARTN-NBR-PER-PERIOD                           
W26006                        * PV-NBR-OF-PERIOD)                               
W26006             IF PV-PREV-PARTN < 1                                         
W26006                 DISPLAY ' **** TRYING TO ALLOCATE TOO MANY'              
W26006                         ' PARTITION PRIOR TO THE FIRST BY '              
W26006                         PV-PREV-PARTN                                    
W26006                 COMPUTE PV-PREV-PARTN = MLT00003-PARTN-NBR               
W26006                         + PV-PREV-PARTN                                  
W26006             END-IF                                                       
W26006             MOVE PV-PREV-PARTN TO MLT00003-PARTN-NBR                     
W26006         WHEN +100                                                        
W26006         WHEN -305                                                        
W26006* NO FUTURE PARTITION IS AVAILABLE, BUILD FROM PARTITION 1                
W26006             MOVE ZEROES           TO MLT00003-PARTN-NBR                  
W26006         WHEN OTHER                                                       
W26006             MOVE 'Z550-GET-MAX-MIN-PARTN' TO PV-OPER-ATTEMPTED           
W26006             PERFORM Z900-SQL-ABEND                                       
W26006     END-EVALUATE.                                                        
W26006                                                                          
      ******************************************************************        
      *    WRITE OUT PARTITION INFORMATION EXTRACT                              
      ******************************************************************        
       Z600-WRITE-PARTN-INFO.                                                   
                                                                                
      *  LAST CHECK BEFORE WRITING THE RECORD OUT, TO SEE IF THE INFO           
      *  PROVIDED HAS PREVIOUSLY BEEN CREATED OR NOT.                           
           EXEC SQL                                                             
                SELECT                                                          
                        B.PARTN_NBR                                             
                       ,B.DEPT_GP_CDE                                           
                  INTO                                                          
                        :MLT00003-PARTN-NBR                                     
                       ,:MLT00003-DEPT-GP-CDE                                   
                  FROM                                                          
                        MLT_PARTN_BAL    A                                      
                       ,MLT_PARTN_CNTL   B                                      
                  WHERE                                                         
                        A.TBL_TM_LVL_CDE = :ML060-TM-LVL-CODE                   
                    AND A.DEPT_NBR    = DECIMAL(:ML060-DEPT-NBR-X, 4,0)         
                    AND B.FSCL_DTE    = :ML060-FSCL-DTE                         
                    AND A.TBL_TM_LVL_CDE  = B.TBL_TM_LVL_CDE                    
                    AND B.FSCL_DTE BETWEEN A.EFF_BEG_DTE                        
                            AND COALESCE(A.EFF_END_DTE, :PC-NULL-DTE)           
                    AND A.DEPT_GP_CDE     = B.DEPT_GP_CDE                       
           END-EXEC.                                                            
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +100                                                        
                   CONTINUE                                                     
               WHEN +0                                                          
                   DISPLAY ' TRYING TO ADD LVL-CDE: ' ML060-TM-LVL-CODE         
                           ', DEPT: ' ML060-DEPT-NBR-9                          
                           ', FSCL-DTE: ' ML060-FSCL-DTE                        
                           ', DEPT-GP: ' ML060-DEPT-GP-CDE                      
                           ', PARTN-NBR: ' ML060-PARTN-NBR                      
                   DISPLAY ' EXISTING LVL-CDE: ' ML060-TM-LVL-CODE              
                           ', DEPT: ' ML060-DEPT-NBR-9                          
                           ', FSCL-DTE: ' ML060-FSCL-DTE                        
                           ', DEPT-GP: ' MLT00003-DEPT-GP-CDE                   
                           ', PARTN-NBR: ' MLT00003-PARTN-NBR                   
                   MOVE 'EXISTING PARTN CHK' TO PV-OPER-ATTEMPTED               
                   PERFORM Z900-SQL-ABEND                                       
               WHEN OTHER                                                       
                   MOVE 'EXISTING PARTN CHK' TO PV-OPER-ATTEMPTED               
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
           ADD +1 TO PV-RECORD-EXTRACTED.                                       
           WRITE PARTN-INFO-REC FROM ML060-PARTN-INFO-EXTRACT.                  
                                                                                
      ******************************************************************        
      *    CHECK TO SEE IF A PARTITION WILL NEED TO BE RECYCLED                 
      ******************************************************************        
       Z700-CHECK-PARTN-NBR.                                                    
                                                                                
           EXEC SQL                                                             
                SELECT                                                          
                        COUNT(*)                                                
                  INTO                                                          
                        :PV-PARTN-COUNT                                         
                  FROM                                                          
                        MLT_PARTN_CNTL                                          
                  WHERE                                                         
                        TBL_TM_LVL_CDE  = :MLT00003-TBL-TM-LVL-CDE              
                    AND PARTN_NBR       = :MLT00003-PARTN-NBR                   
           END-EXEC.                                                            
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN +100                                                        
                   MOVE ZEROES           TO PV-PARTN-COUNT                      
               WHEN OTHER                                                       
                   MOVE 'SELECT PARTN COUNT' TO PV-OPER-ATTEMPTED               
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    WRITE OUT WEEKLY RECYCLE PARTITION EXTRACT                           
      ******************************************************************        
       Z800-WRITE-RECYCLE-WK-PARTN.                                             
                                                                                
           ADD +1 TO PV-RECYCLE-WK-PARTN.                                       
           WRITE RECYCLE-WK-PARTN-REC FROM WS-RECYCLE-PARTN-EXT.                
                                                                                
      ******************************************************************        
      *    WRITE OUT MONTHLY RECYCLE PARTITION EXTRACT                          
      ******************************************************************        
       Z850-WRITE-RECYCLE-MN-PARTN.                                             
                                                                                
           ADD +1 TO PV-RECYCLE-MN-PARTN.                                       
           WRITE RECYCLE-MN-PARTN-REC FROM WS-RECYCLE-PARTN-EXT.                
                                                                                
      ******************************************************************        
      *    SQL ERROR - ABEND                                                    
      ******************************************************************        
       Z900-SQL-ABEND.                                                          
                                                                                
           SET SQL-ABEND-CODE         TO TRUE.                                  
           DISPLAY '**  ABEND     **'.                                          
           DISPLAY '**  PROGRAM   **  =  MLKUT060'.                             
           DISPLAY '**  OPERATION **  = '  PV-OPER-ATTEMPTED                    
                                                                                
      *    THE FOLLOWING COPYBOOK UTILIZES THE DB2 ABEND MODULE                 
      *    DSNTIAR TO CONVERT SQLCA INTO UNDERSTANDABLE VERBAGE.                
                                                                                
           COPY DPPD004.                                                        
                                                                                
           PERFORM Z999-ABEND.                                                  
                                                                                
      ******************************************************************        
      *    ABEND CALL                                                           
      ******************************************************************        
       Z999-ABEND.                                                              
                                                                                
           CALL 'ILBOABN0'  USING ABEND-CODE.                                   
