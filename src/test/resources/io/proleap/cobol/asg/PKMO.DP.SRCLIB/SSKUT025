000100 IDENTIFICATION DIVISION.                                         00010000
000200                                                                  00020000
000300 PROGRAM-ID.      SSKUT025.                                       00030000
000400 AUTHOR.          JIM HUNTER.                                     00040000
000500 INSTALLATION.    KOHLS DEPARTMENT STORES.                        00050000
000600 DATE-WRITTEN.    12/06/2006.                                     00060000
000700 DATE-COMPILED.                                                   00070000
000800                                                                  00080000
000900******************************************************************00090000
001000*  MODULE TYPE:   COBOL2 DB2 BATCH                                00100000
001100*                                                                 00110000
001200*  DESCRIPTION:   CREATES THE DAILY GEOGRAPHIC SALES REPORT       00120000
001300*                 EXTRACT FILE, WHICH WILL BE SORTED, THEN        00130000
001400*                 FORMATTED AND PRINTED BY PROGRAM SSKRP025.      00140000
001500*                                                                 00150000
001600*  1. READ DATE CTCLD AND VALIDATE DATE                           00160000
001700*  2. LOAD ALL STATE KEYS INTO STATE TABLE                        00170000
001800*  3. LOAD ALL METRO KEYS INTO METRO TABLE                        00180000
001900*  4. LOAD ALL STORE KEYS INTO STORE TABLE                        00190000
002000*  5. READ DAILY FLASH SALES FOR THIS YEAR                        00200000
002100*     IF ECOM                                                     00210000
002200*       - ADD SALES TO ECOM TOTALS                                00220000
002100*     ELSE                                                        00220100
002100*       - LOAD SALES TO STATE, METRO AND STORE TABLES             00221000
002200*     - ADD ALL SALES TO COMPANY TOTALS                           00222000
002300*  6. READ DAILY FLASH SALES FOR LAST YEAR                        00230000
002100*     IF ECOM                                                     00231000
002200*       - ADD SALES TO ECOM TOTALS                                00232000
002100*     ELSE                                                        00233000
002100*       - LOAD SALES TO STATE, METRO AND STORE TABLES             00234000
002500*     - ADD ALL SALES TO COMPANY TOTALS                           00250000
002600*  7. WRITE STATE TOTALS TO OUTPUT EXTRACT FILE                   00260000
002700*  8. WRITE METRO TOTALS TO OUTPUT EXTRACT FILE                   00270000
002800*  9. WRITE STORE TOTALS TO OUTPUT EXTRACT FILE                   00280000
002800* 10. WRITE ECOM TOTALS TO OUTPUT EXTRACT FILE                    00281000
002900* 11. WRITE COMPANY TOTALS TO OUTPUT EXTRACT FILE                 00290000
003000*                                                                 00300000
003100*  NOTES:                                                         00310000
003200*  1. IF A STORE WAS CLOSED IN THE LAST YEAR, DO NOT REPORT ON    00320000
003300*     IT (THIS YEAR OR LAST YEAR SALES).                          00330000
003400*  2. IF A STORE WAS REPLACED IN THE CURRENT YEAR, REPORT ON THE  00340000
003500*     SUM OF THE NEW (CURRENT) STORE'S 'THIS YEAR' SALES AND THE  00350000
003600*     OLD (REPLACED) STORE'S 'THIS YEAR' SALES, AND THE OLD       00360018
004000*     (REPLACED) STORE'S 'LAST YEAR' SALES.                       00360118
003700*  3. IF A STORE WAS REPLACED IN THE LAST YEAR, REPORT ON THE     00370000
003800*     NEW (CURRENT) STORE'S 'THIS YEAR' SALES AND THE SUM OF THE  00380000
003900*     NEW (CURRENT) STORE'S 'LAST YEAR' SALES AND THE OLD         00390000
004000*     (REPLACED) STORE'S 'LAST YEAR' SALES.                       00400000
004100*                                                                 00400118
REPL53*  4. REPLACEMENT STORE LOGIC MUST BE DRIVEN FROM THE 'THIS YEAR' 00401018
REPL53*     2200- PARA, WHICH WILL FETCH ALL ACTIVE STORES.  TRYING TO  00401118
REPL53*     DRIVE IT FROM THE 'LAST YEAR' 3200- AND 4200- PARA'S WILL   00401218
REPL53*     RESULT IN MISSED DATA WHEN THE CURRENT STORE WAS NOT OPEN   00401318
REPL53*     BY THE 'LAST YEAR' COMP DATE FOR SALES, OR THE 'LAST YEAR'  00401418
REPL53*     LAST FISCAL DATE FOR TOTALS.  THIS IS BECAUSE THE           00401518
REPL53*     'LAST YEAR' CURSORS WILL NOT PICK UP EITHER STORE SINCE     00401718
REPL53*     NEITHER WAS BOTH OPEN ON THE CURRENT DATE AND HAD SALES LAST00401818
REPL53*     YEAR.                                                       00401918
004100*                                                                 00410000
004200*  5. COMPARING TO THE FLASH SALES SCREENS -                      00420018
004300*     THE REPORT CREATED BY THIS PROGRAM AND SSKRP025 SHOULD MATCH00430000
004400*     THE FLASH SALES SCREEN NUMBERS.  THE ONE KNOWN EXCEPTION    00440000
004500*     IS WHEN THE REPORT IS RUN WITH A CTLCD DATE OLDER THAN 1    00450000
004600*     MONTH.  THIS PROGRAM ALWAYS PULLS 'THIS YEAR' SALES FROM    00460000
004700*     THE DFT_DLY_FLSH_SUM TABLE AND 'LAST YEAR' SALES FROM THE   00470000
004800*     THE DFT_ML_FINCL_SUM TABLE.  THE FLASH SALES SCREENS HAVE   00480000
004900*     LOGIC TO PULL 'THIS YEAR' SALES FROM THE DFT_ML_FINCL_SUM   00490000
005000*     TABLE WHEN THE PROCESS DATE IS MORE THAN 1 MONTH OLD. THE   00500000
005100*     REPORT WILL NORMALLY BE RUN FOR THE PREVIOUS DATE AND DOES  00510000
005200*     NOT HAVE THIS LOGIC.  THE NUMBERS WILL PROBABLY NOT CHANGE  00520000
005300*     SINCE THEY ARE REPORTED IN THOUSANDS, BUT THE PERCENTS COULD00530000
005400*     DIFFER.                                                     00540000
      *                                                                 00540100
004200*  6. REPORT ON ECOM BY ITSELF -                                  00541018
004300*     ECOM SALES WILL BE REMOVED FROM OHIO AND BE REPORTED ON     00542000
004400*     SEPERATELY JUST BEFORE THE COMPANY TOTALS.  THIS IS         00543000
004400*     DIFFERENT THAN HOW THEY ARE SHOWN ON THE FLASH SCREENS.     00543100
004500*                                                                 00544000
WEEK53*  7. 53 WEEK PROCESSING -                                        00545018
WEEK53*     NORMALLY, THE PROGRAM WILL CALL THE TDTATTR TABLE TO GET    00546005
WEEK53*     LAST YEAR'S DATE THAT THE CURRENT DATE IS TO BE COMPARED    00547005
WEEK53*     TO.  IF THE DATE RETURNED IS '9999-09-09', THEN WE ARE      00548005
WEEK53*     IN WEEK 53 AND THE FOLLOWING MUST BE DONE:                  00548105
WEEK53*     - SET THE DAILY COMPARISON PERCENTS TO N/A.                 00549005
WEEK53*     - USE THE CURRENT DATE FOR MTD AND YTD "ALL" COMPARES, BUT  00549105
WEEK53*       USE THE LAST DAY OF WEEK 52 FOR THE MTD AND YTD "COMP"    00549205
WEEK53*       COMPARES.                                                 00549305
WEEK53*     - IF THE DATE CTLCD 53 WEEK IND IS SET TO '53', USE SPECIAL 00549402
WEEK53*       53 WEEK PROCESSING TO DETERMINE THE DATE FROM LAST YEAR   00549502
WEEK53*       TO COMPARE TO (ADD 7 DAYS TO THE LAST YEAR DATE FOUND ON  00549602
WEEK53*       THE TDTATTR TABLE).                                       00549702
     0*========================== CHANGE LOG ===========================00550002
005600*  AUTH       BY         DATE                 DESCRIPTION         00560000
005700*=================================================================00570000
005800* WR        J.HUNTER   12-05-06   COPIED FROM SSKUT020 -          00580000
005900*                                 ADD COMP STORE LOGIC, NEW SORT  00590000
006000*                                 SEQ, AND YTD FIELDS             00600000
006100*                                                                 00610000
005800* WR        J.HUNTER   01-08-07   REMOVE THE ECOM SALES FROM UNDER00611000
005900*                                 OHIO AND SHOW THEM STAND-ALONE  00612000
006000*                                 BEFORE THE COMPANY TOTALS.      00613000
006100*                                                                 00613114
005800* WR        J.HUNTER   03-07-07   CHANGES FOR WEEK 53 REPLACEMENT 00613214
005900*                                 STORE LOGIC. (FIND REPL53)      00613314
005900*                                 (FIND WEEK53 TO SEE WEEK 53     00613414
006100*                                  LOGIC)                         00614014
006200******************************************************************00620000
006300                                                                  00630000
006400 ENVIRONMENT DIVISION.                                            00640000
006500 CONFIGURATION SECTION.                                           00650000
006600                                                                  00660000
006700 SOURCE-COMPUTER.        IBM-3090.                                00670000
006800 OBJECT-COMPUTER.        IBM-3090.                                00680000
006900                                                                  00690000
007000 INPUT-OUTPUT SECTION.                                            00700000
007100 FILE-CONTROL.                                                    00710000
007200                                                                  00720000
007300     SELECT CTLCD-DATE-FILE       ASSIGN TO INP01                 00730000
007400         FILE STATUS IS WS-DATE-FILE-STATUS.                      00740000
007500     SELECT REPORT-EXTRACT-FILE   ASSIGN TO OUT01                 00750000
007600         FILE STATUS IS WS-RPT-FILE-STATUS.                       00760000
007700                                                                  00770000
007800 DATA DIVISION.                                                   00780000
007900 FILE SECTION.                                                    00790000
008000                                                                  00800000
008100 FD  CTLCD-DATE-FILE                                              00810000
008200     RECORDING MODE IS F                                          00820000
008300     LABEL RECORDS ARE STANDARD                                   00830000
008400     BLOCK CONTAINS 0 RECORDS                                     00840000
008500     RECORD CONTAINS 80 CHARACTERS.                               00850000
008600                                                                  00860000
008700 01  CTLCD-DATE-RECORD                 PIC  X(80).                00870000
008800                                                                  00880000
008900 FD  REPORT-EXTRACT-FILE                                          00890000
009000     RECORDING MODE IS F                                          00900000
009100     LABEL RECORDS ARE STANDARD                                   00910000
009200     BLOCK CONTAINS 0 RECORDS                                     00920000
009300     RECORD CONTAINS 200 CHARACTERS.                              00930000
009400                                                                  00940000
009500 01  REPORT-EXTRACT-RECORD             PIC  X(200).               00950000
009600                                                                  00960000
009700******************************************************************00970000
009800*                       WORKING STORAGE                           00980000
009900******************************************************************00990000
010000 WORKING-STORAGE SECTION.                                         01000000
010100                                                                  01010000
010200 01  WS-START                         PIC  X(40)                  01020000
010300     VALUE 'SSKUT025 - WORKING STORAGE BEGINS HERE'.              01030000
010400                                                                  01040000
010500                                                                  01050000
010600******************************************************************01060000
010700*                         SWITCHES                                01070000
010800******************************************************************01080000
010900 01  PS-PROGRAM-SWITCHES.                                         01090000
011000     05  PS-END-OF-CTLCD-FILE-SW      PIC  X(01)    VALUE 'N'.    01100000
011100         88  PS-END-OF-CTLCD-FILE                   VALUE 'Y'.    01110000
011200                                                                  01120000
011300     05  PS-END-OF-STATE-SW           PIC  X(01)    VALUE 'N'.    01130000
011400         88  PS-END-OF-STATE                        VALUE 'Y'.    01140000
011500                                                                  01150000
011600     05  PS-END-OF-METRO-SW           PIC  X(01)    VALUE 'N'.    01160000
011700         88  PS-END-OF-METRO                        VALUE 'Y'.    01170000
011800                                                                  01180000
011900     05  PS-END-OF-STORE-SW           PIC  X(01)    VALUE 'N'.    01190000
012000         88  PS-END-OF-STORE                        VALUE 'Y'.    01200000
012100                                                                  01210000
012200     05  PS-END-OF-SALES-SW           PIC  X(01)    VALUE 'N'.    01220000
012300         88  PS-NOT-END-OF-SALES                    VALUE 'N'.    01230000
012400         88  PS-END-OF-SALES                        VALUE 'Y'.    01240000
012500                                                                  01250000
012600     05  PS-END-OF-SALES-TOTALS-SW    PIC  X(01)    VALUE 'N'.    01260000
012700         88  PS-NOT-END-OF-SALES-TOTALS             VALUE 'N'.    01270000
012800         88  PS-END-OF-SALES-TOTALS                 VALUE 'Y'.    01280000
012900                                                                  01290000
WEEK53     05  PS-53-WEEK-SW                PIC  X(01)    VALUE 'N'.    01291005
WEEK53         88  PS-NOT-IN-WEEK-53                      VALUE 'N'.    01292005
WEEK53         88  PS-IN-WEEK-53                          VALUE 'Y'.    01293005
012900                                                                  01294005
013000                                                                  01300000
013100******************************************************************01310000
013200*                        CONSTANTS                                01320000
013300******************************************************************01330000
013400 01  PC-PROGRAM-CONSTANTS.                                        01340000
013500     05  PC-PROGRAM-NAME            PIC  X(08)   VALUE 'SSKUT025'.01350000
013600     05  PC-ROW-NOT-FOUND           PIC S9(03)   VALUE +100.      01360000
REPL53     05  PC-NULL-RETURNED           PIC S9(03)   VALUE -305.      01361014
013700     05  PC-STATE-MAX               PIC  S9(3)   VALUE +60.       01370000
013800     05  PC-METRO-MAX               PIC  S9(3)   VALUE +500.      01380000
013900     05  PC-STORE-MAX               PIC  S9(4)   VALUE +9999.     01390000
014000                                                                  01400000
014100                                                                  01410000
014200******************************************************************01420000
014300*                        VARIABLES                                01430000
014400******************************************************************01440000
014500 01  PC-PROGRAM-VARIABLES.                                        01450000
014600     05  PV-SQLCODE                 PIC +9(04)    VALUE ZEROES.   01460000
014700     05  PV-PARAGRAPH-NAME          PIC  X(30)    VALUE SPACES.   01470000
014800     05  PV-TABLE-NAME              PIC  X(12)    VALUE SPACES.   01480000
014900     05  PV-OPERATION-MSG           PIC  X(60)    VALUE SPACES.   01490000
WEEK53     05  PV-53-WEEK-COMP-MTD-DOL-AMT                              01492005
WEEK53                                    PIC S9(11)V99 COMP-3 VALUE 0. 01492105
WEEK53     05  PV-SAVE-53-WEEK-COMP-MTD-DOL                             01492205
WEEK53                                    PIC S9(11)V99 COMP-3 VALUE 0. 01492305
WEEK53     05  PV-53-WEEK-COMP-YTD-DOL-AMT                              01494005
WEEK53                                    PIC S9(13)V99 COMP-3 VALUE 0. 01495005
WEEK53     05  PV-SAVE-53-WEEK-COMP-YTD-DOL                             01496005
WEEK53                                    PIC S9(13)V99 COMP-3 VALUE 0. 01497005
015000     05  PV-SAVE-DLY-DOL-AMT        PIC S9(11)V99 COMP-3 VALUE 0. 01500000
015100     05  PV-SAVE-MTD-DOL-AMT        PIC S9(11)V99 COMP-3 VALUE 0. 01510000
015200     05  PV-SAVE-YTD-DOL-AMT        PIC S9(13)V99 COMP-3 VALUE 0. 01520000
015300     05  PV-COMPANY-TY-DLY-AMT      PIC S9(11)V99 COMP-3 VALUE 0. 01530000
015400     05  PV-COMPANY-LY-DLY-AMT      PIC S9(11)V99 COMP-3 VALUE 0. 01540000
015500     05  PV-COMPANY-TY-MTD-AMT      PIC S9(11)V99 COMP-3 VALUE 0. 01550000
015600     05  PV-COMPANY-LY-MTD-AMT      PIC S9(11)V99 COMP-3 VALUE 0. 01560000
015700     05  PV-COMPANY-TY-YTD-AMT      PIC S9(13)V99 COMP-3 VALUE 0. 01570000
015800     05  PV-COMPANY-LY-YTD-AMT      PIC S9(13)V99 COMP-3 VALUE 0. 01580000
015900     05  PV-COMPANY-TY-COMP-DLY-AMT PIC S9(11)V99 COMP-3 VALUE 0. 01590000
016000     05  PV-COMPANY-LY-COMP-DLY-AMT PIC S9(11)V99 COMP-3 VALUE 0. 01600000
016100     05  PV-COMPANY-TY-COMP-MTD-AMT PIC S9(11)V99 COMP-3 VALUE 0. 01610000
016200     05  PV-COMPANY-LY-COMP-MTD-AMT PIC S9(11)V99 COMP-3 VALUE 0. 01620000
016300     05  PV-COMPANY-TY-COMP-YTD-AMT PIC S9(13)V99 COMP-3 VALUE 0. 01630000
016400     05  PV-COMPANY-LY-COMP-YTD-AMT PIC S9(13)V99 COMP-3 VALUE 0. 01640000
016500     05  PV-COMPANY-LY-TOTAL-SALES  PIC S9(13)V99 COMP-3 VALUE 0. 01650000
016600     05  PV-SEARCH-STATE            PIC  XX       VALUE SPACES.   01660000
016700     05  PV-SEARCH-METRO            PIC  X(6)     VALUE ZEROES.   01670000
016800     05  PV-DISPLAY-STORE           PIC  9(4)     VALUE ZEROES.   01680000
016900                                                                  01690000
017000     05  PV-RUN-DATE-CCYY-MM-DD     PIC  X(10)    VALUE SPACES.   01700000
WEEK53     05  PV-53-WEEK-LY-COMP-DATE    PIC  X(10)    VALUE SPACES.   01701005
WEEK53     05  PV-53-WEEK-TY-COMP-DATE    PIC  X(10)    VALUE SPACES.   01702005
017100     05  PV-LY-FISCAL-BEGIN-DATE    PIC  X(10)    VALUE SPACES.   01710000
017200     05  PV-LY-FISCAL-END-DATE      PIC  X(10)    VALUE SPACES.   01720000
017300     05  PV-LY-SAME-FISCAL-DATE     PIC  X(10)    VALUE SPACES.   01730000
017400     05  PV-TY-FISCAL-BEGIN-DATE    PIC  X(10)    VALUE SPACES.   01740000
017500     05  PV-TY-FISCAL-END-DATE      PIC  X(10)    VALUE SPACES.   01750000
017600                                                                  01760000
017700******************************************************************01770000
017800*                        WORK AREA                                01780000
017900******************************************************************01790000
018000 01  WS-WORK-AREA.                                                01800000
018100                                                                  01810000
018200     05  WS-DATE-FILE-STATUS        PIC  X(02)    VALUE ZEROES.   01820000
018300     05  WS-RPT-FILE-STATUS         PIC  X(02)    VALUE ZEROES.   01830000
018400                                                                  01840000
018500******************************************************************01850000
018600*                        ACCUMULATORS                             01860000
018700******************************************************************01870000
018800 01  PA-PROGRAM-ACCUMS.                                           01880000
018900                                                                  01890000
019000     05  PA-STATE-WRITTEN           PIC  9(5)     VALUE ZEROES.   01900000
019100     05  PA-METRO-WRITTEN           PIC  9(5)     VALUE ZEROES.   01910000
019200     05  PA-STORE-WRITTEN           PIC  9(5)     VALUE ZEROES.   01920000
019300     05  PA-ECOM-WRITTEN            PIC  9(5)     VALUE ZEROES.   01930000
019300     05  PA-COMPANY-WRITTEN         PIC  9(5)     VALUE ZEROES.   01931000
019400     05  PA-TOTAL-WRITTEN           PIC  9(5)     VALUE ZEROES.   01940000
019500                                                                  01950000
019600     05  PA-STORE-SUB               PIC S9(05)    VALUE ZEROES.   01960000
019700     05  PA-METRO-SUB               PIC S9(04)    VALUE ZEROES.   01970000
019800     05  PA-STATE-SUB               PIC S9(04)    VALUE ZEROES.   01980000
019900                                                                  01990000
020000                                                                  02000000
020100 01  PA-STORE-TOTALS-TABLE.                                       02010000
020200*        SUBSCRIPTED BY STORE NUMBER                              02020000
020300    05  PA-STORE-TOTALS OCCURS 9999 TIMES.                        02030000
020400       10  PA-STORE-NUMBER          PIC 9(4)      VALUE ZEROES.   02040000
020500       10  PA-STORE-NAME            PIC X(10)     VALUE SPACES.   02050000
020600       10  PA-STORE-METRO           PIC 9(4)      VALUE ZEROES.   02060000
020700       10  PA-STORE-STATE           PIC XX        VALUE SPACES.   02070000
020800       10  PA-STORE-TY-DAILY-SALES  PIC S9(11)V99 COMP-3 VALUE 0. 02080000
020900       10  PA-STORE-TY-MTD-SALES    PIC S9(11)V99 COMP-3 VALUE 0. 02090000
021000       10  PA-STORE-TY-YTD-SALES    PIC S9(13)V99 COMP-3 VALUE 0. 02100000
021100       10  PA-STORE-TY-COMP-DLY-SALES                             02110000
021200                                    PIC S9(11)V99 COMP-3 VALUE 0. 02120000
021300       10  PA-STORE-TY-COMP-MTD-SALES                             02130000
021400                                    PIC S9(11)V99 COMP-3 VALUE 0. 02140000
021500       10  PA-STORE-TY-COMP-YTD-SALES                             02150000
021600                                    PIC S9(13)V99 COMP-3 VALUE 0. 02160000
021700       10  PA-STORE-LY-DAILY-SALES  PIC S9(11)V99 COMP-3 VALUE 0. 02170000
021800       10  PA-STORE-LY-MTD-SALES    PIC S9(11)V99 COMP-3 VALUE 0. 02180000
021900       10  PA-STORE-LY-YTD-SALES    PIC S9(13)V99 COMP-3 VALUE 0. 02190000
022000       10  PA-STORE-LY-COMP-DLY-SALES                             02200000
022100                                    PIC S9(11)V99 COMP-3 VALUE 0. 02210000
022200       10  PA-STORE-LY-COMP-MTD-SALES                             02220000
022300                                    PIC S9(11)V99 COMP-3 VALUE 0. 02230000
022400       10  PA-STORE-LY-COMP-YTD-SALES                             02240000
022500                                    PIC S9(13)V99 COMP-3 VALUE 0. 02250000
022600       10  PA-STORE-LY-TOTAL-SALES  PIC S9(13)V99 COMP-3 VALUE 0. 02260000
022700       10  PA-STORE-COMP-MONTH-DATE PIC X(10)     VALUE SPACES.   02270000
022800       10  PA-STORE-COMP-YEAR-DATE  PIC X(10)     VALUE SPACES.   02280000
022800       10  PA-STORE-E-BUS-IND       PIC X         VALUE SPACES.   02281000
022900                                                                  02290000
023000                                                                  02300000
023100 01  PA-METRO-TOTALS-TABLE.                                       02310000
023200*       INDEXED BY METRO                                          02320000
023300*       INIT METRO'S TO 9999ZZ SO THAT ROWS WILL BE IN SEQUENCE   02330000
023400*       FOR SEARCH ALL - VALID METROS WILL BE AT TOP OF TABLE.    02340000
023500    05  PA-METRO-TOTALS OCCURS 500 TIMES                          02350000
023600        ASCENDING KEY IS PA-METRO-STATE-KEY                       02360000
023700        INDEXED BY METRO-INDEX.                                   02370000
023800       10  PA-METRO-STATE-KEY       PIC X(6)      VALUE '9999ZZ'. 02380000
023900       10  PA-METRO-FILLER REDEFINES PA-METRO-STATE-KEY.          02390000
024000           15  PA-METRO             PIC 9(4).                     02400000
024100           15  PA-METRO-STATE       PIC X(2).                     02410000
024200       10  PA-METRO-NAME            PIC X(30)     VALUE SPACES.   02420000
024300       10  PA-METRO-TY-DAILY-SALES  PIC S9(11)V99 COMP-3 VALUE 0. 02430000
024400       10  PA-METRO-TY-MTD-SALES    PIC S9(11)V99 COMP-3 VALUE 0. 02440000
024500       10  PA-METRO-TY-YTD-SALES    PIC S9(13)V99 COMP-3 VALUE 0. 02450000
024600       10  PA-METRO-TY-COMP-DLY-SALES                             02460000
024700                                    PIC S9(11)V99 COMP-3 VALUE 0. 02470000
024800       10  PA-METRO-TY-COMP-MTD-SALES                             02480000
024900                                    PIC S9(11)V99 COMP-3 VALUE 0. 02490000
025000       10  PA-METRO-TY-COMP-YTD-SALES                             02500000
025100                                    PIC S9(13)V99 COMP-3 VALUE 0. 02510000
025200       10  PA-METRO-LY-DAILY-SALES  PIC S9(11)V99 COMP-3 VALUE 0. 02520000
025300       10  PA-METRO-LY-MTD-SALES    PIC S9(11)V99 COMP-3 VALUE 0. 02530000
025400       10  PA-METRO-LY-YTD-SALES    PIC S9(13)V99 COMP-3 VALUE 0. 02540000
025500       10  PA-METRO-LY-COMP-DLY-SALES                             02550000
025600                                    PIC S9(11)V99 COMP-3 VALUE 0. 02560000
025700       10  PA-METRO-LY-COMP-MTD-SALES                             02570000
025800                                    PIC S9(11)V99 COMP-3 VALUE 0. 02580000
025900       10  PA-METRO-LY-COMP-YTD-SALES                             02590000
026000                                    PIC S9(13)V99 COMP-3 VALUE 0. 02600000
026100       10  PA-METRO-LY-TOTAL-SALES  PIC S9(13)V99 COMP-3 VALUE 0. 02610000
022800       10  PA-METRO-E-BUS-IND       PIC X         VALUE SPACES.   02611000
026200                                                                  02620000
026300                                                                  02630000
026400 01  PA-STATE-TOTALS-TABLE.                                       02640000
026500*       INDEXED BY STATE, ALLOWING FOR DC, ETC.                   02650000
026600*       INIT STATE'S TO 'ZZ' SO THAT ROWS WILL BE IN SEQUENCE     02660000
026700*       FOR SEARCH ALL - VALID STATES WILL BE AT TOP OF TABLE.    02670000
026800    05  PA-STATE-TOTALS OCCURS 60 TIMES                           02680000
026900        ASCENDING KEY IS PA-STATE                                 02690000
027000        INDEXED BY STATE-INDEX.                                   02700000
027100       10  PA-STATE                 PIC XX        VALUE 'ZZ'.     02710000
027200       10  PA-STATE-TY-DAILY-SALES  PIC S9(11)V99 COMP-3 VALUE 0. 02720000
027300       10  PA-STATE-TY-MTD-SALES    PIC S9(11)V99 COMP-3 VALUE 0. 02730000
027400       10  PA-STATE-TY-YTD-SALES    PIC S9(13)V99 COMP-3 VALUE 0. 02740000
027500       10  PA-STATE-TY-COMP-DLY-SALES                             02750000
027600                                    PIC S9(11)V99 COMP-3 VALUE 0. 02760000
027700       10  PA-STATE-TY-COMP-MTD-SALES                             02770000
027800                                    PIC S9(11)V99 COMP-3 VALUE 0. 02780000
027900       10  PA-STATE-TY-COMP-YTD-SALES                             02790000
028000                                    PIC S9(13)V99 COMP-3 VALUE 0. 02800000
028100       10  PA-STATE-LY-DAILY-SALES  PIC S9(11)V99 COMP-3 VALUE 0. 02810000
028200       10  PA-STATE-LY-MTD-SALES    PIC S9(11)V99 COMP-3 VALUE 0. 02820000
028300       10  PA-STATE-LY-YTD-SALES    PIC S9(13)V99 COMP-3 VALUE 0. 02830000
028400       10  PA-STATE-LY-COMP-DLY-SALES                             02840000
028500                                    PIC S9(11)V99 COMP-3 VALUE 0. 02850000
028600       10  PA-STATE-LY-COMP-MTD-SALES                             02860000
028700                                    PIC S9(11)V99 COMP-3 VALUE 0. 02870000
028800       10  PA-STATE-LY-COMP-YTD-SALES                             02880000
028900                                    PIC S9(13)V99 COMP-3 VALUE 0. 02890000
029000       10  PA-STATE-LY-TOTAL-SALES  PIC S9(13)V99 COMP-3 VALUE 0. 02900000
029100                                                                  02910000
029200                                                                  02920000
029300******************************************************************02930000
029400*                      CONTROL CARD                               02940000
029500******************************************************************02950000
029600 01  CC-CONTROL-CARD.                                             02960000
029700     05  CC-DB2-CTLCD-DATE-ISO.                                   02970000
029800         10  CC-DB2-REPORT-CC          PIC X(02).                 02980000
029900         10  CC-DB2-REPORT-YY          PIC X(02).                 02990000
030000         10  FILLER                    PIC X(01).                 03000000
030100         10  CC-DB2-REPORT-MM          PIC X(02).                 03010000
030200         10  FILLER                    PIC X(01).                 03020000
030300         10  CC-DB2-REPORT-DD          PIC X(02).                 03030000
030400     05  FILLER                        PIC X.                     03031002
WEEK53     05  CC-53-WEEK-IND                PIC XX.                    03040002
030400     05  FILLER                        PIC X(67).                 03041002
030500                                                                  03050000
030600                                                                  03060000
030700******************************************************************03070000
030800*                OUTPUT EXTRACT RECORD                            03080000
030900******************************************************************03090000
031000 01  WS-OUT-RECORD.                                               03100000
031100     05  WS-OUT-REC-CODE            PIC X(2)      VALUE SPACES.   03110000
031200**       00 = STATE RECORD                                        03120000
031300**       02 = METRO RECORD                                        03130000
031400**       04 = STORE RECORD                                        03140000
031400**       05 = ECOM RECORD                                         03141000
031500**       06 = COMPANY RECORD                                      03150000
031600     05  WS-OUT-STATE               PIC X(2)      VALUE SPACES.   03160000
031700     05  WS-OUT-METRO               PIC 9(4)      VALUE ZEROES.   03170000
031800     05  WS-OUT-STORE               PIC 9(4)      VALUE ZEROES.   03180000
031900     05  WS-OUT-SORT-KEY.                                         03190000
032000**       THE SORT FIELDS WILL REFLECT THIS YEAR'S TOTAL SALES.    03200000
032100         10  WS-OUT-SORT-STATE-SALES      PIC S9(13)V99 COMP-3    03210000
032200                                                  VALUE 0.        03220000
032300         10  WS-OUT-SORT-METRO-SALES      PIC S9(13)V99 COMP-3    03230000
032400                                                  VALUE 0.        03240000
032500         10  WS-OUT-SORT-STORE-SALES      PIC S9(13)V99 COMP-3    03250000
032600                                                  VALUE 0.        03260000
032700     05  WS-OUT-TY-DAILY-SALES      PIC S9(11)V99 COMP-3 VALUE 0. 03270000
032800     05  WS-OUT-TY-MTD-SALES        PIC S9(11)V99 COMP-3 VALUE 0. 03280000
032900     05  WS-OUT-TY-YTD-SALES        PIC S9(13)V99 COMP-3 VALUE 0. 03290000
033000     05  WS-OUT-TY-COMP-DLY-SALES   PIC S9(11)V99 COMP-3 VALUE 0. 03300000
033100     05  WS-OUT-TY-COMP-MTD-SALES   PIC S9(11)V99 COMP-3 VALUE 0. 03310000
033200     05  WS-OUT-TY-COMP-YTD-SALES   PIC S9(13)V99 COMP-3 VALUE 0. 03320000
033300     05  WS-OUT-LY-DAILY-SALES      PIC S9(11)V99 COMP-3 VALUE 0. 03330000
033400     05  WS-OUT-LY-MTD-SALES        PIC S9(11)V99 COMP-3 VALUE 0. 03340000
033500     05  WS-OUT-LY-YTD-SALES        PIC S9(13)V99 COMP-3 VALUE 0. 03350000
033600     05  WS-OUT-LY-COMP-DLY-SALES   PIC S9(11)V99 COMP-3 VALUE 0. 03360000
033700     05  WS-OUT-LY-COMP-MTD-SALES   PIC S9(11)V99 COMP-3 VALUE 0. 03370000
033800     05  WS-OUT-LY-COMP-YTD-SALES   PIC S9(13)V99 COMP-3 VALUE 0. 03380000
033900     05  WS-OUT-LY-TOTAL-SALES      PIC S9(13)V99 COMP-3 VALUE 0. 03390000
034000     05  WS-OUT-METRO-NAME          PIC X(30)     VALUE SPACES.   03400000
034100     05  WS-OUT-STORE-NAME          PIC X(10)     VALUE SPACES.   03410000
034200     05  WS-OUT-MULT-METRO-IND      PIC X         VALUE SPACES.   03420000
WEEK53     05  WS-OUT-DURING-WEEK-53      PIC X         VALUE SPACES.   03421007
WEEK53**       Y = RUN DATE IS DURING WEEK 53                           03421106
WEEK53     05  WS-OUT-LY-SAME-FISCAL-DATE PIC X(10)     VALUE SPACES.   03421213
034300     05  FILLER                     PIC X(16)     VALUE SPACES.   03430013
034400                                                                  03440000
034500                                                                  03450000
034600******************************************************************03460000
034700*               SYSTEM TIME AND DATE VARIABLES                    03470000
034800******************************************************************03480000
034900 01  SYS-DATE-TIME.                                               03490000
035000     05  SYS-DATE                      PIC  X(08)    VALUE SPACES.03500000
035100     05  SYS-TIME                      PIC  X(08)    VALUE SPACES.03510000
035200                                                                  03520000
035300 01  ST-BEG-TIME.                                                 03530000
035400     05  ST-BEG-HR                     PIC  9(02)    VALUE ZEROES.03540000
035500     05  FILLER                        PIC  X(01)    VALUE ':'.   03550000
035600     05  ST-BEG-MN                     PIC  9(02)    VALUE ZEROES.03560000
035700     05  FILLER                        PIC  X(01)    VALUE ':'.   03570000
035800     05  ST-BEG-SS                     PIC  9(02)    VALUE ZEROES.03580000
035900                                                                  03590000
036000 01  ST-END-TIME.                                                 03600000
036100     05  ST-END-HR                     PIC  9(02)    VALUE ZEROES.03610000
036200     05  FILLER                        PIC  X(01)    VALUE ':'.   03620000
036300     05  ST-END-MN                     PIC  9(02)    VALUE ZEROES.03630000
036400     05  FILLER                        PIC  X(01)    VALUE ':'.   03640000
036500     05  ST-END-SS                     PIC  9(02)    VALUE ZEROES.03650000
036600                                                                  03660000
036700 01  SD-EDIT-DATE.                                                03670000
036800     05  SD-MONTH                      PIC  9(02)    VALUE ZEROES.03680000
036900     05  FILLER                        PIC  X(01)    VALUE '-'.   03690000
037000     05  SD-DAY                        PIC  9(02)    VALUE ZEROES.03700000
037100     05  FILLER                        PIC  X(01)    VALUE '-'.   03710000
037200     05  SD-CENT                       PIC  9(02)    VALUE ZEROES.03720000
037300     05  SD-YEAR                       PIC  9(02)    VALUE ZEROES.03730000
037400                                                                  03740000
037500******************************************************************03750000
037600*                        ERROR HANDLING                           03760000
037700******************************************************************03770000
037800 01  ABEND-CODE                        PIC S9(04)    VALUE ZEROES 03780000
037900                                                     COMP SYNC.   03790000
038000     88  ABEND-1111-TABLE-OVERFLOW                   VALUE +1111. 03800000
038100     88  ABEND-2222-MISSING-TABLE-ENTRY              VALUE +2222. 03810000
038200     88  ABEND-3333-INVALID-CTLCD-DATE               VALUE +3333. 03820000
038300     88  ABEND-4013-DB2-ERROR                        VALUE +4013. 03830000
038400                                                                  03840000
038500                                                                  03850000
038600******************************************************************03860000
038700* PARAMETER LIST FOR THE CALENDAR ROUTINE                         03870000
038800******************************************************************03880000
038900     COPY DPWS500.                                                03890000
039000                                                                  03900000
039100******************************************************************03910000
039200* VARIABLES REQUIRED FOR THE FORMAT SQLCA ROUTINE DPPD004         03920000
039300******************************************************************03930000
039400     COPY DPWS004.                                                03940000
039500                                                                  03950000
039600******************************************************************03960000
039700* DB2 MESSAGE AREA                                                03970000
039800******************************************************************03980000
039900     COPY SQLCA2.                                                 03990000
040000                                                                  04000000
040100******************************************************************04010000
040200* DB2 COMMUNICATION AREA                                          04020000
040300******************************************************************04030000
040400     EXEC SQL                                                     04040000
040500          INCLUDE SQLCA                                           04050000
040600     END-EXEC.                                                    04060000
040700                                                                  04070000
040800******************************************************************04080000
040900* STORE LOCATION TABLE (XST_LOC)                                  04090000
041000******************************************************************04100000
041100     EXEC SQL                                                     04110000
041200          INCLUDE XST00001                                        04120000
041300     END-EXEC.                                                    04130000
041400                                                                  04140000
041500******************************************************************04150000
041600* STORE GROUP TABLE (XST_STR_GP)                                  04160000
041700******************************************************************04170000
041800     EXEC SQL                                                     04180000
041900          INCLUDE XST00022                                        04190000
042000     END-EXEC.                                                    04200000
042100                                                                  04210000
042200******************************************************************04220000
042300* STORE GROUP MEMBERSHIP TABLE (XST_STR_GP_MBSHP)                 04230000
042400******************************************************************04240000
042500     EXEC SQL                                                     04250000
042600          INCLUDE XST00023                                        04260000
042700     END-EXEC.                                                    04270000
042800                                                                  04280000
042900******************************************************************04290000
043000* DAILY FLASH SUMMARY TABLE (DFT_DLY_FLSH_SUM)                    04300000
043100******************************************************************04310000
043200     EXEC SQL                                                     04320000
043300          INCLUDE DFT00000                                        04330000
043400     END-EXEC.                                                    04340000
043500                                                                  04350000
043600                                                                  04360000
043700******************************************************************04370000
043800* DAILY FINANCIAL SUMMARY TABLE (DFT_ML_FINCL_SUM)                04380000
043900******************************************************************04390000
044000     EXEC SQL                                                     04400000
044100          INCLUDE DFT00002                                        04410000
044200     END-EXEC.                                                    04420000
044300                                                                  04430000
044400                                                                  04440000
044500******************************************************************04450000
044600* DATE ATTRIBUTES TABLE (TDTATTR)                                 04460000
044700******************************************************************04470000
044800     EXEC SQL                                                     04480000
044900          INCLUDE TDTATTR                                         04490000
045000     END-EXEC.                                                    04500000
045100                                                                  04510000
045200                                                                  04520000
045300******************************************************************04530000
045400*  STORE-CURSOR - USED TO LOAD VALID STORE VALUES TO WS TABLE.    04540000
045500******************************************************************04550000
045600     EXEC SQL                                                     04560000
045700         DECLARE   STORE-CURSOR  CURSOR FOR                       04570000
045800             SELECT  L.LOC_NBR                                    04580000
045900                   , LOC_10_ABBR_NM                               04590000
046000                   , L.ST_CDE                                     04600000
046100                   , M.STR_GP_ID                                  04610000
046200                   , L.MN_SLS_INCL_DTE                            04620000
046300                   , L.YR_SLS_INCL_DTE                            04630000
046300                   , L.E_BUS_IND                                  04631000
046400               FROM  XST_LOC L                                    04640000
046500                   , XST_STR_GP_MBSHP M                           04650000
046600              WHERE  L.LOC_NBR         =  M.STR_NBR               04660000
046700                AND  L.LOC_TYP_CDE     =  'DS'                    04670000
046800                AND  L.OPN_DTE        <= :PV-RUN-DATE-CCYY-MM-DD  04680000
REPL53                AND  L.CLO_DTE        >= :PV-RUN-DATE-CCYY-MM-DD  04690020
047000                AND  M.EFF_BEG_DTE    <= :PV-RUN-DATE-CCYY-MM-DD  04700000
REPL53                AND (M.EFF_END_DTE    >= :PV-RUN-DATE-CCYY-MM-DD  04710020
047200                 OR  M.EFF_END_DTE    IS NULL)                    04720000
047300                AND  M.STR_GP_TYP_CDE  =  2000                    04730000
047400           ORDER BY  L.LOC_NBR                                    04740000
047500                                                                  04750000
047600       WITH UR                                                    04760000
047700     END-EXEC.                                                    04770000
047800                                                                  04780000
047900                                                                  04790000
048000******************************************************************04800000
048100*  METRO-CURSOR - USED TO LOAD VALID METROS IN SEQ TO WS TABLE.   04810000
048200******************************************************************04820000
048300     EXEC SQL                                                     04830000
048400         DECLARE   METRO-CURSOR  CURSOR FOR                       04840000
048500             SELECT  M.STR_GP_ID                                  04850000
048600                   , L.ST_CDE                                     04860000
048700                   , G.STR_GP_NM                                  04870000
046300                   , L.E_BUS_IND                                  04871000
048800               FROM  XST_STR_GP_MBSHP M                           04880000
048900                   , XST_STR_GP       G                           04890000
049000                   , XST_LOC          L                           04900000
049100              WHERE  M.STR_GP_ID       = G.STR_GP_ID              04910000
049200                AND  M.STR_NBR         = L.LOC_NBR                04920000
049300                AND  M.STR_GP_TYP_CDE  = 2000                     04930000
049400                AND  G.STR_GP_TYP_CDE  = 2000                     04940000
049500                AND  L.LOC_TYP_CDE     =  'DS'                    04950000
049600                AND  L.OPN_DTE        <= :PV-RUN-DATE-CCYY-MM-DD  04960000
REPL53                AND  L.CLO_DTE        >= :PV-RUN-DATE-CCYY-MM-DD  04970020
049800                AND  M.EFF_BEG_DTE    <= :PV-RUN-DATE-CCYY-MM-DD  04980000
REPL53                AND (M.EFF_END_DTE    >= :PV-RUN-DATE-CCYY-MM-DD  04990020
050000                 OR  M.EFF_END_DTE    IS NULL)                    05000000
050100           GROUP BY  M.STR_GP_ID                                  05010000
050200                   , L.ST_CDE                                     05020000
050300                   , G.STR_GP_NM                                  05030000
046300                   , L.E_BUS_IND                                  05031000
050400           ORDER BY  M.STR_GP_ID                                  05040000
050500                   , L.ST_CDE                                     05050000
050600                   , G.STR_GP_NM                                  05060000
046300                   , L.E_BUS_IND                                  05061000
050700                                                                  05070000
050800       WITH UR                                                    05080000
050900     END-EXEC.                                                    05090000
051000                                                                  05100000
051100                                                                  05110000
051200******************************************************************05120000
051300*  STATE-CURSOR - USED TO LOAD VALID STATES IN SEQ TO WS TABLE.   05130000
051400******************************************************************05140000
051500     EXEC SQL                                                     05150000
051600         DECLARE   STATE-CURSOR  CURSOR FOR                       05160000
051700             SELECT  DISTINCT(ST_CDE)                             05170000
051800               FROM  XST_LOC                                      05180000
051900              WHERE  ST_CDE > '  '                                05190000
052000                AND  LOC_TYP_CDE     =  'DS'                      05200000
052100                AND  OPN_DTE        <= :PV-RUN-DATE-CCYY-MM-DD    05210000
REPL53                AND  CLO_DTE        >= :PV-RUN-DATE-CCYY-MM-DD    05220020
052300           ORDER BY  ST_CDE                                       05230000
052400                                                                  05240000
052500       WITH UR                                                    05250000
052600     END-EXEC.                                                    05260000
052700                                                                  05270000
052800                                                                  05280000
052900******************************************************************05290000
053000*  TY-SALES-CURSOR - USED TO GET DAILY SALES FOR THIS YEAR ONLY.  05300000
053100******************************************************************05310000
053200     EXEC SQL                                                     05320000
053300         DECLARE   TY-SALES-CURSOR CURSOR FOR                     05330000
053400             SELECT  D.STR_NBR                                    05340000
053500                   , MIN(L.OPN_DTE)                               05350000
053600                   , SUM(D.DLY_DOL_AMT)                           05360000
053700                   , SUM(D.MTD_DOL_AMT)                           05370000
053800                   , SUM(D.YTD_DOL_AMT)                           05380000
053900               FROM  DFT_DLY_FLSH_SUM D                           05390000
054000                   , XST_LOC L                                    05400000
054100              WHERE  D.STR_NBR         = L.LOC_NBR                05410000
054200                AND  L.LOC_TYP_CDE     = 'DS'                     05420000
054300                AND  L.OPN_DTE        <= :PV-RUN-DATE-CCYY-MM-DD  05430000
REPL53                AND  L.CLO_DTE        >= :PV-RUN-DATE-CCYY-MM-DD  05440020
054500                AND  D.SLS_DTE         = :PV-RUN-DATE-CCYY-MM-DD  05450000
054600           GROUP BY  D.STR_NBR                                    05460000
054700           ORDER BY  D.STR_NBR                                    05470000
054800                                                                  05480000
054900       WITH UR                                                    05490000
055000     END-EXEC.                                                    05500000
055100                                                                  05510000
055200                                                                  05520000
055300******************************************************************05530000
055400*  LY-SALES-CURSOR - USED TO GET DAILY SALES FOR LAST YEAR ONLY.  05540000
REPL53*  NOTE: THIS WILL PICK UP LAST YEAR SALES FOR A STORE THAT       05541017
REPL53*        REPLACED ANOTHER BEFORE THE LY COMPARE DATE, BUT NOT     05542017
REPL53*        BEFORE.                                                  05543017
055500******************************************************************05550000
055600     EXEC SQL                                                     05560000
055700         DECLARE   LY-SALES-CURSOR CURSOR FOR                     05570000
055800             SELECT  D.STR_NBR                                    05580000
055900                   , MIN(L.OPN_DTE)                               05590000
056000                   , SUM(D.DLY_DOL_AMT)                           05600000
056100                   , SUM(D.MTD_DOL_AMT)                           05610000
056200                   , SUM(D.YTD_DOL_AMT)                           05620000
056300               FROM  DFT_ML_FINCL_SUM D                           05630000
056400                   , XST_LOC L                                    05640000
056500              WHERE  D.STR_NBR         = L.LOC_NBR                05650000
056600                AND  L.LOC_TYP_CDE     = 'DS'                     05660000
056700                AND  L.OPN_DTE        <= :PV-RUN-DATE-CCYY-MM-DD  05670000
REPL53                AND  L.CLO_DTE        >= :PV-RUN-DATE-CCYY-MM-DD  05680020
056900                AND  D.SLS_DTE         = :PV-LY-SAME-FISCAL-DATE  05690000
057000           GROUP BY  D.STR_NBR                                    05700000
057100           ORDER BY  D.STR_NBR                                    05710000
057200                                                                  05720000
057300       WITH UR                                                    05730000
057400     END-EXEC.                                                    05740000
057500                                                                  05750000
057600                                                                  05760000
057700******************************************************************05770000
057800*  SALES-TOTAL-CURSOR - USED TO GET TOTAL SALES FOR LAST YEAR.    05780000
057900******************************************************************05790000
058000     EXEC SQL                                                     05800000
058100         DECLARE   SALES-TOTAL-CURSOR  CURSOR FOR                 05810000
058200             SELECT  D.STR_NBR                                    05820000
058300                   , MIN(L.OPN_DTE)                               05830000
058400                   , SUM(D.YTD_DOL_AMT)                           05840000
058500               FROM  DFT_ML_FINCL_SUM D                           05850000
058600                   , XST_LOC L                                    05860000
058700              WHERE  D.STR_NBR         = L.LOC_NBR                05870000
058800                AND  L.LOC_TYP_CDE     = 'DS'                     05880000
058900                AND  L.OPN_DTE        <= :PV-RUN-DATE-CCYY-MM-DD  05890000
REPL53                AND  L.CLO_DTE        >= :PV-RUN-DATE-CCYY-MM-DD  05900020
059100                AND  D.SLS_DTE         = :PV-LY-FISCAL-END-DATE   05910000
059200           GROUP BY  D.STR_NBR                                    05920000
059300           ORDER BY  D.STR_NBR                                    05930000
059400                                                                  05940000
059500       WITH UR                                                    05950000
059600     END-EXEC.                                                    05960000
059700                                                                  05970000
059800                                                                  05980000
059900 PROCEDURE DIVISION.                                              05990000
060000******************************************************************06000000
060100* MAIN DRIVER                                                     06010000
060200******************************************************************06020000
060300                                                                  06030000
060400     PERFORM 1000-INITIALIZE.                                     06040000
060500                                                                  06050000
060600**   GET THIS YEAR'S SALES FOR THE DAY                            06060000
060700     PERFORM 2000-PROCESS-TY-DAILY-SALES.                         06070000
060800                                                                  06080000
060900**   GET LAST YEAR'S SALES FOR THE DAY                            06090000
061000     PERFORM 3000-PROCESS-LY-DAILY-SALES.                         06100000
061100                                                                  06110000
061200**   GET LAST YEAR'S TOTAL SALES FOR REPORTING                    06120000
061300     PERFORM 4000-PROCESS-LY-TOTAL-SALES.                         06130000
061400                                                                  06140000
061500     PERFORM 7000-WRITE-REPORT-EXTRACT.                           06150000
061600                                                                  06160000
061700     PERFORM 9000-END-OF-JOB.                                     06170000
061800                                                                  06180000
061900     STOP RUN.                                                    06190000
062000                                                                  06200000
062100                                                                  06210000
062200******************************************************************06220000
062300* PERFORMS TASK INITIATION PROCESSING                             06230000
062400******************************************************************06240000
062500 1000-INITIALIZE.                                                 06250000
062600                                                                  06260000
062700     OPEN INPUT  CTLCD-DATE-FILE                                  06270000
062800          OUTPUT REPORT-EXTRACT-FILE.                             06280000
062900                                                                  06290000
063000     MOVE FUNCTION CURRENT-DATE TO SYS-DATE-TIME.                 06300000
063100                                                                  06310000
063200     MOVE SYS-TIME (1:2) TO ST-BEG-HR.                            06320000
063300     MOVE SYS-TIME (3:2) TO ST-BEG-MN.                            06330000
063400                                                                  06340000
063500     MOVE SYS-DATE (1:2) TO SD-CENT.                              06350000
063600     MOVE SYS-DATE (3:2) TO SD-YEAR.                              06360000
063700     MOVE SYS-DATE (5:2) TO SD-MONTH.                             06370000
063800     MOVE SYS-DATE (7:2) TO SD-DAY.                               06380000
063900                                                                  06390000
064000     PERFORM 1100-READ-CTLCD.                                     06400000
064100     PERFORM 1200-EDIT-DATE.                                      06410000
064200     PERFORM 1300-LOAD-STATE-TABLE-KEYS.                          06420000
064300     PERFORM 1400-LOAD-METRO-TABLE-KEYS.                          06430000
064400     PERFORM 1500-LOAD-STORE-TABLE-KEYS.                          06440000
WEEK53**   THIS PROGRAM WILL BE EXECUTED TWICE FOR THE ENTIRE FISCAL    06442010
WEEK53**   YEAR FOLLOWING A FISCAL YEAR THAT HAD 53 WEEKS - ONCE IN     06442117
WEEK53**   "NORMAL" MODE WITH CC-53-WEEK-IND = '52' OR SPACES, AND      06442210
WEEK53**   ONCE WITH CC-53-WEEK-IND = '53' TO CREATE A "CALENDAR"       06442310
WEEK53**   VERSION OF THE REPORT WITH "LAST YEAR'S SAME FISCAL DATE"    06442410
WEEK53**   OFFSET BY 1 WEEK.                                            06442510
WEEK53     IF CC-53-WEEK-IND   = '53'                                   06442610
WEEK53         PERFORM 1620-GET-OFFSET-DATES                            06443010
WEEK53     ELSE                                                         06451006
064500         PERFORM 1600-GET-THIS-YEARS-DATES                        06452010
WEEK53     END-IF.                                                      06453006
064600     PERFORM 1700-GET-LAST-YEARS-END-DATE.                        06460000
064700                                                                  06470000
064800                                                                  06480000
064900******************************************************************06490000
065000* READ THE DATE FILE INTO THE CONTROL CARD                        06500000
065100******************************************************************06510000
065200 1100-READ-CTLCD.                                                 06520000
065300                                                                  06530000
065400     READ CTLCD-DATE-FILE INTO CC-CONTROL-CARD                    06540000
065500        AT END SET PS-END-OF-CTLCD-FILE TO TRUE.                  06550000
065600                                                                  06560000
065700     IF  PS-END-OF-CTLCD-FILE                                     06570000
065800         SET ABEND-3333-INVALID-CTLCD-DATE     TO TRUE            06580000
065900         DISPLAY 'PARA NAME = 1100-READ-CTLCD'                    06590000
066000         DISPLAY 'INPUT CTLCD DATE FILE IS EMPTY'                 06600000
066100         PERFORM 8100-ABEND                                       06610000
066200     END-IF.                                                      06620000
066300                                                                  06630000
066400                                                                  06640000
066500******************************************************************06650000
066600* EDIT THE DB2 DATE TO MAKE SURE THAT IT IS VALID.                06660000
066700******************************************************************06670000
066800 1200-EDIT-DATE.                                                  06680000
066900                                                                  06690000
067000     INITIALIZE DPG51 DPG52 DPG53 DPG54 DPG55 DPG56.              06700000
067100                                                                  06710000
067200     SET DPG51-ACTUAL-CALENDAR-ONLY    TO TRUE.                   06720000
067300     SET DPG51-DO-NOT-INCR-DECR-DATE   TO TRUE.                   06730000
067400     SET DPG52-LK-DTE-ISO-FMT          TO TRUE.                   06740000
067500                                                                  06750000
067600     MOVE CC-DB2-CTLCD-DATE-ISO        TO DPG52-LK-DATE-INPUT.    06760000
067700                                                                  06770000
067800     CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51 DPG52 DPG53    06780000
067900                                             DPG54 DPG55 DPG56.   06790000
068000                                                                  06800000
068100     EVALUATE TRUE                                                06810000
068200        WHEN DPG54-NO-ERROR                                       06820000
068300**         MOVE DPG55-DB2-ISO-DATE-FMT TO PV-RUN-DATE-CCYY-MM-DD  06830000
068400           MOVE CC-DB2-CTLCD-DATE-ISO TO PV-RUN-DATE-CCYY-MM-DD   06840000
068500                                                                  06850000
068600        WHEN DPG54-SEVERE-ERROR                                   06860000
068700        WHEN DPG54-DATE-INVALID                                   06870000
068800           SET ABEND-3333-INVALID-CTLCD-DATE     TO TRUE          06880000
068900           DISPLAY 'PARA NAME = 1200-EDIT-DATE - CALL DPKUT500'   06890000
069000           DISPLAY 'INPUT CTLCD DATE  ' CC-DB2-CTLCD-DATE-ISO     06900000
069100                   '  IS INVALID'                                 06910000
069200           DISPLAY 'CALENDAR MODULE ERROR IND = ' DPG54-ERROR-IND 06920000
069300           PERFORM 8100-ABEND                                     06930000
069400     END-EVALUATE.                                                06940000
069500                                                                  06950000
069600                                                                  06960000
069700******************************************************************06970000
069800* FETCH ALL VALID STATE CODES IN ORDER AND LOAD THEM TO THE       06980000
069900* STATE TABLE.                                                    06990000
070000******************************************************************07000000
070100 1300-LOAD-STATE-TABLE-KEYS.                                      07010000
070200                                                                  07020000
070300     MOVE 0 TO PA-STATE-SUB.                                      07030000
070400                                                                  07040000
070500     PERFORM 1310-OPEN-STATE-CURSOR.                              07050000
070600                                                                  07060000
070700     PERFORM 1320-FETCH-STATE-CURSOR                              07070000
070800        UNTIL PS-END-OF-STATE.                                    07080000
070900                                                                  07090000
071000     PERFORM 1330-CLOSE-STATE-CURSOR.                             07100000
071100                                                                  07110000
071200                                                                  07120000
071300******************************************************************07130000
071400* OPEN STATE CURSOR                                               07140000
071500******************************************************************07150000
071600 1310-OPEN-STATE-CURSOR.                                          07160000
071700                                                                  07170000
071800     EXEC SQL                                                     07180000
071900          OPEN STATE-CURSOR                                       07190000
072000     END-EXEC.                                                    07200000
072100                                                                  07210000
072200     IF SQLCODE NOT EQUAL ZERO                                    07220000
072300        MOVE SQLCODE                  TO PV-SQLCODE               07230000
072400        MOVE 'XST_LOC'                TO PV-TABLE-NAME            07240000
072500        MOVE '1310-OPEN-STATE-CURSOR' TO PV-PARAGRAPH-NAME        07250000
072600        STRING 'ERROR ON OPEN OF STATE CURSOR - SQLCODE= '        07260000
072700                PV-SQLCODE DELIMITED BY SIZE INTO                 07270000
072800                PV-OPERATION-MSG                                  07280000
072900        END-STRING                                                07290000
073000        PERFORM 8000-DB2-ABEND                                    07300000
073100     END-IF.                                                      07310000
073200                                                                  07320000
073300                                                                  07330000
073400******************************************************************07340000
073500* FETCH STATE CURSOR                                              07350000
073600******************************************************************07360000
073700 1320-FETCH-STATE-CURSOR.                                         07370000
073800                                                                  07380000
073900     EXEC SQL                                                     07390000
074000         FETCH STATE-CURSOR                                       07400000
074100          INTO :XST00001-ST-CDE                                   07410000
074200     END-EXEC.                                                    07420000
074300                                                                  07430000
074400     EVALUATE TRUE                                                07440000
074500        WHEN SQLCODE = ZERO                                       07450000
074600           ADD +1              TO PA-STATE-SUB                    07460000
074700           IF PA-STATE-SUB > PC-STATE-MAX                         07470000
074800               SET ABEND-1111-TABLE-OVERFLOW  TO TRUE             07480000
074900               DISPLAY 'PARA NAME = 1320-FETCH-STATE-CURSOR'      07490000
075000               DISPLAY 'STATE TABLE OVERFLOW - NBR OF ENTRIES = ' 07500000
075100                        PA-STATE-SUB                              07510000
075200               PERFORM 8100-ABEND                                 07520000
075300           ELSE                                                   07530000
075400               MOVE XST00001-ST-CDE TO PA-STATE (PA-STATE-SUB)    07540000
075500           END-IF                                                 07550000
075600                                                                  07560000
075700        WHEN SQLCODE = PC-ROW-NOT-FOUND                           07570000
075800           SET PS-END-OF-STATE TO TRUE                            07580000
075900                                                                  07590000
076000        WHEN OTHER                                                07600000
076100           MOVE SQLCODE                   TO PV-SQLCODE           07610000
076200           MOVE 'XST_LOC'                 TO PV-TABLE-NAME        07620000
076300           MOVE '1320-FETCH-STATE-CURSOR' TO PV-PARAGRAPH-NAME    07630000
076400           STRING 'ERROR ON FETCH OF STATE CURSOR - SQLCODE= '    07640000
076500                   PV-SQLCODE DELIMITED BY SIZE INTO              07650000
076600                   PV-OPERATION-MSG                               07660000
076700           END-STRING                                             07670000
076800           PERFORM 8000-DB2-ABEND                                 07680000
076900     END-EVALUATE.                                                07690000
077000                                                                  07700000
077100                                                                  07710000
077200******************************************************************07720000
077300* CLOSE STATE CURSOR                                              07730000
077400******************************************************************07740000
077500 1330-CLOSE-STATE-CURSOR.                                         07750000
077600                                                                  07760000
077700     EXEC SQL                                                     07770000
077800          CLOSE STATE-CURSOR                                      07780000
077900     END-EXEC.                                                    07790000
078000                                                                  07800000
078100     IF SQLCODE NOT EQUAL ZERO                                    07810000
078200        MOVE SQLCODE                   TO PV-SQLCODE              07820000
078300        MOVE 'XST_LOC'                 TO PV-TABLE-NAME           07830000
078400        MOVE '1330-CLOSE-STATE-CURSOR' TO PV-PARAGRAPH-NAME       07840000
078500        STRING 'ERROR ON CLOSE OF STATE CURSOR - SQLCODE= '       07850000
078600                PV-SQLCODE DELIMITED BY SIZE INTO                 07860000
078700                PV-OPERATION-MSG                                  07870000
078800        END-STRING                                                07880000
078900        PERFORM 8000-DB2-ABEND                                    07890000
079000     END-IF.                                                      07900000
079100                                                                  07910000
079200                                                                  07920000
079300******************************************************************07930000
079400* FETCH ALL VALID METRO CODES IN ORDER AND LOAD THEM TO THE       07940000
079500* METRO TABLE.                                                    07950000
079600******************************************************************07960000
079700 1400-LOAD-METRO-TABLE-KEYS.                                      07970000
079800                                                                  07980000
079900     MOVE 0 TO PA-METRO-SUB.                                      07990000
080000                                                                  08000000
080100     PERFORM 1410-OPEN-METRO-CURSOR.                              08010000
080200                                                                  08020000
080300     PERFORM 1420-FETCH-METRO-CURSOR                              08030000
080400        UNTIL PS-END-OF-METRO.                                    08040000
080500                                                                  08050000
080600     PERFORM 1430-CLOSE-METRO-CURSOR.                             08060000
080700                                                                  08070000
080800                                                                  08080000
080900******************************************************************08090000
081000* OPEN METRO CURSOR                                               08100000
081100******************************************************************08110000
081200 1410-OPEN-METRO-CURSOR.                                          08120000
081300                                                                  08130000
081400     EXEC SQL                                                     08140000
081500          OPEN METRO-CURSOR                                       08150000
081600     END-EXEC.                                                    08160000
081700                                                                  08170000
081800     IF SQLCODE NOT EQUAL ZERO                                    08180000
081900        MOVE SQLCODE                  TO PV-SQLCODE               08190000
082000        MOVE 'XST_STR_GP'             TO PV-TABLE-NAME            08200000
082100        MOVE '1410-OPEN-METRO-CURSOR' TO PV-PARAGRAPH-NAME        08210000
082200        STRING 'ERROR ON OPEN OF METRO CURSOR - SQLCODE= '        08220000
082300                PV-SQLCODE DELIMITED BY SIZE INTO                 08230000
082400                PV-OPERATION-MSG                                  08240000
082500        END-STRING                                                08250000
082600        PERFORM 8000-DB2-ABEND                                    08260000
082700     END-IF.                                                      08270000
082800                                                                  08280000
082900                                                                  08290000
083000******************************************************************08300000
083100* FETCH METRO CURSOR                                              08310000
083200******************************************************************08320000
083300 1420-FETCH-METRO-CURSOR.                                         08330000
083400                                                                  08340000
083500     EXEC SQL                                                     08350000
083600         FETCH METRO-CURSOR                                       08360000
083700          INTO :XST00023-STR-GP-ID                                08370000
083800             , :XST00001-ST-CDE                                   08380000
083900             , :XST00022-STR-GP-NM                                08390000
083800             , :XST00001-E-BUS-IND                                08391000
084000     END-EXEC.                                                    08400000
084100                                                                  08410000
084200     EVALUATE TRUE                                                08420000
084300        WHEN SQLCODE = ZERO                                       08430000
084400           ADD +1              TO PA-METRO-SUB                    08440000
084500           IF PA-METRO-SUB > PC-METRO-MAX                         08450000
084600               SET ABEND-1111-TABLE-OVERFLOW  TO TRUE             08460000
084700               DISPLAY 'PARA NAME = 1420-FETCH-METRO-CURSOR'      08470000
084800               DISPLAY 'METRO TABLE OVERFLOW - NBR OF ENTRIES = ' 08480000
084900                        PA-METRO-SUB                              08490000
085000               PERFORM 8100-ABEND                                 08500000
085100           ELSE                                                   08510000
085200               MOVE XST00023-STR-GP-ID                            08520000
085300                              TO PA-METRO (PA-METRO-SUB)          08530000
085400               MOVE XST00001-ST-CDE                               08540000
085500                              TO PA-METRO-STATE (PA-METRO-SUB)    08550000
085600               MOVE XST00022-STR-GP-NM                            08560000
085700                              TO PA-METRO-NAME (PA-METRO-SUB)     08570000
094200               MOVE XST00001-E-BUS-IND                            08580100
094200                              TO PA-METRO-E-BUS-IND(PA-METRO-SUB) 08580200
085800           END-IF                                                 08581000
085900                                                                  08590000
086000        WHEN SQLCODE = PC-ROW-NOT-FOUND                           08600000
086100           SET PS-END-OF-METRO TO TRUE                            08610000
086200                                                                  08620000
086300        WHEN OTHER                                                08630000
086400           MOVE SQLCODE                   TO PV-SQLCODE           08640000
086500           MOVE 'XST_STR_GP'              TO PV-TABLE-NAME        08650000
086600           MOVE '1420-FETCH-METRO-CURSOR' TO PV-PARAGRAPH-NAME    08660000
086700           STRING 'ERROR ON FETCH OF METRO CURSOR - SQLCODE= '    08670000
086800                   PV-SQLCODE DELIMITED BY SIZE INTO              08680000
086900                   PV-OPERATION-MSG                               08690000
087000           END-STRING                                             08700000
087100           PERFORM 8000-DB2-ABEND                                 08710000
087200     END-EVALUATE.                                                08720000
087300                                                                  08730000
087400                                                                  08740000
087500******************************************************************08750000
087600* CLOSE METRO CURSOR                                              08760000
087700******************************************************************08770000
087800 1430-CLOSE-METRO-CURSOR.                                         08780000
087900                                                                  08790000
088000     EXEC SQL                                                     08800000
088100          CLOSE METRO-CURSOR                                      08810000
088200     END-EXEC.                                                    08820000
088300                                                                  08830000
088400     IF SQLCODE NOT EQUAL ZERO                                    08840000
088500        MOVE SQLCODE                   TO PV-SQLCODE              08850000
088600        MOVE 'XST_STR_GP'              TO PV-TABLE-NAME           08860000
088700        MOVE '1430-CLOSE-METRO-CURSOR' TO PV-PARAGRAPH-NAME       08870000
088800        STRING 'ERROR ON CLOSE OF METRO CURSOR - SQLCODE= '       08880000
088900                PV-SQLCODE DELIMITED BY SIZE INTO                 08890000
089000                PV-OPERATION-MSG                                  08900000
089100        END-STRING                                                08910000
089200        PERFORM 8000-DB2-ABEND                                    08920000
089300     END-IF.                                                      08930000
089400                                                                  08940000
089500                                                                  08950000
089600******************************************************************08960000
089700* FETCH ALL VALID STORE NUMBERS AND LOAD THEM TO THE STORE TABLE. 08970000
089800******************************************************************08980000
089900 1500-LOAD-STORE-TABLE-KEYS.                                      08990000
090000                                                                  09000000
090100     PERFORM 1510-OPEN-STORE-CURSOR.                              09010000
090200                                                                  09020000
090300     PERFORM 1520-FETCH-STORE-CURSOR                              09030000
090400        UNTIL PS-END-OF-STORE.                                    09040000
090500                                                                  09050000
090600     PERFORM 1530-CLOSE-STORE-CURSOR.                             09060000
090700                                                                  09070000
090800                                                                  09080000
090900******************************************************************09090000
091000* OPEN STORE CURSOR                                               09100000
091100******************************************************************09110000
091200 1510-OPEN-STORE-CURSOR.                                          09120000
091300                                                                  09130000
091400     EXEC SQL                                                     09140000
091500          OPEN STORE-CURSOR                                       09150000
091600     END-EXEC.                                                    09160000
091700                                                                  09170000
091800     IF SQLCODE NOT EQUAL ZERO                                    09180000
091900        MOVE SQLCODE                  TO PV-SQLCODE               09190000
092000        MOVE 'XST_LOC'                TO PV-TABLE-NAME            09200000
092100        MOVE '1510-OPEN-STORE-CURSOR' TO PV-PARAGRAPH-NAME        09210000
092200        STRING 'ERROR ON OPEN OF STORE CURSOR - SQLCODE= '        09220000
092300                PV-SQLCODE DELIMITED BY SIZE INTO                 09230000
092400                PV-OPERATION-MSG                                  09240000
092500        END-STRING                                                09250000
092600        PERFORM 8000-DB2-ABEND                                    09260000
092700     END-IF.                                                      09270000
092800                                                                  09280000
092900                                                                  09290000
093000******************************************************************09300000
093100* FETCH STORE CURSOR                                              09310000
093200******************************************************************09320000
093300 1520-FETCH-STORE-CURSOR.                                         09330000
093400                                                                  09340000
093500     EXEC SQL                                                     09350000
093600         FETCH STORE-CURSOR                                       09360000
093700          INTO :XST00001-LOC-NBR                                  09370000
093800             , :XST00001-LOC-10-ABBR-NM                           09380000
093900             , :XST00001-ST-CDE                                   09390000
094000             , :XST00023-STR-GP-ID                                09400000
094100             , :XST00001-MN-SLS-INCL-DTE                          09410000
094200             , :XST00001-YR-SLS-INCL-DTE                          09420000
094200             , :XST00001-E-BUS-IND                                09421000
094300     END-EXEC.                                                    09430000
094400                                                                  09440000
094500     EVALUATE TRUE                                                09450000
094600        WHEN SQLCODE = ZERO                                       09460000
094700           MOVE XST00001-LOC-NBR TO PA-STORE-SUB                  09470000
094800                                    PA-STORE-NUMBER(PA-STORE-SUB) 09480000
094900           MOVE XST00001-LOC-10-ABBR-NM                           09490000
095000                                 TO PA-STORE-NAME  (PA-STORE-SUB) 09500000
095100           MOVE XST00023-STR-GP-ID                                09510000
095200                                 TO PA-STORE-METRO (PA-STORE-SUB) 09520000
095300           MOVE XST00001-ST-CDE  TO PA-STORE-STATE (PA-STORE-SUB) 09531000
095400           MOVE XST00001-MN-SLS-INCL-DTE                          09540000
095500                       TO PA-STORE-COMP-MONTH-DATE (PA-STORE-SUB) 09550000
095600           MOVE XST00001-YR-SLS-INCL-DTE                          09560000
095700                       TO PA-STORE-COMP-YEAR-DATE  (PA-STORE-SUB) 09570000
094200           MOVE XST00001-E-BUS-IND                                09570100
094200                              TO PA-STORE-E-BUS-IND(PA-STORE-SUB) 09570200
095800                                                                  09580000
095900        WHEN SQLCODE = PC-ROW-NOT-FOUND                           09590000
096000           SET PS-END-OF-STORE   TO TRUE                          09600000
096100                                                                  09610000
096200        WHEN OTHER                                                09620000
096300           MOVE SQLCODE                   TO PV-SQLCODE           09630000
096400           MOVE 'XST_LOC'                 TO PV-TABLE-NAME        09640000
096500           MOVE '1520-FETCH-STORE-CURSOR' TO PV-PARAGRAPH-NAME    09650000
096600           STRING 'ERROR ON FETCH OF STORE CURSOR - SQLCODE= '    09660000
096700                   PV-SQLCODE DELIMITED BY SIZE INTO              09670000
096800                   PV-OPERATION-MSG                               09680000
096900           END-STRING                                             09690000
097000           PERFORM 8000-DB2-ABEND                                 09700000
097100     END-EVALUATE.                                                09710000
097200                                                                  09720000
097300                                                                  09730000
097400******************************************************************09740000
097500* CLOSE STORE CURSOR                                              09750000
097600******************************************************************09760000
097700 1530-CLOSE-STORE-CURSOR.                                         09770000
097800                                                                  09780000
097900     EXEC SQL                                                     09790000
098000          CLOSE STORE-CURSOR                                      09800000
098100     END-EXEC.                                                    09810000
098200                                                                  09820000
098300     IF SQLCODE NOT EQUAL ZERO                                    09830000
098400        MOVE SQLCODE                   TO PV-SQLCODE              09840000
098500        MOVE 'XST_LOC'                 TO PV-TABLE-NAME           09850000
098600        MOVE '1530-CLOSE-STORE-CURSOR' TO PV-PARAGRAPH-NAME       09860000
098700        STRING 'ERROR ON CLOSE OF STORE CURSOR - SQLCODE= '       09870000
098800                PV-SQLCODE DELIMITED BY SIZE INTO                 09880000
098900                PV-OPERATION-MSG                                  09890000
099000        END-STRING                                                09900000
099100        PERFORM 8000-DB2-ABEND                                    09910000
099200     END-IF.                                                      09920000
099300                                                                  09930000
099400                                                                  09940000
099500******************************************************************09950000
099600* GET SAME FISCAL DAY FROM LAST YEAR FOR COMPARING.               09960000
099700* ALSO, GET THIS FISCAL YEAR'S BEGIN DATE - IT WILL BE USED       09970000
099800* TO SEE IF THE STORE WAS OPENED DURING THE YEAR.  IF IT WAS,     09980000
099900* A CHECK WILL BE DONE TO SEE IF IT REPLACED ANOTHER STORE.       09990000
WEEK53* THE YEAR AND WEEK NUMBERS WILL BE REQUIRED FOR 53 WEEK YEARS.   09991005
100000******************************************************************10000000
100100 1600-GET-THIS-YEARS-DATES.                                       10010000
100200                                                                  10020000
100300     EXEC SQL                                                     10030000
100400         SELECT  FSCL_YR_BEG_DTE                                  10040000
100500               , FSCL_YR_END_DTE                                  10050000
100600               , LY_THIS_DAY_KY_DTE                               10060000
WEEK53               , FSCL_YR_NBR                                      10061005
WEEK53               , FSCL_WK_NBR                                      10062005
100700           INTO :DTATTR-FSCL-YR-BEG-DTE                           10070000
100800               ,:DTATTR-FSCL-YR-END-DTE                           10080000
100900               ,:DTATTR-LY-THIS-DAY-KY-DTE                        10090000
WEEK53               ,:DTATTR-FSCL-YR-NBR                               10091005
WEEK53               ,:DTATTR-FSCL-WK-NBR                               10092005
101000           FROM  TDTATTR                                          10100000
101100          WHERE  KY_DTE = :PV-RUN-DATE-CCYY-MM-DD                 10110000
101200                                                                  10120000
101300       WITH UR                                                    10130000
101400     END-EXEC.                                                    10140000
101500                                                                  10150000
101600     EVALUATE TRUE                                                10160000
101700        WHEN SQLCODE = ZERO                                       10170000
101800           MOVE DTATTR-FSCL-YR-BEG-DTE                            10180000
101900                                      TO PV-TY-FISCAL-BEGIN-DATE  10190000
102000           MOVE DTATTR-FSCL-YR-END-DTE                            10200000
102100                                      TO PV-TY-FISCAL-END-DATE    10210000
WEEK53           IF DTATTR-LY-THIS-DAY-KY-DTE = '9999-09-09'            10220005
WEEK53**             THIS IS WEEK 53                                    10220105
WEEK53               SET PS-IN-WEEK-53      TO TRUE                     10220205
WEEK53               PERFORM 1610-GET-53-WEEK-COMP-DATES                10220305
WEEK53           ELSE                                                   10220405
102200               MOVE DTATTR-LY-THIS-DAY-KY-DTE                     10221005
102300                                      TO PV-LY-SAME-FISCAL-DATE   10230000
WEEK53           END-IF                                                 10231005
102400                                                                  10240000
102500        WHEN OTHER                                                10250000
102600           MOVE SQLCODE                     TO PV-SQLCODE         10260000
102700           MOVE 'TDTATTR'                   TO PV-TABLE-NAME      10270000
102800           MOVE '1600-GET-THIS-YEARS-DATES' TO PV-PARAGRAPH-NAME  10280000
102900           STRING 'THIS YEARS DATE ' PV-RUN-DATE-CCYY-MM-DD       10290000
103000                  ' NOT FOUND - SQLCODE= '                        10300000
103100                   PV-SQLCODE DELIMITED BY SIZE INTO              10310000
103200                   PV-OPERATION-MSG                               10320000
103300           END-STRING                                             10330000
103400           PERFORM 8000-DB2-ABEND                                 10340000
103500     END-EVALUATE.                                                10350000
103600                                                                  10360000
099400                                                                  10366406
WEEK53******************************************************************10366506
WEEK53* THIS PARAGRAPH IS PERFORMED WHEN WE ARE IN WEEK 53 TO GET THE   10366606
WEEK53* TY AND LY COMP DATES TO BE USED FOR THE MTD AND YTD TOTALS.     10367006
WEEK53******************************************************************10369005
WEEK53 1610-GET-53-WEEK-COMP-DATES.                                     10369106
WEEK53                                                                  10369205
WEEK53     EXEC SQL                                                     10369305
WEEK53         SELECT  KY_DTE                                           10369405
WEEK53               , LY_THIS_DAY_KY_DTE                               10369605
WEEK53           INTO :PV-53-WEEK-TY-COMP-DATE                          10369905
WEEK53               ,:PV-53-WEEK-LY-COMP-DATE                          10370105
WEEK53           FROM  TDTATTR                                          10370405
WEEK53          WHERE  FSCL_YR_NBR   = :DTATTR-FSCL-YR-NBR              10370508
WEEK53            AND  FSCL_WK_NBR   = '52'                             10370605
WEEK53            AND  DAY_OF_WK_NBR = '7'                              10370705
WEEK53                                                                  10370805
WEEK53       WITH UR                                                    10370905
WEEK53     END-EXEC.                                                    10371005
WEEK53                                                                  10371105
WEEK53     EVALUATE TRUE                                                10371205
WEEK53        WHEN SQLCODE = ZERO                                       10371305
WEEK53***        ALL CURSORS WILL USE THE SAME VALUE FOR LAST YEAR'S    10372305
WEEK53***        "SAME DATE".  DAILY TOTALS WILL BE IGNORED.            10372406
WEEK53           MOVE PV-53-WEEK-LY-COMP-DATE TO PV-LY-SAME-FISCAL-DATE 10372505
WEEK53        WHEN OTHER                                                10372705
WEEK53           MOVE SQLCODE                     TO PV-SQLCODE         10372805
WEEK53           MOVE 'TDTATTR'                   TO PV-TABLE-NAME      10372905
WEEK53           MOVE '1610-GET-53-WEEK-COMP-DATES'                     10373106
WEEK53                                            TO PV-PARAGRAPH-NAME  10373205
WEEK53           STRING 'THIS YEAR ' DTATTR-FSCL-YR-NBR                 10373309
WEEK53                  ' FOR WEEK 52 / DAY 7 NOT FOUND - SQLCODE = '   10373409
WEEK53                   PV-SQLCODE DELIMITED BY SIZE INTO              10373609
WEEK53                   PV-OPERATION-MSG                               10373709
WEEK53           END-STRING                                             10373809
WEEK53           PERFORM 8000-DB2-ABEND                                 10373909
WEEK53     END-EVALUATE.                                                10374009
WEEK53                                                                  10374109
099400                                                                  10374209
WEEK53******************************************************************10374309
WEEK53* PROCESSING DURING THE FISCAL YEAR FOLLOWING A 53 WEEK YEAR -    10374409
WEEK53* IN 53 WEEK MODE (DETERMINED BY THE DATE CTLCD INDICATOR), USE   10374509
WEEK53* LAST YEAR'S DATE OFFSET BY 1 WEEK.                              10374609
WEEK53* GET SAME FISCAL DAY FROM LAST YEAR FOR COMPARING.               10374709
WEEK53* ALSO, GET THIS FISCAL YEAR'S BEGIN DATE - IT WILL BE USED       10374809
WEEK53* TO SEE IF THE STORE WAS OPENED DURING THE YEAR.  IF IT WAS,     10374909
WEEK53* A CHECK WILL BE DONE TO SEE IF IT REPLACED ANOTHER STORE.       10375009
WEEK53* THE YEAR AND WEEK NUMBERS WILL BE REQUIRED FOR 53 WEEK YEARS.   10375109
WEEK53******************************************************************10375209
WEEK53 1620-GET-OFFSET-DATES.                                           10375309
WEEK53                                                                  10375409
WEEK53     EXEC SQL                                                     10375509
WEEK53         SELECT  FSCL_YR_BEG_DTE                                  10375609
WEEK53               , FSCL_YR_END_DTE                                  10375709
WEEK53               , LY_THIS_DAY_KY_DTE + 7 DAYS                      10375809
WEEK53               , FSCL_YR_NBR                                      10375909
WEEK53               , FSCL_WK_NBR                                      10376009
WEEK53           INTO :DTATTR-FSCL-YR-BEG-DTE                           10376109
WEEK53               ,:DTATTR-FSCL-YR-END-DTE                           10376209
WEEK53               ,:DTATTR-LY-THIS-DAY-KY-DTE                        10376309
WEEK53               ,:DTATTR-FSCL-YR-NBR                               10376409
WEEK53               ,:DTATTR-FSCL-WK-NBR                               10376509
WEEK53           FROM  TDTATTR                                          10376609
WEEK53          WHERE  KY_DTE = :PV-RUN-DATE-CCYY-MM-DD                 10376709
WEEK53                                                                  10376809
WEEK53       WITH UR                                                    10376909
WEEK53     END-EXEC.                                                    10377009
WEEK53                                                                  10377109
WEEK53     EVALUATE TRUE                                                10377209
WEEK53        WHEN SQLCODE = ZERO                                       10377309
WEEK53           MOVE DTATTR-FSCL-YR-BEG-DTE                            10377409
WEEK53                                      TO PV-TY-FISCAL-BEGIN-DATE  10377509
WEEK53           MOVE DTATTR-FSCL-YR-END-DTE                            10377609
WEEK53                                      TO PV-TY-FISCAL-END-DATE    10377709
WEEK53           MOVE DTATTR-LY-THIS-DAY-KY-DTE                         10377906
WEEK53                                      TO PV-LY-SAME-FISCAL-DATE   10378006
WEEK53                                                                  10378206
WEEK53        WHEN OTHER                                                10378306
WEEK53           MOVE SQLCODE                     TO PV-SQLCODE         10378406
WEEK53           MOVE 'TDTATTR'                   TO PV-TABLE-NAME      10378506
WEEK53           MOVE '1620-GET-OFFSET-DATES'     TO PV-PARAGRAPH-NAME  10378606
WEEK53           STRING 'THIS YEARS DATE ' PV-RUN-DATE-CCYY-MM-DD       10378706
WEEK53                  ' NOT FOUND - SQLCODE= '                        10378806
WEEK53                   PV-SQLCODE DELIMITED BY SIZE INTO              10378906
WEEK53                   PV-OPERATION-MSG                               10379006
WEEK53           END-STRING                                             10379106
WEEK53           PERFORM 8000-DB2-ABEND                                 10379206
WEEK53     END-EVALUATE.                                                10379306
WEEK53                                                                  10379406
103700                                                                  10379500
103800******************************************************************10380000
103900* GET LAST FISCAL YEAR'S END DATE - IT'S YTD SALES WILL REFLECT   10390000
104000* TOTAL SALES FOR THE YEAR.  THE FISCAL BEGIN DATE WILL BE USED   10400000
104100* TO SEE IF THE STORE WAS OPENED DURING THE YEAR.  IF IT WAS,     10410000
104200* A CHECK WILL BE DONE TO SEE IF IT REPLACED ANOTHER STORE.       10420000
104300******************************************************************10430000
104400 1700-GET-LAST-YEARS-END-DATE.                                    10440000
104500                                                                  10450000
104600     EXEC SQL                                                     10460000
104700         SELECT  FSCL_YR_BEG_DTE                                  10470000
104800               , FSCL_YR_END_DTE                                  10480000
104900           INTO :DTATTR-FSCL-YR-BEG-DTE                           10490000
105000               ,:DTATTR-FSCL-YR-END-DTE                           10500000
105100           FROM  TDTATTR                                          10510000
105200          WHERE  KY_DTE = :PV-LY-SAME-FISCAL-DATE                 10520000
105300                                                                  10530000
105400       WITH UR                                                    10540000
105500     END-EXEC.                                                    10550000
105600                                                                  10560000
105700     EVALUATE TRUE                                                10570000
105800        WHEN SQLCODE = ZERO                                       10580000
105900           MOVE DTATTR-FSCL-YR-BEG-DTE                            10590000
106000                                      TO PV-LY-FISCAL-BEGIN-DATE  10600000
106100           MOVE DTATTR-FSCL-YR-END-DTE                            10610000
106200                                      TO PV-LY-FISCAL-END-DATE    10620000
106300                                                                  10630000
106400        WHEN OTHER                                                10640000
106500           MOVE SQLCODE                    TO PV-SQLCODE          10650000
106600           MOVE 'TDTATTR'                  TO PV-TABLE-NAME       10660000
106700           MOVE '1700-GET-LAST-YEARS-END-DATE'                    10670000
106800                                           TO PV-PARAGRAPH-NAME   10680000
106900           STRING 'LAST YEARS DATE ' PV-LY-SAME-FISCAL-DATE       10690000
107000                  ' NOT FOUND - SQLCODE= '                        10700000
107100                   PV-SQLCODE DELIMITED BY SIZE INTO              10710000
107200                   PV-OPERATION-MSG                               10720000
107300           END-STRING                                             10730000
107400           PERFORM 8000-DB2-ABEND                                 10740000
107500     END-EVALUATE.                                                10750000
107600                                                                  10760000
107700                                                                  10770000
107800******************************************************************10780000
107900* FETCH THIS YEAR'S DAILY SALES AND LOAD THEM TO THE STORE, METRO 10790000
108000* AND STATE TABLES.                                               10800000
108100******************************************************************10810000
108200 2000-PROCESS-TY-DAILY-SALES.                                     10820000
108300                                                                  10830000
108400     SET PS-NOT-END-OF-SALES         TO TRUE.                     10840000
108500                                                                  10850000
108600     PERFORM 2100-OPEN-TY-SALES-CURSOR.                           10860000
108700                                                                  10870000
108800     PERFORM 2200-FETCH-TY-SALES-CURSOR                           10880000
108900        UNTIL PS-END-OF-SALES.                                    10890000
109000                                                                  10900000
109100     PERFORM 2300-CLOSE-TY-SALES-CURSOR.                          10910000
109200                                                                  10920000
109300                                                                  10930000
109400******************************************************************10940000
109500* OPEN SALES CURSOR FOR THIS YEAR                                 10950000
109600******************************************************************10960000
109700 2100-OPEN-TY-SALES-CURSOR.                                       10970000
109800                                                                  10980000
109900     EXEC SQL                                                     10990000
110000          OPEN TY-SALES-CURSOR                                    11000000
110100     END-EXEC.                                                    11010000
110200                                                                  11020000
110300     IF SQLCODE NOT EQUAL ZERO                                    11030000
110400        MOVE SQLCODE                     TO PV-SQLCODE            11040000
110500        MOVE 'DFT_DLY_FLSH_SUM'          TO PV-TABLE-NAME         11050000
110600        MOVE '2100-OPEN-TY-SALES-CURSOR' TO PV-PARAGRAPH-NAME     11060000
110700        STRING 'ERROR ON OPEN OF SALES CURSOR - SQLCODE= '        11070000
110800                PV-SQLCODE DELIMITED BY SIZE INTO                 11080000
110900                PV-OPERATION-MSG                                  11090000
111000        END-STRING                                                11100000
111100        PERFORM 8000-DB2-ABEND                                    11110000
111200     END-IF.                                                      11120000
111300                                                                  11130000
111400                                                                  11140000
111500******************************************************************11150000
111600* FETCH SALES CURSOR FOR THIS YEAR.                               11160000
111700******************************************************************11170000
111800 2200-FETCH-TY-SALES-CURSOR.                                      11180000
111900                                                                  11190000
112000     EXEC SQL                                                     11200000
112100         FETCH TY-SALES-CURSOR                                    11210000
112200          INTO :DFT00000-STR-NBR                                  11220000
112300             , :XST00001-OPN-DTE                                  11230000
112400             , :DFT00000-DLY-DOL-AMT                              11240000
112500             , :DFT00000-MTD-DOL-AMT                              11250000
112600             , :DFT00000-YTD-DOL-AMT                              11260000
112700     END-EXEC.                                                    11270000
112800                                                                  11280000
112900     EVALUATE TRUE                                                11290000
113000        WHEN SQLCODE = ZERO                                       11300000
WEEK53           IF PS-IN-WEEK-53                                       11301005
WEEK53               PERFORM 2210-GET-WEEK-53-MTD-YTD-COMP              11301105
WEEK53           END-IF                                                 11301208
                                                                        11302005
113100**         IF THE STORE OPENED DURING THE CURRENT FISCAL YEAR,    11310000
113200**         THEN A CHECK IS REQUIRED TO SEE IF IT REPLACED ANOTHER 11320000
113300**         STORE.  IF IT DID, THEN THE 2 STORES DLY, MTD AND YTD  11330022
113400**         THIS YEAR SALES FIGURES MUST BE ADDED TOGETHER.        11340017
WEEK53**         THIS SHOULD HANDLE THE OPENING OF A STORE IN WEEK 53.  11341005
REPL53           IF  XST00001-OPN-DTE >= PV-TY-FISCAL-BEGIN-DATE        11350017
113600               MOVE DFT00000-DLY-DOL-AMT TO PV-SAVE-DLY-DOL-AMT   11360000
113700               MOVE DFT00000-MTD-DOL-AMT TO PV-SAVE-MTD-DOL-AMT   11370000
113800               MOVE DFT00000-YTD-DOL-AMT TO PV-SAVE-YTD-DOL-AMT   11380000
WEEK53               MOVE PV-53-WEEK-COMP-MTD-DOL-AMT                   11381005
WEEK53                                 TO PV-SAVE-53-WEEK-COMP-MTD-DOL  11381105
WEEK53               MOVE PV-53-WEEK-COMP-YTD-DOL-AMT                   11382005
WEEK53                                 TO PV-SAVE-53-WEEK-COMP-YTD-DOL  11384005
113900               MOVE ZEROES       TO DFT00000-DLY-DOL-AMT          11390005
114000                                    DFT00000-MTD-DOL-AMT          11400005
114100                                    DFT00000-YTD-DOL-AMT          11410005
WEEK53                                    PV-53-WEEK-COMP-MTD-DOL-AMT   11411005
WEEK53                                    PV-53-WEEK-COMP-YTD-DOL-AMT   11412005
114200               PERFORM 2500-CHECK-FOR-REPLACED-STORE              11420000
114300               ADD PV-SAVE-DLY-DOL-AMT   TO DFT00000-DLY-DOL-AMT  11430000
114400               ADD PV-SAVE-MTD-DOL-AMT   TO DFT00000-MTD-DOL-AMT  11440000
114500               ADD PV-SAVE-YTD-DOL-AMT   TO DFT00000-YTD-DOL-AMT  11450000
WEEK53               ADD PV-SAVE-53-WEEK-COMP-MTD-DOL                   11452005
WEEK53                                 TO PV-53-WEEK-COMP-MTD-DOL-AMT   11452105
WEEK53               ADD PV-SAVE-53-WEEK-COMP-YTD-DOL                   11454005
WEEK53                                 TO PV-53-WEEK-COMP-YTD-DOL-AMT   11455005
REPL53           END-IF                                                 11456217
REPL53           PERFORM 6000-ADD-TO-THIS-YEARS-SALES                   11456317
REPL53                                                                  11456517
REPL53**         IF STORE OPENED THIS YEAR OR LAST YEAR, CHECK IF IT    11456617
REPL53**         REPLACED ANOTHER STORE.  IF IT DID, GET THE LAST YEAR  11456717
REPL53**         TOTALS FOR THE REPLACED STORE SO THAT THEY CAN BE      11456817
REPL53**         ADDED TO THE CURRENT STORE'S TOTALS, WHICH WILL BE     11456917
REPL53**         FETCHED IN THE LAST YEAR SALES AND TOTAL CURSORS.      11457017
REPL53           IF  XST00001-OPN-DTE >= PV-LY-FISCAL-BEGIN-DATE        11457117
REPL53**         AND XST00001-OPN-DTE  < PV-TY-FISCAL-BEGIN-DATE        11458017
REPL53               MOVE DFT00000-STR-NBR TO DFT00002-STR-NBR          11459017
REPL53               PERFORM 3500-CHECK-FOR-REPLACED-STORE              11459117
REPL53           END-IF                                                 11460017
114800                                                                  11480000
114900        WHEN SQLCODE = PC-ROW-NOT-FOUND                           11490000
REPL53        WHEN SQLCODE = PC-NULL-RETURNED                           11491015
115000           SET PS-END-OF-SALES TO TRUE                            11500000
115100                                                                  11510000
115200        WHEN OTHER                                                11520000
115300           MOVE SQLCODE                      TO PV-SQLCODE        11530000
115400           MOVE 'DFT_DLY_FLSH_SUM'           TO PV-TABLE-NAME     11540000
115500           MOVE '2200-FETCH-TY-SALES-CURSOR' TO PV-PARAGRAPH-NAME 11550000
115600           STRING 'ERROR ON FETCH OF SALES CURSOR - SQLCODE= '    11560000
115700                   PV-SQLCODE DELIMITED BY SIZE INTO              11570000
115800                   PV-OPERATION-MSG                               11580000
115900           END-STRING                                             11590000
116000           PERFORM 8000-DB2-ABEND                                 11600000
116100     END-EVALUATE.                                                11610000
116200                                                                  11620000
111400                                                                  11621005
WEEK53******************************************************************11622005
WEEK53* GET THE MTD AND YTD SALES AT THE END OF WEEK 52, WHICH WILL BE  11623005
WEEK53* USED FOR COMP STORE COMPARISONS DURING WEEK 53.                 11623105
WEEK53******************************************************************11624005
WEEK53 2210-GET-WEEK-53-MTD-YTD-COMP.                                   11625005
WEEK53                                                                  11626005
WEEK53     EXEC SQL                                                     11631005
WEEK53         SELECT  SUM(MTD_DOL_AMT)                                 11631105
WEEK53               , SUM(YTD_DOL_AMT)                                 11631205
WEEK53           INTO :PV-53-WEEK-COMP-MTD-DOL-AMT                      11631305
WEEK53              , :PV-53-WEEK-COMP-YTD-DOL-AMT                      11631405
WEEK53           FROM  DFT_DLY_FLSH_SUM                                 11631505
WEEK53          WHERE  STR_NBR         = :DFT00000-STR-NBR              11631605
WEEK53            AND  SLS_DTE         = :PV-53-WEEK-TY-COMP-DATE       11631705
WEEK53       WITH UR                                                    11631805
WEEK53     END-EXEC.                                                    11631905
WEEK53                                                                  11632005
WEEK53     EVALUATE TRUE                                                11632405
WEEK53        WHEN SQLCODE = ZERO                                       11632505
WEEK53           CONTINUE                                               11633105
WEEK53                                                                  11634405
WEEK53        WHEN SQLCODE = PC-ROW-NOT-FOUND                           11634505
REPL53        WHEN SQLCODE = PC-NULL-RETURNED                           11634614
REPL53           MOVE ZEROES TO PV-53-WEEK-COMP-MTD-DOL-AMT             11634714
REPL53                          PV-53-WEEK-COMP-YTD-DOL-AMT             11634814
WEEK53                                                                  11634914
WEEK53        WHEN OTHER                                                11635014
WEEK53           MOVE SQLCODE                    TO PV-SQLCODE          11635114
WEEK53           MOVE 'DFT_DLY_FLSH_SUM'         TO PV-TABLE-NAME       11635214
WEEK53           MOVE '2210-GET-WEEK-53-MTD-YTD-COMP'                   11635314
WEEK53                                           TO PV-PARAGRAPH-NAME   11635414
WEEK53           MOVE DFT00000-STR-NBR           TO PV-DISPLAY-STORE    11635514
WEEK53           STRING 'STORE ' PV-DISPLAY-STORE                       11635614
WEEK53                  ' FOR DATE ' PV-53-WEEK-TY-COMP-DATE            11635714
WEEK53                  ' RECEIVED SQLCODE = '                          11635814
WEEK53                   PV-SQLCODE DELIMITED BY SIZE INTO              11635914
WEEK53                   PV-OPERATION-MSG                               11636014
WEEK53           END-STRING                                             11636114
WEEK53           PERFORM 8000-DB2-ABEND                                 11637014
WEEK53     END-EVALUATE.                                                11637205
WEEK53                                                                  11637305
WEEK53                                                                  11638005
116400******************************************************************11640000
116500* CLOSE SALES CURSOR                                              11650000
116600******************************************************************11660000
116700 2300-CLOSE-TY-SALES-CURSOR.                                      11670000
116800                                                                  11680000
116900     EXEC SQL                                                     11690000
117000          CLOSE TY-SALES-CURSOR                                   11700000
117100     END-EXEC.                                                    11710000
117200                                                                  11720000
117300     IF SQLCODE NOT EQUAL ZERO                                    11730000
117400        MOVE SQLCODE                      TO PV-SQLCODE           11740000
117500        MOVE 'DFT_DLY_FLSH_SUM'           TO PV-TABLE-NAME        11750000
117600        MOVE '2300-CLOSE-TY-SALES-CURSOR' TO PV-PARAGRAPH-NAME    11760000
117700        STRING 'ERROR ON CLOSE OF SALES CURSOR - SQLCODE= '       11770000
117800                PV-SQLCODE DELIMITED BY SIZE INTO                 11780000
117900                PV-OPERATION-MSG                                  11790000
118000        END-STRING                                                11800000
118100        PERFORM 8000-DB2-ABEND                                    11810000
118200     END-IF.                                                      11820000
118300                                                                  11830000
118400                                                                  11840000
118500******************************************************************11850000
118600* IF A STORE OPENED DURING THE CURRENT FISCAL YEAR, CHECK TO SEE  11860000
118700* IF IT REPLACED A DIFFERENT STORE.                               11870000
118800* IF IT DID, GET THE REPLACED STORE'S SALES FOR THE CURRENT YEAR. 11880000
118900******************************************************************11890000
119000 2500-CHECK-FOR-REPLACED-STORE.                                   11900000
119100                                                                  11910000
119200     EXEC SQL                                                     11920000
119300         SELECT  LOC_NBR                                          11930000
119400           INTO :XST00001-LOC-NBR                                 11940000
119500           FROM  XST_LOC                                          11950000
119600          WHERE  REPLT_STR_NBR  = :DFT00000-STR-NBR               11960000
119700            AND  CLO_DTE       >= :PV-TY-FISCAL-BEGIN-DATE        11970000
119800                                                                  11980000
119900       WITH UR                                                    11990000
120000     END-EXEC.                                                    12000000
120100                                                                  12010000
120200     EVALUATE TRUE                                                12020000
120300        WHEN SQLCODE = ZERO                                       12030000
120400           PERFORM 2600-GET-REPLACED-STORE-SALES                  12040000
120500                                                                  12050000
120600        WHEN SQLCODE = PC-ROW-NOT-FOUND                           12060000
120700           CONTINUE                                               12070000
120800                                                                  12080000
120900        WHEN OTHER                                                12090000
121000           MOVE SQLCODE                    TO PV-SQLCODE          12100000
121100           MOVE 'XST_LOC'                  TO PV-TABLE-NAME       12110000
121200           MOVE '2500-CHECK-FOR-REPLACED-STORE'                   12120000
121300                                           TO PV-PARAGRAPH-NAME   12130000
121400           MOVE DFT00002-STR-NBR           TO PV-DISPLAY-STORE    12140000
121500           STRING 'STORE ' PV-DISPLAY-STORE                       12150000
121600                  ' SINCE DATE ' PV-TY-FISCAL-BEGIN-DATE          12160000
121700                  ' RECEIVED SQLCODE = '                          12170000
121800                   PV-SQLCODE DELIMITED BY SIZE INTO              12180000
121900                   PV-OPERATION-MSG                               12190000
122000           END-STRING                                             12200000
122100           PERFORM 8000-DB2-ABEND                                 12210000
122200     END-EVALUATE.                                                12220000
122300                                                                  12230000
122400                                                                  12240000
122500******************************************************************12250000
122600* A STORE WAS REPLACED BY ANOTHER.                                12260000
122700* GET THE REPLACED STORE'S SALES FOR THIS YEAR TO REPORT UNDER    12270000
122800* THE NEW STORE.                                                  12280000
122900******************************************************************12290000
123000 2600-GET-REPLACED-STORE-SALES.                                   12300000
123100                                                                  12310000
123200     EXEC SQL                                                     12320000
123300         SELECT  SUM(DLY_DOL_AMT)                                 12330000
123400               , SUM(MTD_DOL_AMT)                                 12340000
123500               , SUM(YTD_DOL_AMT)                                 12350000
123600           INTO :DFT00000-DLY-DOL-AMT                             12360000
123700              , :DFT00000-MTD-DOL-AMT                             12370000
123800              , :DFT00000-YTD-DOL-AMT                             12380000
123900           FROM  DFT_DLY_FLSH_SUM                                 12390000
124000          WHERE  STR_NBR         = :XST00001-LOC-NBR              12400000
124100            AND  SLS_DTE         = :PV-RUN-DATE-CCYY-MM-DD        12410000
124200       WITH UR                                                    12420000
124300     END-EXEC.                                                    12430000
124400                                                                  12440000
124500     EVALUATE TRUE                                                12450000
124600        WHEN SQLCODE = ZERO                                       12450105
124700           DISPLAY 'PAR 2600- FOUND REPLACEMENT FOR '             12450205
124800                   'STORE ' XST00001-LOC-NBR                      12450305
WEEK53           IF PS-IN-WEEK-53                                       12451005
WEEK53               PERFORM 2610-GET-WEEK-53-MTD-YTD-COMP              12452005
WEEK53           ELSE                                                   12452105
WEEK53               MOVE ZEROES TO PV-53-WEEK-COMP-MTD-DOL-AMT         12452205
WEEK53                              PV-53-WEEK-COMP-YTD-DOL-AMT         12452305
WEEK53           END-IF                                                 12453009
124900**         THE REPLACED STORE TOTALS WILL NOW BE ADDED TO THE     12490000
125000**         NEW STORE'S "THIS YEAR" TOTALS BY PARA 2200-.          12500000
125200                                                                  12520000
125300        WHEN SQLCODE = PC-ROW-NOT-FOUND                           12530000
REPL53        WHEN SQLCODE = PC-NULL-RETURNED                           12531015
125400**         THE NEW STORE'S "THIS YEAR" TOTALS WILL BE USED        12540000
125500           MOVE ZEROES TO DFT00000-DLY-DOL-AMT                    12550000
125600                          DFT00000-MTD-DOL-AMT                    12560000
125700                          DFT00000-YTD-DOL-AMT                    12570000
WEEK53                          PV-53-WEEK-COMP-MTD-DOL-AMT             12571005
WEEK53                          PV-53-WEEK-COMP-YTD-DOL-AMT             12572005
125800                                                                  12580000
125900        WHEN OTHER                                                12590000
126000           MOVE SQLCODE                    TO PV-SQLCODE          12600000
126100           MOVE 'DFT_DLY_FLSH_SUM'         TO PV-TABLE-NAME       12610005
126200           MOVE '2600-GET-REPLACED-STORE-SALES'                   12620000
126300                                           TO PV-PARAGRAPH-NAME   12630000
126400           MOVE XST00001-LOC-NBR           TO PV-DISPLAY-STORE    12640000
126500           STRING 'STORE ' PV-DISPLAY-STORE                       12650000
126600                  ' SINCE DATE ' PV-RUN-DATE-CCYY-MM-DD           12660000
126700                  ' RECEIVED SQLCODE = '                          12670000
126800                   PV-SQLCODE DELIMITED BY SIZE INTO              12680000
126900                   PV-OPERATION-MSG                               12690000
127000           END-STRING                                             12700000
127100           PERFORM 8000-DB2-ABEND                                 12710000
127200     END-EVALUATE.                                                12720000
127300                                                                  12730000
127300                                                                  12730105
WEEK53******************************************************************12731005
WEEK53* A STORE WAS REPLACED BY ANOTHER AND WE ARE IN WEEK 53.          12732005
WEEK53* THIS PARAGRAPH IS REQUIRED IN CASE THE ORIGINAL STORE           12732105
WEEK53* CLOSED DURING WEEK 53 - COMP SALES STOP AT THE END OF WEEK 52.  12732205
WEEK53* GET THE REPLACED STORE'S SALES FOR THIS YEAR TO REPORT UNDER    12733005
WEEK53* THE NEW STORE AS OF THE END OF WEEK 52 FOR COMP REPORTING.      12734005
WEEK53******************************************************************12735005
WEEK53 2610-GET-WEEK-53-MTD-YTD-COMP.                                   12736005
WEEK53                                                                  12737005
WEEK53     EXEC SQL                                                     12738005
WEEK53         SELECT  SUM(MTD_DOL_AMT)                                 12739105
WEEK53               , SUM(YTD_DOL_AMT)                                 12739205
WEEK53           INTO :PV-53-WEEK-COMP-MTD-DOL-AMT                      12739405
WEEK53              , :PV-53-WEEK-COMP-YTD-DOL-AMT                      12739505
WEEK53           FROM  DFT_DLY_FLSH_SUM                                 12739605
WEEK53          WHERE  STR_NBR         = :XST00001-LOC-NBR              12739705
WEEK53            AND  SLS_DTE         = :PV-53-WEEK-TY-COMP-DATE       12739805
WEEK53       WITH UR                                                    12739905
WEEK53     END-EXEC.                                                    12740005
WEEK53                                                                  12740105
WEEK53     EVALUATE TRUE                                                12740205
WEEK53        WHEN SQLCODE = ZERO                                       12740305
WEEK53**         THE REPLACED STORE TOTALS WILL NOW BE ADDED TO THE     12740905
WEEK53**         NEW STORE'S "THIS YEAR" TOTALS BY PARA 2200-.          12741005
WEEK53           CONTINUE                                               12741105
WEEK53                                                                  12741205
WEEK53        WHEN SQLCODE = PC-ROW-NOT-FOUND                           12741305
REPL53        WHEN SQLCODE = PC-NULL-RETURNED                           12741415
WEEK53**         THE NEW STORE'S "THIS YEAR" TOTALS WILL BE USED        12741505
WEEK53           MOVE ZEROES TO PV-53-WEEK-COMP-MTD-DOL-AMT             12741805
WEEK53                          PV-53-WEEK-COMP-YTD-DOL-AMT             12741905
WEEK53                                                                  12742005
WEEK53        WHEN OTHER                                                12742105
WEEK53           MOVE SQLCODE                    TO PV-SQLCODE          12742205
WEEK53           MOVE 'DFT_DLY_FLSH_SUM'         TO PV-TABLE-NAME       12742305
WEEK53           MOVE '2610-GET-WEEK-53-MTD-YTD-COMP'                   12742405
WEEK53                                           TO PV-PARAGRAPH-NAME   12742505
WEEK53           MOVE XST00001-LOC-NBR           TO PV-DISPLAY-STORE    12742605
WEEK53           STRING 'STORE ' PV-DISPLAY-STORE                       12742705
WEEK53                  ' SINCE DATE ' PV-53-WEEK-TY-COMP-DATE          12742805
WEEK53                  ' RECEIVED SQLCODE = '                          12742905
WEEK53                   PV-SQLCODE DELIMITED BY SIZE INTO              12743005
WEEK53                   PV-OPERATION-MSG                               12743105
WEEK53           END-STRING                                             12743205
WEEK53           PERFORM 8000-DB2-ABEND                                 12743305
WEEK53     END-EVALUATE.                                                12743405
WEEK53                                                                  12743505
127400                                                                  12744000
127500******************************************************************12750000
127600* FETCH LAST YEAR'S DAILY SALES AND LOAD THEM TO THE STORE, METRO 12760000
127700* AND STATE TABLES.                                               12770000
127800******************************************************************12780000
127900 3000-PROCESS-LY-DAILY-SALES.                                     12790000
128000                                                                  12800000
128100     SET PS-NOT-END-OF-SALES         TO TRUE.                     12810000
128200                                                                  12820000
128300     PERFORM 3100-OPEN-LY-SALES-CURSOR.                           12830000
128400                                                                  12840000
128500     PERFORM 3200-FETCH-LY-SALES-CURSOR                           12850000
128600        UNTIL PS-END-OF-SALES.                                    12860000
128700                                                                  12870000
128800     PERFORM 3300-CLOSE-LY-SALES-CURSOR.                          12880000
128900                                                                  12890000
129000                                                                  12900000
129100******************************************************************12910000
129200* OPEN SALES CURSOR FOR LAST YEAR                                 12920000
129300******************************************************************12930000
129400 3100-OPEN-LY-SALES-CURSOR.                                       12940000
129500                                                                  12950000
129600     EXEC SQL                                                     12960000
129700          OPEN LY-SALES-CURSOR                                    12970000
129800     END-EXEC.                                                    12980000
129900                                                                  12990000
130000     IF SQLCODE NOT EQUAL ZERO                                    13000000
130100        MOVE SQLCODE                     TO PV-SQLCODE            13010000
130200        MOVE 'DFT_ML_FINCL_SUM'          TO PV-TABLE-NAME         13020000
130300        MOVE '3100-OPEN-LY-SALES-CURSOR' TO PV-PARAGRAPH-NAME     13030000
130400        STRING 'ERROR ON OPEN OF SALES CURSOR - SQLCODE= '        13040000
130500                PV-SQLCODE DELIMITED BY SIZE INTO                 13050000
130600                PV-OPERATION-MSG                                  13060000
130700        END-STRING                                                13070000
130800        PERFORM 8000-DB2-ABEND                                    13080000
130900     END-IF.                                                      13090000
131000                                                                  13100000
131100                                                                  13110000
131200******************************************************************13120000
131300* FETCH SALES CURSOR FOR LAST YEAR.                               13130000
131400******************************************************************13140000
131500 3200-FETCH-LY-SALES-CURSOR.                                      13150000
131600                                                                  13160000
131700     EXEC SQL                                                     13170000
131800         FETCH LY-SALES-CURSOR                                    13180000
131900          INTO :DFT00002-STR-NBR                                  13190000
132000             , :XST00001-OPN-DTE                                  13200000
132100             , :DFT00002-DLY-DOL-AMT                              13210000
132200             , :DFT00002-MTD-DOL-AMT                              13220000
132300             , :DFT00002-YTD-DOL-AMT                              13230000
132400     END-EXEC.                                                    13240000
132500                                                                  13250000
132600     EVALUATE TRUE                                                13260000
132700        WHEN SQLCODE = ZERO                                       13270000
132800**         IF THE STORE OPENED DURING THE LAST FISCAL YEAR, THEN  13280000
132900**         A CHECK IS REQUIRED TO SEE IF IT REPLACED ANOTHER      13290000
133000**         STORE.  IF IT DID, THEN THE 2 STORES DLY, MTD AND YTD  13300000
133100**         SALES FIGURES MUST BE ADDED TOGETHER.                  13310000
REPL53***   REPLACED STORES WILL BE HANDLED FROM PARA 2200-             13320017
REPL53***        IF  XST00001-OPN-DTE >= PV-LY-FISCAL-BEGIN-DATE        13321017
REPL53***        AND XST00001-OPN-DTE  < PV-TY-FISCAL-BEGIN-DATE        13330017
REPL53**             MOVE DFT00002-DLY-DOL-AMT   TO PV-SAVE-DLY-DOL-AMT 13340017
REPL53**             MOVE DFT00002-MTD-DOL-AMT   TO PV-SAVE-MTD-DOL-AMT 13350017
REPL53**             MOVE DFT00002-YTD-DOL-AMT TO PV-SAVE-YTD-DOL-AMT   13360017
REPL53**             MOVE ZEROES              TO DFT00002-DLY-DOL-AMT   13370017
REPL53**                                         DFT00002-MTD-DOL-AMT   13380017
REPL53**                                         DFT00002-YTD-DOL-AMT   13390017
REPL53**             PERFORM 3500-CHECK-FOR-REPLACED-STORE              13400017
REPL53**             ADD PV-SAVE-DLY-DOL-AMT  TO DFT00002-DLY-DOL-AMT   13410017
REPL53**             ADD PV-SAVE-MTD-DOL-AMT  TO DFT00002-MTD-DOL-AMT   13420017
REPL53**             ADD PV-SAVE-YTD-DOL-AMT  TO DFT00002-YTD-DOL-AMT   13430017
REPL53**         END-IF                                                 13440017
134500           PERFORM 6100-ADD-TO-LAST-YEARS-SALES                   13450000
134600                                                                  13460000
134700        WHEN SQLCODE = PC-ROW-NOT-FOUND                           13470000
134800           SET PS-END-OF-SALES TO TRUE                            13480000
134900                                                                  13490000
135000        WHEN OTHER                                                13500000
135100           MOVE SQLCODE                      TO PV-SQLCODE        13510000
135200           MOVE 'DFT_ML_FINCL_SUM'           TO PV-TABLE-NAME     13520000
135300           MOVE '3200-FETCH-LY-SALES-CURSOR' TO PV-PARAGRAPH-NAME 13530000
135400           STRING 'ERROR ON FETCH OF SALES CURSOR - SQLCODE= '    13540000
135500                   PV-SQLCODE DELIMITED BY SIZE INTO              13550000
135600                   PV-OPERATION-MSG                               13560000
135700           END-STRING                                             13570000
135800           PERFORM 8000-DB2-ABEND                                 13580000
135900     END-EVALUATE.                                                13590000
136000                                                                  13600000
136100                                                                  13610000
136200******************************************************************13620000
136300* CLOSE SALES CURSOR FOR LAST YEAR                                13630000
136400******************************************************************13640000
136500 3300-CLOSE-LY-SALES-CURSOR.                                      13650000
136600                                                                  13660000
136700     EXEC SQL                                                     13670000
136800          CLOSE LY-SALES-CURSOR                                   13680000
136900     END-EXEC.                                                    13690000
137000                                                                  13700000
137100     IF SQLCODE NOT EQUAL ZERO                                    13710000
137200        MOVE SQLCODE                      TO PV-SQLCODE           13720000
137300        MOVE 'DFT_ML_FINCL_SUM'           TO PV-TABLE-NAME        13730000
137400        MOVE '3300-CLOSE-LY-SALES-CURSOR' TO PV-PARAGRAPH-NAME    13740000
137500        STRING 'ERROR ON CLOSE OF SALES CURSOR - SQLCODE= '       13750000
137600                PV-SQLCODE DELIMITED BY SIZE INTO                 13760000
137700                PV-OPERATION-MSG                                  13770000
137800        END-STRING                                                13780000
137900        PERFORM 8000-DB2-ABEND                                    13790000
138000     END-IF.                                                      13800000
138100                                                                  13810000
138200                                                                  13820000
138300******************************************************************13830000
138400* IF A STORE OPENED DURING THE LAST FISCAL YEAR, CHECK TO SEE IF  13840000
138500* IT REPLACED A DIFFERENT STORE.                                  13850000
138600* IF IT DID, GET THE REPLACED STORE'S SALES FROM LAST YEAR.       13860000
138700******************************************************************13870000
138800 3500-CHECK-FOR-REPLACED-STORE.                                   13880000
138900                                                                  13890000
139000     EXEC SQL                                                     13900000
139100         SELECT  LOC_NBR                                          13910000
139200           INTO :XST00001-LOC-NBR                                 13920000
139300           FROM  XST_LOC                                          13930000
139400          WHERE  REPLT_STR_NBR  = :DFT00002-STR-NBR               13940000
139500            AND  CLO_DTE       >= :PV-LY-FISCAL-BEGIN-DATE        13950000
139600                                                                  13960000
139700       WITH UR                                                    13970000
139800     END-EXEC.                                                    13980000
139900                                                                  13990000
140000     EVALUATE TRUE                                                14000000
140100        WHEN SQLCODE = ZERO                                       14010000
140200           PERFORM 3600-GET-REPLACED-STORE-SALES                  14020000
REPL53           PERFORM 6100-ADD-TO-LAST-YEARS-SALES                   14020119
159400           PERFORM 4600-GET-REPLACED-STORE-TOTAL                  14021019
REPL53           PERFORM 6200-ADD-TO-LAST-YEARS-TOTALS                  14022019
140300                                                                  14030000
140400        WHEN SQLCODE = PC-ROW-NOT-FOUND                           14040000
140500           CONTINUE                                               14050000
140600                                                                  14060000
140700        WHEN OTHER                                                14070000
140800           MOVE SQLCODE                    TO PV-SQLCODE          14080000
140900           MOVE 'XST_LOC'                  TO PV-TABLE-NAME       14090000
141000           MOVE '3500-CHECK-FOR-REPLACED-STORE'                   14100000
141100                                           TO PV-PARAGRAPH-NAME   14110000
141200           MOVE DFT00002-STR-NBR           TO PV-DISPLAY-STORE    14120000
141300           STRING 'STORE ' PV-DISPLAY-STORE                       14130000
141400                  ' SINCE DATE ' PV-LY-FISCAL-BEGIN-DATE          14140000
141500                  ' RECEIVED SQLCODE = '                          14150000
141600                   PV-SQLCODE DELIMITED BY SIZE INTO              14160000
141700                   PV-OPERATION-MSG                               14170000
141800           END-STRING                                             14180000
141900           PERFORM 8000-DB2-ABEND                                 14190000
142000     END-EVALUATE.                                                14200000
142100                                                                  14210000
142200                                                                  14220000
142300******************************************************************14230000
142400* A STORE WAS REPLACED BY ANOTHER.                                14240000
142500* GET THE REPLACED STORE'S SALES FROM LAST YEAR TO REPORT UNDER   14250000
142600* THE NEW STORE.                                                  14260000
142700******************************************************************14270000
142800 3600-GET-REPLACED-STORE-SALES.                                   14280000
142900                                                                  14290000
143000     EXEC SQL                                                     14300000
143100         SELECT  SUM(DLY_DOL_AMT)                                 14310000
143200               , SUM(MTD_DOL_AMT)                                 14320000
143300               , SUM(YTD_DOL_AMT)                                 14330000
143400           INTO :DFT00002-DLY-DOL-AMT                             14340000
143500              , :DFT00002-MTD-DOL-AMT                             14350000
143600              , :DFT00002-YTD-DOL-AMT                             14360000
143700           FROM  DFT_ML_FINCL_SUM                                 14370000
143800          WHERE  STR_NBR         = :XST00001-LOC-NBR              14380000
143900            AND  SLS_DTE         = :PV-LY-SAME-FISCAL-DATE        14390000
144000       WITH UR                                                    14400000
144100     END-EXEC.                                                    14410000
144200                                                                  14420000
144300     EVALUATE TRUE                                                14430000
144400        WHEN SQLCODE = ZERO                                       14440000
144500           DISPLAY 'PAR 3600- FOUND REPLACEMENT FOR '             14450000
144600                   'STORE ' XST00001-LOC-NBR                      14460000
144700**         THE REPLACED STORE TOTALS WILL NOW BE ADDED TO THE     14470000
REPL53**         NEW STORE'S "LAST YEAR" BUCKETS BY PARA 2200-.         14480017
145000                                                                  14500000
145100        WHEN SQLCODE = PC-ROW-NOT-FOUND                           14510000
REPL53        WHEN SQLCODE = PC-NULL-RETURNED                           14511015
145200**         THE NEW STORE'S "LAST YEAR" TOTALS WILL BE USED        14520000
145300           MOVE ZEROES        TO DFT00002-DLY-DOL-AMT             14530000
145400                                 DFT00002-MTD-DOL-AMT             14540000
145500                                 DFT00002-YTD-DOL-AMT             14550000
145600                                                                  14560000
145700        WHEN OTHER                                                14570000
145800           MOVE SQLCODE                    TO PV-SQLCODE          14580000
145900           MOVE 'DFT_ML_FINCL_SUM'         TO PV-TABLE-NAME       14590000
146000           MOVE '3600-GET-REPLACED-STORE-SALES'                   14600000
146100                                           TO PV-PARAGRAPH-NAME   14610000
146200           MOVE XST00001-LOC-NBR           TO PV-DISPLAY-STORE    14620000
146300           STRING 'STORE ' PV-DISPLAY-STORE                       14630000
146400                  ' SINCE DATE ' PV-LY-SAME-FISCAL-DATE           14640000
146500                  ' RECEIVED SQLCODE = '                          14650000
146600                   PV-SQLCODE DELIMITED BY SIZE INTO              14660000
146700                   PV-OPERATION-MSG                               14670000
146800           END-STRING                                             14680000
146900           PERFORM 8000-DB2-ABEND                                 14690000
147000     END-EVALUATE.                                                14700000
147100                                                                  14710000
147200                                                                  14720000
147300******************************************************************14730000
147400* FETCH ALL OF LAST YEAR'S TOTAL SALES AND LOAD THEM INTO THE     14740000
147500* STORE, METRO AND STATE TABLES TO BE SORTED ON.                  14750000
147600******************************************************************14760000
147700 4000-PROCESS-LY-TOTAL-SALES.                                     14770000
147800                                                                  14780000
147900     SET PS-NOT-END-OF-SALES-TOTALS  TO TRUE.                     14790000
148000                                                                  14800000
148100     PERFORM 4100-OPEN-SALES-TOTAL-CURSOR.                        14810000
148200                                                                  14820000
148300     PERFORM 4200-FETCH-SALES-TOTAL-CURSOR                        14830000
148400        UNTIL PS-END-OF-SALES-TOTALS.                             14840000
148500                                                                  14850000
148600     PERFORM 4300-CLOSE-SALES-TOTAL-CURSOR.                       14860000
148700                                                                  14870000
148800                                                                  14880000
148900******************************************************************14890000
149000* OPEN SALES TOTAL CURSOR                                         14900000
149100******************************************************************14910000
149200 4100-OPEN-SALES-TOTAL-CURSOR.                                    14920000
149300                                                                  14930000
149400     EXEC SQL                                                     14940000
149500          OPEN SALES-TOTAL-CURSOR                                 14950000
149600     END-EXEC.                                                    14960000
149700                                                                  14970000
149800     IF SQLCODE NOT EQUAL ZERO                                    14980000
149900        MOVE SQLCODE                  TO PV-SQLCODE               14990000
150000        MOVE 'DFT_ML_FINCL_SUM'       TO PV-TABLE-NAME            15000000
150100        MOVE '4100-OPEN-SALES-TOTAL-CURSOR' TO PV-PARAGRAPH-NAME  15010000
150200        STRING 'ERROR ON OPEN OF SALES TOTAL CURSOR - SQLCODE= '  15020000
150300                PV-SQLCODE DELIMITED BY SIZE INTO                 15030000
150400                PV-OPERATION-MSG                                  15040000
150500        END-STRING                                                15050000
150600        PERFORM 8000-DB2-ABEND                                    15060000
150700     END-IF.                                                      15070000
150800                                                                  15080000
150900                                                                  15090000
151000******************************************************************15100000
151100* FETCH SALES TOTAL CURSOR                                        15110000
151200******************************************************************15120000
151300 4200-FETCH-SALES-TOTAL-CURSOR.                                   15130000
151400                                                                  15140000
151500     EXEC SQL                                                     15150000
151600         FETCH SALES-TOTAL-CURSOR                                 15160000
151700          INTO :DFT00002-STR-NBR                                  15170000
151800             , :XST00001-OPN-DTE                                  15180000
151900             , :DFT00002-YTD-DOL-AMT                              15190000
152000     END-EXEC.                                                    15200000
152100                                                                  15210000
152200     EVALUATE TRUE                                                15220000
152300        WHEN SQLCODE = ZERO                                       15230000
152400**         IF THE STORE OPENED DURING THE LAST FISCAL YEAR, THEN  15240000
152500**         A CHECK IS REQUIRED TO SEE IF IT REPLACED ANOTHER      15250000
152600**         STORE.  IF IT DID, THEN THE 2 STORES YTD SALES FIGURES 15260000
152700**         MUST BE ADDED TOGETHER.                                15270000
REPL53***   REPLACED STORES WILL BE HANDLED FROM PARA 2200-             15271017
REPL53***        IF  XST00001-OPN-DTE >= PV-LY-FISCAL-BEGIN-DATE        15280017
REPL53***        AND XST00001-OPN-DTE  < PV-TY-FISCAL-BEGIN-DATE        15290017
153000**             MOVE DFT00002-YTD-DOL-AMT TO PV-SAVE-YTD-DOL-AMT   15300017
153100**             MOVE ZEROES               TO DFT00002-YTD-DOL-AMT  15310017
153200**             PERFORM 4500-CHECK-FOR-REPLACED-STORE              15320017
153300**             ADD PV-SAVE-YTD-DOL-AMT   TO DFT00002-YTD-DOL-AMT  15330017
153400**         END-IF                                                 15340017
153500           PERFORM 6200-ADD-TO-LAST-YEARS-TOTALS                  15350000
153600                                                                  15360000
153700        WHEN SQLCODE = PC-ROW-NOT-FOUND                           15370000
153800           SET PS-END-OF-SALES-TOTALS TO TRUE                     15380000
153900                                                                  15390000
154000        WHEN OTHER                                                15400000
154100           MOVE SQLCODE                   TO PV-SQLCODE           15410000
154200           MOVE 'DFT_ML_FINCL_SUM'        TO PV-TABLE-NAME        15420000
154300           MOVE '4200-FETCH-SALES-TOTAL-CURSOR'                   15430000
154400                                          TO PV-PARAGRAPH-NAME    15440000
154500           STRING 'ERROR ON FETCH OF SALES TOTAL CURSOR - '       15450000
154600                  'SQLCODE= ' PV-SQLCODE                          15460000
154700               DELIMITED BY SIZE INTO PV-OPERATION-MSG            15470000
154800           END-STRING                                             15480000
154900           PERFORM 8000-DB2-ABEND                                 15490000
155000     END-EVALUATE.                                                15500000
155100                                                                  15510000
155200                                                                  15520000
155300******************************************************************15530000
155400* CLOSE SALES TOTAL CURSOR                                        15540000
155500******************************************************************15550000
155600 4300-CLOSE-SALES-TOTAL-CURSOR.                                   15560000
155700                                                                  15570000
155800     EXEC SQL                                                     15580000
155900          CLOSE SALES-TOTAL-CURSOR                                15590000
156000     END-EXEC.                                                    15600000
156100                                                                  15610000
156200     IF SQLCODE NOT EQUAL ZERO                                    15620000
156300        MOVE SQLCODE                   TO PV-SQLCODE              15630000
156400        MOVE 'DFT_ML_FINCL_SUM'        TO PV-TABLE-NAME           15640000
156500        MOVE '4300-CLOSE-SALES-TOTAL-CURSOR' TO PV-PARAGRAPH-NAME 15650000
156600        STRING 'ERROR ON CLOSE OF SALES TOTAL CURSOR - SQLCODE= ' 15660000
156700                PV-SQLCODE DELIMITED BY SIZE INTO                 15670000
156800                PV-OPERATION-MSG                                  15680000
156900        END-STRING                                                15690000
157000        PERFORM 8000-DB2-ABEND                                    15700000
157100     END-IF.                                                      15710000
157200                                                                  15720000
157300                                                                  15730000
157400******************************************************************15740000
REPL53* IF A STORE WAS OPENED DURING THE PREVIOUS YEAR'S FISCAL YEAR,   15750019
REPL53* CHECK TO SEE IF IT REPLACED A DIFFERENT STORE.                  15760019
REPL53* IF IT DID, GET THE REPLACED STORE'S TOTAL SALES FROM LAST YEAR. 15770019
REPL53* THEY NEED TO BE ADDED TO THE NEW STORE'S TOTAL SALES.           15780019
REPL53******************************************************************15790019
REPL53*4500-CHECK-FOR-REPLACED-STORE.                                   15800019
REPL53*                                                                 15810019
REPL53*    EXEC SQL                                                     15820019
REPL53*        SELECT  LOC_NBR                                          15830019
REPL53*          INTO :XST00001-LOC-NBR                                 15840019
REPL53*          FROM  XST_LOC                                          15850019
REPL53*         WHERE  REPLT_STR_NBR  = :DFT00002-STR-NBR               15860019
REPL53*           AND  CLO_DTE       >= :PV-LY-FISCAL-BEGIN-DATE        15870019
REPL53*      WITH UR                                                    15890019
REPL53*    END-EXEC.                                                    15900019
REPL53*                                                                 15910019
REPL53*    EVALUATE TRUE                                                15920019
REPL53*       WHEN SQLCODE = ZERO                                       15930019
REPL53*          PERFORM 4600-GET-REPLACED-STORE-TOTAL                  15940019
REPL53*                                                                 15950019
REPL53*       WHEN SQLCODE = PC-ROW-NOT-FOUND                           15960019
REPL53*          CONTINUE                                               15970019
REPL53*                                                                 15980019
REPL53*       WHEN OTHER                                                15990019
REPL53*          MOVE SQLCODE                    TO PV-SQLCODE          16000019
REPL53*          MOVE 'XST_LOC'                  TO PV-TABLE-NAME       16010019
REPL53*          MOVE '4500-CHECK-FOR-REPLACED-STORE'                   16020019
REPL53*                                          TO PV-PARAGRAPH-NAME   16030019
REPL53*          MOVE DFT00002-STR-NBR           TO PV-DISPLAY-STORE    16040019
REPL53*          STRING 'STORE ' PV-DISPLAY-STORE                       16050019
REPL53*                 ' SINCE DATE ' PV-LY-FISCAL-BEGIN-DATE          16060019
REPL53*                 ' RECEIVED SQLCODE = '                          16070019
REPL53*                  PV-SQLCODE DELIMITED BY SIZE INTO              16080019
REPL53*                  PV-OPERATION-MSG                               16090019
REPL53*          END-STRING                                             16100019
REPL53*          PERFORM 8000-DB2-ABEND                                 16110019
REPL53*    END-EVALUATE.                                                16120019
REPL53*                                                                 16130019
161400                                                                  16140000
161500******************************************************************16150000
161600* A STORE WAS REPLACED BY ANOTHER.                                16160000
161700* GET THE REPLACED STORE'S SALES TOTAL FROM LAST YEAR TO ADD      16170000
161800* TO THE NEW STORE FOR SORTING PURPOSES.                          16180000
161900******************************************************************16190000
162000 4600-GET-REPLACED-STORE-TOTAL.                                   16200000
162100                                                                  16210000
162200     EXEC SQL                                                     16220000
162300         SELECT  SUM(YTD_DOL_AMT)                                 16230000
162400           INTO :DFT00002-YTD-DOL-AMT                             16240000
162500           FROM  DFT_ML_FINCL_SUM                                 16250000
162600          WHERE  STR_NBR         = :XST00001-LOC-NBR              16260000
162700            AND  SLS_DTE         = :PV-LY-FISCAL-END-DATE         16270000
162800       WITH UR                                                    16280000
162900     END-EXEC.                                                    16290000
163000                                                                  16300000
163100     EVALUATE TRUE                                                16310000
163200        WHEN SQLCODE = ZERO                                       16320000
163300           DISPLAY 'PAR 4600- FOUND REPLACEMENT FOR '             16330000
163400                   'STORE ' XST00001-LOC-NBR                      16340000
163500**         THE REPLACED STORE'S TOTAL WILL NOW BE ADDED INTO THE  16350000
REPL53**         NEW STORE'S "LAST YEAR" TOTAL BY PARA 2200-.           16361017
163800                                                                  16380000
163900        WHEN SQLCODE = PC-ROW-NOT-FOUND                           16390000
REPL53        WHEN SQLCODE = PC-NULL-RETURNED                           16391015
164000           MOVE ZEROES           TO DFT00002-YTD-DOL-AMT          16400000
164100                                                                  16410000
164200        WHEN OTHER                                                16420000
164300           MOVE SQLCODE                    TO PV-SQLCODE          16430000
164400           MOVE 'DFT_ML_FINCL_SUM'         TO PV-TABLE-NAME       16440000
164500           MOVE '4600-GET-REPLACED-STORE-TOTAL'                   16450000
164600                                           TO PV-PARAGRAPH-NAME   16460000
164700           MOVE XST00001-LOC-NBR           TO PV-DISPLAY-STORE    16470000
164800           STRING 'STORE ' PV-DISPLAY-STORE                       16480000
164900                  ' SINCE DATE ' PV-LY-FISCAL-END-DATE            16490000
165000                  ' RECEIVED SQLCODE = '                          16500000
165100                   PV-SQLCODE DELIMITED BY SIZE INTO              16510000
165200                   PV-OPERATION-MSG                               16520000
165300           END-STRING                                             16530000
165400           PERFORM 8000-DB2-ABEND                                 16540000
165500     END-EVALUATE.                                                16550000
165600                                                                  16560000
165700                                                                  16570000
165800                                                                  16580000
165900******************************************************************16590000
166000* ADD DAILY FLASH SALES TO THIS YEAR'S STORE, METRO AND STATE     16600000
166100* TOTALS.                                                         16610000
166200******************************************************************16620000
166300 6000-ADD-TO-THIS-YEARS-SALES.                                    16630000
166400                                                                  16640000
166500     MOVE DFT00000-STR-NBR        TO PA-STORE-SUB.                16650000
166600     ADD DFT00000-DLY-DOL-AMT                                     16660000
166700                       TO PA-STORE-TY-DAILY-SALES (PA-STORE-SUB)  16670000
166800                          PV-COMPANY-TY-DLY-AMT.                  16680000
166900     ADD DFT00000-MTD-DOL-AMT                                     16690000
167000                       TO PA-STORE-TY-MTD-SALES (PA-STORE-SUB)    16700000
167100                          PV-COMPANY-TY-MTD-AMT.                  16710000
167200     ADD DFT00000-YTD-DOL-AMT                                     16720000
167300                       TO PA-STORE-TY-YTD-SALES (PA-STORE-SUB)    16730000
167400                          PV-COMPANY-TY-YTD-AMT.                  16740000
167500                                                                  16750000
167600     MOVE PA-STORE-METRO (PA-STORE-SUB) TO PV-SEARCH-METRO (1:4). 16760000
167700     MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-METRO (5:2). 16770000
167800     SEARCH ALL PA-METRO-TOTALS                                   16780000
167900         AT END                                                   16790000
168000             SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE          16800000
168100             DISPLAY 'PARA NAME = 6000-ADD-TO-THIS-YEARS-SALES'   16810000
168200             DISPLAY 'METRO-STATE NOT FOUND ON TABLE = '          16820000
168300                      PV-SEARCH-METRO                             16830000
168400             MOVE PA-STORE-SUB              TO PV-DISPLAY-STORE   16840000
168500             DISPLAY 'WHILE PROCESSING STORE ' PV-DISPLAY-STORE   16850000
168600             PERFORM 8100-ABEND                                   16860000
168700         WHEN PA-METRO-STATE-KEY (METRO-INDEX) = PV-SEARCH-METRO  16870000
168800             CONTINUE                                             16880000
168900     END-SEARCH.                                                  16890000
169000     ADD DFT00000-DLY-DOL-AMT                                     16900000
169100                       TO PA-METRO-TY-DAILY-SALES (METRO-INDEX).  16910000
169200     ADD DFT00000-MTD-DOL-AMT                                     16920000
169300                       TO PA-METRO-TY-MTD-SALES (METRO-INDEX).    16930000
169400     ADD DFT00000-YTD-DOL-AMT                                     16940000
169500                       TO PA-METRO-TY-YTD-SALES (METRO-INDEX).    16950000
169600                                                                  16960000
           IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'                   16961000
      **       DON'T INCREMENT STATE TOTALS FOR ECOM                    16962000
169700         MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-STATE    16970000
169800         SEARCH ALL PA-STATE-TOTALS                               16980000
169900             AT END                                               16990000
170000                 SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE      17000000
170100                 DISPLAY                                          17010000
170100                     'PARA NAME = 6000-ADD-TO-THIS-YEARS-SALES'   17011000
170200                 DISPLAY 'STATE NOT FOUND ON TABLE = '            17020000
170300                          PV-SEARCH-STATE                         17030000
170400                 MOVE PA-STORE-SUB          TO PV-DISPLAY-STORE   17040000
170500                 DISPLAY 'WHILE PROCESSING STORE '                17050000
170500                          PV-DISPLAY-STORE                        17051000
170600                 PERFORM 8100-ABEND                               17060000
170700             WHEN PA-STATE (STATE-INDEX) = PV-SEARCH-STATE        17070000
170800                 CONTINUE                                         17080000
170900         END-SEARCH                                               17090000
171000         ADD DFT00000-DLY-DOL-AMT                                 17100000
171100                       TO PA-STATE-TY-DAILY-SALES (STATE-INDEX)   17110000
171200         ADD DFT00000-MTD-DOL-AMT                                 17120000
171300                       TO PA-STATE-TY-MTD-SALES (STATE-INDEX)     17130000
171400         ADD DFT00000-YTD-DOL-AMT                                 17140000
171500                       TO PA-STATE-TY-YTD-SALES (STATE-INDEX)     17150000
           END-IF.                                                      17151000
171600                                                                  17160000
171700**   ADD TO COMP TOTALS AFTER CHECKING COMP DATES.                17170000
171800**   DAILY AND MONTHLY COMP USE THE SAME DATE.                    17180000
WEEK53**   SPECIAL LOGIC IS NEEDED FOR WEEK 53                          17181006
WEEK53     IF PS-NOT-IN-WEEK-53                                         17182006
171900         IF PV-RUN-DATE-CCYY-MM-DD  >=                            17191006
172000            PA-STORE-COMP-MONTH-DATE (PA-STORE-SUB)               17200006
172100              ADD DFT00000-DLY-DOL-AMT                            17210006
172200               TO PA-STORE-TY-COMP-DLY-SALES (PA-STORE-SUB)       17220006
172300                  PA-METRO-TY-COMP-DLY-SALES (METRO-INDEX)        17230006
172500                  PV-COMPANY-TY-COMP-DLY-AMT                      17250006
172600              ADD DFT00000-MTD-DOL-AMT                            17260006
172700               TO PA-STORE-TY-COMP-MTD-SALES (PA-STORE-SUB)       17270006
172800                  PA-METRO-TY-COMP-MTD-SALES (METRO-INDEX)        17280006
173000                  PV-COMPANY-TY-COMP-MTD-AMT                      17300006
                    IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'          17301006
      **                DON'T INCREMENT STATE TOTALS FOR ECOM           17301106
172100                  ADD DFT00000-DLY-DOL-AMT                        17302006
172400                   TO PA-STATE-TY-COMP-DLY-SALES (STATE-INDEX)    17303006
172600                  ADD DFT00000-MTD-DOL-AMT                        17304006
172900                   TO PA-STATE-TY-COMP-MTD-SALES (STATE-INDEX)    17305006
173100              END-IF                                              17310006
173100         END-IF                                                   17310106
WEEK53     ELSE                                                         17310206
WEEK53**       IN WEEK 53                                               17310311
171900         IF PV-RUN-DATE-CCYY-MM-DD  >=                            17310411
172000            PA-STORE-COMP-MONTH-DATE (PA-STORE-SUB)               17310511
WEEK53**           CURRENT DATE WILL BE USED FOR DAILY COMP EVEN DURING 17310611
WEEK53**           WEEK 53.                                             17310711
WEEK53             ADD DFT00000-DLY-DOL-AMT                             17310811
WEEK53              TO PA-STORE-TY-COMP-DLY-SALES (PA-STORE-SUB)        17310911
WEEK53                 PA-METRO-TY-COMP-DLY-SALES (METRO-INDEX)         17311011
WEEK53                 PV-COMPANY-TY-COMP-DLY-AMT                       17311111
WEEK53             IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'           17311211
WEEK53**               DON'T INCREMENT STATE TOTALS FOR ECOM            17311311
WEEK53                 ADD DFT00000-DLY-DOL-AMT                         17311411
WEEK53                  TO PA-STATE-TY-COMP-DLY-SALES (STATE-INDEX)     17311511
WEEK53             END-IF                                               17311611
WEEK53         END-IF                                                   17311711
WEEK53**       DURING WEEK 53 - COMPARE TO END OF WEEK 52 FOR MTD       17311811
REPL53**       IF PV-53-WEEK-TY-COMP-DATE >=                            17311923
REPL53         IF PV-RUN-DATE-CCYY-MM-DD  >=                            17312023
WEEK53            PA-STORE-COMP-MONTH-DATE (PA-STORE-SUB)               17312123
WEEK53              ADD PV-53-WEEK-COMP-MTD-DOL-AMT                     17312223
WEEK53               TO PA-STORE-TY-COMP-MTD-SALES (PA-STORE-SUB)       17312323
WEEK53                  PA-METRO-TY-COMP-MTD-SALES (METRO-INDEX)        17312423
WEEK53                  PV-COMPANY-TY-COMP-MTD-AMT                      17312523
WEEK53              IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'          17312623
WEEK53**                DON'T INCREMENT STATE TOTALS FOR ECOM           17312723
WEEK53                  ADD PV-53-WEEK-COMP-MTD-DOL-AMT                 17312823
WEEK53                   TO PA-STATE-TY-COMP-MTD-SALES (STATE-INDEX)    17312923
WEEK53              END-IF                                              17313023
WEEK53         END-IF                                                   17313123
WEEK53     END-IF.                                                      17314006
173200                                                                  17320005
WEEK53     IF PS-NOT-IN-WEEK-53                                         17321005
173300         IF PV-RUN-DATE-CCYY-MM-DD  >=                            17330005
173400            PA-STORE-COMP-YEAR-DATE  (PA-STORE-SUB)               17340005
173500              ADD DFT00000-YTD-DOL-AMT                            17350005
173600               TO PA-STORE-TY-COMP-YTD-SALES (PA-STORE-SUB)       17360005
173700                  PA-METRO-TY-COMP-YTD-SALES (METRO-INDEX)        17370005
173900                  PV-COMPANY-TY-COMP-YTD-AMT                      17390005
                    IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'          17391005
      **                DON'T INCREMENT STATE TOTALS FOR ECOM           17391105
173500                  ADD DFT00000-YTD-DOL-AMT                        17392005
173800                   TO PA-STATE-TY-COMP-YTD-SALES (STATE-INDEX)    17393005
174000              END-IF                                              17400005
174000         END-IF                                                   17400105
WEEK53     ELSE                                                         17400205
WEEK53**       DURING WEEK 53 - COMPARE TO END OF WEEK 52               17400305
REPL53**       IF PV-53-WEEK-TY-COMP-DATE >=                            17400423
REPL53         IF PV-RUN-DATE-CCYY-MM-DD  >=                            17400523
WEEK53            PA-STORE-COMP-YEAR-DATE  (PA-STORE-SUB)               17400605
WEEK53              ADD PV-53-WEEK-COMP-YTD-DOL-AMT                     17400705
WEEK53               TO PA-STORE-TY-COMP-YTD-SALES (PA-STORE-SUB)       17400805
WEEK53                  PA-METRO-TY-COMP-YTD-SALES (METRO-INDEX)        17400905
WEEK53                  PV-COMPANY-TY-COMP-YTD-AMT                      17401005
WEEK53              IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'          17401105
WEEK53**                DON'T INCREMENT STATE TOTALS FOR ECOM           17401205
WEEK53                  ADD PV-53-WEEK-COMP-YTD-DOL-AMT                 17401305
WEEK53                   TO PA-STATE-TY-COMP-YTD-SALES (STATE-INDEX)    17401405
WEEK53              END-IF                                              17401505
WEEK53         END-IF                                                   17401605
174000     END-IF.                                                      17402000
174100                                                                  17410000
174200                                                                  17420000
174300******************************************************************17430000
174400* ADD DAILY FLASH SALES TO LAST YEAR'S STORE, METRO AND STATE     17440000
174500* TOTALS.                                                         17450000
174600******************************************************************17460000
174700 6100-ADD-TO-LAST-YEARS-SALES.                                    17470000
174800                                                                  17480000
174900     MOVE DFT00002-STR-NBR     TO PA-STORE-SUB.                   17490000
175000     ADD DFT00002-DLY-DOL-AMT                                     17500000
175100                       TO PA-STORE-LY-DAILY-SALES (PA-STORE-SUB)  17510000
175200                          PV-COMPANY-LY-DLY-AMT.                  17520000
175300     ADD DFT00002-MTD-DOL-AMT                                     17530000
175400                       TO PA-STORE-LY-MTD-SALES (PA-STORE-SUB)    17540000
175500                          PV-COMPANY-LY-MTD-AMT.                  17550000
175600     ADD DFT00002-YTD-DOL-AMT                                     17560000
175700                       TO PA-STORE-LY-YTD-SALES (PA-STORE-SUB)    17570000
175800                          PV-COMPANY-LY-YTD-AMT.                  17580000
175900                                                                  17590000
176000     MOVE PA-STORE-METRO (PA-STORE-SUB) TO PV-SEARCH-METRO (1:4). 17600000
176100     MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-METRO (5:2). 17610000
176200     SEARCH ALL PA-METRO-TOTALS                                   17620000
176300         AT END                                                   17630000
176400             SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE          17640000
176500             DISPLAY 'PARA NAME = 6100-ADD-TO-LAST-YEARS-SALES'   17650000
176600             DISPLAY 'METRO-STATE NOT FOUND ON TABLE = '          17660000
176700                      PV-SEARCH-METRO                             17670000
176800             MOVE PA-STORE-SUB              TO PV-DISPLAY-STORE   17680000
176900             DISPLAY 'WHILE PROCESSING STORE ' PV-DISPLAY-STORE   17690000
177000             PERFORM 8100-ABEND                                   17700000
177100         WHEN PA-METRO-STATE-KEY (METRO-INDEX) = PV-SEARCH-METRO  17710000
177200             CONTINUE                                             17720000
177300     END-SEARCH.                                                  17730000
177400     ADD DFT00002-DLY-DOL-AMT                                     17740000
177500                       TO PA-METRO-LY-DAILY-SALES (METRO-INDEX).  17750000
177600     ADD DFT00002-MTD-DOL-AMT                                     17760000
177700                       TO PA-METRO-LY-MTD-SALES (METRO-INDEX).    17770000
177800     ADD DFT00002-YTD-DOL-AMT                                     17780000
177900                       TO PA-METRO-LY-YTD-SALES (METRO-INDEX).    17790000
178000                                                                  17800000
           IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'                   17801000
      **       DON'T INCREMENT STATE TOTALS FOR ECOM                    17802000
178100         MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-STATE    17810000
178200         SEARCH ALL PA-STATE-TOTALS                               17820000
178300             AT END                                               17830000
178400                 SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE      17840000
178500                 DISPLAY                                          17850000
178500                     'PARA NAME = 6100-ADD-TO-LAST-YEARS-SALES'   17851000
178600                 DISPLAY 'STATE NOT FOUND ON TABLE = '            17860000
178700                          PV-SEARCH-STATE                         17870000
178800                 MOVE PA-STORE-SUB          TO PV-DISPLAY-STORE   17880000
178900                 DISPLAY 'WHILE PROCESSING STORE '                17890000
178900                          PV-DISPLAY-STORE                        17891000
179000                 PERFORM 8100-ABEND                               17900000
179100             WHEN PA-STATE (STATE-INDEX) = PV-SEARCH-STATE        17910000
179200                 CONTINUE                                         17920000
179300         END-SEARCH                                               17930000
179400         ADD DFT00002-DLY-DOL-AMT                                 17940000
179500                       TO PA-STATE-LY-DAILY-SALES (STATE-INDEX)   17950000
179600         ADD DFT00002-MTD-DOL-AMT                                 17960000
179700                       TO PA-STATE-LY-MTD-SALES (STATE-INDEX)     17970000
179800         ADD DFT00002-YTD-DOL-AMT                                 17980000
179900                       TO PA-STATE-LY-YTD-SALES (STATE-INDEX)     17990000
           END-IF.                                                      17991000
180000                                                                  18000000
180100**   ADD TO COMP TOTALS AFTER CHECKING COMP DATES                 18010000
180200     IF PV-RUN-DATE-CCYY-MM-DD  >=                                18020000
180300        PA-STORE-COMP-MONTH-DATE (PA-STORE-SUB)                   18030000
180400          ADD DFT00002-DLY-DOL-AMT                                18040000
180500           TO PA-STORE-LY-COMP-DLY-SALES (PA-STORE-SUB)           18050000
180600              PA-METRO-LY-COMP-DLY-SALES (METRO-INDEX)            18060000
180800              PV-COMPANY-LY-COMP-DLY-AMT                          18080000
180900          ADD DFT00002-MTD-DOL-AMT                                18090000
181000           TO PA-STORE-LY-COMP-MTD-SALES (PA-STORE-SUB)           18100000
181100              PA-METRO-LY-COMP-MTD-SALES (METRO-INDEX)            18110000
181300              PV-COMPANY-LY-COMP-MTD-AMT                          18130000
                IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'              18131000
      **            DON'T INCREMENT STATE TOTALS FOR ECOM               18132000
180400              ADD DFT00002-DLY-DOL-AMT                            18133000
180700               TO PA-STATE-LY-COMP-DLY-SALES (STATE-INDEX)        18134000
180900              ADD DFT00002-MTD-DOL-AMT                            18135000
181200               TO PA-STATE-LY-COMP-MTD-SALES (STATE-INDEX)        18136000
181400          END-IF                                                  18140000
181400     END-IF.                                                      18141000
181500                                                                  18150000
181600     IF PV-RUN-DATE-CCYY-MM-DD  >=                                18160000
181700        PA-STORE-COMP-YEAR-DATE  (PA-STORE-SUB)                   18170000
181800          ADD DFT00002-YTD-DOL-AMT                                18180000
181900           TO PA-STORE-LY-COMP-YTD-SALES (PA-STORE-SUB)           18190000
182000              PA-METRO-LY-COMP-YTD-SALES (METRO-INDEX)            18200000
182200              PV-COMPANY-LY-COMP-YTD-AMT                          18220000
                IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'              18221000
      **            DON'T INCREMENT STATE TOTALS FOR ECOM               18222000
181800              ADD DFT00002-YTD-DOL-AMT                            18223000
182100               TO PA-STATE-LY-COMP-YTD-SALES (STATE-INDEX)        18224000
182300          END-IF                                                  18230000
182300     END-IF.                                                      18231000
182400                                                                  18240000
182500                                                                  18250000
182600******************************************************************18260000
182700* ADD TOTAL DAILY FLASH SALES FROM LAST YEAR TO STORE, METRO      18270000
182800* AND STATE SORT KEY TOTALS.  THE OUTPUT FILE WILL BE SORTED ON   18280000
182900* THEM IN DESCENDING SEQUENCE.                                    18290000
183000******************************************************************18300000
183100 6200-ADD-TO-LAST-YEARS-TOTALS.                                   18310000
183200                                                                  18320000
183300     MOVE DFT00002-STR-NBR     TO PA-STORE-SUB.                   18330000
REPL53     ADD  DFT00002-YTD-DOL-AMT                                    18340021
183500                       TO PA-STORE-LY-TOTAL-SALES (PA-STORE-SUB). 18350000
183600                                                                  18360000
183700     MOVE PA-STORE-METRO (PA-STORE-SUB) TO PV-SEARCH-METRO (1:4). 18370000
183800     MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-METRO (5:2). 18380000
183900     SEARCH ALL PA-METRO-TOTALS                                   18390000
184000         AT END                                                   18400000
184100             SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE          18410000
184200             DISPLAY 'PARA NAME = 6200-ADD-TO-LAST-YEARS-TOTALS'  18420000
184300             DISPLAY 'METRO-STATE NOT FOUND ON TABLE = '          18430000
184400                      PV-SEARCH-METRO                             18440000
184500             MOVE PA-STORE-SUB              TO PV-DISPLAY-STORE   18450000
184600             DISPLAY 'WHILE PROCESSING STORE ' PV-DISPLAY-STORE   18460000
184700             PERFORM 8100-ABEND                                   18470000
184800         WHEN PA-METRO-STATE-KEY (METRO-INDEX) = PV-SEARCH-METRO  18480000
184900             CONTINUE                                             18490000
185000     END-SEARCH.                                                  18500000
185100     ADD DFT00002-YTD-DOL-AMT                                     18510000
185200                       TO PA-METRO-LY-TOTAL-SALES (METRO-INDEX).  18520000
185300                                                                  18530000
           IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'                   18531000
      **       DON'T INCREMENT STATE TOTALS FOR ECOM                    18532000
185400         MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-STATE    18540000
185500         SEARCH ALL PA-STATE-TOTALS                               18550000
185600             AT END                                               18560000
185700                 SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE      18570000
185800                 DISPLAY                                          18580000
185800                     'PARA NAME = 6200-ADD-TO-LAST-YEARS-TOTALS'  18581000
185900                 DISPLAY 'STATE NOT FOUND ON TABLE = '            18590000
186000                          PV-SEARCH-STATE                         18600000
186100                 MOVE PA-STORE-SUB          TO PV-DISPLAY-STORE   18610000
186200                 DISPLAY 'WHILE PROCESSING STORE '                18620000
186200                          PV-DISPLAY-STORE                        18621000
186300                 PERFORM 8100-ABEND                               18630000
186400             WHEN PA-STATE (STATE-INDEX) = PV-SEARCH-STATE        18640000
186500                 CONTINUE                                         18650000
186600         END-SEARCH                                               18660000
186700         ADD DFT00002-YTD-DOL-AMT                                 18670000
186800          TO PA-STATE-LY-TOTAL-SALES (STATE-INDEX)                18680000
186900             PV-COMPANY-LY-TOTAL-SALES                            18690000
186800     END-IF.                                                      18696000
187000                                                                  18700000
187100                                                                  18710000
187200******************************************************************18720000
187300* WRITE CONTENTS OF STATE, METRO AND STORE TABLES TO THE          18730000
187400* REPORT EXTRACT OUTPUT FILE.  ALSO, WRITE THE COMPANY TOTALS.    18740000
187500******************************************************************18750000
187600 7000-WRITE-REPORT-EXTRACT.                                       18760000
187700                                                                  18770000
187800     INITIALIZE                 WS-OUT-RECORD.                    18780000
187900     MOVE '00'               TO WS-OUT-REC-CODE.                  18790000
188000**   MOVING NINES TO THE METRO AND STORE SALES WILL ENSURE THAT   18800000
188100**   THE STATE RECORDS WILL BE SORTED BEFORE THE METRO AND STORE  18810000
188200**   RECORDS ENTERING THE REPORT PROGRAM.                         18820000
188300     MOVE 9999999999999.99   TO WS-OUT-SORT-METRO-SALES           18830000
188400                                WS-OUT-SORT-STORE-SALES.          18840000
188500     PERFORM 7100-UNLOAD-STATE-TABLE                              18850000
188600         VARYING PA-STATE-SUB FROM 1 BY 1                         18860000
188700             UNTIL PA-STATE-SUB > PC-STATE-MAX                    18870000
188800                OR PA-STATE (PA-STATE-SUB) = 'ZZ'.                18880000
188900                                                                  18890000
189000     INITIALIZE                 WS-OUT-RECORD.                    18900000
187900     MOVE '02'               TO WS-OUT-REC-CODE.                  18901000
189200**   MOVING NINES TO THE STORE SALES WILL ENSURE THAT THE         18910000
189300**   METRO RECORDS WILL BE SORTED BEFORE THE STORE RECORDS        18920000
189400**   ENTERING THE REPORT PROGRAM.                                 18930000
189500     MOVE 9999999999999.99   TO WS-OUT-SORT-STORE-SALES           18940000
189600     PERFORM 7200-UNLOAD-METRO-TABLE                              18960000
189700         VARYING PA-METRO-SUB FROM 1 BY 1                         18970000
189800             UNTIL PA-METRO-SUB > PC-METRO-MAX                    18980000
189900                OR PA-METRO-STATE-KEY (PA-METRO-SUB) = '9999ZZ'.  18990000
190000                                                                  19000000
190100     INITIALIZE                 WS-OUT-RECORD.                    19010000
190200     MOVE '04'               TO WS-OUT-REC-CODE.                  19020000
190300**   MUST GET THE STORE'S ASSOCIATED METRO AND STATE TOTALS SO    19030000
190400**   THAT THE STORE RECORD WILL BE SORTED AFTER THE CORRECT       19040000
190500**   STATE AND METRO RECORDS.                                     19050000
190600     PERFORM                                                      19060000
190700       VARYING PA-STORE-SUB FROM 1 BY 1                           19070000
190800         UNTIL PA-STORE-SUB > PC-STORE-MAX                        19080000
190900             IF PA-STORE-NUMBER (PA-STORE-SUB) > ZEROES           19090000
191000                 PERFORM 7300-UNLOAD-STORE-TABLE                  19100000
191100             END-IF                                               19110000
191200     END-PERFORM.                                                 19120000
191300                                                                  19130000
191400     PERFORM 7500-FORMAT-COMPANY-RECORD.                          19142000
191500                                                                  19150000
191600                                                                  19160000
191700******************************************************************19170000
191800* WRITE CONTENTS OF STATE TABLE TO THE REPORT EXTRACT OUTPUT FILE.19180000
191900******************************************************************19190000
192000 7100-UNLOAD-STATE-TABLE.                                         19200000
192100                                                                  19210000
192200     MOVE PA-STATE (PA-STATE-SUB)  TO WS-OUT-STATE.               19220000
192300**   SORTING WILL BE BASED ON LAST YEAR'S DAILY SALES.            19230000
192400     MOVE PA-STATE-TY-YTD-SALES   (PA-STATE-SUB)                  19240000
192500                                   TO WS-OUT-SORT-STATE-SALES.    19250000
192600     MOVE PA-STATE-TY-DAILY-SALES (PA-STATE-SUB)                  19260000
192700                                   TO WS-OUT-TY-DAILY-SALES.      19270000
192800     MOVE PA-STATE-TY-MTD-SALES   (PA-STATE-SUB)                  19280000
192900                                   TO WS-OUT-TY-MTD-SALES.        19290000
193000     MOVE PA-STATE-TY-YTD-SALES   (PA-STATE-SUB)                  19300000
193100                                   TO WS-OUT-TY-YTD-SALES.        19310000
193200     MOVE PA-STATE-LY-DAILY-SALES (PA-STATE-SUB)                  19320000
193300                                   TO WS-OUT-LY-DAILY-SALES.      19330000
193400     MOVE PA-STATE-LY-MTD-SALES   (PA-STATE-SUB)                  19340000
193500                                   TO WS-OUT-LY-MTD-SALES.        19350000
193600     MOVE PA-STATE-LY-YTD-SALES   (PA-STATE-SUB)                  19360000
193700                                   TO WS-OUT-LY-YTD-SALES.        19370000
193800     MOVE PA-STATE-TY-COMP-DLY-SALES (PA-STATE-SUB)               19380000
193900                                   TO WS-OUT-TY-COMP-DLY-SALES.   19390000
194000     MOVE PA-STATE-LY-COMP-DLY-SALES (PA-STATE-SUB)               19400000
194100                                   TO WS-OUT-LY-COMP-DLY-SALES.   19410000
194200     MOVE PA-STATE-TY-COMP-MTD-SALES (PA-STATE-SUB)               19420000
194300                                   TO WS-OUT-TY-COMP-MTD-SALES.   19430000
194400     MOVE PA-STATE-LY-COMP-MTD-SALES (PA-STATE-SUB)               19440000
194500                                   TO WS-OUT-LY-COMP-MTD-SALES.   19450000
194600     MOVE PA-STATE-TY-COMP-YTD-SALES (PA-STATE-SUB)               19460000
194700                                   TO WS-OUT-TY-COMP-YTD-SALES.   19470000
194800     MOVE PA-STATE-LY-COMP-YTD-SALES (PA-STATE-SUB)               19480000
194900                                   TO WS-OUT-LY-COMP-YTD-SALES.   19490000
195000     MOVE PA-STATE-LY-TOTAL-SALES (PA-STATE-SUB)                  19500000
195100                                   TO WS-OUT-LY-TOTAL-SALES.      19510000
195200     PERFORM 7600-WRITE-OUTPUT-RECORD.                            19520000
195300                                                                  19530000
195400                                                                  19540000
195500******************************************************************19550000
195600* WRITE CONTENTS OF METRO TABLE TO THE REPORT EXTRACT OUTPUT FILE.19560000
195700* METROS CAN SPAN STATES.  METRO TOTALS WILL ONLY REFLECT THE     19570000
195800* STORES IN THE STATE BEING REPORTED ON.                          19580000
195900* AT THIS POINT THE TOTAL FOR THE METRO HAS BEEN CALCULATED.  NOW,19590000
196000* THE METRO MUST BE WRITTEN FOR EACH STATE.                       19600000
196100******************************************************************19610000
196200 7200-UNLOAD-METRO-TABLE.                                         19620000
196300                                                                  19630000
196400     IF PA-METRO-E-BUS-IND (PA-METRO-SUB) = 'N'                   19630100
189100         MOVE '02'                           TO WS-OUT-REC-CODE   19631000
202800         MOVE PA-METRO-STATE (PA-METRO-SUB)  TO WS-OUT-STATE      19631100
196400     ELSE                                                         19632000
      **       SETTING STATE TO 'ZA' WILL FORCE ECOM METRO AND STORE    19632100
      **       RECORDS AFTER THE STATES AND BEFORE THE COMPANY RECORDS. 19632200
189100         MOVE '05'                           TO WS-OUT-REC-CODE   19633000
202800         MOVE 'ZA'                           TO WS-OUT-STATE      19633100
196400     END-IF.                                                      19634000
196400     MOVE PA-METRO (PA-METRO-SUB)  TO WS-OUT-METRO                19640000
196500                                      XST00023-STR-GP-ID.         19650000
196600     MOVE PA-METRO-STATE-KEY (PA-METRO-SUB) TO  PV-SEARCH-METRO.  19660000
196700**   SORTING WILL BE BASED ON LAST YEAR'S DAILY SALES.            19670000
196800     MOVE PA-METRO-TY-YTD-SALES      (PA-METRO-SUB)               19680000
196900                                   TO WS-OUT-SORT-METRO-SALES.    19690000
197000     MOVE PA-METRO-TY-DAILY-SALES    (PA-METRO-SUB)               19700000
197100                                   TO WS-OUT-TY-DAILY-SALES.      19710000
197200     MOVE PA-METRO-TY-MTD-SALES      (PA-METRO-SUB)               19720000
197300                                   TO WS-OUT-TY-MTD-SALES.        19730000
197400     MOVE PA-METRO-TY-YTD-SALES      (PA-METRO-SUB)               19740000
197500                                   TO WS-OUT-TY-YTD-SALES.        19750000
197600     MOVE PA-METRO-LY-DAILY-SALES    (PA-METRO-SUB)               19760000
197700                                   TO WS-OUT-LY-DAILY-SALES.      19770000
197800     MOVE PA-METRO-LY-MTD-SALES      (PA-METRO-SUB)               19780000
197900                                   TO WS-OUT-LY-MTD-SALES.        19790000
198000     MOVE PA-METRO-LY-YTD-SALES      (PA-METRO-SUB)               19800000
198100                                   TO WS-OUT-LY-YTD-SALES.        19810000
198200     MOVE PA-METRO-TY-COMP-DLY-SALES (PA-METRO-SUB)               19820000
198300                                   TO WS-OUT-TY-COMP-DLY-SALES.   19830000
198400     MOVE PA-METRO-LY-COMP-DLY-SALES (PA-METRO-SUB)               19840000
198500                                   TO WS-OUT-LY-COMP-DLY-SALES.   19850000
198600     MOVE PA-METRO-TY-COMP-MTD-SALES (PA-METRO-SUB)               19860000
198700                                   TO WS-OUT-TY-COMP-MTD-SALES.   19870000
198800     MOVE PA-METRO-LY-COMP-MTD-SALES (PA-METRO-SUB)               19880000
198900                                   TO WS-OUT-LY-COMP-MTD-SALES.   19890000
199000     MOVE PA-METRO-TY-COMP-YTD-SALES (PA-METRO-SUB)               19900000
199100                                   TO WS-OUT-TY-COMP-YTD-SALES.   19910000
199200     MOVE PA-METRO-LY-COMP-YTD-SALES (PA-METRO-SUB)               19920000
199300                                   TO WS-OUT-LY-COMP-YTD-SALES.   19930000
199400     MOVE PA-METRO-LY-TOTAL-SALES (PA-METRO-SUB)                  19940000
199500                                   TO WS-OUT-LY-TOTAL-SALES.      19950000
199600     MOVE PA-METRO-NAME              (PA-METRO-SUB)               19960000
199700                                   TO WS-OUT-METRO-NAME.          19970000
199800**   AN ASTERISK ON THE REPORT WILL INDICATE THAT THE METRO       19980000
199900**   SPANS MULTIPLE STATES. THE METROS WILL BE LOADED INTO THE    19990000
200000**   WS-TABLE IN SEQUENCE, SO A SIMPLE CHECK OF THE PREVIOUS      20000000
200100**   AND NEXT METRO NAMES WILL INDICATE IF THERE ARE MULTIPLE     20010000
200200**   OCCURENCES OF THE METRO.                                     20020000
200300     MOVE SPACES                   TO WS-OUT-MULT-METRO-IND.      20030000
200400     IF PA-METRO-SUB = 1                                          20040000
200500**       FIRST METRO IN TABLE - ONLY CHECK NEXT NAME              20050000
200600         IF PA-METRO-NAME (1) = PA-METRO-NAME (2)                 20060000
200700             MOVE '*'              TO WS-OUT-MULT-METRO-IND       20070000
200800         END-IF                                                   20080000
200900     ELSE                                                         20090000
201000         IF PA-METRO-SUB = PC-METRO-MAX                           20100000
201100**           LAST METRO IN TABLE - ONLY CHECK PREVIOUS NAME       20110000
201200             IF PA-METRO-NAME (PA-METRO-SUB)                      20120000
201300              = PA-METRO-NAME (PA-METRO-SUB - 1)                  20130000
201400                 MOVE '*'          TO WS-OUT-MULT-METRO-IND       20140000
201500             END-IF                                               20150000
201600         ELSE                                                     20160000
201700**           CHECK PREVIOUS AND NEXT NAMES IN TABLE.              20170000
201800             IF (PA-METRO-NAME (PA-METRO-SUB)                     20180000
201900              =  PA-METRO-NAME (PA-METRO-SUB - 1))                20190000
202000             OR (PA-METRO-NAME (PA-METRO-SUB)                     20200000
202100              =  PA-METRO-NAME (PA-METRO-SUB + 1))                20210000
202200                 MOVE '*'           TO WS-OUT-MULT-METRO-IND      20220000
202300             END-IF                                               20230000
202400         END-IF                                                   20240000
202500     END-IF.                                                      20250000
202600                                                                  20260000
196400     IF PA-METRO-E-BUS-IND (PA-METRO-SUB) = 'N'                   20261000
202700**       FIND STATE SALES FOR NON-ECOM METROS                     20270000
202800         MOVE PA-METRO-STATE (PA-METRO-SUB)  TO PV-SEARCH-STATE   20280000
203000         SEARCH ALL PA-STATE-TOTALS                               20300000
203100             AT END                                               20310000
203200                 SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE      20320000
203300                 DISPLAY 'PARA NAME = 7200-UNLOAD-METRO-TABLE'    20330000
203400                 DISPLAY 'STATE NOT FOUND ON TABLE = '            20340000
203500                     PV-SEARCH-STATE                              20350000
203600                 PERFORM 8100-ABEND                               20360000
203700             WHEN PA-STATE (STATE-INDEX) = PV-SEARCH-STATE        20370000
203800                 CONTINUE                                         20380000
203900         END-SEARCH                                               20390000
204000         MOVE PA-STATE-TY-YTD-SALES (STATE-INDEX)                 20400000
204100                                   TO WS-OUT-SORT-STATE-SALES     20410000
           ELSE                                                         20421000
      **       ZEROES WILL FORCE ECOM TO THE BOTTOM OF THE STATE RECS   20421100
204100         MOVE ZEROES               TO WS-OUT-SORT-STATE-SALES     20421200
           END-IF.                                                      20422000
204300                                                                  20422100
204200     PERFORM 7600-WRITE-OUTPUT-RECORD.                            20423000
204300                                                                  20430000
204400                                                                  20440000
204500 7300-UNLOAD-STORE-TABLE.                                         20450000
204600                                                                  20460000
196400     IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'                   20461000
189100         MOVE '04'                           TO WS-OUT-REC-CODE   20462000
202800         MOVE PA-STORE-STATE (PA-STORE-SUB)  TO WS-OUT-STATE      20463000
196400     ELSE                                                         20464000
      **       SETTING STATE TO 'ZA' WILL FORCE ECOM METRO AND STORE    20465000
      **       RECORDS AFTER THE STATES AND BEFORE THE COMPANY RECORDS. 20466000
189100         MOVE '05'                           TO WS-OUT-REC-CODE   20467000
202800         MOVE 'ZA'                           TO WS-OUT-STATE      20468000
196400     END-IF.                                                      20469000
204700     MOVE PA-STORE-NUMBER (PA-STORE-SUB)  TO WS-OUT-STORE.        20470000
204800     MOVE PA-STORE-NAME   (PA-STORE-SUB)  TO WS-OUT-STORE-NAME.   20480000
205000     MOVE PA-STORE-METRO  (PA-STORE-SUB)  TO WS-OUT-METRO.        20500000
205100**   SORTING WILL BE BASED ON LAST YEAR'S DAILY SALES.            20510000
205200     MOVE PA-STORE-TY-YTD-SALES   (PA-STORE-SUB)                  20520000
205300                                   TO WS-OUT-SORT-STORE-SALES.    20530000
205400     MOVE PA-STORE-TY-DAILY-SALES (PA-STORE-SUB)                  20540000
205500                                   TO WS-OUT-TY-DAILY-SALES.      20550000
205600     MOVE PA-STORE-TY-MTD-SALES   (PA-STORE-SUB)                  20560000
205700                                   TO WS-OUT-TY-MTD-SALES.        20570000
205800     MOVE PA-STORE-TY-YTD-SALES   (PA-STORE-SUB)                  20580000
205900                                   TO WS-OUT-TY-YTD-SALES.        20590000
206000     MOVE PA-STORE-LY-DAILY-SALES (PA-STORE-SUB)                  20600000
206100                                   TO WS-OUT-LY-DAILY-SALES.      20610000
206200     MOVE PA-STORE-LY-MTD-SALES   (PA-STORE-SUB)                  20620000
206300                                   TO WS-OUT-LY-MTD-SALES.        20630000
206400     MOVE PA-STORE-LY-YTD-SALES   (PA-STORE-SUB)                  20640000
206500                                   TO WS-OUT-LY-YTD-SALES.        20650000
206600     MOVE PA-STORE-TY-COMP-DLY-SALES (PA-STORE-SUB)               20660000
206700                                   TO WS-OUT-TY-COMP-DLY-SALES.   20670000
206800     MOVE PA-STORE-LY-COMP-DLY-SALES (PA-STORE-SUB)               20680000
206900                                   TO WS-OUT-LY-COMP-DLY-SALES.   20690000
207000     MOVE PA-STORE-TY-COMP-MTD-SALES (PA-STORE-SUB)               20700000
207100                                   TO WS-OUT-TY-COMP-MTD-SALES.   20710000
207200     MOVE PA-STORE-LY-COMP-MTD-SALES (PA-STORE-SUB)               20720000
207300                                   TO WS-OUT-LY-COMP-MTD-SALES.   20730000
207400     MOVE PA-STORE-TY-COMP-YTD-SALES (PA-STORE-SUB)               20740000
207500                                   TO WS-OUT-TY-COMP-YTD-SALES.   20750000
207600     MOVE PA-STORE-LY-COMP-YTD-SALES (PA-STORE-SUB)               20760000
207700                                   TO WS-OUT-LY-COMP-YTD-SALES.   20770000
207800     MOVE PA-STORE-LY-TOTAL-SALES (PA-STORE-SUB)                  20780000
207900                                   TO WS-OUT-LY-TOTAL-SALES.      20790000
208000                                                                  20800000
208100**   FIND METRO SALES                                             20810000
208200     MOVE PA-STORE-METRO (PA-STORE-SUB) TO PV-SEARCH-METRO (1:4). 20820000
208300     MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-METRO (5:2). 20830000
208400     SEARCH ALL PA-METRO-TOTALS                                   20840000
208500         AT END                                                   20850000
208600             SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE          20860000
208700             DISPLAY 'PARA NAME = 7300-UNLOAD-STORE-TABLES'       20870000
208800             DISPLAY 'METRO-STATE NOT FOUND ON TABLE = '          20880000
208900                      PV-SEARCH-METRO                             20890000
209000             MOVE PA-STORE-SUB              TO PV-DISPLAY-STORE   20900000
209100             DISPLAY 'WHILE PROCESSING STORE ' PV-DISPLAY-STORE   20910000
209200             PERFORM 8100-ABEND                                   20920000
209300         WHEN PA-METRO-STATE-KEY (METRO-INDEX) = PV-SEARCH-METRO  20930000
209400             CONTINUE                                             20940000
209500     END-SEARCH.                                                  20950000
209600     MOVE PA-METRO-TY-YTD-SALES (METRO-INDEX)                     20960000
209700                                   TO WS-OUT-SORT-METRO-SALES.    20970000
209800     MOVE PA-METRO-NAME (METRO-INDEX)                             20980000
209900                                   TO WS-OUT-METRO-NAME.          20990000
210000                                                                  21000000
196400     IF PA-STORE-E-BUS-IND (PA-STORE-SUB) = 'N'                   21001000
202700**       FIND STATE SALES FOR NON-ECOM METROS                     21002000
210200         MOVE PA-STORE-STATE (PA-STORE-SUB) TO PV-SEARCH-STATE    21020000
210300         SEARCH ALL PA-STATE-TOTALS                               21030000
210400             AT END                                               21040000
210500                 SET ABEND-2222-MISSING-TABLE-ENTRY  TO TRUE      21050000
210600                 DISPLAY 'PARA NAME = 7300-UNLOAD-STORE-TABLES'   21060000
210700                 DISPLAY 'STATE NOT FOUND ON TABLE = '            21070000
210800                      PV-SEARCH-STATE                             21080000
210900                 MOVE PA-STORE-SUB          TO PV-DISPLAY-STORE   21090000
211000                 DISPLAY 'WHILE PROCESSING STORE '                21100000
211000                          PV-DISPLAY-STORE                        21101000
211100                 PERFORM 8100-ABEND                               21110000
211200             WHEN PA-STATE (STATE-INDEX) = PV-SEARCH-STATE        21120000
211300                 CONTINUE                                         21130000
211400         END-SEARCH                                               21140000
211500         MOVE PA-STATE-TY-YTD-SALES (STATE-INDEX)                 21150000
211600                                   TO WS-OUT-SORT-STATE-SALES     21160000
           ELSE                                                         21161000
      **       ZEROES WILL FORCE ECOM TO THE BOTTOM OF THE STATE RECS   21162000
204100         MOVE ZEROES               TO WS-OUT-SORT-STATE-SALES     21163000
           END-IF.                                                      21164000
211700                                                                  21170000
211800     PERFORM 7600-WRITE-OUTPUT-RECORD.                            21180000
211900                                                                  21190000
214900                                                                  21211000
212100 7500-FORMAT-COMPANY-RECORD.                                      21212000
212200                                                                  21220000
212300     INITIALIZE                         WS-OUT-RECORD.            21230000
212400     MOVE '06'                       TO WS-OUT-REC-CODE.          21240000
212500**   MOVING ZEROES TO THE STATE, METRO AND STORE SALES AND        21250000
212600**   'ZZ' TO THE STATE NAME WILL ENSURE THAT THE COMPANY TOTALS   21260000
212700**   RECORD WILL BE SORTED TO THE END OF THE FILE ENTERING THE    21270000
212800**   REPORT PROGRAM.                                              21280000
212900     MOVE ZEROES                     TO WS-OUT-SORT-STATE-SALES   21290000
213000                                        WS-OUT-SORT-METRO-SALES   21300000
213100                                        WS-OUT-SORT-STORE-SALES.  21310000
213200     MOVE 'ZZ'                       TO WS-OUT-STATE.             21320000
213300     MOVE PV-COMPANY-TY-DLY-AMT      TO WS-OUT-TY-DAILY-SALES.    21330000
213400     MOVE PV-COMPANY-LY-DLY-AMT      TO WS-OUT-LY-DAILY-SALES.    21340000
213500     MOVE PV-COMPANY-TY-MTD-AMT      TO WS-OUT-TY-MTD-SALES.      21350000
213600     MOVE PV-COMPANY-LY-MTD-AMT      TO WS-OUT-LY-MTD-SALES.      21360000
213700     MOVE PV-COMPANY-TY-YTD-AMT      TO WS-OUT-TY-YTD-SALES.      21370000
213800     MOVE PV-COMPANY-LY-YTD-AMT      TO WS-OUT-LY-YTD-SALES.      21380000
213900     MOVE PV-COMPANY-TY-COMP-DLY-AMT TO WS-OUT-TY-COMP-DLY-SALES. 21390000
214000     MOVE PV-COMPANY-LY-COMP-DLY-AMT TO WS-OUT-LY-COMP-DLY-SALES. 21400000
214100     MOVE PV-COMPANY-TY-COMP-MTD-AMT TO WS-OUT-TY-COMP-MTD-SALES. 21410000
214200     MOVE PV-COMPANY-LY-COMP-MTD-AMT TO WS-OUT-LY-COMP-MTD-SALES. 21420000
214300     MOVE PV-COMPANY-TY-COMP-YTD-AMT TO WS-OUT-TY-COMP-YTD-SALES. 21430000
214400     MOVE PV-COMPANY-LY-COMP-YTD-AMT TO WS-OUT-LY-COMP-YTD-SALES. 21440000
214500     MOVE PV-COMPANY-LY-TOTAL-SALES  TO WS-OUT-LY-TOTAL-SALES.    21450000
214600                                                                  21460000
214700     PERFORM 7600-WRITE-OUTPUT-RECORD.                            21470000
214800                                                                  21480000
214900                                                                  21490000
215000                                                                  21502000
215100 7600-WRITE-OUTPUT-RECORD.                                        21510000
215200                                                                  21520000
WEEK53     IF PS-IN-WEEK-53                                             21521005
WEEK53**       NOTIFY REPORT MODULE THAT DAILY PERCENT CHANGES          21522006
WEEK53**       SHOULD BE N/A - LAST YEAR'S DAILY SALES WILL REFLECT     21522106
WEEK53**       THE LAST DAY OF WEEK 52, NOT THE CURRENT DATE FOR        21522206
WEEK53**       WHICH THERE WAS NO 53 WEEK DATE THE PREVIOUS YEAR.       21522306
WEEK53         MOVE 'Y'     TO WS-OUT-DURING-WEEK-53                    21522407
WEEK53     END-IF.                                                      21523005
WEEK53     MOVE PV-LY-SAME-FISCAL-DATE   TO WS-OUT-LY-SAME-FISCAL-DATE. 21524013
215300     WRITE REPORT-EXTRACT-RECORD FROM WS-OUT-RECORD.              21530013
215400     IF WS-OUT-REC-CODE = '00'                                    21540000
215500         ADD +1      TO   PA-STATE-WRITTEN                        21550000
215600     ELSE                                                         21560000
215700         IF WS-OUT-REC-CODE = '02'                                21570000
215800             ADD +1      TO   PA-METRO-WRITTEN                    21580000
215900         ELSE                                                     21590000
216000             IF WS-OUT-REC-CODE = '04'                            21600000
216100                 ADD +1      TO   PA-STORE-WRITTEN                21610000
216200             ELSE                                                 21620000
216300                 IF WS-OUT-REC-CODE = '05'                        21630000
216400                     ADD +1      TO   PA-ECOM-WRITTEN             21640000
                       ELSE                                             21640100
216300                     IF WS-OUT-REC-CODE = '06'                    21641000
216400                         ADD +1      TO   PA-COMPANY-WRITTEN      21642000
216500                     END-IF                                       21650000
216500                 END-IF                                           21651000
216600             END-IF                                               21660000
216700         END-IF                                                   21670000
216800     END-IF.                                                      21680000
216900     ADD +1          TO   PA-TOTAL-WRITTEN.                       21690000
217000                                                                  21700000
217100                                                                  21710000
217200******************************************************************21720000
217300* DB2 ABEND ROUTINE                                               21730000
217400******************************************************************21740000
217500 8000-DB2-ABEND.                                                  21750000
217600                                                                  21760000
217700     MOVE SQLCODE TO SQLCODE2.                                    21770000
217800     MOVE SQLERRD(3) TO SQLERRD3.                                 21780000
217900                                                                  21790000
218000     DISPLAY '8000-DB2-ABEND'.                                    21800000
218100     DISPLAY '** ABEND           ** = SQLABEND'.                  21810000
218200     DISPLAY '** PROGRAM         ** = ' PC-PROGRAM-NAME.          21820000
218300     DISPLAY '** PARAGRAPH       ** = ' PV-PARAGRAPH-NAME.        21830000
218400     DISPLAY '** TABLES AFFECTED ** = ' PV-TABLE-NAME.            21840000
218500     DISPLAY '** OPERATION       ** = ' PV-OPERATION-MSG.         21850000
218600     DISPLAY '** SQLCODE         ** = ' SQLCODE2.                 21860000
218700     DISPLAY '** ROWS PROCESSED  ** = ' SQLERRD3.                 21870000
218800     DISPLAY '** SQLERRM         ** = ' SQLERRM.                  21880000
218900     DISPLAY '** SQLERRMC        ** = ' SQLERRMC.                 21890000
219000                                                                  21900000
219100******************************************************************21910000
219200*  THIS COPY BOOK MEMBER CONTAINS THE PROCEDURE DIVISION STATE-   21920000
219300*  MENTS THAT ARE REQUIRED TO UTILIZE THE DB2 ABEND MODULE        21930000
219400* 'DSNTIAR' AND CONVERT THE SQLCA INFORMATION INTO A READABLE     21940000
219500*  FORMAT.                                                        21950000
219600******************************************************************21960000
219700     COPY DPPD004.                                                21970000
219800                                                                  21980000
219900     SET ABEND-4013-DB2-ERROR TO TRUE.                            21990000
220000                                                                  22000000
220100     PERFORM 8100-ABEND.                                          22010000
220200                                                                  22020000
220300                                                                  22030000
220400******************************************************************22040000
220500* ABEND ROUTINE                                                   22050000
220600******************************************************************22060000
220700 8100-ABEND.                                                      22070000
220800                                                                  22080000
220900     PERFORM 9000-END-OF-JOB.                                     22090000
221000                                                                  22100000
221100     CALL 'ILBOABN0' USING ABEND-CODE.                            22110000
221200                                                                  22120000
221300                                                                  22130000
221400******************************************************************22140000
221500* PERFORMS END OF JOB PROCESSING                                  22150000
221600******************************************************************22160000
221700 9000-END-OF-JOB.                                                 22170000
221800                                                                  22180000
221900     CLOSE CTLCD-DATE-FILE                                        22190000
222000           REPORT-EXTRACT-FILE.                                   22200000
222100                                                                  22210000
222200     MOVE FUNCTION CURRENT-DATE TO SYS-DATE-TIME.                 22220000
222300                                                                  22230000
222400     MOVE SYS-TIME (1:2) TO ST-END-HR.                            22240000
222500     MOVE SYS-TIME (3:2) TO ST-END-MN.                            22250000
222600                                                                  22260000
222700     DISPLAY '                    '.                              22270000
222800     DISPLAY '**********************'.                            22280000
222900     DISPLAY '   SSKUT025 CONTROLS  '.                            22290000
223000     DISPLAY '**********************'.                            22300000
223100     DISPLAY 'RUN DATE  = ' SD-EDIT-DATE.                         22310000
223200     DISPLAY 'BEG TIME  = ' ST-BEG-TIME.                          22320000
223300     DISPLAY 'END TIME  = ' ST-END-TIME.                          22330000
223400     DISPLAY '======================'.                            22340000
223500     DISPLAY 'CONTROL CARD DATE: ' CC-DB2-CTLCD-DATE-ISO.         22350002
WEEK53     DISPLAY 'CONTROL CARD 53 WEEK IND: ' CC-53-WEEK-IND.         22351002
223600     DISPLAY '            '.                                      22360000
223700     DISPLAY 'STATE   RECORDS WRITTEN = ' PA-STATE-WRITTEN.       22370000
223800     DISPLAY 'METRO   RECORDS WRITTEN = ' PA-METRO-WRITTEN.       22380000
223900     DISPLAY 'STORE   RECORDS WRITTEN = ' PA-STORE-WRITTEN.       22390000
224000     DISPLAY 'ECOM    RECORDS WRITTEN = ' PA-ECOM-WRITTEN.        22400000
224000     DISPLAY 'COMPANY RECORDS WRITTEN = ' PA-COMPANY-WRITTEN.     22401000
224100     DISPLAY 'TOTAL   RECORDS WRITTEN = ' PA-TOTAL-WRITTEN.       22410000
224200     DISPLAY '                    '.                              22420000
224300                                                                  22430000
