000100******************************************************************00010099
000200 IDENTIFICATION DIVISION.                                         00020099
000300******************************************************************00030099
000400 PROGRAM-ID.    RCKUT932.                                         00040099
000500 AUTHOR.        CRAIG KEHOE.                                      00050099
000600 INSTALLATION.  KOHLS DEPARTMENT STORES.                          00060099
000700 DATE-WRITTEN.  10-2003                                           00070099
000800 DATE-COMPILED.                                                   00080099
000900******************************************************************00090099
001000*   PRORATION - STORE SALES RANKING.                              00100099
001100******************************************************************00110099
001200* A LISTING OF THE NET SUMS OF STORE SALES OVER FOUR 1 WEEK       00120099
001300* PERIODS IS UPLOADED TO THE KOHLS MAINFRAME EVERY WEEK.  THE     00130099
001400* CONTENTS OF THE FILE ARE LOADED INTO THE DB2 TABLE              00140099
001500* RCT_NET_SLS_SUM.  THE TASK OF THIS PROGRAM IS TO RANK ALL       00150099
001600* SIGNIFICANT STORE SALES AT THE LEVELS OF DEPARTMENT, MAJOR      00160099
001700* CLASS, SUBCLASS, AND OVERALL SALES, USING RCT_NET_SLS_SUM AS    00170099
001800* THE DATA SOURCE.  THE PROGRAM DETERMINES WHETHER OR NOT SALES   00180099
001900* ARE WORTH RANKING AT A GIVEN LEVEL BY COMPARING THE NUMBER      00190099
002000* OF STORES THAT HAD SALES AT THAT LEVEL FOR THE PREVIOUS FOUR    00200099
002100* WEEKS.  THE PROGRAM WILL NOT RANK A LEVEL (BE IT                00210099
002200* DEPARTMENT-MAJORCLASS-SUBCLASS, DEPARTMENT-MAJORCLASS, OR       00220099
002300* SIMPLY DEPARTMENT) IF FEWER THAN HALF OF THE STORES DID NOT     00230099
002400* HAVE SALES AT THAT LEVEL OVER THE PREVIOUS FOUR WEEKS.          00240099
002500*                                                                 00250099
002600*                                                                 00260099
002700*THE PROGRAM STARTS BY CREATING A NEW PROCESS GROUP IN            00270099
002800*RCT_PRCG_CNTL. FIRST IT GETS THE CURRENT TIMESTAMP.  THEN        00280099
002900*IT GETS THE MAXIMUM PROCESS GROUP NUMBER (PRCG_NBR) (WHERE       00290099
003000*THE BEGIN TIME IS LESS THAN THE CURRENT TIMESTMP) FROM           00300099
003100*RCT_PRCG_CNTL AND ADDS 1 TO IT TO GET THE CURRENT PROCESS        00310099
003200*NUMBER.  NEXT IT INSERTS A NEW RECORD IN RCT_PRCG_CNTL FOR       00320099
003300*THE CURRENT PROCESS.  THIS NEW RECORD'S BEGIN AND END            00330099
003400*TIMESTAMPS ARE SET TO INFINITY.                                  00340099
003500*                                                                 00350099
003600*THE PROGRAM NEXT FETCHES ALL THE STORES FROM XLT_LOC INTO        00360099
003700*AN INTERNAL TABLE (PT-W9-STORE).                                 00370099
003800*                                                                 00380099
003900*THE PROGRAM IS NOW READY TO BEGIN RANKING STORES.                00390099
004000*                                                                 00400099
004100*1.  IT FETCHES DISTINCT COMBINATIONS OF DEPARTMENT, MAJOR        00410099
004200*CLASS AND SUBCLASS FROM RCT_NET_SLS_SUM. IT WILL EVALUATE        00420099
004300*ACCORDING TO UNIQUE DEPARTMENTS, DEPARTMENT-MAJORCLASS'S,        00430099
004400*AND DEPARTMENT-MAJORCLASS-SUBCLASS'S. FOR EVERY DEPARTMENT,      00440099
004500*THERE MAY BE SEVERAL MAJOR CLASSES, AND FOR EVERY MAJOR CLASS,   00450099
004600*THERE MAY BE SEVERAL SUB CLASSES. THE PROGRAM WOULD WASTE        00460099
004700*CYCLES IF IT EVALUATED EVERY RECORD WITH A DEPARTMENT NUMBER     00470099
004800*ON IT.  THE CURSOR IS SORTED FIRST BY DEPARTMENT, THEN BY        00480099
004900*MAJOR CLASS, AND THEN BY SUBCLASS. IF A DEPARTMENT NUMBER        00490099
005000*IS FETCHED THAT EQUALS THE PREVIOUS RECORD'S DEPARTMENT NUMBER,  00500099
005100*THEN THE PROGRAM WILL NOT BOTHER TO EVALUATE THE DEPARTMENT      00510099
005200*BECAUSE IT HAS ALREADY BEEN EVALUATED.  LIKEWISE, IF THIS        00520099
005300*RECORD'S MAJOR CLASS IS THE SAME AS THE PREVIOUS RECORD'S        00530099
005400*MAJOR CLASS, THEN THERE IS NO REASON TO EVALUATE THE MAJOR       00540099
005500*CLASS. IF THIS RECORD'S MAJOR CLASS IS DIFFERENT FROM THE        00550099
005600*PREVIOUS RECORD'S MAJOR CLASS (BUT THE DEPARTMENT IS THE SAME),  00560099
005700*THEN THE DEPARTMENT-MAJORCLASS WILL BE EVALUATED FOR RANKING.    00570099
005800*ALTERNATIVELY, IF THE MAJOR CLASS IS NEW (THAT IS, DIFFERENT     00580099
005900*FROM THE PREVIOUS MAJOR CLASS), AND THE DEPARTMENT IS THE SAME   00590099
006000*AS THE PREVIOUS DEPARTMENT, BUT THE DEPARTMENT FAILED TO MEET    00600099
006100*THE RANKING THRESHOLD AND WAS NOT RANKED, THEN THE               00610099
006200*DEPARTMENT-MAJORCLASS WILL NOT BE RANKED (NOR WILL THE           00620099
006300*SUBSEQUENT DEPARTMENT-MAJORCLASS-SUBCLASS).THE REASON            00630099
006400*FOR THIS IS THE DEPARTMENT-MAJORCLASS FALLS HIERARCHICALLY       00640099
006500*UNDER THE DEPARTMENT, AND THE DEPARTMENT-MAJORCLASS-SUBCLASS     00650099
006600*FALLS HIERARCHICALLY UNDER THE DEPARTMENT-MAJORCLASS.            00660099
006700*ACCORDINGLY, IF A RECORD IS FETCHED WHERE THE DEPARTMENT IS      00670099
006800*RANKED, BUT THE MAJOR CLASS IS EVALUATED AND NOT RANKED, THEN    00680099
006900*THE SUBCLASS WILL NOT BE EVALUATED BECAUSE IT IS A FOREGONE      00690099
007000*CONCLUSION THAT IF THE DEPARTMENT-MAJORCLASS IS CANNOT BE        00700099
007100*RANKED THEN IT'S DEPARTMENT-MAJORCLASS-SUBCLASS CANNOT BE        00710099
007200*RANKED.                                                          00720099
007300*                                                                 00730099
007400*2.  THE PROGRAM WILL RANK THE STORES FETCHED ACCORDING TO        00740099
007500*DEPARTMENT (IF THE DEPARTMENT IS EQUAL TO THE PREVIOUS           00750099
007600*DEPARTMENT, THEN SKIP THIS STEP).                                00760099
007700*  A.  FETCH FROM THE CURSOR FOR GETTING THE SALES BY             00770099
007800*      DEPARTMENT.                                                00780099
007900*  B.  INSERT THE FETCHED SALES INTO THE INTERNAL STORE SALES     00790099
008000*      TABLE.                                                     00800099
008100*  C.  AFTER ALL THE RECORDS HAVE BEEN FETCHED, IF THE NUMBER     00810099
008200*      OF RECORDS IS GREATER THAN THE RANKING THRESHOLD, THEN     00820099
008300*      SORT THE FETCHED STORES BY THEIR SALES.                    00830099
008400*                                                                 00840099
008500*3.  THE PROGRAM WILL RANK THE STORES FETCHED ACCORDING TO        00850099
008600*MAJOR CLASS AND DEPARTMENT (IF THE CURRENT DEPARTMENT IS         00860099
008700*EQUAL TO THE PREVIOUS DEPARTMENT OR THE CURRENT DEPARTMENT WAS   00870099
008800*NOT RANKED, THEN SKIP THIS STEP).                                00880099
008900*  A.  FETCH FROM THE CURSOR FOR GETTING THE SALES BY             00890099
009000*      DEPARTMENT AND MAJOR CLASS.                                00900099
009100*  B.  INSERT THE FETCHED SALES INTO THE INTERNAL STORE SALES     00910099
009200*      TABLE.                                                     00920099
009300*  C.  AFTER ALL THE RECORDS HAVE BEEN FETCHED, IF THE NUMBER     00930099
009400*      OF RECORDS IS GREATER THAN THE RANKING THRESHOLD, THEN     00940099
009500*      SORT THE FETCHED STORES BY THEIR SALES.                    00950099
009600*                                                                 00960099
009700*4.  THE PROGRAM WILL RANK THE STORES FETCHED ACCORDING TO        00970099
009800*SUBCLASS, MAJOR CLASS, AND DEPARTMENT.  (( IF THE CURRENT        00980099
009900*DEPARTMENT IS EQUAL TO THE PREVIOUS DEPARTMENT AND THE CURRENT   00990099
010000*MAJOR CLASS IS EQUAL TO THE PREVIOUS MAJOR CLASS) OR THE         01000099
010100*CURRENT DEPARTEMENT AND MAJOR CLASS WAS NOT RANKED, THEN SKIP    01010099
010200*THIS STEP).                                                      01020099
010300*  A.  FETCH FROM THE CURSOR FOR GETTING THE SALES BY             01030099
010400*      SUBCLASS, MAJOR CLASS, AND DEPARTMENT.                     01040099
010500*  B.  INSERT THE FETCHED SALES INTO THE INTERNAL STORE SALES     01050099
010600*      TABLE.                                                     01060099
010700*  C.  AFTER ALL THE RECORDS HAVE BEEN FETCHED, IF THE NUMBER     01070099
010800*      OF RECORDS IS GREATER THAN THE RANKING THRESHOLD, THEN     01080099
010900*      SORT THE FETCHED STORES BY THEIR SALES.                    01090099
011000*                                                                 01100099
011100*5.  THE PROGRAM WILL RANK THE STORES FETCHED ACCORDING TO        01110099
011200*THEIR TOTAL SALES.                                               01120099
011300*                                                                 01130099
011400******************************************************************01140099
011500 ENVIRONMENT DIVISION.                                            01150099
011600******************************************************************01160099
011700 DATA DIVISION.                                                   01170099
011800 FILE SECTION.                                                    01180099
011900******************************************************************01190099
012000 WORKING-STORAGE SECTION.                                         01200099
012100*                                                                 01210099
012200 01  PC-PROGRAM-CONSTANTS.                                        01220099
012300     05  PC-CURRENT-PROGRAM-NAME   PIC  X(08)    VALUE            01230099
012400                                                  'RCKUT932'.     01240099
012500*    PC-TOTAL-ZERO HOLDS THE NUMBER FOR INITIALIZING              01250099
012600*    PT-TOTAL-SALES                                               01260099
012700     05  PC-TOTAL-ZERO             PIC S9(13)V   VALUE            01270099
012800                                            +0000000000000 COMP-3.01280099
012900*    PC-REQUIRED-NUM-WKNDS HOLDS THE REQUIRED NUMBER OF           01290099
013000*    WEEKENDS OF SALES A STORE MUST HAVE IN ORDER TO COUNT        01300099
013100*    TOWARD A DEPARTMENT'S, DEPARTMENT-MAJORCLASS'S, OR           01310099
013200*    DEPARTMENT-MAJORCLASS-SUBCLASS'S MINIMUM THRESHOLD           01320099
013300*    FOR RANKING                                                  01330099
013400     05  PC-REQUIRED-NUM-WKNDS     PIC S9(01)    VALUE +4 COMP.   01340099
013500*    CONSTANT FOR THE MINIMUM PERCENTAGE OF STORES THAT MUST      01350099
013600*    HAVE SALES FOR THE REQUIRED NUMBER OF WEEKENDS SO THAT       01360099
013700*    THE PRESENT DEPARTMENT, DEPARTMENT-MAJORCLASS, OR            01370099
013800*    DEPARTMENT-MAJORCLASS-SUBCLASS WILL BE RANKED                01380099
013900     05  PC-STORE-CNT-PERCENT      PIC S9V99 VALUE +0.50 COMP-3.  01390099
014000*    PC-COMMIT-THRESHOLD HOLDS THE NUMBER OF DB2 TRANSACTIONS     01400099
014100*    NEEDED IN ORDER FOR THE PROGRAM TO DO A DB2 COMMIT           01410099
014200     05  PC-COMMIT-THRESHOLD       PIC S9(04) VALUE +1000 COMP.   01420099
014300                                                                  01430099
014400                                                                  01440099
014500 01  PS-PROGRAM-SWITCHES.                                         01450099
014600*    HAVE ALL RECORDS IN THE PRESENT QUERY BEEN FETCHED?          01460099
014700     05  PS-END-OF-CURSOR-SW       PIC  X(01)  VALUE 'N'.         01470099
014800         88  PS-END-OF-CURSOR-YES              VALUE 'Y'.         01480099
014900         88  PS-END-OF-CURSOR-NO               VALUE 'N'.         01490099
015000*    HAVE ALL OF THE STORES FROM THE LOCATION     (XLT_LOC)       01500099
015100*    TABLE BEEN FETCHED?                                          01510099
015200     05  PS-END-OF-STORE-CSR-SW    PIC  X(01)  VALUE 'N'.         01520099
015300         88  PS-END-OF-STORE-CSR-YES           VALUE 'Y'.         01530099
015400         88  PS-END-OF-STORE-CSR-NO            VALUE 'N'.         01540099
015500*    HAVE ALL UNIQUE COMBINATIONS OF DEPT, MAJCLASS, AND          01550099
015600*    SUBCLASS FROM THE VENDOR STYLE TABLE BEEN FETCHED?           01560099
015700     05  PS-CSR-DEPT-MAJ-SUB-SW    PIC  X(01)  VALUE 'N'.         01570099
015800         88  PS-END-OF-CSR-DEPT-MAJ-SUB        VALUE 'Y'.         01580099
015900         88  PS-NOT-END-CSR-DEPT-MAJ-SUB       VALUE 'N'.         01590099
016000*    HAVE ALL STORES FOR A GIVEN DEPARTMENT-MJAORCLASS-SUBCLASS   01600099
016100*    BEEN FETCHED?                                                01610099
016200     05  PS-CSR-SUB-SLS-SW         PIC  X(01)  VALUE 'N'.         01620099
016300         88  PS-END-OF-CSR-SUB-SLS             VALUE 'Y'.         01630099
016400         88  PS-NOT-END-CSR-SUB-SLS            VALUE 'N'.         01640099
016500*    HAVE ALL STORES FOR A GIVEN DEPARTMENT-MAJORCLASS BEEN       01650099
016600*    FETCHED?                                                     01660099
016700     05  PS-CSR-MAJ-SLS-SW         PIC  X(01)  VALUE 'N'.         01670099
016800         88  PS-END-OF-CSR-MAJ-SLS             VALUE 'Y'.         01680099
016900         88  PS-NOT-END-CSR-MAJ-SLS            VALUE 'N'.         01690099
017000*    HAVE ALL STORES FOR A GIVEN DEPARTMENT BEEN FETCHED?         01700099
017100     05  PS-CSR-DEPT-SLS-SW        PIC  X(01)  VALUE 'N'.         01710099
017200         88  PS-END-OF-CSR-DEPT-SLS            VALUE 'Y'.         01720099
017300         88  PS-NOT-END-CSR-DEPT-SLS           VALUE 'N'.         01730099
017400*    HAVE ALL STORES LISTED IN RCT_NET_SLS_SUM BEEN FETCHED?      01740099
017500     05  PS-CSR-CORP-SLS-SW        PIC  X(01)  VALUE 'N'.         01750099
017600         88  PS-END-OF-CSR-CORP-SLS            VALUE 'Y'.         01760099
017700         88  PS-NOT-END-CSR-CORP-SLS           VALUE 'N'.         01770099
017800*    DOES A STORE IN THE QUERIED RECORD MATCH A STORE NUMBER      01780099
017900*    ON THE (XLT_LOC-DERIVED) INTERNAL STORE TABLE?               01790099
018000     05  PS-STORE-MATCH-SW         PIC  X(01)  VALUE 'N'.         01800099
018100         88  PS-STORE-MATCH-FOUND              VALUE 'Y'.         01810099
018200         88  PS-STORE-MATCH-NOT-FOUND          VALUE 'N'.         01820099
018300*    WERE THE STORES RANKED FOR THE PRESENT DEPARTMENT?           01830099
018400     05  PS-STRS-RANKED-DEPT-SW    PIC X(01)   VALUE 'N'.         01840099
018500         88  PS-STRS-RANKED-FOR-CUR-DEPT       VALUE 'Y'.         01850099
018600         88  PS-STRS-NO-RANK-FOR-CUR-DEPT      VALUE 'N'.         01860099
018700*    WERE THE STORES RANKED FOR THE PRESENT DEPARTMENT-MAJORCLASS?01870099
018800     05  PS-STRS-RANKED-MAJ-SW     PIC X(01)   VALUE 'N'.         01880099
018900         88  PS-STRS-RANKED-FOR-CUR-MAJ        VALUE 'Y'.         01890099
019000         88  PS-STRS-NO-RANK-FOR-CUR-MAJ       VALUE 'N'.         01900099
019100*    DOES THE PRESENT STORE HAVE THE REQUIRED NUMBER OF WEEKS     01910099
019200*    OF SALES?                                                    01920099
019300     05  PS-STRS-WITH-RQD-WKS-SW   PIC X(01)   VALUE 'Y'.         01930099
019400         88  PS-STORE-HAS-RQD-WKS-SLS          VALUE 'Y'.         01940099
019500         88  PS-STR-NOT-HAVE-RQD-WKS-SLS       VALUE 'N'.         01950099
019600                                                                  01960099
019700 01  PV-PROGRAM-VARIABLES.                                        01970099
019800*    PV-NUM-COMMITS HOLDS THE TALLY OF RANKING ITERATIONS         01980099
019900     05  PV-NUM-COMMITS            PIC S9(03)  VALUE +0 COMP.     01990099
020000*    PV-BEGIN-TMST IS TAKEN AT THE BEGINNING OF THE PROGRAM;      02000099
020100*    USED FOR UPDATING, INSERTING TO THE PROCESS GROUP TABLE      02010099
020200     05  PV-BEGIN-TMST             PIC  X(26)  VALUE SPACES.      02020099
020300*    PV-STORE-COUNT HOLDS THE TOTAL NUMBER OF STORES FETCHED      02030099
020400*    FROM THE STORE MASTER TABLE; USED THROUGHOUT THE PROGRAM     02040099
020500     05  PV-STORE-COUNT            PIC S9(05)  VALUE +0 COMP.     02050099
020600*    PV-NUM-CORP-RECS-FETCHED IS INCREMENTED EVERY TIME A         02060099
020700*    STORE SALES RECORD AT THE CORPORATE LEVEL IS FETCHED FROM    02070099
020800*    RCT_NET_SLS_SUM.  AFTER ALL RECORDS HAVE BEEN FETCHED FROM   02080099
020900*    THE CORPORATE LEVEL CURSOR, THIS VALUE WILL BE EQUAL TO THE  02090099
021000*    TOTAL NUMBER OF DISTINCT STORES CONTAINED IN RCT_NET_SLS_SUM.02100099
021100*    IF A +100 SQLCODE IS RETURNED FROM THE CORP LEVEL CURSOR     02110099
021200*    AND PV-NUM-CORP-RECS-FETCHED IS EQUAL TO ZERO, THEN THERE ARE02120099
021300*    NO RECORDS IN RCT_NET_SLS_SUM, AND THIS PROGRAM WILL ABEND.  02130099
021400     05  PV-NUM-CORP-RECS-FETCHED  PIC S9(05)  VALUE +0 COMP.     02140099
021500*    PV-PRCG-NBR IS THE CURRENT PROCESS GROUP NUMBER              02150099
021600     05  PV-PRCG-NBR               PIC S9(09)  VALUE +0 COMP.     02160099
021700*    PV-POINTER IS THE CURRENT POINTER FOR THE STORE NUMBER       02170099
021800     05  PV-POINTER                PIC S9(04)  VALUE +0 COMP.     02180099
021900*    PV-LOC-NBR HOLDS THE CURRENT STORE NUMBER                    02190099
022000     05  PV-LOC-NBR                PIC S9(05)  VALUE +0 COMP.     02200099
022100*    THE PREVIOUS PROCESS GRUOP'S NUMBER                          02210099
022200     05  PV-PREV-PRCG-NBR          PIC S9(09)  VALUE +0 COMP.     02220099
022300*    THE INDEX FOR INSERTING STORES TO THE SUBCLASS RANK TABLE    02230099
022400     05  PV-FINISH-SUB-IDX         PIC S9(05)  VALUE +0 COMP.     02240099
022500*    THE INDEX FOR INSERTING STORES TO THE MAJCLASS RANK TABLE    02250099
022600     05  PV-FINISH-MAJ-IDX         PIC S9(05)  VALUE +0 COMP.     02260099
022700*    THE INDEX FOR INSERTING STORES TO THE DEPARTMENT RANK TABLE  02270099
022800     05  PV-FINISH-DEPT-IDX        PIC S9(05)  VALUE +0 COMP.     02280099
022900*    THE INDEX FOR INSERTING STORES TO THE CORP RANK TABLE        02290099
023000     05  PV-FINISH-CORP-IDX        PIC S9(05)  VALUE +0 COMP.     02300099
023100*    PV-RANK-THRESHOLD HOLDS THE MINIMUM NUMBER OF STORES         02310099
023200*    (HAVING THE REQUIRED NUMBER OF WEEKS OF SALES) NEEDED IN     02320099
023300*    ORDER FOR THE PROGRAM TO RANK THE CURRENT DEPARTMENT,        02330099
023400*    DEPARTMENT-MAJORCLASS, OR DEPARTMENT-MAJORCLASS-SUBCLASS     02340099
023500     05  PV-RANK-THRESHOLD         PIC S9(05)  VALUE +0 COMP.     02350099
023600*    THESE HOLD THE CURRENT DEPARTMENT, MAJOR CLASS, AND SUB CLASS02360099
023700*    ID'S                                                         02370099
023800     05  PV-DEPT-NBR               PIC S9(04)V VALUE +0 COMP-3.   02380099
023900     05  PV-MAJ-CL-NBR             PIC S9(04)V VALUE +0 COMP-3.   02390099
024000     05  PV-SUB-CL-NBR             PIC S9(04)V VALUE +0 COMP-3.   02400099
024100*    PV-SUM-SLS-UNT-QTY HOLDS THE SUM OF SALES OVER A SEVERAL-WEEK02410099
024200*    PERIOD FOR A SINGLE STORE AT A SINGLE DEPARTMENT,            02420099
024300*    DEPARTMENT-MAJORCLASS OR DEPARTMENT-MAJORCLASS-SUBCLASS LEVEL02430099
024400*    OR AT THE CORPORATE LEVEL                                    02440099
024500     05  PV-SUM-SLS-UNT-QTY        PIC S9(12)V VALUE +0 COMP-3.   02450099
024600*    PV-PREV-*-NBR ARE USED TO DETERMINE IF A NEW DEPARTMENT      02460099
024700*    OR DEPARTMENT-MAJORCLASS WAS FETCHED FROM VENDOR STYLE       02470099
024800     05  PV-PREV-MAJ-CL-NBR        PIC S9(04)V VALUE -1 COMP-3.   02480099
024900     05  PV-PREV-DEPT-NBR          PIC S9(04)V VALUE -1 COMP-3.   02490099
025000*    PV-FETCHED-STRS-COUNT HOLDS THE NUMBER OF FETCHED STORES     02500099
025100*    FOR A SINGLE DEPARTMENT, DEPARTMENT-MAJORCLASS, OR           02510099
025200*    DEPARTMENT-MAJORCLASS-SUBCLASS                               02520099
025300     05  PV-FETCHED-STRS-CNT       PIC S9(05)  VALUE +0 COMP.     02530099
025400*    PV-RQD-WKS-SLS-COUNT HOLDS THE NUMBER OF FETCHED STORES      02540099
025500*    HAVING THE REQUIRED NUMBER OF WEEKS OF SALES FOR A SINGLE    02550099
025600*    DEPARTMENT, DEPARTMENT-MAJORCLASS, OR                        02560099
025700*    DEPARTMENT-MAJORCLASS-SUBCLASS                               02570099
025800     05  PV-RQD-WKS-SLS-COUNT      PIC S9(05)  VALUE +0 COMP.     02580099
025900*    PV-NUM-*-WEEKS HOLDS THE NUMBER OF WEEKS OF SALES OF A STORE 02590099
026000*    IN SPECIFIC CATEGORY (DEPT,DEPT-MAJ,DEPT-MAJ-SUB)            02600099
026100     05  PV-NUM-SUB-WEEKS          PIC S9(05)  VALUE +0 COMP.     02610099
026200     05  PV-NUM-MAJ-WEEKS          PIC S9(05)  VALUE +0 COMP.     02620099
026300     05  PV-NUM-DEPT-WEEKS         PIC S9(05)  VALUE +0 COMP.     02630099
026400*    PV-NUM-CORP-WEEKS-DUMMY IS A PLACE HOLDER FOR THE CORP       02640099
026500*    SALES QUERY -- ALL STORES AT THE CORP LEVEL GET RANKED       02650099
026600*    REGARDLESS OF HOW MANY WEEKS THEY HAD SALES                  02660099
026700     05  PV-NUM-CORP-WEEKS-DUMMY   PIC S9(05)  VALUE +0 COMP.     02670099
026800*    PV-INITIALIZE-IDX IS USED TO INDEX THROUGH THE INTERNAL      02680099
026900*    STORE TABLE TO RESET ALL OF THE TOTAL SALES TO ZERO          02690099
027000*    AND AT THE SAME TIME TO INDEX THROUGH THE INTERNAL STORE     02700099
027100*    POINTER TABLE TO RESET THE STORE POINTERS                    02710099
027200     05  PV-INITIALIZE-IDX         PIC S9(05)  VALUE +0 COMP.     02720099
027300                                                                  02730099
027400                                                                  02740099
027500* CONSTANTS THAT ARE REQUIRED TO COMB-SORT STORES IN ORDER TO     02750099
027600* RANK THE STORES                                                 02760099
027700 01  PC-COMB-SORT-CONSTANTS.                                      02770099
027800     05  PC-ONE                    PIC S9(05)    VALUE +1  COMP.  02780099
027900     05  PC-THREE                  PIC S9(05)V99 VALUE +3  COMP-3.02790099
028000     05  PC-TEN                    PIC S9(05)V99 VALUE +10 COMP-3.02800099
028100     05  PC-THIRTEEN               PIC S9(05)V99 VALUE +13 COMP-3.02810099
028200     05  PC-ZERO                   PIC S9(05)V99 VALUE +0 COMP-3. 02820099
028300* SWITCH THAT IS REQUIRED TO DO COMB SORT                         02830099
028400 01 PS-COMB-SORT-SWITCHES.                                        02840099
028500*    ARE THE STORES CORRECTLY ORDERED BY SALES?                   02850099
028600     05  PS-SWAP-IND               PIC  X(01)  VALUE 'Y'.         02860099
028700         88  PS-STOP-SWAPPING                  VALUE 'N'.         02870099
028800         88  PS-KEEP-SWAPPING                  VALUE 'Y'.         02880099
028900* VARIABLES THAT ARE REQUIRED TO DO COMB SORT                     02890099
029000 01 PV-COMB-SORT-VARIABLES.                                       02900099
029100     05  PV-ITEM-NBR               PIC S9(06)  VALUE +0 COMP.     02910099
029200     05  PV-JUMP-SIZE              PIC S9(06)  VALUE +0 COMP.     02920099
029300     05  PV-SWAP-NBR               PIC S9(06)  VALUE +0 COMP.     02930099
029400     05  PV-SWAP-STORE-NBR         PIC S9(06)  VALUE +0 COMP.     02940099
029500     05  PV-UPPER-LIMIT            PIC S9(06)  VALUE +0 COMP.     02950099
029600     05  PV-SWAP-TOTAL-SLS         PIC S9(13)V99 VALUE +0 COMP-3. 02960099
029700                                                                  02970099
029800* STANDARD ABEND FIELDS                                           02980099
029900 01  PV-ABEND-FIELDS.                                             02990099
030000     05  PV-PARAGRAPH-NAME         PIC  X(30)  VALUE SPACES.      03000099
030100     05  PV-TABLE-NAME             PIC  X(30)  VALUE SPACES.      03010099
030200     05  PV-SQLCODE                PIC S9(09)  VALUE +0.          03020099
030300     05  PV-DISPLAY-SQLCODE        PIC   ------999.               03030099
030400     05  PV-MESSAGE                PIC  X(79)  VALUE SPACES.      03040099
030500     05  PV-ABEND-CODE             PIC S9(04) VALUE +0 COMP SYNC. 03050099
030600     05  PV-ABEND-PROGRAM          PIC  X(08) VALUE 'RCKUT932'.   03060099
030700     05  PV-ABEND-PARAGRAPH        PIC  X(25) VALUE SPACES.       03070099
030800     05  PV-ABEND-OPERATION        PIC  X(20) VALUE SPACES.       03080099
030900     05  PV-ABEND-STRUCTURE-1      PIC  X(08) VALUE SPACES.       03090099
031000     05  PV-ABEND-STRUCTURE-2      PIC  X(08) VALUE SPACES.       03100099
031100     05  PV-ABEND-STATUS           PIC  XX    VALUE SPACES.       03110099
031200     05  PV-DB2-OPERATION-MESSAGE-1 PIC  X(79) VALUE SPACES.      03120099
031300     05  PV-DB2-OPERATION-MESSAGE-2 PIC  X(79) VALUE SPACES.      03130099
031400                                                                  03140099
031500* FIELDS FOR CONTAINING THE SQL ERROR MESSAGE                     03150099
031600 01  PT-SQLERRMC.                                                 03160099
031700     05  PT-SQLERRMC1              PIC X(10).                     03170099
031800     05  PT-SQLERRMC2              PIC X(10).                     03180099
031900     05  PT-SQLERRMC3              PIC 9(02) BINARY.              03190099
032000                                                                  03200099
032100* THE STORE TABLES CONTAIN THE STORES AND POINTERS TO THE         03210099
032200* STORES AND THEIR SALES IN ORDER TO DO FAST RANKING              03220099
032300 01  PT-STORE-TABLES.                                             03230099
032400     10  PT-STORE-ARRAY            OCCURS 3000 TIMES              03240099
032500                                   INDEXED BY PT-STORE-IDX.       03250099
032600       15  PT-STORE-DETAIL.                                       03260099
032700*        CONTAINS STORE NUMBERS FETCHED FROM XLT_LOC              03270099
032800         20  PT-STORE              PIC S9(04) COMP.               03280099
032900*        ACCUMULATES STORE SALES FOR A GIVEN DEPARTMENT,          03290099
033000*        DEPARTMENT-MAJOR CLASS, DEPARTMENT-MAJORCLASS-SUBCLASS,  03300099
033100*        OR CORPORATE-WIDE                                        03310099
033200         20  PT-TOTAL-SALES        PIC S9(13)V COMP-3.            03320099
033300                                                                  03330099
033400 01  PT-POINTER-TABLES.                                           03340099
033500     10  PT-POINTER-ARRAY          OCCURS 9999 TIMES              03350099
033600                                   INDEXED BY PT-POINTER-IDX.     03360099
033700       15  PT-SALES-DETAIL.                                       03370099
033800*        POINTS TO POSITIONS IN PT-STORE                          03380099
033900         20  PT-STORE-POINTER      PIC S9(04) COMP VALUE +0.      03390099
034000                                                                  03400099
034100******************************************************************03410099
034200*  LAYOUT FOR THE FILE AND FOR THE TABLE TO BE INSERTED TO       *03420099
034300******************************************************************03430099
034400     COPY RCRD932.                                                03440099
034500                                                                  03450099
034600******************************************************************03460099
034700*  INCLUDE THE NET SALES SUM TABLE DCLGEN                         03470099
034800*    FOUND AT TKMD.DB2.DCLGEN                                     03480099
034900******************************************************************03490099
035000******************************************************************03500099
035100*    LOCATION TABLE - XLT_LOC                                     03510099
035200******************************************************************03520099
035300     EXEC SQL                                                     03530099
035400         INCLUDE XLT00010                                         03540099
035500     END-EXEC.                                                    03550099
035600******************************************************************03560099
035700*    VENDOR STYLE TABLE - XLT_VND_STYL                            03570099
035800******************************************************************03580099
035900     EXEC SQL                                                     03590099
036000         INCLUDE XLT00004                                         03600099
036100     END-EXEC.                                                    03610099
036200******************************************************************03620099
036300*    DEPARTMENT RANK TABLE - RCT_LOC_DEPT_RNK                     03630099
036400******************************************************************03640099
036500     EXEC SQL                                                     03650099
036600         INCLUDE RCT00005                                         03660099
036700     END-EXEC.                                                    03670099
036800******************************************************************03680099
036900*    DEPARTMENT-MAJORCLASS RANK TABLE - RCT_LOC_MAJ_RNK           03690099
037000******************************************************************03700099
037100     EXEC SQL                                                     03710099
037200         INCLUDE RCT00006                                         03720099
037300     END-EXEC.                                                    03730099
037400******************************************************************03740099
037500*    DEPARTMENT-MAJORCLASS-SUBCLASS RANK TABLE - RCT_LOC_SUB_RNK  03750099
037600******************************************************************03760099
037700     EXEC SQL                                                     03770099
037800         INCLUDE RCT00007                                         03780099
037900     END-EXEC.                                                    03790099
038000******************************************************************03800099
038100*    CORPORATE-LEVEL RANK TABLE - RCT_LOC_RNK                     03810099
038200******************************************************************03820099
038300     EXEC SQL                                                     03830099
038400         INCLUDE RCT00008                                         03840099
038500     END-EXEC.                                                    03850099
038600******************************************************************03860099
038700*    SALES DATA TABLE - RCT-NET-SLS-SUM                           03870099
038800******************************************************************03880099
038900     EXEC SQL                                                     03890099
039000         INCLUDE RCT00010                                         03900099
039100     END-EXEC.                                                    03910099
039200******************************************************************03920099
039300*    PRCESS CONTROL TALBE - RCT-PRCG-CNTL                         03930099
039400******************************************************************03940099
039500     EXEC SQL                                                     03950099
039600         INCLUDE RCT00011                                         03960099
039700     END-EXEC.                                                    03970099
039800******************************************************************03980099
039900*  COMMUNICATION AREA FOR DB2                                     03990099
040000******************************************************************04000099
040100     EXEC SQL                                                     04010099
040200         INCLUDE SQLCA                                            04020099
040300     END-EXEC.                                                    04030099
040400                                                                  04040099
040500******************************************************************04050099
040600*  DB2 SQL ERROR MESSAGE FORMAT AREA                              04060099
040700******************************************************************04070099
040800     COPY DPWS004.                                                04080099
040900******************************************************************04090099
041000* COBOL CURSOR DECLARATION TO READ                                04100099
041100******************************************************************04110099
041200*    THIS QUERY RETRIEVES ALL OF ACTIVE STORES IN XLT_LOC (THE    04120099
041300*    LOGISTICS DOMAIN LOCATION TABLE)                             04130099
041400     EXEC SQL                                                     04140099
041500       DECLARE CSR-STORES CURSOR FOR                              04150099
041600         SELECT LOC_NBR                                           04160099
041700           FROM XLT_LOC                                           04170099
041800          WHERE LOC_TYP_CDE = 'DS'                                04180099
041900            AND CHAR(CURRENT DATE, ISO) <                         04190099
042000                CHAR(CLO_DTE, ISO)                                04200099
042100            AND ( CHAR(CURRENT DATE, ISO) >                       04210099
042200                  CHAR(OPN_DTE, ISO)                              04220099
042300                  OR   CHAR(CURRENT DATE, ISO) =                  04230099
042400                       CHAR(OPN_DTE, ISO) )                       04240099
042500         ORDER BY LOC_NBR                                         04250099
042600     END-EXEC.                                                    04260099
042700                                                                  04270099
042800*    THIS QUERY RETRIEVS UNIQUE DEPARTMENT, MAJOR CLASS, AND      04280099
042900*    SUBCLASS COMBINATIONS FROM XLT_VND_STYL WHERE                04290099
043000*    THE NUMBER OF STORES IS GREATER THAN HALF OF THE TOTAL       04300099
043100*    NUMBER OF ACTIVE STORES IN THE COMPANY                       04310099
043200     EXEC SQL                                                     04320099
043300     DECLARE  CSR-DEPT-MAJ-SUB CURSOR WITH HOLD FOR               04330099
043400      SELECT  DISTINCT DEPT_NBR                                   04340099
043500             ,MAJ_CL_NBR                                          04350099
043600             ,SUB_CL_NBR                                          04360099
043700        FROM  XLT_VND_STYL                                        04370099
043800       ORDER  BY  DEPT_NBR                                        04380099
043900                 ,MAJ_CL_NBR                                      04390099
044000                 ,SUB_CL_NBR                                      04400099
044100     END-EXEC.                                                    04410099
044200                                                                  04420099
044300*    THIS QUERY RETRIEVES THE STORE NUMBER, THE NUMBER OF WEEKS   04430099
044400*    OF THIS STORE'S SALES, AND THE SUM OF THIS STORE'S SALES FOR 04440099
044500*    A GIVEN COMBINATION OF DEPARTMENT-MAJORCLASS-SUBCLASS        04450099
044600     EXEC SQL                                                     04460099
044700       DECLARE  CSR-SUB-SLS CURSOR FOR                            04470099
044800        SELECT  LOC_NBR                                           04480099
044900               ,COUNT(DISTINCT SLS_EOW_DTE)                       04490099
045000               ,SUM(NET_SLS_UNT_QTY)                              04500099
045100          FROM  RCT_NET_SLS_SUM                                   04510099
045200         WHERE  DEPT_NBR    = :RC932-NET-DEPT-NBR                 04520099
045300           AND  MAJ_CL_NBR  = :RC932-NET-MAJ-CL-NBR               04530099
045400           AND  SUB_CL_NBR  = :RC932-NET-SUB-CL-NBR               04540099
045500         GROUP  BY LOC_NBR                                        04550099
045600         ORDER  BY 2 DESC, LOC_NBR                                04560099
045700     END-EXEC.                                                    04570099
045800                                                                  04580099
045900*    THIS QUERY RETRIEVES THE STORE NUMBER, THE NUMBER OF WEEKS   04590099
046000*    OF THIS STORE'S SALES, AND THE SUM OF THIS STORE'S SALES FOR 04600099
046100*    A GIVEN COMBINATION OF DEPARTMENT-MAJORCLASS                 04610099
046200     EXEC SQL                                                     04620099
046300       DECLARE  CSR-MAJ-SLS CURSOR FOR                            04630099
046400        SELECT  LOC_NBR                                           04640099
046500               ,COUNT(DISTINCT SLS_EOW_DTE)                       04650099
046600               ,SUM(NET_SLS_UNT_QTY)                              04660099
046700          FROM  RCT_NET_SLS_SUM                                   04670099
046800         WHERE  DEPT_NBR    = :RC932-NET-DEPT-NBR                 04680099
046900           AND  MAJ_CL_NBR  = :RC932-NET-MAJ-CL-NBR               04690099
047000         GROUP  BY LOC_NBR                                        04700099
047100         ORDER  BY 2 DESC, LOC_NBR                                04710099
047200     END-EXEC.                                                    04720099
047300                                                                  04730099
047400*    THIS QUERY RETRIEVES THE STORE NUMBER, THE NUMBER OF WEEKS   04740099
047500*    OF THE STORE'S SALES, AND THE SUM OF THE STORE'S SALES FOR   04750099
047600*    A GIVEN DEPARTMENT                                           04760099
047700     EXEC SQL                                                     04770099
047800       DECLARE  CSR-DEPT-SLS CURSOR FOR                           04780099
047900        SELECT  LOC_NBR                                           04790099
048000               ,COUNT(DISTINCT SLS_EOW_DTE)                       04800099
048100               ,SUM(NET_SLS_UNT_QTY)                              04810099
048200          FROM  RCT_NET_SLS_SUM                                   04820099
048300         WHERE  DEPT_NBR    = :RC932-NET-DEPT-NBR                 04830099
048400         GROUP  BY LOC_NBR                                        04840099
048500         ORDER  BY 2 DESC, LOC_NBR                                04850099
048600     END-EXEC.                                                    04860099
048700                                                                  04870099
048800*    THIS QUERY RETRIEVES THE TOTAL SALES FOR EVERY STORE IN      04880099
048900*    RCT_NET_SLS_SUM                                              04890099
049000     EXEC SQL                                                     04900099
049100       DECLARE  CSR-CORP-SLS CURSOR FOR                           04910099
049200        SELECT  LOC_NBR                                           04920099
049300               ,COUNT(DISTINCT SLS_EOW_DTE)                       04930099
049400               ,SUM(NET_SLS_UNT_QTY)                              04940099
049500          FROM  RCT_NET_SLS_SUM                                   04950099
049600         WHERE  LOC_NBR > 0                                       04960099
049700         GROUP  BY LOC_NBR                                        04970099
049800         ORDER  BY LOC_NBR                                        04980099
049900     END-EXEC.                                                    04990099
050000******************************************************************05000099
050100 LINKAGE SECTION.                                                 05010099
050200******************************************************************05020099
050300 PROCEDURE DIVISION.                                              05030099
050400******************************************************************05040099
050500******************************************************************05050099
050600*  CONTROL PROCESSING                                            *05060099
050700* THIS PARAGRAPH CREATES A NEW CONTROL RECORD, LOADS THE STORE   *05070099
050800* DATA INTO THE INTERNAL STORE TABLE, EVALUATES AND RANKS THE     05080099
050900* STORES, UPDTES THE CONTROL PROCESS RECORD, AND DOES A FINAL     05090099
051000* COMMIT.                                                         05100099
051100******************************************************************05110099
051200 1000-CONTROL-PROCESSING.                                         05120099
051300     MOVE '1000-CONTROL-PROCESSING       ' TO PV-PARAGRAPH-NAME.  05130099
051320                                                                  05140099
051330     PERFORM 2000-CREATE-NEW-RECORD.                              05150099
051340                                                                  05160099
051350     PERFORM 3000-LOAD-THE-STORE-DATA.                            05170099
051360                                                                  05180099
051370     PERFORM 4000-EVAL-AND-RANK-THE-SALES.                        05190099
051380                                                                  05200099
051390     PERFORM 11000-UPDATE-PROCESSES.                              05210099
051400                                                                  05220099
051500     PERFORM 16000-FORCE-COMMIT.                                  05230099
051600     STOP RUN.                                                    05240099
051700                                                                  05250099
051800******************************************************************05260099
051900* CREATE A NEW RECORD IN RCT_PRCG_CNTL.                           05270099
052000*THIS PARAGRAPH GETS THE CURRENT DATE, IT GETS THE NEXT           05280099
052100*PROCESS GROUP NUMBER FROM THE PROCESS TABLE.  IT USES THIS       05290099
052200*NUMBER AS THE PROCESS-GROUP-ID FOR THIS PROCESS.  IT INSERTS     05300099
052300*THE CURRENT PROCESS GROUP INTO THE PROCESS TABLE, AND COMMITS    05310099
052400*THE TRANSACTION.                                                 05320099
052500******************************************************************05330099
052600 2000-CREATE-NEW-RECORD.                                          05340099
052601     MOVE '2000-CREATE-NEW-RECORD        ' TO PV-PARAGRAPH-NAME.  05350099
052603     PERFORM 2100-GET-CURRENT-DATE.                               05360099
052604                                                                  05370099
052605     PERFORM 2200-GET-NEXT-REC-NBR.                               05380099
052606                                                                  05390099
052607     PERFORM 2300-INSERT-CURRENT-REC.                             05400099
052608     PERFORM 16000-FORCE-COMMIT.                                  05410099
052609                                                                  05420099
052610                                                                  05430099
052620******************************************************************05440099
052630* GET THE CURRENT DATE                                            05450099
052640******************************************************************05460099
052650 2100-GET-CURRENT-DATE.                                           05470099
052651     MOVE '2100-GET-CURRENT-DATE         ' TO PV-PARAGRAPH-NAME.  05480099
052653     EXEC SQL                                                     05490099
052654       SET :PV-BEGIN-TMST = CURRENT TIMESTAMP                     05500099
052655     END-EXEC.                                                    05510099
052656*    CHECK THE SQL CONDITION CODE                                 05520099
052657     PERFORM 80000-CHECK-SQL-SELECT.                              05530099
052658                                                                  05540099
052659                                                                  05550099
052660******************************************************************05560099
052670* GET THE NEXT RECORD NUMBER                                      05570099
052680******************************************************************05580099
052690 2200-GET-NEXT-REC-NBR.                                           05590099
052691     MOVE '2200-GET-NEXT-REC-NBR         ' TO PV-PARAGRAPH-NAME.  05600099
052693                                                                  05610099
052694******************************************************************05620099
052695* THE FOLLOWING SQL WILL GET THE HIGHEST PROCESS GROUP NUMBER     05630099
052696* IN THE PROCESS GROUP TABLE                                      05640099
052697******************************************************************05650099
052698     EXEC SQL                                                     05660099
052699          SELECT  MAX(PRCG_NBR)                                   05670099
052700            INTO :PV-PRCG-NBR                                     05680099
052800            FROM  RCT_PRCG_CNTL                                   05690099
052900           WHERE  PRCG_END_TMST =                                 05700099
053000                     '9999-09-09-09.09.09.999999'                 05710099
053100     END-EXEC.                                                    05720099
053200     MOVE 'RCT_PRCG_CNTL                 ' TO PV-TABLE-NAME.      05730099
053300     IF SQLCODE = -305                                            05740099
053400       MOVE 1 TO PV-PRCG-NBR                                      05750099
053500*      THE FOLLOWING SQL WILL BE RUN ONLY WHEN RCT_PRCG_CNTL      05760099
053600*      IS EMPTY.  IT WILL INSERT THE FIRST PROCESS GROUP RECORD.  05770099
053700*      THE PROCESS GROUP ID WILL BE 1. THE FIRST PROCESS GROUP    05780099
053800*      HAS A BEGINNING TIMESTAMP OF "NEGATIVE INFINITY" AND AN    05790099
053900*      END TIMESTAMP OF "POSITIVE INFINITY".                      05800099
054000       EXEC SQL                                                   05810099
054100            INSERT INTO RCT_PRCG_CNTL                             05820099
054200                   ( PRCG_NBR                                     05830099
054300                    ,PRCG_BEG_TMST                                05840099
054400                    ,PRCG_END_TMST )                              05850099
054500            VALUES ( 1                                            05860099
054600                    ,'1900-01-01-01.01.01.000001'                 05870099
054700                    ,'9999-09-09-09.09.09.999999' )               05880099
054800       END-EXEC                                                   05890099
054900*      CHECK THE SQL CONDITION CODE                               05900099
055000       PERFORM 81000-CHECK-SQL-INSERT                             05910099
055100     ELSE                                                         05920099
055200*      CHECK THE SQL CONDITION CODE                               05930099
055300       PERFORM 80000-CHECK-SQL-SELECT                             05940099
055400     END-IF.                                                      05950099
055500*    THE CURRENT PROCESS GROUP NUMBER IS 1 GREATER THAN THE       05960099
055600*    MAXIMUM PROCESS GROUP NUMBER THAT WAS SELECTED FROM THE      05970099
055700*    PROCESS GROUP TABLE.                                         05980099
055800     ADD 1 TO PV-PRCG-NBR.                                        05990099
055900                                                                  06000099
056000******************************************************************06010099
056100* INSERT THE CURRENT PROCESS GROUP RECORD                         06020099
056200******************************************************************06030099
056300 2300-INSERT-CURRENT-REC.                                         06040099
056301     MOVE '2300-INSERT-CURRENT-REC       ' TO PV-PARAGRAPH-NAME.  06050099
056302                                                                  06060099
056303     EXEC SQL                                                     06070099
056304          INSERT INTO RCT_PRCG_CNTL                               06080099
056305                 ( PRCG_NBR                                       06090099
056306                  ,PRCG_BEG_TMST                                  06100099
056307                  ,PRCG_END_TMST )                                06110099
056308          VALUES ( :PV-PRCG-NBR                                   06120099
056309                  ,'9999-09-09-09.09.09.999999'                   06130099
056310                  ,'9999-09-09-09.09.09.999999' )                 06140099
056320     END-EXEC.                                                    06150099
056330     MOVE 'RCT_PRCG_CNTL                 ' TO PV-TABLE-NAME.      06160099
056340*    CHECK THE SQL CONDITION CODE                                 06170099
056350     PERFORM 81000-CHECK-SQL-INSERT.                              06180099
056360                                                                  06190099
056370                                                                  06200099
056380******************************************************************06210099
056390* LOAD THE STORE DATA                                             06220099
056400*THIS PARAGRAPH OPENS THE XLT_LOC CURSOR.  FOR EVERY STORE        06230099
056500*FETCHED IT MOVES THE LOC_NBR (STORE NUMBER) INTO THE INTERNAL    06240099
056600*PT-STORE TABLE AND SETS THE POINTER TABLE PT-STORE-POINTER       06250099
056700*TO THE STORE'S POSITION IN THE CURSOR, THEN IT CLOSES THE STORE  06260099
056800*CURSOR                                                           06270099
056900******************************************************************06280099
057000 3000-LOAD-THE-STORE-DATA.                                        06290099
057001     MOVE '3000-LOAD-THE-STORE-DATA      ' TO PV-PARAGRAPH-NAME.  06300099
057002                                                                  06310099
057003                                                                  06320099
057004     PERFORM 3010-OPEN-STORE-CURSOR.                              06330099
057005*    OBTAIN A LIST OF LOCATIONS (STORES) WITH SALES               06340099
057006     PERFORM 3020-FETCH-STORE-CURSOR.                             06350099
057007     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      06360099
057008                                                                  06370099
057009                                                                  06380099
057010*    LOAD ALL OF THE STORES IN THE CURSOR TO THE STORE ARRAY.     06390099
057020*    LOAD THE POSITIONS OF THE STORES IN THE STORE ARRAY TO THE   06400099
057030*    STORE POINTER ARRAY                                          06410099
057040     SET PS-END-OF-STORE-CSR-NO TO TRUE.                          06420099
057050     PERFORM VARYING PV-STORE-COUNT FROM 1 BY 1                   06430099
057060             UNTIL PS-END-OF-STORE-CSR-YES                        06440099
057070*      LOAD THE STORE NUMBER TO THE STORE ARRAY                   06450099
057080       MOVE PV-LOC-NBR     TO PT-STORE (PV-STORE-COUNT)           06460099
057081       MOVE ZEROS          TO PT-TOTAL-SALES(PV-STORE-COUNT)      06470099
057090*      LOAD THE STORE'S POSITION IN THE CURSOR TO THE STORE       06480099
057100*      POINTER ARRAY                                              06490099
057200       MOVE PV-STORE-COUNT TO PT-STORE-POINTER (PV-LOC-NBR)       06500099
057300*      FETCH THE NEXT STORE                                       06510099
057400       PERFORM 3020-FETCH-STORE-CURSOR                            06520099
057500     END-PERFORM.                                                 06530099
057600*    HAVING AN ACCURATE STORE COUNT IS VERY IMPORTANT FOR THE     06540099
057700*    FUNCTIONING OF THIS PROGRAM.  PV-STORE-COUNT SHOULD NEVER    06550099
057800*    BE CHANGED.  1 GETS SUBTRACTED FROM PV-STORE-COUNT HERE      06560099
057900*    BECAUSE IT WAS INCREMENT ONCE TOO MANY IN THE ABOVE LOOP.    06570099
058000     SUBTRACT 1 FROM PV-STORE-COUNT.                              06580099
058100                                                                  06590099
058200     PERFORM 3030-CLOSE-STORE-CURSOR.                             06600099
058300                                                                  06610099
058400******************************************************************06620099
058500* OPEN THE STORE CURSOR                                           06630099
058600******************************************************************06640099
058700 3010-OPEN-STORE-CURSOR.                                          06650099
058701     MOVE '3010-OPEN-STORE-CURSOR        ' TO PV-PARAGRAPH-NAME.  06660099
058702                                                                  06670099
058703     EXEC SQL                                                     06680099
058704       OPEN CSR-STORES                                            06690099
058705     END-EXEC.                                                    06700099
058706     MOVE 'XLT_LOC                       ' TO PV-TABLE-NAME.      06710099
058707     PERFORM 83000-CHECK-SQL-OPEN-CSR.                            06720099
058708                                                                  06730099
058709******************************************************************06740099
058710* FETCH THE STORE CURSOR                                          06750099
058720******************************************************************06760099
058730 3020-FETCH-STORE-CURSOR.                                         06770099
058731     MOVE '3020-FETCH-STORE-CURSOR       ' TO PV-PARAGRAPH-NAME.  06780099
058732                                                                  06790099
058733     EXEC SQL                                                     06800099
058734       FETCH  CSR-STORES                                          06810099
058735        INTO :PV-LOC-NBR                                          06820099
058736     END-EXEC.                                                    06830099
058737                                                                  06840099
058738     MOVE 'XLT_LOC                       ' TO PV-TABLE-NAME.      06850099
058739*    CHECK THE SQL CONDITION CODE                                 06860099
058740     PERFORM 84000-CHECK-SQL-FETCH-CSR.                           06870099
058750     IF PS-END-OF-CURSOR-YES                                      06880099
058760       SET PS-END-OF-STORE-CSR-YES TO TRUE                        06890099
058770*      PS-END-OF-CURSOR IS A STANDARD SWITCH, IT ALWAYS NEEDS TO  06900099
058780*      BE RESET                                                   06910099
058790       SET PS-END-OF-CURSOR-NO     TO TRUE                        06920099
058800     END-IF.                                                      06930099
058900                                                                  06940099
059000******************************************************************06950099
059100* CLOSE THE STORE CURSOR                                          06960099
059200******************************************************************06970099
059300 3030-CLOSE-STORE-CURSOR.                                         06980099
059301     MOVE '3030-CLOSE-STORE-CURSOR       ' TO PV-PARAGRAPH-NAME.  06990099
059302                                                                  07000099
059303     EXEC SQL                                                     07010099
059304       CLOSE CSR-STORES                                           07020099
059305     END-EXEC.                                                    07030099
059306     MOVE 'XLT_LOC                       ' TO PV-TABLE-NAME.      07040099
059307*    CHECK THE SQL CONDITION CODE                                 07050099
059308     PERFORM 85000-CHECK-SQL-CLOSE-CSR.                           07060099
059309                                                                  07070099
059310******************************************************************07080099
059320* EVALUATE AND RANK THE STORE SALES                               07090099
059330*DETERMINE THE RANK THRESHOLD.   INITIALIZE THE SALES INTERNAL    07100099
059340*TABLE AND RESET THE POINTER TABLES.  OPEN THE                    07110099
059350*DEPARTMENT-MAJORCLASS-SUBCLASS CURSOR.  FETCH THE FIRST          07120099
059360*RECORD. ENTER THE FETCH/EVALUATE/RANK LOOP. EVALUATE ONLY        07130099
059370*IF THE FETCHED VALUE IS UNIQUE AND ITS HIGHER LEVEL CATEGORY     07140099
059380*WAS RANKED (DEPARTMENT CONTAINS MAJORCLASS CONTAINS SUBCLASS).   07150099
059390******************************************************************07160099
059400 4000-EVAL-AND-RANK-THE-SALES.                                    07170099
059500     MOVE '4000-EVAL-AND-RANK-THE-SALES   ' TO PV-PARAGRAPH-NAME. 07180099
059600                                                                  07190099
059700                                                                  07200099
059800*    DETERMINE THE RANK THRESHOLD BY MULTIPLYING THE STORE        07210099
059900*    COUNT BY THE PC-STORE-CNT-PERCENT.  FOR EXAMPLE:             07220099
060000*    PV-RANK-THRESHOLD = 500 * .5 = 250.                          07230099
060100*    THIS THRESHOLD IS THE MINIMUM NUMBER OF STORES THAT HAVE TO  07240099
060200*    HAVE HAD SALES IN THE DEPARTMENT, DEPARTMENT-MAJORCLASS, OR  07250099
060300*    DEPARTMENT-MAJORCLASS-SUBCLASS IN ORDER TO DO A RANKING      07260099
060400     COMPUTE PV-RANK-THRESHOLD =                                  07270099
060500               PV-STORE-COUNT * PC-STORE-CNT-PERCENT.             07280099
060600                                                                  07290099
060700*    OPEN THE DEPT-MAJCL-SUBCL CURSOR                             07300099
060800     PERFORM 4010-OPEN-DEPT-MAJ-SUB-CURSOR.                       07310099
060900*    FETCH THE FIRST RECORD FROM THE DEPT-MAJCL-SUBCL CURSOR      07320099
061000     PERFORM 4020-FETCH-DEPT-MAJ-SUB-CURSOR.                      07330099
061100                                                                  07340099
061200*    PROCESS ALL OF THE SALES RECORDS                             07350099
061300     PERFORM UNTIL PS-END-OF-CSR-DEPT-MAJ-SUB                     07360099
061400                                                                  07370099
061500*      EVALUATE ONLY IF THIS RECORD'S DEPARTMENT IS NEW           07380099
061600*      IE. NOT EQUAL TO THE PREVIOUS DEPARTMENT NUMBER            07390099
061700       IF PV-DEPT-NBR   NOT = PV-PREV-DEPT-NBR                    07400099
061800*        EVALUATE THE NUMBER OF STORES WITH SALES AT THE          07410099
061900*        DEPARTMENT LEVEL                                         07420099
062000         PERFORM 7000-GET-STORES-AT-DEPT                          07430099
062100*        INITIALIZE PT-TOTAL-SALES AND RESET THE POINTER TABLES   07440099
062200         PERFORM 12000-CLEAR-SALES-TABLE                          07450099
062300       END-IF                                                     07460099
062400*      EVALUATE ONLY IF THE DEPARTMENT WAS RANKED AND             07470099
062500*      (THE MAJOR CLASS IS NEW OR THE DEPARTMENT IS NEW)          07480099
062600       IF PS-STRS-RANKED-FOR-CUR-DEPT                             07490099
062700       AND (    PV-MAJ-CL-NBR NOT = PV-PREV-MAJ-CL-NBR            07500099
062800             OR PV-DEPT-NBR   NOT = PV-PREV-DEPT-NBR )            07510099
062900*        EVALUATE THE NUMBER OF STORES WITH SALES AT THE          07520099
063000*        DEPARTMENT-MAJCLASS LEVEL                                07530099
063100         PERFORM 6000-GET-STORES-AT-MAJCLASS                      07540099
063200*        INITIALIZE PT-TOTAL-SALES AND RESET THE POINTER TABLES   07550099
063300         PERFORM 12000-CLEAR-SALES-TABLE                          07560099
063400       END-IF                                                     07570099
063500                                                                  07580099
063600*      EVALUATE ONLY IF THE DEPARTMENT WAS RANKED AND             07590099
063700*      THE DEPARTMENT-MAJORCLASS WAS RANKED                       07600099
063800*      (DEPARTMENT-MAJORCLASS-SUBCLASS IS ALWAYS UNIQUE)          07610099
063900       IF  PS-STRS-RANKED-FOR-CUR-DEPT                            07620099
064000       AND PS-STRS-RANKED-FOR-CUR-MAJ                             07630099
064100*        EVALUATE THE NUMBER OF STORES WITH SALES AT THE          07640099
064200*        DEPARTMENT-MAJCLASS-SUBCLASS LEVEL                       07650099
064300         PERFORM 5000-GET-STORES-AT-SUBCLASS                      07660099
064400*        INITIALIZE PT-TOTAL-SALES AND RESET THE POINTER TABLES   07670099
064500         PERFORM 12000-CLEAR-SALES-TABLE                          07680099
064600       END-IF                                                     07690099
064700*      SET THE PREVIOUS DEPARTMENT AND MAJORCLASS EQUAL TO THE    07700099
064800*      CURRENT DEPARTMENT AND MAJORCLASS                          07710099
064900       MOVE PV-MAJ-CL-NBR TO PV-PREV-MAJ-CL-NBR                   07720099
065000       MOVE PV-DEPT-NBR   TO PV-PREV-DEPT-NBR                     07730099
065100*      FETCH THE NEXT RECORD FROM THE DEPT-MAJCL-SUBCL CURSOR     07740099
065200       PERFORM 4020-FETCH-DEPT-MAJ-SUB-CURSOR                     07750099
065300     END-PERFORM.                                                 07760099
065400*    CLOSE THE DEPT-MAJCL-SUBCL CURSOR                            07770099
065500     PERFORM 4030-CLOSE-DEPT-MAJ-SUB-CURSOR.                      07780099
065600*    RANK STORES AT THE CORPORATE LEVEL - NO EVALUATION IS        07790099
065700*    NEEDED                                                       07800099
065800     PERFORM 8000-GET-STORES-AT-CORP.                             07810099
065900                                                                  07820099
066000******************************************************************07830099
066100* OPEN THE DEPARTMENT-MAJORCLASS-SUBCLASS CURSOR                  07840099
066200******************************************************************07850099
066300 4010-OPEN-DEPT-MAJ-SUB-CURSOR.                                   07860099
066400     MOVE '4010-OPEN-DEPT-MAJ-SUB-CURSOR ' TO PV-PARAGRAPH-NAME.  07870099
066500                                                                  07880099
066600     MOVE PV-RANK-THRESHOLD TO RC932-PERCENTAGE-STORES.           07890099
066700     EXEC SQL                                                     07900099
066800       OPEN CSR-DEPT-MAJ-SUB                                      07910099
066900     END-EXEC.                                                    07920099
067000     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      07930099
067100*    CHECK THE SQL CONDITION CODE                                 07940099
067200     PERFORM 83000-CHECK-SQL-OPEN-CSR.                            07950099
067300                                                                  07960099
067400******************************************************************07970099
067500* FETCH FROM THE DEPARTMENT-MAJORCLASS-SUBCLASS CURSOR            07980099
067600******************************************************************07990099
067700 4020-FETCH-DEPT-MAJ-SUB-CURSOR.                                  08000099
067800     MOVE '4020-FETCH-DEPT-MAJ-SUB-CURSOR' TO PV-PARAGRAPH-NAME.  08010099
067900                                                                  08020099
068000     EXEC SQL                                                     08030099
068100       FETCH  CSR-DEPT-MAJ-SUB                                    08040099
068200        INTO  :PV-DEPT-NBR                                        08050099
068300             ,:PV-MAJ-CL-NBR                                      08060099
068400             ,:PV-SUB-CL-NBR                                      08070099
068500     END-EXEC.                                                    08080099
068800                                                                  08090099
068900     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      08100099
069000*    CHECK THE SQL CONDITION CODE                                 08110099
069100     PERFORM 84000-CHECK-SQL-FETCH-CSR.                           08120099
069200     IF PS-END-OF-CURSOR-YES                                      08130099
069300       SET PS-END-OF-CSR-DEPT-MAJ-SUB TO TRUE                     08140099
069400*      PS-END-OF-CURSOR IS A STANDARD SWITCH, IT ALWAYS NEEDS TO  08150099
069500*      BE RESET                                                   08160099
069600       SET PS-END-OF-CURSOR-NO        TO TRUE                     08170099
069700     END-IF.                                                      08180099
069800                                                                  08190099
069900******************************************************************08200099
070000* CLOSE THE DEPARTMENT-MAJORCLASS-SUBCLASS CURSOR                 08210099
070100******************************************************************08220099
070200 4030-CLOSE-DEPT-MAJ-SUB-CURSOR.                                  08230099
070300     MOVE '4030-CLOSE-DEPT-MAJ-SUB-CURSOR' TO PV-PARAGRAPH-NAME.  08240099
070400                                                                  08250099
070500     EXEC SQL                                                     08260099
070600       CLOSE CSR-DEPT-MAJ-SUB                                     08270099
070700     END-EXEC.                                                    08280099
070800     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      08290099
070900*    CHECK THE SQL CONDITION CODE                                 08300099
071000     PERFORM 85000-CHECK-SQL-CLOSE-CSR.                           08310099
071100                                                                  08320099
071200******************************************************************08330099
071300* GET THE STORES AT THE DEPARTMENT-MAJORCLASS-SUBCLASS LEVEL      08340099
071400* OPEN THE SALES CURSOR, FETCH FIRST RECORD FROM SALES CURSOR     08350099
071500* INSERT THE SALES INTO THE INTERNAL STORE TABLE PT-TOTAL-SALES,  08360099
071600* CONTINUE FETCHING RECORDS AND INSERTING TO PT-TOTAL-SALES UNTIL 08370099
071700* THE END OF THE CURSOR.  THIS LOOP CAN BE SHORT CIRCUITED IF THE 08380099
071800* STORE HAS FEWER THAN THE REQUIRED WEEKS OF SALES AND THE NUMBER 08390099
071900* OF STORES ALREADY FETCHED IS LESS THAN THE NUMBER OF STORES     08400099
072000* NEEDED TO MEET THE THRESHOLD FOR RANKING.   CLOSE THE CURSOR.   08410099
072100* EVALUATE WHETHER ENOUGH STORES HAD SALES TO MEET THE RANK       08420099
072200* THRESHOLD.   IF THE DEPARTMENT-MAJORCLASS-SUBCLASS MEETS THE    08430099
072300* THRESHOLD, THEN RANK THE STORES. INSERT THE RANKED STORES TO    08440099
072400* RCT_LOC_SUB_RNK.                                                08450099
072500******************************************************************08460099
072600 5000-GET-STORES-AT-SUBCLASS.                                     08470099
072601     MOVE '5000-GET-STORES-AT-SUBCLASS   ' TO PV-PARAGRAPH-NAME.  08480099
072602                                                                  08490099
072603                                                                  08500099
072604*    RESET THE STORE NUMBER AND THE FETCHED STORES COUNT          08510099
072605     MOVE +0 TO PV-LOC-NBR.                                       08520099
072606     MOVE +0 TO PV-FETCHED-STRS-CNT.                              08530099
072607*    ASSUME THAT THE STORES HAVE THE REQUIRED NUMBER OF WEEKS OF  08540099
072608*    SALES                                                        08550099
072609     SET PS-STORE-HAS-RQD-WKS-SLS TO TRUE.                        08560099
072610                                                                  08570099
072620*    OPEN THE DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR   08580099
072630     PERFORM 5010-OPEN-SUB-SLS-CURSOR.                            08590099
072640                                                                  08600099
072650*    FETCH THE FIRST RECORD FROM THE                              08610099
072660*    DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR            08620099
072670     PERFORM 5020-FETCH-SUB-SLS-CURSOR.                           08630099
072680                                                                  08640099
072690*    FETCH ALL RECORDS UNLESS THE CURRENT STORE DOES NOT HAVE     08650099
072700*    HAVE THE REQUIRED WEEKS OF SALES AND THE NUMBER OF STORES    08660099
072800*    FETCHED IS ALREADY FEWER THAN THE RANK THRESHOLD             08670099
072900     PERFORM UNTIL ( PS-STR-NOT-HAVE-RQD-WKS-SLS                  08680099
073000               AND   PV-FETCHED-STRS-CNT < PV-RANK-THRESHOLD )    08690099
073100                OR   PS-END-OF-CSR-SUB-SLS                        08700099
073200                                                                  08710099
073300*      INCREMENT THE FETCHED STORES COUNT                         08720099
073400       ADD 1 TO PV-FETCHED-STRS-CNT                               08730099
073500*      INSERT THE SUM OF THE STORES SALES INTO THE PT-STORE       08740099
073600*      INTERNAL TABLE                                             08750099
073700       PERFORM 13000-INSERT-SUM                                   08760099
073800*      FETCH THE NEXT RECORD FROM THE                             08770099
073900*      DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR          08780099
074000       PERFORM 5020-FETCH-SUB-SLS-CURSOR                          08790099
074100                                                                  08800099
074200     END-PERFORM.                                                 08810099
074300*    CLOSE THE DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR  08820099
074400     PERFORM 5030-CLOSE-SUB-SLS-CURSOR.                           08830099
074500*    RESET THE CURSOR SWITCH                                      08840099
074600     SET PS-NOT-END-CSR-SUB-SLS TO TRUE.                          08850099
074700                                                                  08860099
074800*    THRESHOLD EVALUATION. IF THE FETCHED STORES COUNT IS         08870099
074900*    GREATER THAN OR EQUAL TO THE RANK THRESHOLD, THEN RANK       08880099
075000*    THE STORES                                                   08890099
075100     IF PV-FETCHED-STRS-CNT >= PV-RANK-THRESHOLD                  08900099
075200*      SORT THE STORES ACCORDING TO TOTAL SALES                   08910099
075300       PERFORM 14000-SORT-THE-STORES                              08920099
075400                                                                  08930099
075500*      INSERT THE STORES TO RCT_LOC_SUB_RNK                       08940099
075600       PERFORM 5300-FINISH-SUB-SLS-RANKING                        08950099
075700     END-IF.                                                      08960099
075800*    COMMIT THE TRANSACTIONS                                      08970099
075900     PERFORM 15000-COMMIT-TRANSACTIONS.                           08980099
076000                                                                  08990099
076100******************************************************************09000099
076200* OPEN THE DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR      09010099
076300******************************************************************09020099
076400 5010-OPEN-SUB-SLS-CURSOR.                                        09030099
076401     MOVE '5010-OPEN-SUB-SLS-CURSOR      ' TO PV-PARAGRAPH-NAME.  09040099
076402                                                                  09050099
076403*    I WAS GIVEN A COPYBOOK,                                      09060099
076404*    I MIGHT AS WELL USE ITS VARIABLES...                         09070099
076405     MOVE PV-SUB-CL-NBR TO RC932-NET-SUB-CL-NBR.                  09080099
076406     MOVE PV-MAJ-CL-NBR TO RC932-NET-MAJ-CL-NBR.                  09090099
076407     MOVE PV-DEPT-NBR   TO RC932-NET-DEPT-NBR.                    09100099
076408*    NOTE THAT THE STORES ARE SELECTED ACCORDING TO THE CURRENT   09110099
076409*    DEPARTMENT, MAJOR CLASS, AND SUB CLASS                       09120099
076410     EXEC SQL                                                     09130099
076420       OPEN  CSR-SUB-SLS                                          09140099
076430     END-EXEC.                                                    09150099
076440     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      09160099
076450*    CHECK THE SQL CONDITION CODE                                 09170099
076460     PERFORM 83000-CHECK-SQL-OPEN-CSR.                            09180099
076470                                                                  09190099
076480******************************************************************09200099
076490* FETCH FROM THE DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR09210099
076500******************************************************************09220099
076600 5020-FETCH-SUB-SLS-CURSOR.                                       09230099
076601     MOVE '5020-FETCH-SUB-SLS-CURSOR     ' TO PV-PARAGRAPH-NAME.  09240099
076602                                                                  09250099
076603*    THIS CURSOR FETCHES THE STORE NUMBER, THE STORE'S NUMBER     09260099
076604*    OF WEEKS OF SALES IN THIS PARTICULAR DEPARTMENT-MAJORCLASS-  09270099
076605*    SUBCLASS, AND THE SUM OF THE STORE'S SALES IN THIS           09280099
076606*    PARTICULAR DEPARTMENT-MAJORCLASS-SUBCLASS                    09290099
076607*    THE QUERY IS SORTED IN DESCENDING ORDER BY THE NUMBER        09300099
076608*    OF WEEKS OF SALES                                            09310099
076609     EXEC SQL                                                     09320099
076610       FETCH  CSR-SUB-SLS                                         09330099
076620        INTO :PV-LOC-NBR                                          09340099
076630            ,:PV-NUM-SUB-WEEKS                                    09350099
076640            ,:PV-SUM-SLS-UNT-QTY                                  09360099
076650     END-EXEC.                                                    09370099
076690                                                                  09380099
076700     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      09390099
076800*    CHECK THE SQL CONDITION CODE                                 09400099
076900     PERFORM 84000-CHECK-SQL-FETCH-CSR.                           09410099
077000     IF PS-END-OF-CURSOR-YES                                      09420099
077100       SET PS-END-OF-CSR-SUB-SLS TO TRUE                          09430099
077200*      PS-END-OF-CURSOR IS A STANDARD SWITCH, IT ALWAYS NEEDS TO  09440099
077300*      BE RESET                                                   09450099
077400       SET PS-END-OF-CURSOR-NO TO TRUE                            09460099
077500     END-IF.                                                      09470099
077600*    EVALUATE THE NUMBER OF WEEKS OF SALES AGAINST THE            09480099
077700*    REQUIRED NUMBER OF WEEKS OF SALES                            09490099
077800*    IF THEY ARE EQUAL AND NO PREVIOUS STORE IN THIS CURSOR       09500099
077900*    HAS HAD FEWER THAT THE REQUIRED WEEKS OF SALES, THEN         09510099
078000*    INCREMENT THE COUNT OF STORES WITH THE REQUIRED WEEKS        09520099
078100*    OF SALES.  OTHERWISE, SET THE SWITCH TO TRUE TO SAY          09530099
078200*    THAT A STORE DOES NOT HAVE THE REQUIRED WEEKS OF SALES       09540099
078300     IF  PV-NUM-SUB-WEEKS = PC-REQUIRED-NUM-WKNDS                 09550099
078400     AND PS-STORE-HAS-RQD-WKS-SLS                                 09560099
078500       ADD 1 TO PV-RQD-WKS-SLS-COUNT                              09570099
078600     ELSE                                                         09580099
078700       SET PS-STR-NOT-HAVE-RQD-WKS-SLS TO TRUE                    09590099
078800     END-IF.                                                      09600099
078900                                                                  09610099
079000******************************************************************09620099
079100* CLOSE THE DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES CURSOR     09630099
079200******************************************************************09640099
079300 5030-CLOSE-SUB-SLS-CURSOR.                                       09650099
079301     MOVE '5030-CLOSE-SUB-SLS-CURSOR     ' TO PV-PARAGRAPH-NAME.  09660099
079302                                                                  09670099
079303     EXEC SQL                                                     09680099
079304       CLOSE CSR-SUB-SLS                                          09690099
079305     END-EXEC.                                                    09700099
079306     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      09710099
079307*    CHECK THE SQL CONDITION CODE                                 09720099
079308     PERFORM 85000-CHECK-SQL-CLOSE-CSR.                           09730099
079309                                                                  09740099
079310******************************************************************09750099
079320* FINISH THE DEPARTMENT-MAJORCLASS-SUBCLASS STORE SALES RANKING   09760099
079330*INSERT INTO RCT_LOC_SUB_RNK EVERY RECORD FROM THE SORTED         09770099
079340*INTERNAL PT-STORE TABLE                                          09780099
079350******************************************************************09790099
079360 5300-FINISH-SUB-SLS-RANKING.                                     09800099
079361     MOVE '5300-FINISH-SUB-SLS-RANKING   ' TO PV-PARAGRAPH-NAME.  09810099
079364                                                                  09820099
079365     PERFORM VARYING PV-FINISH-SUB-IDX FROM 1 BY 1                09830099
079366           UNTIL PV-FINISH-SUB-IDX > PV-STORE-COUNT               09840099
079367       MOVE PT-STORE(PV-FINISH-SUB-IDX) TO PV-LOC-NBR             09850099
079368*      INSERT THE RANKED STORE (PV-LOC-NBR) INTO RCT_LOC_SUB_RNK  09860099
079369       PERFORM 5310-INSERT-RANKED-STORE                           09870099
079370*      COMMIT THE TRANSACTION                                     09880099
079380       PERFORM 15000-COMMIT-TRANSACTIONS                          09890099
079390     END-PERFORM.                                                 09900099
079400                                                                  09910099
079500                                                                  09920099
079600******************************************************************09930099
079700* INSERT RANKED STORE TO RCT_LOC_SUB_RNK                          09940099
079800******************************************************************09950099
079900 5310-INSERT-RANKED-STORE.                                        09960099
079901     MOVE '5310-INSERT-RANKED-STORE      ' TO PV-PARAGRAPH-NAME.  09970099
079902                                                                  09980099
079903     EXEC SQL                                                     09990099
079904       INSERT INTO RCT_LOC_SUB_RNK(                               10000099
079905                                    LOC_NBR                       10010099
079906                                   ,PRCG_NBR                      10020099
079907                                   ,DEPT_NBR                      10030099
079908                                   ,MAJ_CL_NBR                    10040099
079909                                   ,SUB_CL_NBR                    10050099
079910                                   ,RNK_NBR)                      10060099
079920       VALUES (                                                   10070099
079930                :PV-LOC-NBR                                       10080099
079940               ,:PV-PRCG-NBR                                      10090099
079950               ,:PV-DEPT-NBR                                      10100099
079960               ,:PV-MAJ-CL-NBR                                    10110099
079970               ,:PV-SUB-CL-NBR                                    10120099
079980               ,:PV-FINISH-SUB-IDX )                              10130099
079990     END-EXEC.                                                    10140099
080000     MOVE 'RCT_LOC_SUB_RNK               ' TO PV-TABLE-NAME.      10150099
080100*    CHECK THE SQL CONDITION CODE                                 10160099
080200     PERFORM 81000-CHECK-SQL-INSERT.                              10170099
080300                                                                  10180099
080400******************************************************************10190099
080500* GET THE STORES AT THE DEPARTMENT-MAJORCLASS LEVEL               10200099
080600*OPEN THE SALES CURSOR, FETCH FIRST RECORD FROM SALES CURSOR      10210099
080700*INSERT THE SALES INTO THE INTERNAL STORE TABLE PT-TOTAL-SALES,   10220099
080800*CONTINUE FETCHING RECORDS AND INSERTING TO PT-TOTAL-SALES UNTIL  10230099
080900*THE END OF THE CURSOR.  THIS LOOP CAN BE SHORT CIRCUITED IF THE  10240099
081000*STORE HAS FEWER THAN THE REQUIRED WEEKS OF SALES AND THE NUMBER  10250099
081100*OF STORES ALREADY FETCHED IS LESS THAN THE NUMBER OF STORES      10260099
081200*NEEDED TO MEET THE THRESHOLD FOR RANKING.   CLOSE THE CURSOR.    10270099
081300*EVALUATE WHETHER ENOUGH STORES HAD SALES TO MEET THE RANK        10280099
081400*THRESHOLD.   IF THE DEPARTMENT-MAJORCLASS MEETS THE THRESHOLD,   10290099
081500*THEN RANK THE STORES. INSERT THE RANKED STORES TO                10300099
081600*RCT_LOC_MAJ_RNK.                                                 10310099
081700******************************************************************10320099
081800 6000-GET-STORES-AT-MAJCLASS.                                     10330099
081801     MOVE '6000-GET-STORES-AT-MAJCLASS   ' TO PV-PARAGRAPH-NAME.  10340099
081802                                                                  10350099
081803                                                                  10360099
081804*    RESET THE STORE NUMBER AND THE FETCHED STORES COUNT          10370099
081805     MOVE +0 TO PV-LOC-NBR.                                       10380099
081806     MOVE +0 TO PV-FETCHED-STRS-CNT.                              10390099
081807*    ASSUME THAT THE STORES HAVE THE REQUIRED NUMBER OF WEEKS OF  10400099
081808*    SALES                                                        10410099
081809     SET PS-STORE-HAS-RQD-WKS-SLS TO TRUE.                        10420099
081810                                                                  10430099
081820*    OPEN THE DEPARTMENT-MAJORCLASS STORE SALES CURSOR            10440099
081830     PERFORM 6010-OPEN-MAJ-SLS-CURSOR.                            10450099
081840                                                                  10460099
081850*    FETCH THE FIRST RECORD FROM THE                              10470099
081860*    DEPARTMENT-MAJORCLASS STORE SALES CURSOR                     10480099
081870     PERFORM 6020-FETCH-MAJ-SLS-CURSOR.                           10490099
081880                                                                  10500099
081890*    FETCH ALL RECORDS UNLESS THE CURRENT STORE DOES NOT HAVE     10510099
081900*    HAVE THE REQUIRED WEEKS OF SALES AND THE NUMBER OF STORES    10520099
082000*    FETCHED IS ALREADY FEWER THAN THE RANK THRESHOLD             10530099
082100     PERFORM UNTIL ( PS-STR-NOT-HAVE-RQD-WKS-SLS                  10540099
082200               AND   PV-FETCHED-STRS-CNT < PV-RANK-THRESHOLD )    10550099
082300                OR   PS-END-OF-CSR-MAJ-SLS                        10560099
082400                                                                  10570099
082500*      INCREMENT THE FETCHED STORES COUNT                         10580099
082600       ADD 1 TO PV-FETCHED-STRS-CNT                               10590099
082700                                                                  10600099
082800*      INSERT THE SUM OF THE STORES SALES INTO THE PT-STORE       10610099
082900*      INTERNAL TABLE                                             10620099
083000       PERFORM 13000-INSERT-SUM                                   10630099
083100                                                                  10640099
083200*      FETCH THE NEXT RECORD FROM THE                             10650099
083300*      DEPARTMENT-MAJORCLASS STORE SALES CURSOR                   10660099
083400       PERFORM 6020-FETCH-MAJ-SLS-CURSOR                          10670099
083500                                                                  10680099
083600     END-PERFORM.                                                 10690099
083700                                                                  10700099
083800*    CLOSE THE DEPARTMENT-MAJORCLASS STORE SALES CURSOR           10710099
083900     PERFORM 6030-CLOSE-MAJ-SLS-CURSOR.                           10720099
084000*    RESET THE CURSOR SWITCH                                      10730099
084100     SET PS-NOT-END-CSR-MAJ-SLS TO TRUE.                          10740099
084200                                                                  10750099
084300*    THRESHOLD EVALUATION.  IF THE FETCHED STORES COUNT IS        10760099
084400*    GREATER THAN OR EQUAL TO THE RANK THRESHOLD, THEN RANK       10770099
084500*    THE STORES                                                   10780099
084600     IF PV-FETCHED-STRS-CNT >= PV-RANK-THRESHOLD                  10790099
084700*      SORT THE STORES ACCORDING TO TOTAL SALES                   10800099
084800       PERFORM 14000-SORT-THE-STORES                              10810099
084900                                                                  10820099
085000*      INSERT THE STORES TO RCT_LOC_MAJ_RNK                       10830099
085100       PERFORM 6300-FINISH-MAJ-SLS-RANKING                        10840099
085200*      SET TO 'STORES RANKED' TO TRUE; MEANS THAT                 10850099
085300*      DEPT-MAJCLASS-SUBCLASS MAY BE EVALUATED FOR THIS           10860099
085400*      DEPARTMENT AND MAJOR CLASS                                 10870099
085500       SET PS-STRS-RANKED-FOR-CUR-MAJ  TO TRUE                    10880099
085600     ELSE                                                         10890099
085700*      SET TO 'STORES NOT RANKED' TO TRUE; MEANS THAT             10900099
085800*      DEPT-MAJCLASS-SUBLASS WILL NOT BE EVALUATED FOR THIS       10910099
085900*      DEPARTMENT AND MAJOR CLASS                                 10920099
086000       SET PS-STRS-NO-RANK-FOR-CUR-MAJ TO TRUE                    10930099
086100     END-IF.                                                      10940099
086200*    COMMIT THE TRANSACTIONS                                      10950099
086300     PERFORM 15000-COMMIT-TRANSACTIONS.                           10960099
086400                                                                  10970099
086500******************************************************************10980099
086600* OPEN THE DEPARTMENT-MAJORCLASS STORE SALES CURSOR               10990099
086700******************************************************************11000099
086800 6010-OPEN-MAJ-SLS-CURSOR.                                        11010099
086801     MOVE '6010-OPEN-MAJ-SLS-CURSOR      ' TO PV-PARAGRAPH-NAME.  11020099
086802                                                                  11030099
086803*    I WAS GIVEN A COPYBOOK,                                      11040099
086804*    I MIGHT AS WELL USE ITS VARIABLES...                         11050099
086805     MOVE PV-MAJ-CL-NBR TO RC932-NET-MAJ-CL-NBR.                  11060099
086806     MOVE PV-DEPT-NBR TO RC932-NET-DEPT-NBR.                      11070099
086807*    NOTE THAT THE STORES ARE SELECTED ACCORDING TO THE CURRENT   11080099
086808*    DEPARTMENT AND MAJOR CLASS                                   11090099
086809     EXEC SQL                                                     11100099
086810       OPEN  CSR-MAJ-SLS                                          11110099
086820     END-EXEC.                                                    11120099
086830     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      11130099
086840*    CHECK THE SQL CONDITION CODE                                 11140099
086850     PERFORM 83000-CHECK-SQL-OPEN-CSR.                            11150099
086860                                                                  11160099
086870******************************************************************11170099
086880* FETCH FROM THE DEPARTMENT-MAJORCLASS STORE SALES CURSOR         11180099
086890******************************************************************11190099
086900 6020-FETCH-MAJ-SLS-CURSOR.                                       11200099
086901     MOVE '6020-FETCH-MAJ-SLS-CURSOR     ' TO PV-PARAGRAPH-NAME.  11210099
086902                                                                  11220099
086903*    THIS CURSOR FETCHES THE STORE NUMBER, THE STORE'S NUMBER     11230099
086904*    OF WEEKS OF SALES IN THIS PARTICULAR DEPARTMENT-MAJORCLASS,  11240099
086905*    AND THE SUM OF THE STORE'S SALES IN THIS                     11250099
086906*    PARTICULAR DEPARTMENT-MAJORCLASS                             11260099
086907*    THE QUERY IS SORTED IN DESCENDING ORDER BY THE NUMBER        11270099
086908*    OF WEEKS OF SALES                                            11280099
086909     EXEC SQL                                                     11290099
086910       FETCH  CSR-MAJ-SLS                                         11300099
086920        INTO :PV-LOC-NBR                                          11310099
086930            ,:PV-NUM-MAJ-WEEKS                                    11320099
086940            ,:PV-SUM-SLS-UNT-QTY                                  11330099
086950     END-EXEC.                                                    11340099
086960                                                                  11350099
086990     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      11360099
087000*    CHECK THE SQL CONDITION CODES                                11370099
087100     PERFORM 84000-CHECK-SQL-FETCH-CSR.                           11380099
087200     IF PS-END-OF-CURSOR-YES                                      11390099
087300       SET PS-END-OF-CSR-MAJ-SLS TO TRUE                          11400099
087400*      PS-END-OF-CURSOR IS A STANDARD SWITCH, IT ALWAYS NEEDS TO  11410099
087500*      BE RESET                                                   11420099
087600       SET PS-END-OF-CURSOR-NO TO TRUE                            11430099
087700     END-IF.                                                      11440099
087800*    EVALUATE THE NUMBER OF WEEKS OF SALES AGAINST THE            11450099
087900*    REQUIRED NUMBER OF WEEKS OF SALES                            11460099
088000*    IF THEY ARE EQUAL AND NO PREVIOUS STORE IN THIS CURSOR       11470099
088100*    HAS HAD FEWER THAT THE REQUIRED WEEKS OF SALES, THEN         11480099
088200*    INCREMENT THE COUNT OF STORES WITH THE REQUIRED WEEKS        11490099
088300*    OF SALES.  OTHERWISE, SET THE SWITCH TO TRUE TO SAY          11500099
088400*    THAT A STORE DOES NOT HAVE THE REQUIRED WEEKS OF SALES       11510099
088500     IF  PV-NUM-MAJ-WEEKS = PC-REQUIRED-NUM-WKNDS                 11520099
088600     AND PS-STORE-HAS-RQD-WKS-SLS                                 11530099
088700       ADD 1 TO PV-RQD-WKS-SLS-COUNT                              11540099
088800     ELSE                                                         11550099
088900       SET PS-STR-NOT-HAVE-RQD-WKS-SLS TO TRUE                    11560099
089000     END-IF.                                                      11570099
089100                                                                  11580099
089200******************************************************************11590099
089300* CLOSE THE DEPARTMENT-MAJORCLASS STORE SALES CURSOR              11600099
089400******************************************************************11610099
089500 6030-CLOSE-MAJ-SLS-CURSOR.                                       11620099
089501     MOVE '6030-CLOSE-MAJ-SLS-CURSOR     ' TO PV-PARAGRAPH-NAME.  11630099
089502                                                                  11640099
089503     EXEC SQL                                                     11650099
089504       CLOSE CSR-MAJ-SLS                                          11660099
089505     END-EXEC.                                                    11670099
089506     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      11680099
089507*    CHECK THE SQL CONDITION CODES                                11690099
089508     PERFORM 85000-CHECK-SQL-CLOSE-CSR.                           11700099
089509                                                                  11710099
089510******************************************************************11720099
089520* FINISH THE DEPARTMENT-MAJORCLASS STORE SALES RANKING            11730099
089530*INSERT INTO RCT_LOC_MAJ_RNK EVERY RECORD FROM THE SORTED         11740099
089540*INTERNAL PT-STORE TABLE                                          11750099
089550******************************************************************11760099
089560 6300-FINISH-MAJ-SLS-RANKING.                                     11770099
089561     MOVE '6300-FINISH-MAJ-SLS-RANKING   ' TO PV-PARAGRAPH-NAME.  11780099
089562                                                                  11790099
089565     PERFORM VARYING PV-FINISH-MAJ-IDX FROM 1 BY 1                11800099
089566             UNTIL PV-FINISH-MAJ-IDX >      PV-STORE-COUNT        11810099
089567                                                                  11820099
089568       MOVE PT-STORE(PV-FINISH-MAJ-IDX) TO PV-LOC-NBR             11830099
089569*      INSERT THE RANKED STORE (PV-LOC-NBR) INTO RCT_LOC_MAJ_RNK  11840099
089570       PERFORM 6310-INSERT-RANKED-STORE                           11850099
089580*      COMMIT THE TRANSACTION                                     11860099
089590       PERFORM 15000-COMMIT-TRANSACTIONS                          11870099
089600     END-PERFORM.                                                 11880099
089700                                                                  11890099
089800******************************************************************11900099
089900* INSERT RANKED STORE TO RCT_LOC_MAJ_RNK                          11910099
090000******************************************************************11920099
090100 6310-INSERT-RANKED-STORE.                                        11930099
090101     MOVE '6310-INSERT-RANKED-STORE      ' TO PV-PARAGRAPH-NAME.  11940099
090102                                                                  11950099
090103     EXEC SQL                                                     11960099
090104       INSERT INTO RCT_LOC_MAJ_RNK( PRCG_NBR                      11970099
090105                                   ,LOC_NBR                       11980099
090106                                   ,DEPT_NBR                      11990099
090107                                   ,MAJ_CL_NBR                    12000099
090108                                   ,RNK_NBR)                      12010099
090109       VALUES ( :PV-PRCG-NBR                                      12020099
090110               ,:PV-LOC-NBR                                       12030099
090120               ,:PV-DEPT-NBR                                      12040099
090130               ,:PV-MAJ-CL-NBR                                    12050099
090140               ,:PV-FINISH-MAJ-IDX )                              12060099
090150     END-EXEC.                                                    12070099
090160     MOVE 'RCT_LOC_MAJ_RNK               ' TO PV-TABLE-NAME.      12080099
090170*    CHECK THE SQL CONDITION CODE                                 12090099
090180     PERFORM 81000-CHECK-SQL-INSERT.                              12100099
090190                                                                  12110099
090200******************************************************************12120099
090300* GET THE STORES AT THE DEPARTMENT LEVEL                          12130099
090400*OPEN THE SALES CURSOR, FETCH FIRST RECORD FROM SALES CURSOR      12140099
090500*INSERT THE SALES INTO THE INTERNAL STORE TABLE PT-TOTAL-SALES,   12150099
090600*CONTINUE FETCHING RECORDS AND INSERTING TO PT-TOTAL-SALES UNTIL  12160099
090700*THE END OF THE CURSOR.  THIS LOOP CAN BE SHORT CIRCUITED IF THE  12170099
090800*STORE HAS FEWER THAN THE REQUIRED WEEKS OF SALES AND THE NUMBER  12180099
090900*OF STORES ALREADY FETCHED IS LESS THAN THE NUMBER OF STORES      12190099
091000*NEEDED TO MEET THE THRESHOLD FOR RANKING.   CLOSE THE CURSOR.    12200099
091100*EVALUATE WHETHER ENOUGH STORES HAD SALES TO MEET THE RANK        12210099
091200*THRESHOLD.   IF THE DEPARTMENT MEETS THE THRESHOLD,              12220099
091300*THEN RANK THE STORES. INSERT THE RANKED STORES TO                12230099
091400*RCT_LOC_DEPT_RNK.                                                12240099
091500******************************************************************12250099
091600 7000-GET-STORES-AT-DEPT.                                         12260099
091601     MOVE '7000-GET-STORES-AT-DEPT       ' TO PV-PARAGRAPH-NAME.  12270099
091602                                                                  12280099
091603                                                                  12290099
091604*    RESET THE STORE NUMBER AND THE FETCHED STORES COUNT          12300099
091605     MOVE +0 TO PV-LOC-NBR.                                       12310099
091606     MOVE +0 TO PV-FETCHED-STRS-CNT.                              12320099
091607*    ASSUME THAT THE STORES HAVE THE REQUIRED NUMBER OF WEEKS OF  12330099
091608*    SALES                                                        12340099
091609     SET PS-STORE-HAS-RQD-WKS-SLS TO TRUE.                        12350099
091610                                                                  12360099
091620*    OPEN THE DEPARTMENT LEVEL STORE SALES CURSOR                 12370099
091630     PERFORM 7010-OPEN-DEPT-SLS-CURSOR.                           12380099
091640                                                                  12390099
091650*    FETCH THE FIRST RECORD FROM THE                              12400099
091660*    DEPARTMENT LEVEL STORE SALES CURSOR                          12410099
091670     PERFORM 7020-FETCH-DEPT-SLS-CURSOR.                          12420099
091680                                                                  12430099
091690*    FETCH ALL RECORDS UNLESS THE CURRENT STORE DOES NOT HAVE     12440099
091700*    HAVE THE REQUIRED WEEKS OF SALES AND THE NUMBER OF STORES    12450099
091800*    FETCHED IS ALREADY FEWER THAN THE RANK THRESHOLD             12460099
091900     PERFORM UNTIL ( PS-STR-NOT-HAVE-RQD-WKS-SLS                  12470099
092000               AND   PV-FETCHED-STRS-CNT < PV-RANK-THRESHOLD )    12480099
092100                OR   PS-END-OF-CSR-DEPT-SLS                       12490099
092200                                                                  12500099
092300*      INCREMENT THE FETCHED STORES COUNT                         12510099
092400       ADD 1 TO PV-FETCHED-STRS-CNT                               12520099
092500                                                                  12530099
092600*      INSERT THE SUM OF THE STORES SALES INTO THE PT-STORE       12540099
092700*      INTERNAL TABLE                                             12550099
092800       PERFORM 13000-INSERT-SUM                                   12560099
092900*      FETCH THE NEXT RECORD FROM THE DEPARTMENT LEVEL STORE      12570099
093000*      SALES CURSOR                                               12580099
093100       PERFORM 7020-FETCH-DEPT-SLS-CURSOR                         12590099
093200                                                                  12600099
093300     END-PERFORM.                                                 12610099
093400                                                                  12620099
093500*    CLOSE THE DEPARTMENT LEVEL STORE SALES CURSOR                12630099
093600     PERFORM 7030-CLOSE-DEPT-SLS-CURSOR.                          12640099
093700                                                                  12650099
093800*    RESET THE CURSOR SWITCH                                      12660099
093900     SET PS-NOT-END-CSR-DEPT-SLS TO TRUE.                         12670099
094000                                                                  12680099
094100*    THRESHOLD EVALUATION.  IF THE FETCHED STORES COUNT IS        12690099
094200*    GREATER THAN OR EQUAL TO THE RANK THRESHOLD, THEN RANK       12700099
094300*    THE STORES                                                   12710099
094400     IF PV-FETCHED-STRS-CNT >= PV-RANK-THRESHOLD                  12720099
094500*      SORT THE STORES ACCORDING TO TOTAL SALES                   12730099
094600       PERFORM 14000-SORT-THE-STORES                              12740099
094700                                                                  12750099
094800*      INSERT THE STORES TO RCT_LOC_DEPT_RNK                      12760099
094900       PERFORM 7300-FINISH-DEPT-SLS-RANKING                       12770099
095000*      SET TO 'STORES RANKED' TO TRUE; MEANS THAT                 12780099
095100*      DEPT-MAJCLASS AND DEPT-MAJCLASS-SUBCLASS MAY BE            12790099
095200*      EVALUATED FOR THIS DEPARTMENT                              12800099
095300       SET PS-STRS-RANKED-FOR-CUR-DEPT  TO TRUE                   12810099
095400     ELSE                                                         12820099
095500*      SET TO 'STORES NOT RANKED' TO TRUE; MEANS THAT             12830099
095600*      DEPT-MAJCLASS AND DEPT-MAJCLASS-SUBCLASS WILL NOT BE       12840099
095700*      EVALUATED FOR THIS DEPARTMENT                              12850099
095800       SET PS-STRS-NO-RANK-FOR-CUR-DEPT TO TRUE                   12860099
095900     END-IF.                                                      12870099
096000*    COMMIT THE TRANSACTIONS                                      12880099
096100     PERFORM 15000-COMMIT-TRANSACTIONS.                           12890099
096200                                                                  12900099
096300******************************************************************12910099
096400* OPEN THE DEPARTMENT STORE SALES CURSOR                          12920099
096500******************************************************************12930099
096600 7010-OPEN-DEPT-SLS-CURSOR.                                       12940099
096601     MOVE '7010-OPEN-DEPT-SLS-CURSOR     ' TO PV-PARAGRAPH-NAME.  12950099
096602                                                                  12960099
096603*    I WAS GIVEN A COPYBOOK,                                      12970099
096604*    I MIGHT AS WELL USE ITS VARIABLE...                          12980099
096605     MOVE PV-DEPT-NBR TO RC932-NET-DEPT-NBR.                      12990099
096606*    NOTE THAT THE STORES ARE SELECTED ACCORDING TO THE CURRENT   13000099
096607*    DEPARTMENT                                                   13010099
096608     EXEC SQL                                                     13020099
096609       OPEN  CSR-DEPT-SLS                                         13030099
096610     END-EXEC.                                                    13040099
096620     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      13050099
096630*    CHECK THE SQL CONDITION CODE                                 13060099
096640     PERFORM 83000-CHECK-SQL-OPEN-CSR.                            13070099
096650                                                                  13080099
096660******************************************************************13090099
096670* FETCH FROM THE DEPARTMENT STORE SALES CURSOR                    13100099
096680******************************************************************13110099
096690 7020-FETCH-DEPT-SLS-CURSOR.                                      13120099
096691     MOVE '7020-FETCH-DEPT-SLS-CURSOR    ' TO PV-PARAGRAPH-NAME.  13130099
096692                                                                  13140099
096693*    THIS CURSOR FETCHES THE STORE NUMBER, THE STORE'S NUMBER     13150099
096694*    OF WEEKS OF SALES IN THIS PARTICULAR DEPARTMENT,             13160099
096695*    AND THE SUM OF THE STORE'S SALES IN THIS PARTICULAR          13170099
096696*    DEPARTMENT                                                   13180099
096697*    THE QUERY IS SORTED IN DESCENDING ORDER BY THE NUMBER        13190099
096698*    OF WEEKS OF SALES                                            13200099
096699     EXEC SQL                                                     13210099
096700       FETCH  CSR-DEPT-SLS                                        13220099
096800        INTO :PV-LOC-NBR                                          13230099
096900            ,:PV-NUM-DEPT-WEEKS                                   13240099
097000            ,:PV-SUM-SLS-UNT-QTY                                  13250099
097100     END-EXEC.                                                    13260099
097200                                                                  13270099
097500     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      13280099
097600*    CHECK THE SQL CONDITION CODE                                 13290099
097700     PERFORM 84000-CHECK-SQL-FETCH-CSR.                           13300099
097800     IF PS-END-OF-CURSOR-YES                                      13310099
097900       SET PS-END-OF-CSR-DEPT-SLS TO TRUE                         13320099
098000*      PS-END-OF-CURSOR IS A STANDARD SWITCH, IT ALWAYS NEEDS TO  13330099
098100*      BE RESET                                                   13340099
098200       SET PS-END-OF-CURSOR-NO TO TRUE                            13350099
098300     END-IF.                                                      13360099
098400*    EVALUATE THE NUMBER OF WEEKS OF SALES AGAINST THE            13370099
098500*    REQUIRED NUMBER OF WEEKS OF SALES                            13380099
098600*    IF THEY ARE EQUAL AND NO PREVIOUS STORE IN THIS CURSOR       13390099
098700*    HAS HAD FEWER THAT THE REQUIRED WEEKS OF SALES, THEN         13400099
098800*    INCREMENT THE COUNT OF STORES WITH THE REQUIRED WEEKS        13410099
098900*    OF SALES.  OTHERWISE, SET THE SWITCH TO TRUE TO SAY          13420099
099000*    THAT A STORE DOES NOT HAVE THE REQUIRED WEEKS OF SALES       13430099
099100     IF PV-NUM-DEPT-WEEKS = PC-REQUIRED-NUM-WKNDS                 13440099
099200     AND PS-STORE-HAS-RQD-WKS-SLS                                 13450099
099300       ADD 1 TO PV-RQD-WKS-SLS-COUNT                              13460099
099400     ELSE                                                         13470099
099500       SET PS-STR-NOT-HAVE-RQD-WKS-SLS TO TRUE                    13480099
099600     END-IF.                                                      13490099
099700                                                                  13500099
099800******************************************************************13510099
099900* CLOSE THE DEPARTMENT STORE SALES CURSOR                         13520099
100000******************************************************************13530099
100100 7030-CLOSE-DEPT-SLS-CURSOR.                                      13540099
100101     MOVE '7030-CLOSE-DEPT-SLS-CURSOR    ' TO PV-PARAGRAPH-NAME.  13550099
100102                                                                  13560099
100103     EXEC SQL                                                     13570099
100104       CLOSE CSR-DEPT-SLS                                         13580099
100105     END-EXEC.                                                    13590099
100106     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      13600099
100107*    CHECK THE SQL CONDITION CODE                                 13610099
100108     PERFORM 85000-CHECK-SQL-CLOSE-CSR.                           13620099
100109                                                                  13630099
100110******************************************************************13640099
100120* FINISH THE DEPARTMENT STORE SALES RANKING                       13650099
100130*INSERT INTO RCT_LOC_DEPT_RNK EVERY RECORD FROM THE SORTED        13660099
100140*INTERNAL PT-STORE TABLE                                          13670099
100150******************************************************************13680099
100160 7300-FINISH-DEPT-SLS-RANKING.                                    13690099
100161     MOVE '7300-FINISH-DEPT-SLS-RANKING  ' TO PV-PARAGRAPH-NAME.  13700099
100163                                                                  13710099
100164     PERFORM VARYING PV-FINISH-DEPT-IDX FROM 1 BY 1               13720099
100165           UNTIL PV-FINISH-DEPT-IDX > PV-STORE-COUNT              13730099
100166       MOVE    PT-STORE(PV-FINISH-DEPT-IDX) TO PV-LOC-NBR         13740099
100167*      INSERT THE RANKED STORE (PV-LOC-NBR) INTO RCT_LOC_DEPT_RNK 13750099
100168       PERFORM 7310-INSERT-RANKED-STORE                           13760099
100169*      COMMIT THE TRANSACTION                                     13770099
100170       PERFORM 15000-COMMIT-TRANSACTIONS                          13780099
100180     END-PERFORM.                                                 13790099
100190                                                                  13800099
100200******************************************************************13810099
100300* INSERT RANKED STORE TO RCT_LOC_DEPT_RNK                         13820099
100400******************************************************************13830099
100500 7310-INSERT-RANKED-STORE.                                        13840099
100501     MOVE '7310-INSERT-RANKED-STORE      ' TO PV-PARAGRAPH-NAME.  13850099
100502                                                                  13860099
100503     EXEC SQL                                                     13870099
100504       INSERT INTO RCT_LOC_DEPT_RNK ( PRCG_NBR                    13880099
100505                                     ,LOC_NBR                     13890099
100506                                     ,DEPT_NBR                    13900099
100507                                     ,RNK_NBR )                   13910099
100508       VALUES ( :PV-PRCG-NBR                                      13920099
100509               ,:PV-LOC-NBR                                       13930099
100510               ,:PV-DEPT-NBR                                      13940099
100520               ,:PV-FINISH-DEPT-IDX )                             13950099
100530     END-EXEC.                                                    13960099
100540     MOVE 'RCT_LOC_DEPT_RNK              ' TO PV-TABLE-NAME.      13970099
100550*    CHECK THE SQL CONDITION CODE                                 13980099
100560     PERFORM 81000-CHECK-SQL-INSERT.                              13990099
100570                                                                  14000099
100580******************************************************************14010099
100590* GET THE STORES AT THE CORPORATE LEVEL                           14020099
100600*OPEN THE SALES CURSOR, FETCH FIRST RECORD FROM SALES CURSOR      14030099
100700*INSERT THE SALES INTO THE INTERNAL STORE TABLE PT-TOTAL-SALES,   14040099
100800*CONTINUE FETCHING RECORDS AND INSERTING TO PT-TOTAL-SALES UNTIL  14050099
100900*THE END OF THE CURSOR.  CLOSE THE CURSOR. RANK THE STORES.       14060099
101000*INSERT THE RANKED STORES TO RCT_LOC_RNK.                         14070099
101100******************************************************************14080099
101200 8000-GET-STORES-AT-CORP.                                         14090099
101300     MOVE '8000-GET-STORES-AT-CORP       ' TO PV-PARAGRAPH-NAME.  14100099
101301                                                                  14110099
101303*    RESET THE STORE NUMBER                                       14120099
101304     MOVE +0 TO PV-LOC-NBR.                                       14130099
101305                                                                  14140099
101306*    OPEN THE CORPORATE-LEVEL STORE SALES CURSOR                  14150099
101307     PERFORM 8010-OPEN-CORP-SLS-CURSOR.                           14160099
101308                                                                  14170099
101309*    FETCH THE FIRST RECORD FROM THE                              14180099
101310*    CORPORATE LEVEL STORE SALES CURSO                            14190099
101320     PERFORM 8020-FETCH-CORP-SLS-CURSOR.                          14200099
101330                                                                  14210099
101340*    FETCH ALL RECORDS                                            14220099
101350     PERFORM UNTIL PS-END-OF-CSR-CORP-SLS                         14230099
101360*      INSERT THE SUM OF THE STORES SALES INTO THE PT-STORE       14240099
101370*      INTERNAL TABLE                                             14250099
101380       PERFORM 13000-INSERT-SUM                                   14260099
101390                                                                  14270099
101400*      FETCH THE NEXT RECORD FROM THE                             14280099
101500*      CORPORATE LEVEL STORE SALES CURSOR                         14290099
101600       PERFORM 8020-FETCH-CORP-SLS-CURSOR                         14300099
101700                                                                  14310099
101800     END-PERFORM.                                                 14320099
101900                                                                  14330099
102000*    CLOSE THE CORPORATE LEVEL STORE SALES CURSOR                 14340099
102100     PERFORM 8030-CLOSE-CORP-SLS-CURSOR.                          14350099
102200                                                                  14360099
102300*    SORT THE STORES ACCORDING TO TOTAL SALES                     14370099
102400     PERFORM 14000-SORT-THE-STORES.                               14380099
102500                                                                  14390099
102600*    INSERT THE STORES TO RCT_LOC_RNK                             14400099
102700     PERFORM 8300-FINISH-CORP-SLS-RANKING.                        14410099
102800                                                                  14420099
102900*    COMMIT THE TRANSACTIONS                                      14430099
103000     PERFORM 15000-COMMIT-TRANSACTIONS.                           14440099
103100                                                                  14450099
103200******************************************************************14460099
103300* OPEN THE CORPORATE LEVEL STORE SALES CURSOR                     14470099
103400******************************************************************14480099
103500 8010-OPEN-CORP-SLS-CURSOR.                                       14490099
103501     MOVE '8010-OPEN-CORP-SLS-CURSOR     ' TO PV-PARAGRAPH-NAME.  14500099
103502                                                                  14510099
103503*    NOTE THAT ALL STORES IN RCT_NET_SLS_SUM ARE SELECTED         14520099
103504     EXEC SQL                                                     14530099
103505       OPEN  CSR-CORP-SLS                                         14540099
103506     END-EXEC.                                                    14550099
103507     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      14560099
103508*    CHECK THE SQL CONDITION CODE                                 14570099
103509     PERFORM 83000-CHECK-SQL-OPEN-CSR.                            14580099
103510                                                                  14590099
103520******************************************************************14600099
103530* FETCH FROM THE CORPORATE LEVEL STORE SALES CURSOR               14610099
103540******************************************************************14620099
103550 8020-FETCH-CORP-SLS-CURSOR.                                      14630099
103551     MOVE '8020-FETCH-CORP-SLS-CURSOR    ' TO PV-PARAGRAPH-NAME.  14640099
103552                                                                  14650099
103553*    THIS CURSOR FETCHES THE STORE NUMBER, THE STORE'S NUMBER     14660099
103554*    OF WEEKS OF SALES AND THE SUM OF THE STORE'S SALES           14670099
103555     EXEC SQL                                                     14680099
103556       FETCH  CSR-CORP-SLS                                        14690099
103557        INTO :PV-LOC-NBR                                          14700099
103558            ,:PV-NUM-CORP-WEEKS-DUMMY                             14710099
103559            ,:PV-SUM-SLS-UNT-QTY                                  14720099
103560     END-EXEC.                                                    14730099
103590                                                                  14740099
103600     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      14750099
103700*    CHECK THE SQL CONDITION CODES                                14760099
103800     PERFORM 84000-CHECK-SQL-FETCH-CSR.                           14770099
103900     IF PS-END-OF-CURSOR-YES                                      14780099
104000*      ABEND IF THE TABLE IS EMPTY (+100 ON FIRST FETCH ATTEMPT)  14790099
104100       IF PV-NUM-CORP-RECS-FETCHED = 0                            14800099
104200         MOVE 'TABLE HAS NO DATA              ' TO PV-MESSAGE     14810099
104300         PERFORM 91000-DB2-ABEND                                  14820099
104400       END-IF                                                     14830099
104500       SET PS-END-OF-CSR-CORP-SLS TO TRUE                         14840099
104600*      PS-END-OF-CURSOR IS A STANDARD SWITCH, IT ALWAYS NEEDS TO  14850099
104700*      BE RESET                                                   14860099
104800       SET PS-END-OF-CURSOR-NO TO TRUE                            14870099
104900     ELSE                                                         14880099
105000       ADD 1 TO PV-NUM-CORP-RECS-FETCHED                          14890099
105100     END-IF.                                                      14900099
105200                                                                  14910099
105300******************************************************************14920099
105400* CLOSE THE CORPORATE LEVEL STORE SALES CURSOR                    14930099
105500******************************************************************14940099
105600 8030-CLOSE-CORP-SLS-CURSOR.                                      14950099
105601     MOVE '8030-CLOSE-CORP-SLS-CURSOR    ' TO PV-PARAGRAPH-NAME.  14960099
105602                                                                  14970099
105603     EXEC SQL                                                     14980099
105604       CLOSE CSR-CORP-SLS                                         14990099
105605     END-EXEC.                                                    15000099
105606     MOVE 'RCT_NET_SLS_SUM               ' TO PV-TABLE-NAME.      15010099
105607*    CHECK THE SQL CONDITION CODES                                15020099
105608     PERFORM 85000-CHECK-SQL-CLOSE-CSR.                           15030099
105609                                                                  15040099
105610******************************************************************15050099
105620* FINISH THE CORPORATE LEVEL STORE SALES RANKING                  15060099
105630*INSERT INTO RCT_LOC_RNK EVERY RECORD FROM THE SORTED             15070099
105640*INTERNAL PT-STORE TABLE                                          15080099
105650******************************************************************15090099
105660 8300-FINISH-CORP-SLS-RANKING.                                    15100099
105661     MOVE '8300-FINISH-CORP-SLS-RANKING  ' TO PV-PARAGRAPH-NAME.  15110099
105663                                                                  15120099
105664     PERFORM VARYING PV-FINISH-CORP-IDX FROM 1 BY 1               15130099
105665            UNTIL PV-FINISH-CORP-IDX >    PV-STORE-COUNT          15140099
105666         MOVE PT-STORE(PV-FINISH-CORP-IDX) TO PV-LOC-NBR          15150099
105667*      INSERT THE RANKED STORE (PV-LOC-NBR) INTO RCT_LOC_RNK      15160099
105668       PERFORM 8310-INSERT-RANKED-STORE                           15170099
105669*      COMMIT THE TRANSACTION                                     15180099
105670       PERFORM 15000-COMMIT-TRANSACTIONS                          15190099
105680     END-PERFORM.                                                 15200099
105690                                                                  15210099
105700******************************************************************15220099
105800* INSERT RANKED STORE TO RCT_LOC_RNK                              15230099
105900******************************************************************15240099
106000 8310-INSERT-RANKED-STORE.                                        15250099
106001     MOVE '8310-INSERT-RANKED-STORE      ' TO PV-PARAGRAPH-NAME.  15260099
106002                                                                  15270099
106003     EXEC SQL                                                     15280099
106004       INSERT INTO RCT_LOC_RNK( PRCG_NBR                          15290099
106005                                   ,LOC_NBR                       15300099
106006                                   ,RNK_NBR)                      15310099
106007       VALUES ( :PV-PRCG-NBR                                      15320099
106008               ,:PV-LOC-NBR                                       15330099
106009               ,:PV-FINISH-CORP-IDX )                             15340099
106010     END-EXEC.                                                    15350099
106020     MOVE 'RCT_LOC_RNK                   ' TO PV-TABLE-NAME.      15360099
106030*    CHECK THE SQL CONDITION CODE                                 15370099
106040     PERFORM 81000-CHECK-SQL-INSERT.                              15380099
106050                                                                  15390099
106060******************************************************************15400099
106070* UPDATE THE PREVIOUS PROCESS GROUP AND THE CURRENT PROCESS GROUP 15410099
106080******************************************************************15420099
106090 11000-UPDATE-PROCESSES.                                          15430099
106100     MOVE '11000-UPDATE-PROCESSES        ' TO PV-PARAGRAPH-NAME.  15440099
106200                                                                  15450099
106300*    SUBTRACT 1 FROM THE CURRENT PROCESS GROUP NUMBER TO GET THE  15460099
106400*    PREVIOUS PROCESS GROUP NUMBER                                15470099
106500     COMPUTE PV-PREV-PRCG-NBR = PV-PRCG-NBR - 1.                  15480099
106600                                                                  15490099
106700*    UPDATE THE END TIMESTAMP OF THE PREVIOUS PROCESS             15500099
106800     PERFORM 11010-UPDATE-PREV-PROCESS.                           15510099
106900                                                                  15520099
107000*    UPDATE THE BEGIN TIMESTAMP OF THE CURRENT PROCESS            15530099
107100     PERFORM 11020-UPDATE-CUR-PROCESS.                            15540099
107200                                                                  15550099
107300******************************************************************15560099
107400* UPDATE THE END TIMESTAMP OF THE PREVIOUS PROCESS                15570099
107500******************************************************************15580099
107600 11010-UPDATE-PREV-PROCESS.                                       15590099
107601     MOVE '11010-UPDATE-PREV-PROCESSES   ' TO PV-PARAGRAPH-NAME.  15600099
107602                                                                  15610099
107603*    SET THE END TIMESTAMP EQUAL TO PV-BEGIN-TMST                 15620099
107604     EXEC SQL                                                     15630099
107605       UPDATE RCT_PRCG_CNTL                                       15640099
107606          SET PRCG_END_TMST = :PV-BEGIN-TMST                      15650099
107607        WHERE PRCG_NBR      = :PV-PREV-PRCG-NBR                   15660099
107608     END-EXEC.                                                    15670099
107609     MOVE 'RCT_PRCG_CNTL                 ' TO PV-TABLE-NAME.      15680099
107610*    CHECK THE SQL CONDITION CODE                                 15690099
107620     PERFORM 82000-CHECK-SQL-UPDATE.                              15700099
107630                                                                  15710099
107640******************************************************************15720099
107650* UPDATE THE BEGIN TIMESTAMP OF THE CURRENT PROCESS               15730099
107660******************************************************************15740099
107670 11020-UPDATE-CUR-PROCESS.                                        15750099
107671     MOVE '11020-UPDATE-CUR-PROCESSES    ' TO PV-PARAGRAPH-NAME.  15760099
107672                                                                  15770099
107673*    SET THE BEGIN TIMESTAMP EQUAL TO PV-BEGIN-TMST               15780099
107674     EXEC SQL                                                     15790099
107675       UPDATE RCT_PRCG_CNTL                                       15800099
107676          SET PRCG_BEG_TMST = :PV-BEGIN-TMST                      15810099
107677        WHERE PRCG_NBR =      :PV-PRCG-NBR                        15820099
107678     END-EXEC.                                                    15830099
107679     MOVE 'RCT_PRCG_CNTL                 ' TO PV-TABLE-NAME.      15840099
107680*    CHECK THE SQL CONDITION CODE                                 15850099
107690     PERFORM 82000-CHECK-SQL-UPDATE.                              15860099
107700                                                                  15870099
107800******************************************************************15880099
107900******************************************************************15890099
108000* THE FOLLOWING PARAGRAPHS ARE CALLED DURING THE                  15900099
108100* DEPARTMENT, DEPARTMENT-MAJORCLASS,                              15910099
108200* DEPARTMENT-MAJORCLASS-SUBCLASS, AND CORPORATE LEVEL             15920099
108300* EVALUATIONS/RANKINGS.                                           15930099
108400******************************************************************15940099
108500******************************************************************15950099
108600                                                                  15960099
108700******************************************************************15970099
108800* INITIALIZE THE STORE SALES INTERNAL TABLE AND RESET THE POINTER 15980099
108900* TABLES                                                          15990099
109000* THIS GETS RERUN TO RESET PT-SALES-TOTAL TO ZEROES AND ALSO      16000099
109100* TO MATCH UP THE POINTER TABLE TO THE STORE TABLE (WHICH GETS    16010099
109200* JUMBLED UP EVERY TIME STORES ARE RANKED)                        16020099
109300******************************************************************16030099
109400 12000-CLEAR-SALES-TABLE.                                         16040099
109401     MOVE '12000-CLEAR-SALES-TABLE       ' TO PV-PARAGRAPH-NAME.  16050099
109402                                                                  16060099
109403                                                                  16070099
109404*    INITIALIZE EVERY RECORD IN PT-TOTAL-SALES TO ZERO            16080099
109405*    SET PV-POINTER EQUAL TO THE CURRENT STORE NUMBER             16090099
109406*    MOVE THE CURRENT INDEX TO PT-POINTER AT THE CURRENT          16100099
109407*    STORE NUMBER                                                 16110099
109408     PERFORM VARYING PV-INITIALIZE-IDX FROM 1 BY 1                16120099
109409       UNTIL PV-INITIALIZE-IDX > PV-STORE-COUNT                   16130099
109410*        INITIALIZE THE CURRENT RECORD IN PT-TOTAL-SALES TO ZERO  16140099
109420         MOVE PC-TOTAL-ZERO TO PT-TOTAL-SALES(PV-INITIALIZE-IDX)  16150099
109430*        SET PV-POINTER EQUAL TO THE CURRENT STORE NUMBER         16160099
109440         MOVE PT-STORE(PV-INITIALIZE-IDX) TO PV-POINTER           16170099
109450*        MOVE THE CURRENT INDEX TO PT-POINTER AT THE CURRENT      16180099
109460*        STORE NUMBER                                             16190099
109470         MOVE PV-INITIALIZE-IDX TO PT-STORE-POINTER (PV-POINTER)  16200099
109480     END-PERFORM.                                                 16210099
109490                                                                  16220099
109500******************************************************************16230099
109600* INSERT THE SUM OF THE STORE SALES INTO THE INTERNAL             16240099
109700* PT-TOTAL-SALES TABLE                                            16250099
109800* THE POINTER TABLE POINTS TO THE PLACE TO IN THE PT-SALES-TOTAL  16260099
109900* TABLE TO INSERT THE STORE'S SALES                               16270099
110000******************************************************************16280099
110100 13000-INSERT-SUM.                                                16290099
110200*    ASSIGN SALES FOR STORE                                       16300099
110201     MOVE '13000-INSERT-SUM              ' TO PV-PARAGRAPH-NAME.  16310099
110202                                                                  16320099
110203                                                                  16330099
110204*    MOVE THE VALUE POINTED TO BY PT-STORE-POINTER AT PV-LOC-NBR  16340099
110205*    TO PV-POINTER                                                16350099
110206     MOVE PT-STORE-POINTER(PV-LOC-NBR) TO PV-POINTER.             16360099
110207                                                                  16370099
110208*    IF THE VALUE CONTAINED IN PV-POINTER IS GREATER THAN ZERO,   16380099
110209*    THEN MOVE THE SUM OF THE STORE'S SALES TO PT-TOTAL-SALES AT  16390099
110210*    PV-POINTER                                                   16400099
110220     IF PV-POINTER > 0                                            16410099
110230        MOVE PV-SUM-SLS-UNT-QTY TO PT-TOTAL-SALES(PV-POINTER).    16420099
110240                                                                  16430099
110250******************************************************************16440099
110260* SORT THE STORES BY ORDER OF THEIR TOTAL SALES                   16450099
110270* THIS USES A COMB-SORT, WHICH IS A MORE EFFICIENT VARIATION      16460099
110280* ON THE BUBBLE SORT                                              16470099
110290******************************************************************16480099
110300 14000-SORT-THE-STORES.                                           16490099
110301     MOVE '14000-SORT-THE-STORES         ' TO PV-PARAGRAPH-NAME.  16500099
110302                                                                  16510099
110303                                                                  16520099
110304*    INITIALIZE JUMP SIZE TO THE TOTAL NUMBER OF STORES           16530099
110305     MOVE PV-STORE-COUNT TO PV-JUMP-SIZE.                         16540099
110306                                                                  16550099
110307*    COMB-SORT THE STORES UNTIL THEY ARE SORTED                   16560099
110308     PERFORM 14100-DO-COMB-SORT                                   16570099
110309             UNTIL PS-STOP-SWAPPING                               16580099
110310             AND   PV-JUMP-SIZE NOT > PC-ONE.                     16590099
110320                                                                  16600099
110330******************************************************************16610099
110340* COMB-SORT                                                       16620099
110350*JUMP-SIZE IS THE DISTANCE OF COMPARISON BETWEEN ITEMS OF THE     16630099
110360*ARRAY.  IT IS INITIALLY SET AT 1/3 THE SIZE OF THE ARRAY.  AFTER 16640099
110370*EACH PASS, IT IS RESET TO 1/3 ITS PRESENT VALUE UNTIL IT REACHES 16650099
110380*A VALUE OF 1.  AT THAT POINT THE COMB-SORT BECOMES A BUBBLE-SORT.16660099
110390******************************************************************16670099
110400 14100-DO-COMB-SORT.                                              16680099
110401     MOVE '14100-DO-COMB-SORT            ' TO PV-PARAGRAPH-NAME.  16690099
110405                                                                  16700099
110406*    IF THE JUMP-SIZE DOES NOT EQUAL 1, THEN COMPUTE THE          16710099
110407*    JUMP-SIZE TO EQUAL 1/3 THE PRESENT VALUE OF THE JUMP SIZE    16720099
110408*    IF THE JUMP-SIZE EQUALS 1, THEN SET THE JUMP SIZE TO ZERO    16730099
110409*    BECAUSE THE ITEMS SHOULD ALL BE SORTED ANYWAY                16740099
110410                                                                  16750099
110430     IF PV-JUMP-SIZE NOT = PC-ONE                                 16760099
110440       COMPUTE PV-JUMP-SIZE =                                     16770099
110450          (PC-TEN * PV-JUMP-SIZE                                  16780099
110460               + PC-THREE ) / PC-THIRTEEN                         16790099
110470     END-IF.                                                      16800099
110480*    ASSUME THAT THE ITEMS ARE ALL SORTED UNTIL PROVEN OTHERWISE  16810099
110490     SET PS-STOP-SWAPPING TO TRUE.                                16820099
110500*    THE UPPER LIMIT FOR ITEM COMPARISON IS THE ARRAY LENGTH      16830099
110600*    MINUS THE JUMP SIZE                                          16840099
110700     COMPUTE PV-UPPER-LIMIT =                                     16850099
110701                PV-STORE-COUNT - PV-JUMP-SIZE.                    16860099
110704                                                                  16870099
110705*    PASS THROUGH THE ARRAY FOR "UPPER LIMIT" NUMBER OF TIMES     16880099
110706*    AND COMPARE AND SWAP THE ITEMS THAT ARE OUT OF ORDER         16890099
110707     PERFORM 14200-COMPARE-AND-SWAP-KEYS                          16900099
110708             VARYING PV-ITEM-NBR FROM 1 BY 1                      16910099
110709             UNTIL   PV-ITEM-NBR > PV-UPPER-LIMIT.                16920099
110710                                                                  16930099
110720                                                                  16940099
110730******************************************************************16950099
110740* COMPARE AND SWAP THE KEYS                                       16960099
110750*SET THE SWAP NUMBER EQUAL TO THE CURRENT ITEM NUMBER PLUS THE    16970099
110760*JUMP SIZE. IF THE TOTAL SALES AT THE CURRENT ITEM NUMBER IS      16980099
110770*LESS THAN THE TOTAL SALES AT THE SWAP NUMBER, THEN SWAP THE      16990099
110780*VALUES BETWEEN THE THE STORE AT THE CURRENT ITEM POSITION AND    17000099
110790*AND THE STORE AT THE SWAP POSITION AS WELL AS THE VALUES BETWEEN 17010099
110800*THE TOTAL SALES AT THE CURRENT ITEM POSITION AND AT THE SWAP     17020099
110900*POSITION.                                                        17030099
111000*IF ITEMS WERE SWAPPED THIS TIME, THEN SET PS-KEEP-SWAPPING       17040099
111100*TO TRUE.                                                         17050099
111200******************************************************************17060099
111300 14200-COMPARE-AND-SWAP-KEYS.                                     17070099
111301     MOVE '14200-COMPARE-AND-SWAP-KEYS   ' TO PV-PARAGRAPH-NAME.  17080099
111302                                                                  17090099
111309*    SET THE SWAP NUMBER EQUAL TO THE CURRENT ITEM                17100099
111310*    NUMBER PLUS THE JUMP SIZE                                    17110099
111320     COMPUTE PV-SWAP-NBR =                                        17120099
111330                   PV-ITEM-NBR + PV-JUMP-SIZE.                    17130099
111360                                                                  17140099
111370*    IF THE TOTAL SALES FOR THE CURRENT ITEM IS LESS THAN         17150099
111380*    THE TOTAL SALES FOR THE SWAP ITEM, THEN SWAP BOTH            17160099
111390*    THEIR STORE NUMBERS AND THEIR TOTAL SALES                    17170099
111400     IF PT-TOTAL-SALES (PV-ITEM-NBR) <                            17180099
111500                          PT-TOTAL-SALES (PV-SWAP-NBR)            17190099
111600       MOVE PT-STORE (PV-ITEM-NBR)      TO PV-SWAP-STORE-NBR      17200099
111700                                                                  17210099
111800       MOVE PT-STORE (PV-SWAP-NBR)      TO PT-STORE (PV-ITEM-NBR) 17220099
111900       MOVE PV-SWAP-STORE-NBR           TO PT-STORE (PV-SWAP-NBR) 17230099
112000       MOVE PT-TOTAL-SALES(PV-ITEM-NBR) TO PV-SWAP-TOTAL-SLS      17240099
112100                                                                  17250099
112200       MOVE PT-TOTAL-SALES(PV-SWAP-NBR) TO                        17260099
112300                                    PT-TOTAL-SALES(PV-ITEM-NBR)   17270099
112400       MOVE PV-SWAP-TOTAL-SLS           TO                        17280099
112500                                    PT-TOTAL-SALES(PV-SWAP-NBR)   17290099
112600*      DO THIS PARAGRAPH AGAIN AND AGAIN UNTIL NO SWAP IS MADE    17300099
112700       SET PS-KEEP-SWAPPING TO TRUE                               17310099
112800     END-IF.                                                      17320099
112900                                                                  17330099
113000                                                                  17340099
113100******************************************************************17350099
113200* COMMIT TRANSACTIONS                                             17360099
113300*COMMITS ONLY AFTER THE COMMIT THRESHOLD HAS BEEN MET OR PASSED   17370099
113400******************************************************************17380099
113500 15000-COMMIT-TRANSACTIONS.                                       17390099
113501     MOVE '15000-COMMIT-TRANSACTIONS     ' TO PV-PARAGRAPH-NAME.  17400099
113502                                                                  17410099
113503                                                                  17420099
113504*    IF THE COMMIT THRESHOLD HAS BEEN MET OR PASSED, THEN COMMIT  17430099
113505     IF PV-NUM-COMMITS >= PC-COMMIT-THRESHOLD                     17440099
113506       EXEC SQL                                                   17450099
113507         COMMIT                                                   17460099
113508       END-EXEC                                                   17470099
113509                                                                  17480099
113510       EVALUATE TRUE                                              17490099
113520         WHEN SQLCODE = +0                                        17500099
113530             CONTINUE                                             17510099
113540         WHEN OTHER                                               17520099
113550             PERFORM 91000-DB2-ABEND                              17530099
113560       END-EVALUATE                                               17540099
113570*      REINITIALIZE THE COMMIT COUNT TO ZERO AFTER A COMMIT       17550099
113580       MOVE +0 TO PV-NUM-COMMITS                                  17560099
113590     END-IF.                                                      17570099
113600*    INCREMENT THE COMMIT COUNT                                   17580099
113700     ADD 1 TO PV-NUM-COMMITS.                                     17590099
113800                                                                  17600099
113900                                                                  17610099
114000******************************************************************17620099
114100* FORCE COMMIT                                                    17630099
114200*THIS DOES A COMMIT REGARDLESS OF THE COMMIT THRESHOLD            17640099
114300******************************************************************17650099
114400 16000-FORCE-COMMIT.                                              17660099
114401     MOVE '16000-FORCE-COMMIT     ' TO PV-PARAGRAPH-NAME.         17670099
114402                                                                  17680099
114403       EXEC SQL                                                   17690099
114404         COMMIT                                                   17700099
114405       END-EXEC.                                                  17710099
114406                                                                  17720099
114407       EVALUATE TRUE                                              17730099
114408         WHEN SQLCODE = +0                                        17740099
114409             CONTINUE                                             17750099
114410         WHEN OTHER                                               17760099
114420             PERFORM 91000-DB2-ABEND                              17770099
114430       END-EVALUATE.                                              17780099
114700                                                                  17790099
114800******************************************************************17800099
114900* CHECK SQL SELECT                                                17810099
115000*STANDARD PARAGRAPH FOR CHECKING THE SQL RETURN CODE AFTER A      17820099
115100*QUERY                                                            17830099
115200******************************************************************17840099
115201 80000-CHECK-SQL-SELECT.                                          17850099
115202                                                                  17860099
115203     EVALUATE TRUE                                                17870099
115204       WHEN SQLCODE = +0                                          17880099
115205         CONTINUE                                                 17890099
115206       WHEN SQLCODE = +100                                        17900099
115207       WHEN SQLCODE = -904                                        17910099
115208       WHEN SQLCODE = -913                                        17920099
115209         CONTINUE                                                 17930099
115210       WHEN SQLWARN0 NOT = SPACES                                 17940099
115220       WHEN SQLCODE < +0                                          17950099
115230       WHEN SQLCODE > +0                                          17960099
115240         MOVE 'ERROR WHILE ATTEMPTING A SELECT' TO PV-MESSAGE     17970099
115250         PERFORM 91000-DB2-ABEND                                  17980099
115260     END-EVALUATE.                                                17990099
115270                                                                  18000099
115280                                                                  18010099
115290******************************************************************18020099
115300* CHECK SQL INSERT                                                18030099
115400*STANDARD PARAGRAPH FOR CHECKING THE SQL RETURN CODE AFTER AN     18040099
115500*INSERT                                                           18050099
115600******************************************************************18060099
115601 81000-CHECK-SQL-INSERT.                                          18070099
115602                                                                  18080099
115603     EVALUATE TRUE                                                18090099
115604       WHEN SQLCODE = +0                                          18100099
115605       WHEN SQLCODE = +100                                        18110099
115606         CONTINUE                                                 18120099
115607                                                                  18130099
115608       WHEN SQLCODE = -911                                        18140099
115609       WHEN SQLCODE = -913                                        18150099
115610       WHEN SQLCODE = -803                                        18160099
115620         DISPLAY '*** DB2 ERROR ***'                              18170099
115630         DISPLAY '*** SEVERITY  = NOT FATAL'                      18180099
115640         DISPLAY '*** PROGRAM   = ' PC-CURRENT-PROGRAM-NAME       18190099
115650         DISPLAY '*** PARAGRAPH = ' PV-PARAGRAPH-NAME             18200099
115660         DISPLAY '*** SQLCODE   = ' SQLCODE                       18210099
115670         DISPLAY '*** SQLSTATE  = ' SQLSTATE                      18220099
115680         DISPLAY '*** SQLERRMC  = ' SQLERRMC                      18230099
115690         DISPLAY '*** MESSAGE   = ATTEMPTED TO ADD DUPLICATE ROW' 18240099
115700         DISPLAY '*** TABLE     = ' PV-TABLE-NAME                 18250099
115800                                                                  18260099
115900       WHEN OTHER                                                 18270099
116000         MOVE 'ERROR INSERTING A ROW' TO PV-MESSAGE               18280099
116100         PERFORM 91000-DB2-ABEND                                  18290099
116200     END-EVALUATE.                                                18300099
116300                                                                  18310099
116400                                                                  18320099
116500******************************************************************18330099
116600* CHECK SQL UPDATE                                                18340099
116700*STANDARD PARAGRAPH FOR CHECKING THE SQL RETURN CODE AFTER AN     18350099
116800*UPDATE                                                           18360099
116900******************************************************************18370099
116901 82000-CHECK-SQL-UPDATE.                                          18380099
116902                                                                  18390099
116903     EVALUATE TRUE                                                18400099
116904       WHEN SQLCODE = +0                                          18410099
116905         CONTINUE                                                 18420099
116906                                                                  18430099
116907       WHEN OTHER                                                 18440099
116908         MOVE 'ERROR UPDATING A ROW' TO PV-MESSAGE                18450099
116909         PERFORM 91000-DB2-ABEND                                  18460099
116910     END-EVALUATE.                                                18470099
116920                                                                  18480099
116930******************************************************************18490099
116940* CHECK SQL OPEN CURSOR                                           18500099
116950*STANDARD PARAGRAPH FOR CHECKING THE SQL RETURN CODE AFTER        18510099
116960*ATTEMPTING TO OPEN A CURSOR                                      18520099
116970******************************************************************18530099
116971 83000-CHECK-SQL-OPEN-CSR.                                        18540099
116972                                                                  18550099
116973     EVALUATE TRUE                                                18560099
116974       WHEN SQLCODE = +0                                          18570099
116975           SET PS-END-OF-CURSOR-NO       TO TRUE                  18580099
116976       WHEN OTHER                                                 18590099
116977           MOVE 'ERROR OPENING CURSOR' TO PV-MESSAGE              18600099
116978           PERFORM 91000-DB2-ABEND                                18610099
116979     END-EVALUATE.                                                18620099
116980                                                                  18630099
116990******************************************************************18640099
117000* CHECK SQL FETCH FROM CURSOR                                     18650099
117100*STANDARD PARAGRAPH FOR CHECKING THE SQL RETURN CODE AFTER        18660099
117200*ATTEMPTING TO FETCH FROM A CURSOR                                18670099
117300******************************************************************18680099
117400 84000-CHECK-SQL-FETCH-CSR.                                       18690099
118100                                                                  18700099
118200     EVALUATE TRUE                                                18710099
118300       WHEN SQLCODE = +0                                          18720099
118400           CONTINUE                                               18730099
118500       WHEN SQLCODE = +100                                        18740099
118600           SET PS-END-OF-CURSOR-YES TO TRUE                       18750099
118700       WHEN OTHER                                                 18760099
118800         MOVE 'ERROR FETCHING FROM CURSOR' TO PV-MESSAGE          18770099
118900         PERFORM 91000-DB2-ABEND                                  18780099
119000     END-EVALUATE.                                                18790099
119100                                                                  18800099
119200******************************************************************18810099
119300* CHECK SQL FETCH FROM CURSOR                                     18820099
119400*STANDARD PARAGRAPH FOR CHECKING THE SQL RETURN CODE AFTER        18830099
119500*ATTEMPTING TO CLOSE A CURSOR                                     18840099
119600******************************************************************18850099
119601 85000-CHECK-SQL-CLOSE-CSR.                                       18860099
119602                                                                  18870099
119603     EVALUATE TRUE                                                18880099
119604       WHEN SQLCODE = +0                                          18890099
119605           CONTINUE                                               18900099
119606       WHEN OTHER                                                 18910099
119607         MOVE 'ERROR CLOSING CURSOR' TO PV-MESSAGE                18920099
119608         PERFORM 91000-DB2-ABEND                                  18930099
119609     END-EVALUATE.                                                18940099
119610                                                                  18950099
119620******************************************************************18960099
119630* 91000-DB2-ABEND                                                 18970099
119640*PERFORMS THE ABEND FOR THE PROGRAM IN THE EVENT THAT AN SQL      18980099
119650*ERROR OR WARNING CODE OCCURS.                                    18990099
119660******************************************************************19000099
119670 91000-DB2-ABEND.                                                 19010099
119680                                                                  19020099
119690     MOVE SQLCODE TO PV-SQLCODE.                                  19030099
119700     MOVE PV-SQLCODE TO PV-DISPLAY-SQLCODE.                       19040099
119800     MOVE PV-PARAGRAPH-NAME TO PV-ABEND-PARAGRAPH.                19050099
119900     MOVE PV-TABLE-NAME TO PV-ABEND-STRUCTURE-1.                  19060099
120000     MOVE SQLERRMC TO PV-DB2-OPERATION-MESSAGE-1.                 19070099
120100                                                                  19080099
120200     DISPLAY '*** DB2 ERROR ***'.                                 19090099
120300     DISPLAY '*** SEVERITY  = FATAL'.                             19100099
120400     DISPLAY '*** SQLCODE   = ' PV-DISPLAY-SQLCODE.               19110099
120500     DISPLAY '*** PROGRAM   = ' PV-ABEND-PROGRAM.                 19120099
120600     DISPLAY '*** PARAGRAPH = ' PV-ABEND-PARAGRAPH.               19130099
120700     DISPLAY '*** OPERATION = ' PV-ABEND-OPERATION.               19140099
120800     DISPLAY '*** SQLSTATE  = ' SQLSTATE.                         19150099
120900     DISPLAY '*** MESSAGE   = ' PV-DB2-OPERATION-MESSAGE-1.       19160099
121000     DISPLAY '***           = ' PV-DB2-OPERATION-MESSAGE-2.       19170099
121100     DISPLAY '*** TABLE 1   = ' PV-ABEND-STRUCTURE-1.             19180099
121200                                                                  19190099
121300******************************************************************19200099
121400* THIS COPY BOOK MEMBER CONTAINS THE PROCEDURE DIVISION STATE-    19210099
121500* MENTS THAT ARE REQUIRED TO UTILIZE THE DB2 ABEND MODULE         19220099
121600* 'DSNTIAR' AND CONVERT THE SQLCA INFORMATION INTO A READABLE     19230099
121700* FORMAT.                                                         19240099
121800******************************************************************19250099
121900     COPY DPPD004.                                                19260099
122000                                                                  19270099
122100     IF SQLCODE NOT = -911                                        19280099
122200         EXEC SQL                                                 19290099
122300             ROLLBACK                                             19300099
122400         END-EXEC                                                 19310099
122500     END-IF.                                                      19320099
122600                                                                  19330099
122700     MOVE +4013         TO PV-ABEND-CODE.                         19340099
122800     CALL 'ILBOABN0' USING PV-ABEND-CODE.                         19350099
122900                                                                  19360099
123000******************************************************************19370099
