       IDENTIFICATION DIVISION.                                                 
       PROGRAM-ID.              INKUT999.                                       
       AUTHOR.                  V. LEE YANG.                                    
       INSTALLATION.            KOHLS DEPARTMENT STORES.                        
       DATE-WRITTEN.            09/28/2005.                                     
       DATE-COMPILED.                                                           
      ******************************************************************        
      *                                                                *        
      *  PHYSICAL INVENTORY STATUS CHECK.                              *        
      *                                                                *        
      *  THIS PROGRAM WILL CHECK THE VARIOUS STATUS OF A PHYSICAL      *        
      *  INVENTORY STATUS AND SET THE RETURN CONDITION.                *        
      *                                                                *        
      *  THE RETURN CONDITION WILL BE ZEROES FOR A TRUE CONDITION      *        
      *  AND 4095 FOR FALSE.                                           *        
      *                                                                *        
      *  WHAT THE PROGRAM CHECK WILL BE BASE ON A CONTROL CARD.  THE   *        
      *  FORMAT OF THE CONTROL CARD IS AS FOLLOW.                      *        
      *                                                                *        
      *    FORM 1:                                                     *        
      *      POS    OPTION/VALUE/DESCRIPTION                           *        
      *      -----  -------------------------------------------------- *        
      *      01-01  COMMENT INDICATOR                                  *        
      *             VALUES: {' '|'*'}                                  *        
      *             '*' - COMMENT LINE, DO NOT PROCESS                 *        
      *      02-11  EXECUTION/PROCESSING DATE, I.E. 2005-09-28         *        
      *      13-15  REQUEST TYPE AND LOGICAL CONNECTION/JOIN           *        
      *             VALUES: {'IS'|'OR'|'AND'}                          *        
      *             IS - START OF THE QUESTION/CONDITION CHECK         *        
      *             OR - CONNECT TO THE PREVIOUS CONDITION WITH 'OR'   *        
      *             AND- CONNECT TO THE PREVIOUS CONDITION WITH 'AND'  *        
      *                  WHICH IS THE SAME AS 'IS' QUALIFIER           *        
      *      17-19  NUMERIC VALUE TO CHECK, SEE ADDITIONAL QUALIFIERS  *        
W29908*             OR THE KEYWORD 'ANY'.                              *        
W29908*             VALUES: {000-999|'ANY'}                            *        
W29908*             ANY - ANY NUMBER, I.E. 0 OR 1 OR 2 OR 3 OR 4...    *        
      *      21-25  NUMERIC QUALIFIER                                  *        
      *             VALUES: {'DAY'|'DAYS'|'WEEK'|'WEEKS'}              *        
      *             DAY(S) - CHECK USING NUMERIC VALUE AS DAY(S)       *        
      *             WEEK(S)- CHECK USING NUMERIC VALUE AS WEEK(S)      *        
      *      27-32  RANGE LIMIT                                        *        
W29908*             VALUES: {'BEFORE'|'AFTER'|'WITHIN'}                *        
      *             BEFORE - BEFORE THE NEXT COMBINATION OF QUALIFIERS *        
      *                      BEFORE IS NOT VALID WITH ACTUAL DATES     *        
      *                      THAT DO NOT GET SET UNTIL DATES HAVE      *        
      *                      PASSED, SEE TYPE/FIELD QUALIFIER BELOW    *        
      *             AFTER  - AFTER THE NEXT COMBINATION OF QUALIFIERS  *        
W29908*             WITHIN - WITHIN THE NEXT COMBINATION OF QUALIFIERS *        
W29908*                      AS EXAMPLE: 3 DAYS WITHIN IS +/- 3 DAYS   *        
      *      34-40  TYPE/FIELD QUALIFIER                               *        
      *             VALUES: {'ANY'|'CUTOFF'|'NOTCUT'|'SCAN'|'NOTSCAN'| *        
      *                      'SCHED'|'CLOSED'|                         *        
      *                      'FIRST'|'LAST'}*                                   
      *             ANY     - ANY OCCURRENCE                           *        
      *             CUTOFF  - ANY OCCURRENCE WITH CUTOFF TAKEN         *        
      *             NOTCUT  - ANY OCCURRENCE WITH CUTOFF NOT TAKEN     *        
      *             SCAN    - ANY OCCURRENCE WITH SCAN INV SET TO 'Y'  *        
      *             NOTSCAN - ANY OCCURRENCE WITH SCAN INV SET TO 'N'  *        
      *             SCHED   - ANY OCCURRENCE WITH SCHED PHY SET TO     *        
      *                       'PI' OR 'NS'                             *        
      *             CLOSED  - ANY OCCURRENCE WITH SCHED PHY SET TO 'CL'*        
      *             FIRST   - FIRST OCCURRENCE IN THE FISCAL MONTH     *        
      *                       COVERED BY THE NUMERIC/NUMERIC QUAL      *        
      *             LAST    - LAST OCCURRENCE IN THE FISCAL MONTH      *        
      *                       COVERED BY THE NUMERIC/NUMERIC QUAL      *        
      *      42-51  FIELD/COLUMN                                       *        
      *             VALUES: {'PLANNED'|'ACTUAL'|'UNIT_BOOK'|           *        
      *                      'FIN_BOOK'}                               *        
      *             PLANNED   - PLANNED INVENTORY DATE                 *        
      *             ACTUAL    - ACTUAL INVENTORY DATE                  *        
      *             UNIT_BOOK - ACTUAL UNIT BOOK DATE                  *        
      *             FIN_BOOK  - ACTUAL FINANCIAL BOOK DATE             *        
      *                                                                *        
      *    FORM 1 EXAMPLE:                                             *        
      *      ----+----1----+----2----+----3----+----4----+----5----+---*        
      *       2005-09-28 IS  002 WEEKS BEFORE LAST    PLANNED          *        
      *         ==> WILL RETURN TRUE (0), IF 2005-09-28 IS 2 WEEKS     *        
      *             BEFORE THE LAST PLANNED INVENTORY DATE WITH THE    *        
      *             FISCAL MONTH THAT 2005-09-28 IS A PART OF, OR      *        
      *             FISCAL MONTH THAT 2 WEEKS FROM 2005-09-28 IS A     *        
      *             PART OF.                                           *        
      *       2005-09-28 IS  000 DAY   BEFORE ANY     PLANNED          *        
      *         ==> WILL RETURN TRUE (0), IF 2005-09-28 HAS ANY STORES *        
      *             PLANNING AN INVENTORY, OR IF 2005-09-28 IS ZERO    *        
      *             DAY BEFORE ANY PLANNED INVENTORY DATE.             *        
      *                                                                *        
      ******************** HISTORY OF CHANGES **************************        
      * CHG ID/                                                        *        
      * WR/PROJ  DATE        DESCRIPTION OF CHANGES                    *        
      * -------  ----------  ----------------------------------------  *        
      * WR27808  2005-09-28  INITIAL PROGRAM INSTALL                   *        
W28545* WR28545  2005-10-24  SQL -305 ERROR IN Z400 DEALING WITH NULL  *        
W29908* WR29908  2006-01-06  ADD 'WITHIN' TO RANGE LIMIT AND 'ANY' TO  *        
W29908*                      NUMERIC VALUE IN THE REQUEST CONTROL.     *        
W30692* WR30692  06-06-2006 ROD JANSSEN TO CORRECT DATE HANDLING ISSUES         
W30692*                                 IN JOBS INK009/INK010/INK076.           
W33304* WR33304  04-01-2008  HOLDING INVENTORY LEDGER OPEN PROJECT              
RONNA**                                                                         
RONNA** CHGXXXXXXXX                                                             
RONNA**          04-XX-2024  REMOVE REFERENCES TO ESTIMATED INVENTORY           
RONNA**                      BECAUSE THIS IS OBSOLETE                           
      ******************************************************************        
                                                                                
       ENVIRONMENT DIVISION.                                                    
       CONFIGURATION SECTION.                                                   
       INPUT-OUTPUT SECTION.                                                    
       FILE-CONTROL.                                                            
                                                                                
           SELECT REQ-CONTROL-CHECK-FILE                                        
               ASSIGN TO INP01.                                                 
                                                                                
       DATA DIVISION.                                                           
       FILE SECTION.                                                            
                                                                                
       FD  REQ-CONTROL-CHECK-FILE                                               
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE STANDARD                                           
           BLOCK CONTAINS 0 RECORDS.                                            
       01  REQ-CONTROL-CHECK-REC           PIC X(80).                           
                                                                                
       EJECT                                                                    
       WORKING-STORAGE SECTION.                                                 
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** WORKING STORAGE AREA BEGIN ***'.                                
                                                                                
      ******************************************************************        
      *  REQUEST CONTROL CARD LAYOUT                                            
      ******************************************************************        
       01  RQ-CONTROL-CARD-RECORD.                                      00160000
           05  RQ-COMMENT-IND              PIC X(01)       VALUE SPACES.00170004
               88  RQ-COMMENT                              VALUE '*'.           
           05  RQ-CONTROL-DATA             PIC X(79)       VALUE SPACES.        
           05  RQ-FORMAT-1 REDEFINES RQ-CONTROL-DATA.                           
               10  RQ-PROC-DATE            PIC X(10).                   00200000
               10  FILLER REDEFINES RQ-PROC-DATE.                               
                   15  RQ-PROC-DATE-CCYY   PIC X(04).                           
                   15  FILLER              PIC X(01).                           
                       88  RQ-VALID-PROC-DATE-DASH-1       VALUE '-'.           
                   15  RQ-PROC-DATE-MM     PIC X(02).                           
                   15  FILLER              PIC X(01).                           
                       88  RQ-VALID-PROC-DATE-DASH-2       VALUE '-'.           
                   15  RQ-PROC-DATE-DD     PIC X(02).                           
               10  FILLER                  PIC X(01).                   00200000
               10  RQ-REQUEST-TYPE         PIC X(03).                   00220000
                   88  RQ-VALID-REQUEST-TYPE               VALUES ARE           
                       'IS', 'OR', 'AND'.                                       
                   88  RQ-IS-REQUEST                       VALUE 'IS'.          
                   88  RQ-OR-REQUEST                       VALUE 'OR'.          
                   88  RQ-AND-REQUEST                      VALUE 'AND'.         
               10  FILLER                  PIC X(01).                   00200000
               10  RQ-NUMBER-OF-X          PIC X(03).                   00200000
W29908             88  RQ-ANY-NUMBER-OF                    VALUE 'ANY'.         
               10  RQ-NUMBER-OF-9 REDEFINES RQ-NUMBER-OF-X                      
                                           PIC 9(03).                           
               10  FILLER                  PIC X(01).                   00200000
               10  RG-NUM-QUALIFIER        PIC X(05).                   00200000
                   88  RQ-VALID-NUM-QUALIFIER              VALUES ARE           
                       'DAY', 'DAYS', 'WEEK', 'WEEKS'.                          
                   88  RQ-DAY-QUALIFIER                    VALUES ARE           
                       'DAY', 'DAYS'.                                           
                   88  RQ-WEEK-QUALIFIER                   VALUES ARE           
                       'WEEK', 'WEEKS'.                                         
               10  FILLER                  PIC X(01).                   00200000
               10  RQ-RANGE-LIMIT          PIC X(06).                           
                   88  RQ-VALID-RANGE-LIMIT                VALUES ARE           
W29908                 'BEFORE', 'AFTER', 'WITHIN'.                             
                   88  RQ-BEFORE-RANGE                     VALUE                
                       'BEFORE'.                                                
                   88  RQ-AFTER-RANGE                      VALUE                
                       'AFTER'.                                                 
W29908             88  RQ-WITHIN-RANGE                     VALUE                
W29908                 'WITHIN'.                                                
               10  FILLER                  PIC X(01).                   00200000
               10  RQ-FIELD-QUALIFIER      PIC X(07).                           
                   88  RQ-VALID-FIELD-QUALIFIER            VALUES ARE           
                       'ANY', 'CUTOFF', 'NOTCUT', 'SCAN', 'NOTSCAN',            
                       'SCHED', 'NOTSCHD', 'CLOSED',                            
                       'FIRST', 'LAST'.                                         
                   88  RQ-ANY-QUALIFIER                    VALUE                
                       'ANY'.                                                   
                   88  RQ-VALID-CUTOFF-QUALIFIER           VALUES ARE           
                       'CUTOFF', 'NOTCUT'.                                      
                   88  RQ-CUTOFF-TAKEN-QUALIFIER           VALUE                
                       'CUTOFF'.                                                
                   88  RQ-CUTOFF-NOT-TAKEN-QUALIFIER       VALUE                
                       'NOTCUT'.                                                
                   88  RQ-VALID-SCAN-QUALIFIER             VALUES ARE           
                       'SCAN', 'NOTSCAN'.                                       
                   88  RQ-SCAN-INV-QUALIFIER               VALUE                
                       'SCAN'.                                                  
                   88  RQ-NOT-SCAN-INV-QUALIFIER           VALUE                
                       'NOTSCAN'.                                               
                   88  RQ-VALID-SCHED-PHY-QUALIFIER        VALUES ARE           
                       'SCHED', 'NOTSCHD', 'CLOSED'.                            
                   88  RQ-SCHED-PHY-QUALIFIER              VALUE                
                       'SCHED'.                                                 
                   88  RQ-NOT-SCHED-PHY-QUALIFIER          VALUE                
                       'NOTSCHD'.                                               
                   88  RQ-CLOSED-QUALIFIER                 VALUE                
                       'CLOSED'.                                                
                   88  RQ-FIRST-QUALIFIER                  VALUE                
                       'FIRST'.                                                 
                   88  RQ-LAST-QUALIFIER                   VALUE                
                       'LAST'.                                                  
               10  FILLER                  PIC X(01).                   00200000
               10  RQ-FIELD                PIC X(10).                           
                   88  RQ-VALID-FIELD                      VALUES ARE           
                       'PLANNED', 'ACTUAL', 'UNIT_BOOK', 'FIN_BOOK'.            
                   88  RQ-PLANNED-INV-FIELD                VALUE                
                       'PLANNED'.                                               
                   88  RQ-ACTUAL-INV-FIELD                 VALUE                
                       'ACTUAL'.                                                
                   88  RQ-ACTL-UNIT-BK-FIELD               VALUE                
                       'UNIT_BOOK'.                                             
                   88  RQ-ACTL-FIN-BK-FIELD                VALUE                
                       'FIN_BOOK'.                                              
               10  FILLER                  PIC X(29).                   00200000
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING CONSTANT BEGIN ***'.                                
                                                                                
       01  PC-PROGRAM-CONSTANTS-AREA.                                           
           05  PC-INCOMPLETE-DTE           PIC X(10)       VALUE                
                                                           '9999-09-09'.        
           05  PC-Y                        PIC X           VALUE 'Y'.           
           05  PC-N                        PIC X           VALUE 'N'.           
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING SWITCHES BEGIN ***'.                                
                                                                                
       01  PS-SWITCHES-AREA.                                                    
           05  PS-END-OF-REQ-CONTROL       PIC X           VALUE 'N'.           
               88  END-OF-REQ-CONTROL                      VALUE 'Y'.           
               88  NOT-END-OF-REQ-CONTROL                  VALUE 'N'.           
           05  PS-PREV-CONDITION           PIC 9           VALUE 2.             
               88  TRUE-PREV-CONDITION                     VALUE 1.             
               88  FALSE-PREV-CONDITION                    VALUE ZEROES.        
               88  NO-PREV-CONDITION                       VALUE 2.             
           05  PS-CURR-CONDITION           PIC 9           VALUE 2.             
               88  TRUE-CURR-CONDITION                     VALUE 1.             
               88  FALSE-CURR-CONDITION                    VALUE ZEROES.        
               88  NO-CURR-CONDITION                       VALUE 2.             
           05  PS-CUMM-CONDITION           PIC 9           VALUE 2.             
               88  TRUE-CUMM-CONDITION                     VALUE 1.             
               88  FALSE-CUMM-CONDITION                    VALUE ZEROES.        
               88  NO-CUMM-CONDITION                       VALUE 2.             
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING VARIABLE BEGIN ***'.                                
                                                                                
       01  PV-PROGRAM-VARIABLES-AREA.                                           
           05  PV-BEG-FSCL-MN-DATE         PIC X(10)       VALUE SPACES.        
           05  PV-END-FSCL-MN-DATE         PIC X(10)       VALUE SPACES.        
W29908     05  PV-PREV-DATE                PIC X(10)       VALUE SPACES.        
           05  PV-NEXT-DATE                PIC X(10)       VALUE SPACES.        
W29908     05  PV-CHECK-DATE               PIC X(10)       VALUE SPACES.        
           05  PV-NUMBER-OF-DAYS           PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
           05  PV-LOC-NBR-COUNT            PIC S9(04)      VALUE ZEROES         
                               COMP.                                            
           05  PV-REQUEST-IN-COUNT         PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-REQUEST-PROCESSED        PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-REQUEST-COMMENTED        PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-REQUEST-INVALID          PIC S9(04)      VALUE ZEROES         
                               COMP-3.                                          
           05  PV-OPER-ATTEMPTED           PIC X(25)       VALUE SPACES.        
           05  PV-PROCESSING-DATE          PIC X(10)       VALUE SPACES.        
           05  PV-PROCESSING-DATE-RDF REDEFINES PV-PROCESSING-DATE.             
               10  PV-PROCESSING-CC        PIC X(02).                           
               10  PV-PROCESSING-YY        PIC X(02).                           
               10  PV-PROC-DSH1            PIC X(01).                           
               10  PV-PROCESSING-MM        PIC X(02).                           
               10  PV-PROC-DSH2            PIC X(01).                           
               10  PV-PROCESSING-DD        PIC X(02).                           
           05  PV-TODAYS-DATE.                                                  
               10  PV-TODAYS-DATE-YY       PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-DATE-MM       PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-DATE-DD       PIC 9(02)       VALUE ZEROES.        
           05  PV-TODAYS-TIME.                                                  
               10  PV-TODAYS-TIME-HR       PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-TIME-MIN      PIC 9(02)       VALUE ZEROES.        
               10  PV-TODAYS-TIME-SEC      PIC 9(02)       VALUE ZEROES.        
               10  FILLER                  PIC 9(02)       VALUE ZEROES.        
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** PROGRAMMING TABLE BEGIN ***'.                                   
                                                                                
       01  PT-PROGRAM-TABLE-AREA.                                               
           05  PT-TRUE-FALSE-TBL-AREA.                                          
               10  PT-TRUE-FALSE-TBL-LIT.                                       
                   15  PT-TRUE-FALSE-LIT-1 PIC X(05)       VALUE                
                       'FALSE'.                                                 
                   15  PT-TRUE-FALSE-LIT-2 PIC X(05)       VALUE                
                       'TRUE '.                                                 
                   15  PT-TRUE-FALSE-LIT-3 PIC X(05)       VALUE                
                       'NONE '.                                                 
               10  PT-TRUE-FALSE-TBL REDEFINES PT-TRUE-FALSE-TBL-LIT            
                   OCCURS 3 TIMES.                                              
                   15  PT-TRUE-FALSE-TEXT  PIC X(05).                           
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** SQL WORK AREA BEGIN ***'.                                       
                                                                                
      *****************************************************************         
      *  SQL ABEND ROUTINE WORKING STORAGE                                      
      *****************************************************************         
      *01  DP004-DB2-ERROR-FIELDS.                                              
           COPY DPWS004.                                                        
                                                                                
       01  ABEND-CODE                      PIC S9(04)      VALUE ZEROES         
                               COMP SYNC.                                       
           88  ABEND-4003                                  VALUE +4003.         
                                                                                
           EXEC SQL                                                             
               INCLUDE SQLCA                                                    
           END-EXEC.                                                            
                                                                                
      ***************************************************************** INKCS046
      *    TINVPAR - PHYSICAL INVENTORY PARAMETER TABLE               * INKCS046
      ***************************************************************** INKCS046
           EXEC SQL                                                     INKCS046
               INCLUDE TINVPAR                                          INKCS046
           END-EXEC.                                                    INKCS046
                                                                        INKCS046
      ***************************************************************** INKCS046
      *    DATE ATTRIBUTE TABLE                                       * INKCS046
      ***************************************************************** INKCS046
           EXEC SQL                                                     INKCS046
               INCLUDE TDTATTR                                          INKCS046
           END-EXEC.                                                    INKCS046
                                                                        INKCS046
W33304***************************************************************** INKCS046
W33304*    INVENTORY CONTROL TABLE                                    * INKCS046
W33304***************************************************************** INKCS046
W33304     EXEC SQL                                                     INKCS046
W33304         INCLUDE TINCNTL                                          INKCS046
W33304     END-EXEC.                                                    INKCS046
                                                                                
       01  FILLER                          PIC X(40)       VALUE                
           '*** WORKING STORAGE END ***'.                                       
                                                                                
       EJECT                                                                    
       PROCEDURE DIVISION.                                                      
                                                                                
       A100-MAIN-MODULE.                                                        
      ******************************************************************        
      *  MAIN RPOCESSING.                                                       
      ******************************************************************        
                                                                                
           PERFORM B100-HOUSEKEEPING.                                           
                                                                                
           PERFORM B200-PROCESS-REQ-CONTROL                                     
               UNTIL END-OF-REQ-CONTROL.                                        
                                                                                
           PERFORM B900-FINALIZE.                                               
                                                                                
           IF FALSE-CUMM-CONDITION                                              
               MOVE +4095 TO RETURN-CODE                                        
           END-IF.                                                              
                                                                                
           STOP RUN.                                                            
                                                                                
      ******************************************************************        
      * SETUP AND INITIALIZATION OF PROGRAM                                     
      ******************************************************************        
       B100-HOUSEKEEPING.                                                       
                                                                                
           ACCEPT PV-TODAYS-DATE FROM DATE.                                     
           ACCEPT PV-TODAYS-TIME FROM TIME.                                     
                                                                                
           MOVE PV-TODAYS-DATE-YY TO PV-PROCESSING-YY.                          
           MOVE PV-TODAYS-DATE-MM TO PV-PROCESSING-MM.                          
           MOVE PV-TODAYS-DATE-DD TO PV-PROCESSING-DD.                          
                                                                                
           MOVE '-' TO PV-PROC-DSH1.                                            
           MOVE '-' TO PV-PROC-DSH2.                                            
                                                                                
           IF PV-TODAYS-DATE-YY > '80'                                          
               MOVE '19' TO PV-PROCESSING-CC                                    
           ELSE                                                                 
               MOVE '20' TO PV-PROCESSING-CC                                    
           END-IF.                                                              
                                                                                
           OPEN INPUT  REQ-CONTROL-CHECK-FILE.                                  
                                                                                
           SET NOT-END-OF-REQ-CONTROL  TO TRUE.                                 
                                                                                
           PERFORM Z100-READ-REQ-CONTROL.                                       
                                                                                
      ******************************************************************        
      *    PROCESS THE REQUEST CONTROL CARDS AND SET THE RETURN COND            
      ******************************************************************        
       B200-PROCESS-REQ-CONTROL.                                                
                                                                                
           ADD +1                      TO PV-REQUEST-IN-COUNT.                  
                                                                                
           IF RQ-COMMENT                                                        
               ADD +1                      TO PV-REQUEST-COMMENTED              
               DISPLAY '      *** COMMENT:         '                            
                       RQ-CONTROL-CARD-RECORD                                   
           ELSE                                                                 
               IF RQ-PROC-DATE-CCYY IS NUMERIC                                  
                   AND RQ-PROC-DATE-MM IS NUMERIC                               
                   AND RQ-PROC-DATE-DD IS NUMERIC                               
                   AND RQ-VALID-PROC-DATE-DASH-1                                
                   AND RQ-VALID-PROC-DATE-DASH-2                                
                   AND RQ-VALID-REQUEST-TYPE                                    
W29908             AND (RQ-NUMBER-OF-X IS NUMERIC OR                            
W29908                  RQ-ANY-NUMBER-OF)                                       
                   AND RQ-VALID-NUM-QUALIFIER                                   
                   AND RQ-VALID-RANGE-LIMIT                                     
                   AND RQ-VALID-FIELD-QUALIFIER                                 
                   AND RQ-VALID-FIELD                                           
                   PERFORM C100-EDIT-PARSE-CONTROL                              
                                                                                
                   PERFORM C200-SET-CONDITION                                   
                                                                                
                   MOVE PS-CUMM-CONDITION    TO PS-PREV-CONDITION               
                   IF PV-REQUEST-PROCESSED > ZEROES                             
                       IF RQ-IS-REQUEST OR RQ-AND-REQUEST                       
                           IF TRUE-CUMM-CONDITION                               
                               AND TRUE-CURR-CONDITION                          
                               SET TRUE-CUMM-CONDITION  TO TRUE                 
                           ELSE                                                 
                               SET FALSE-CUMM-CONDITION TO TRUE                 
                           END-IF                                               
                       ELSE                                                     
                           IF TRUE-CUMM-CONDITION                               
                               OR TRUE-CURR-CONDITION                           
                               SET TRUE-CUMM-CONDITION  TO TRUE                 
                           ELSE                                                 
                               SET FALSE-CUMM-CONDITION TO TRUE                 
                           END-IF                                               
                       END-IF                                                   
                   ELSE                                                         
                       IF TRUE-CURR-CONDITION                                   
                           SET TRUE-CUMM-CONDITION  TO TRUE                     
                       ELSE                                                     
                           SET FALSE-CUMM-CONDITION TO TRUE                     
                       END-IF                                                   
                   END-IF                                                       
                                                                                
                   ADD +1                      TO PV-REQUEST-PROCESSED          
                   IF RQ-IS-REQUEST                                             
                       SET RQ-AND-REQUEST          TO TRUE                      
                   END-IF                                                       
                   DISPLAY '  '                                                 
                           PT-TRUE-FALSE-TEXT(PS-PREV-CONDITION + 1)            
                           ' '                                                  
                           RQ-REQUEST-TYPE                                      
                           ' '                                                  
                           PT-TRUE-FALSE-TEXT(PS-CURR-CONDITION + 1)            
                           ' --> '                                              
                           PT-TRUE-FALSE-TEXT(PS-CUMM-CONDITION + 1)            
                           RQ-CONTROL-CARD-RECORD                               
               ELSE                                                             
                   DISPLAY '      *** INVALID:         '                        
                           RQ-CONTROL-CARD-RECORD                               
                   ADD +1                      TO PV-REQUEST-INVALID            
               END-IF                                                           
           END-IF.                                                              
                                                                                
           PERFORM Z100-READ-REQ-CONTROL.                                       
                                                                                
      ******************************************************************        
      *    CLEANUP AND COMPLETE THE EXECUTION                                   
      ******************************************************************        
       B900-FINALIZE.                                                           
                                                                                
           DISPLAY ' '.                                                         
           DISPLAY ' CONTROL RECORD IN:      ' PV-REQUEST-IN-COUNT.             
           DISPLAY '   COMMENTED CONTROLS:   ' PV-REQUEST-COMMENTED.            
           DISPLAY '   INVALID CONTROLS:     ' PV-REQUEST-INVALID.              
           DISPLAY '   PROCESSED CONTROLS:   ' PV-REQUEST-PROCESSED.            
                                                                                
           DISPLAY ' '.                                                         
           DISPLAY ' RESULTING CONDITION:    '                                  
                   '(' PT-TRUE-FALSE-TEXT(PS-CUMM-CONDITION + 1) ')'.           
                                                                                
           CLOSE   REQ-CONTROL-CHECK-FILE.                                      
                                                                                
      ******************************************************************        
      *    EDIT AND PARSING OF THE CONTROL CARD                                 
      ******************************************************************        
       C100-EDIT-PARSE-CONTROL.                                                 
                                                                                
           MOVE RQ-PROC-DATE             TO DTATTR-KY-DTE.                      
           PERFORM Z200-GET-FSCL-MONTH-INFO.                                    
           MOVE DTATTR-FSCL-MN-BEG-DTE   TO PV-BEG-FSCL-MN-DATE.                
           MOVE DTATTR-FSCL-MN-END-DTE   TO PV-END-FSCL-MN-DATE.                
                                                                                
W29908     IF RQ-ANY-NUMBER-OF                                                  
W29908         MOVE ZEROES               TO PV-NUMBER-OF-DAYS                   
W29908     ELSE                                                                 
               IF RQ-WEEK-QUALIFIER                                             
                   COMPUTE PV-NUMBER-OF-DAYS = RQ-NUMBER-OF-9 * 7               
               ELSE                                                             
                   MOVE RQ-NUMBER-OF-9       TO PV-NUMBER-OF-DAYS               
W29908         END-IF                                                           
           END-IF.                                                              
           PERFORM Z300-GET-NEXT-DATE.                                          
                                                                                
           IF PV-NEXT-DATE = DTATTR-KY-DTE                                      
               MOVE PV-BEG-FSCL-MN-DATE                                         
                   TO PV-END-FSCL-MN-DATE                                       
           ELSE                                                                 
      * GET/CHECK FISCAL PERIOD BASE ON NEXT DATE.                              
      *   REPLACE THE WORKING FISCAL MONTH-END DATE, IF THE NEW                 
      *   FISCAL MONTH-END DATE (BASE ON NEXT DATE) IS GREATER.                 
      *   REPLACE THE WORKING FISCAL MONTH-BEGIN DATE,                          
      *   FISCAL MONTH-BEGIN DATE (BASE ON NEXT DATE) IS LESSER.                
               MOVE PV-NEXT-DATE             TO DTATTR-KY-DTE                   
               PERFORM Z200-GET-FSCL-MONTH-INFO                                 
               EVALUATE TRUE                                                    
                   WHEN DTATTR-FSCL-MN-END-DTE > PV-END-FSCL-MN-DATE            
                       MOVE DTATTR-FSCL-MN-END-DTE                              
                           TO PV-END-FSCL-MN-DATE                               
                   WHEN DTATTR-FSCL-MN-END-DTE < PV-BEG-FSCL-MN-DATE            
                       MOVE DTATTR-FSCL-MN-BEG-DTE                              
                           TO PV-BEG-FSCL-MN-DATE                               
               END-EVALUATE                                                     
                                                                                
      * GET FISCAL PERIOD BASE ON PREV DATE, IF PREV AND NEXT DIFF.             
      * THIS SCENARIO WILL OCCUR WITH A 'WITHIN' RANGE.                         
      *   REPLACE THE WORKING FISCAL MONTH-END DATE, IF THE NEW                 
      *   FISCAL MONTH-END DATE (BASE ON PREV DATE) IS GREATER.                 
      *   REPLACE THE WORKING FISCAL MONTH-BEGIN DATE,                          
      *   FISCAL MONTH-BEGIN DATE (BASE ON PREV DATE) IS LESSER.                
W29908         IF PV-NEXT-DATE NOT = PV-PREV-DATE                               
W29908             MOVE PV-PREV-DATE             TO DTATTR-KY-DTE               
W29908             PERFORM Z200-GET-FSCL-MONTH-INFO                             
W29908             EVALUATE TRUE                                                
W29908                 WHEN DTATTR-FSCL-MN-END-DTE > PV-END-FSCL-MN-DATE        
W29908                     MOVE DTATTR-FSCL-MN-END-DTE                          
W29908                         TO PV-END-FSCL-MN-DATE                           
W29908                 WHEN DTATTR-FSCL-MN-END-DTE < PV-BEG-FSCL-MN-DATE        
W29908                     MOVE DTATTR-FSCL-MN-BEG-DTE                          
W29908                         TO PV-BEG-FSCL-MN-DATE                           
W29908             END-EVALUATE                                                 
               END-IF                                                           
           END-IF.                                                              
                                                                                
           IF RQ-FIRST-QUALIFIER OR RQ-LAST-QUALIFIER                           
               PERFORM Z400-GET-FIRST-LAST-DATE                                 
           ELSE                                                                 
               PERFORM Z500-GET-OTHER-DATE                                      
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    EVALUATE, CHECK AND SET CONDITION/RETURN-CODE                        
      ******************************************************************        
       C200-SET-CONDITION.                                                      
                                                                                
           SET FALSE-CURR-CONDITION      TO TRUE.                               
           EVALUATE TRUE                                                        
               WHEN RQ-PLANNED-INV-FIELD                                        
W29908             MOVE INVPAR-PLND-INV-DTE         TO PV-CHECK-DATE            
W29908             PERFORM D100-COMPARE-DATES                                   
               WHEN RQ-ACTUAL-INV-FIELD                                         
W29908             MOVE INVPAR-ACTL-INV-DTE         TO PV-CHECK-DATE            
W29908             PERFORM D100-COMPARE-DATES                                   
               WHEN RQ-ACTL-UNIT-BK-FIELD                                       
W29908             MOVE INVPAR-ACTL-UNIT-BK-DTE     TO PV-CHECK-DATE            
W29908             PERFORM D100-COMPARE-DATES                                   
               WHEN RQ-ACTL-FIN-BK-FIELD                                        
W29908             MOVE INVPAR-ACTL-FIN-BK-DTE      TO PV-CHECK-DATE            
W29908             PERFORM D100-COMPARE-DATES                                   
           END-EVALUATE.                                                        
                                                                                
           IF TRUE-CURR-CONDITION                                               
               EVALUATE TRUE                                                    
                   WHEN RQ-VALID-CUTOFF-QUALIFIER                               
                       IF INVPAR-ITM-CTOFF-IND = LOW-VALUES                     
                           SET FALSE-CURR-CONDITION      TO TRUE                
                       END-IF                                                   
                   WHEN RQ-VALID-SCAN-QUALIFIER                                 
                       IF INVPAR-SCAN-INV-IND  = LOW-VALUES                     
                           SET FALSE-CURR-CONDITION      TO TRUE                
                       END-IF                                                   
                   WHEN RQ-VALID-SCHED-PHY-QUALIFIER                            
W33304                 IF INVPAR-SCHD-PHY-CNT-CDE  = LOW-VALUES                 
                           SET FALSE-CURR-CONDITION      TO TRUE                
                       END-IF                                                   
               END-EVALUATE                                                     
           END-IF.                                                              
                                                                                
W29908******************************************************************        
W29908*   COMPARE THE NEXT DATE WITH A GIVEN DATE AND SET CONDITION             
W29908******************************************************************        
W29908 D100-COMPARE-DATES.                                                      
W29908                                                                          
W29908     EVALUATE TRUE                                                        
W29908         WHEN RQ-ANY-NUMBER-OF                                            
W29908             EVALUATE TRUE                                                
W29908                 WHEN RQ-BEFORE-RANGE                                     
W29908                     IF RQ-PROC-DATE <= PV-CHECK-DATE                     
W29908                         SET TRUE-CURR-CONDITION      TO TRUE             
W29908                     END-IF                                               
W29908                 WHEN RQ-AFTER-RANGE                                      
W29908                     IF RQ-PROC-DATE >= PV-CHECK-DATE                     
W29908                         SET TRUE-CURR-CONDITION      TO TRUE             
W29908                     END-IF                                               
W29908             END-EVALUATE                                                 
W29908         WHEN RQ-WITHIN-RANGE                                             
W29908             IF PV-PREV-DATE <= PV-CHECK-DATE                             
W29908                 AND PV-CHECK-DATE <= PV-NEXT-DATE                        
W29908                 SET TRUE-CURR-CONDITION      TO TRUE                     
W29908             END-IF                                                       
W29908         WHEN OTHER                                                       
W29908             IF PV-CHECK-DATE  = PV-NEXT-DATE                             
W29908                 SET TRUE-CURR-CONDITION      TO TRUE                     
W29908             END-IF                                                       
W29908     END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    READ REQUEST CONTROL CARDS                                           
      ******************************************************************        
       Z100-READ-REQ-CONTROL.                                                   
                                                                                
           READ REQ-CONTROL-CHECK-FILE                                          
               INTO RQ-CONTROL-CARD-RECORD                                      
               AT END                                                           
                   SET END-OF-REQ-CONTROL  TO TRUE.                             
                                                                                
      ******************************************************************        
      *    GET FISCAL MONTH INFO FOR A GIVEN DATE                               
      ******************************************************************        
       Z200-GET-FSCL-MONTH-INFO.                                                
                                                                                
           EXEC SQL                                                             
             SELECT                                                             
                     FSCL_MN_NBR                                                
                    ,FSCL_MN_NM                                                 
                    ,FSCL_MN_BEG_DTE                                            
                    ,FSCL_MN_END_DTE                                            
               INTO                                                             
                     :DTATTR-FSCL-MN-NBR                                        
                    ,:DTATTR-FSCL-MN-NM                                         
                    ,:DTATTR-FSCL-MN-BEG-DTE                                    
                    ,:DTATTR-FSCL-MN-END-DTE                                    
               FROM                                                             
                     TDTATTR                                                    
              WHERE                                                             
                     KY_DTE   = :DTATTR-KY-DTE                                  
             WITH UR                                                            
           END-EXEC.                                                            
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   DISPLAY ' KEY DATE: ' DTATTR-KY-DTE                          
                   MOVE 'GET FSCL MONTH INFO      '                             
                       TO  PV-OPER-ATTEMPTED                                    
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    GET THE NEXT DATE BASE ON REQUESTED NUMBER                           
      ******************************************************************        
       Z300-GET-NEXT-DATE.                                                      
                                                                                
W29908     MOVE DTATTR-KY-DTE      TO PV-NEXT-DATE                              
W29908                                PV-PREV-DATE.                             
                                                                                
           IF PV-NUMBER-OF-DAYS NOT EQUAL ZEROES                                
W29908         IF RQ-BEFORE-RANGE                                               
W29908             OR RQ-WITHIN-RANGE                                           
                   EXEC SQL                                                     
                     SELECT                                                     
                             MIN(KY_DTE)                                        
                       INTO                                                     
                             :PV-NEXT-DATE                                      
                       FROM                                                     
                             TDTATTR                                            
                       WHERE                                                    
                             DAY(KY_DTE - :DTATTR-KY-DTE)                       
                                 = :PV-NUMBER-OF-DAYS                           
                     WITH UR                                                    
                   END-EXEC                                                     
                                                                                
W29908             EVALUATE SQLCODE                                             
W29908                 WHEN +0                                                  
W29908* MAKE PREV-DATE THE SAME AS NEXT FOR A BEFORE REQUEST RANGE              
W29908* BECAUSE THERE WILL BE NO SEPARATE PREV-DATE.                            
W29908                     IF RQ-BEFORE-RANGE                                   
W29908                         MOVE PV-NEXT-DATE                                
W29908                             TO PV-PREV-DATE                              
W29908                     END-IF                                               
W29908                 WHEN OTHER                                               
W29908                     DISPLAY ' KEY DATE: ' DTATTR-KY-DTE                  
W29908                             ' NUMBER OF DAYS: ' PV-NUMBER-OF-DAYS        
W29908                     MOVE 'GET NEXT DATE            '                     
W29908                         TO  PV-OPER-ATTEMPTED                            
W29908                     PERFORM Z900-SQL-ABEND                               
W29908             END-EVALUATE                                                 
               END-IF                                                           
                                                                                
W29908         IF RQ-AFTER-RANGE                                                
W29908             OR RQ-WITHIN-RANGE                                           
                   EXEC SQL                                                     
                     SELECT                                                     
                             MAX(KY_DTE)                                        
                       INTO                                                     
W29908                       :PV-PREV-DATE                                      
                       FROM                                                     
                             TDTATTR                                            
                       WHERE                                                    
                             DAY(:DTATTR-KY-DTE - KY_DTE)                       
                                 = :PV-NUMBER-OF-DAYS                           
                     WITH UR                                                    
                   END-EXEC                                                     
                                                                                
W29908             EVALUATE SQLCODE                                             
W29908                 WHEN +0                                                  
W29908* MAKE NEXT-DATE THE SAME AS PREV FOR A AFTER REQUEST RANGE               
W29908* BECAUSE THERE WILL BE NO SEPARATE NEXT-DATE.                            
W29908                     IF RQ-AFTER-RANGE                                    
W29908                         MOVE PV-PREV-DATE                                
W29908                             TO PV-NEXT-DATE                              
W29908                     END-IF                                               
W29908                 WHEN OTHER                                               
W29908                     DISPLAY ' KEY DATE: ' DTATTR-KY-DTE                  
W29908                             ' NUMBER OF DAYS: ' PV-NUMBER-OF-DAYS        
W29908                     MOVE 'GET PREV DATE            '                     
W29908                         TO  PV-OPER-ATTEMPTED                            
W29908                     PERFORM Z900-SQL-ABEND                               
W29908             END-EVALUATE                                                 
W29908         END-IF                                                           
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    GET THE FIRST AND LAST DATES                                         
      ******************************************************************        
       Z400-GET-FIRST-LAST-DATE.                                                
                                                                                
           IF RQ-FIRST-QUALIFIER                                                
               EXEC SQL                                                         
                 SELECT                                                         
                         MIN(PLND_INV_DTE)                                      
                        ,MIN(ACTL_INV_DTE)                                      
                        ,MIN(ACTL_UNIT_BK_DTE)                                  
                        ,MIN(ACTL_FIN_BK_DTE)                                   
                   INTO                                                         
                         :INVPAR-PLND-INV-DTE                                   
                        ,:INVPAR-ACTL-INV-DTE                                   
                        ,:INVPAR-ACTL-UNIT-BK-DTE                               
                        ,:INVPAR-ACTL-FIN-BK-DTE                                
                   FROM                                                         
                         TINVPAR A                                              
W33304                  ,TINCNTL B                                              
                  WHERE                                                         
W33304*                  PLND_INV_DTE BETWEEN :PV-BEG-FSCL-MN-DATE              
W33304*                      AND :PV-END-FSCL-MN-DATE                           
W33304                   PLND_INV_DTE <= :PV-END-FSCL-MN-DATE                   
W33304              AND  A.LOC_INV_STAT_CDE = 'IN'                              
W33304              AND  B.ACTV_IND     = 'Y'                                   
W33304              AND  A.INV_ID       = B.INV_ID                              
W30692              AND  A.ACTL_FIN_BK_DTE = '9999-09-09'                       
                 WITH UR                                                        
               END-EXEC                                                         
           ELSE                                                                 
               EXEC SQL                                                         
                 SELECT                                                         
                         MAX(PLND_INV_DTE)                                      
                        ,MAX(ACTL_INV_DTE)                                      
                        ,MAX(ACTL_UNIT_BK_DTE)                                  
                        ,MAX(ACTL_FIN_BK_DTE)                                   
                   INTO                                                         
                         :INVPAR-PLND-INV-DTE                                   
                        ,:INVPAR-ACTL-INV-DTE                                   
                        ,:INVPAR-ACTL-UNIT-BK-DTE                               
                        ,:INVPAR-ACTL-FIN-BK-DTE                                
                   FROM                                                         
                         TINVPAR A                                              
W33304                  ,TINCNTL B                                              
                  WHERE                                                         
W33304                   A.PLND_INV_DTE <= :PV-END-FSCL-MN-DATE                 
W33304*                  PLND_INV_DTE BETWEEN :PV-BEG-FSCL-MN-DATE              
W33304*                      AND :PV-END-FSCL-MN-DATE                           
W33304              AND  A.LOC_INV_STAT_CDE = 'IN'                              
W33304              AND  B.ACTV_IND     = 'Y'                                   
W33304              AND  A.INV_ID       = B.INV_ID                              
W30692              AND  A.ACTL_FIN_BK_DTE = '9999-09-09'                       
                 WITH UR                                                        
               END-EXEC                                                         
           END-IF.                                                              
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
W28545         WHEN -305                                                        
W28545             MOVE PC-INCOMPLETE-DTE TO INVPAR-PLND-INV-DTE                
W28545             MOVE PC-INCOMPLETE-DTE TO INVPAR-ACTL-INV-DTE                
W28545             MOVE PC-INCOMPLETE-DTE TO INVPAR-ACTL-UNIT-BK-DTE            
W28545             MOVE PC-INCOMPLETE-DTE TO INVPAR-ACTL-FIN-BK-DTE             
               WHEN OTHER                                                       
                   DISPLAY ' FISCAL BEG DATE: ' PV-BEG-FSCL-MN-DATE             
                           ' FISCAL END DATE: ' PV-END-FSCL-MN-DATE             
                   MOVE 'GET FIRST AND LAST DATE  '                             
                       TO  PV-OPER-ATTEMPTED                                    
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    GET OTHER DATE AND INDICATOR COUNT                                   
      ******************************************************************        
       Z500-GET-OTHER-DATE.                                                     
                                                                                
           MOVE SPACES   TO INVPAR-PLND-INV-DTE                                 
                            INVPAR-ACTL-INV-DTE                                 
                            INVPAR-ACTL-UNIT-BK-DTE                             
                            INVPAR-ACTL-FIN-BK-DTE.                             
                                                                                
           PERFORM Z510-GET-NEXT-DATE-COUNT.                                    
                                                                                
           PERFORM Z520-GET-ITM-CTOFF-IND.                                      
                                                                                
           PERFORM Z530-GET-SCAN-INV-IND.                                       
                                                                                
           PERFORM Z540-GET-SCHD-PHY-CDE.                                       
                                                                                
           IF PV-LOC-NBR-COUNT > ZEROES                                         
               MOVE PV-NEXT-DATE    TO INVPAR-PLND-INV-DTE                      
                                       INVPAR-ACTL-INV-DTE                      
                                       INVPAR-ACTL-UNIT-BK-DTE                  
                                       INVPAR-ACTL-FIN-BK-DTE                   
           END-IF.                                                              
                                                                                
      ******************************************************************        
      *    COUNT THE NUMBER OF LOCATION                                         
      ******************************************************************        
       Z510-GET-NEXT-DATE-COUNT.                                                
                                                                                
           EXEC SQL                                                             
             SELECT                                                             
                     COUNT(LOC_NBR)                                             
               INTO                                                             
                     :PV-LOC-NBR-COUNT                                          
               FROM                                                             
                     TINVPAR A                                                  
W33304              ,TINCNTL B                                                  
              WHERE                                                             
W33304             A.INV_ID    = B.INV_ID                                       
W33304         AND A.LOC_INV_STAT_CDE = 'IN'                                    
W33304         AND B.ACTV_IND  = 'Y'                                            
               AND ((:RQ-FIELD = 'PLANNED  '                                    
                        AND PLND_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'ACTUAL   '                                    
                        AND ACTL_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'UNIT_BOOK'                                    
                        AND ACTL_UNIT_BK_DTE = :PV-NEXT-DATE                    
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'FIN_BOOK'                                     
                        AND ACTL_FIN_BK_DTE = :PV-NEXT-DATE))                   
             WITH UR                                                            
           END-EXEC                                                             
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   DISPLAY ' NEXT DATE: ' PV-NEXT-DATE                          
                   MOVE 'GET INV LOC COUNT        '                             
                       TO  PV-OPER-ATTEMPTED                                    
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    GET ITEM CUTOFF INDICATOR                                            
      ******************************************************************        
       Z520-GET-ITM-CTOFF-IND.                                                  
                                                                                
           EXEC SQL                                                             
             SELECT DISTINCT                                                    
                     ITM_CTOFF_IND                                              
               INTO                                                             
                     :INVPAR-ITM-CTOFF-IND                                      
               FROM                                                             
                     TINVPAR A                                                  
W33304              ,TINCNTL B                                                  
              WHERE                                                             
W33304             A.INV_ID    = B.INV_ID                                       
W33304         AND A.LOC_INV_STAT_CDE = 'IN'                                    
W33304         AND B.ACTV_IND         = 'Y'                                     
               AND ((:RQ-FIELD = 'PLANNED  '                                    
                        AND PLND_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'ACTUAL   '                                    
                        AND ACTL_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'UNIT_BOOK'                                    
                        AND ACTL_UNIT_BK_DTE = :PV-NEXT-DATE                    
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'FIN_BOOK'                                     
                        AND ACTL_FIN_BK_DTE = :PV-NEXT-DATE))                   
               AND ((:RQ-FIELD-QUALIFIER = 'CUTOFF '                            
                        AND ITM_CTOFF_IND = 'Y') OR                             
                    (:RQ-FIELD-QUALIFIER = 'NOTCUT '                            
                        AND ITM_CTOFF_IND = 'N'))                               
             WITH UR                                                            
           END-EXEC                                                             
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN +100                                                        
                   MOVE LOW-VALUES      TO INVPAR-ITM-CTOFF-IND                 
               WHEN OTHER                                                       
                   DISPLAY ' NEXT DATE: ' PV-NEXT-DATE                          
                   MOVE 'GET ITEM CUTOFF IND      '                             
                       TO  PV-OPER-ATTEMPTED                                    
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    GET SCAN INVENTORY INDICATOR                                         
      ******************************************************************        
       Z530-GET-SCAN-INV-IND.                                                   
                                                                                
           EXEC SQL                                                             
             SELECT DISTINCT                                                    
                     SCAN_INV_IND                                               
               INTO                                                             
                     :INVPAR-SCAN-INV-IND                                       
               FROM                                                             
                     TINVPAR A                                                  
W33304              ,TINCNTL B                                                  
              WHERE                                                             
W33304             A.INV_ID    = B.INV_ID                                       
W33304         AND A.LOC_INV_STAT_CDE = 'IN'                                    
W33304         AND B.ACTV_IND         = 'Y'                                     
               AND ((:RQ-FIELD = 'PLANNED  '                                    
                        AND PLND_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'ACTUAL   '                                    
                        AND ACTL_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'UNIT_BOOK'                                    
                        AND ACTL_UNIT_BK_DTE = :PV-NEXT-DATE                    
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'FIN_BOOK'                                     
                        AND ACTL_FIN_BK_DTE = :PV-NEXT-DATE))                   
               AND ((:RQ-FIELD-QUALIFIER = 'SCAN   '                            
                        AND SCAN_INV_IND  = 'Y') OR                             
                    (:RQ-FIELD-QUALIFIER = 'NOTSCAN'                            
                        AND SCAN_INV_IND  = 'N'))                               
             WITH UR                                                            
           END-EXEC                                                             
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN +100                                                        
                   MOVE LOW-VALUES      TO INVPAR-SCAN-INV-IND                  
               WHEN OTHER                                                       
                   DISPLAY ' NEXT DATE: ' PV-NEXT-DATE                          
                   MOVE 'GET SCAN INVENTORY IND '                               
                       TO  PV-OPER-ATTEMPTED                                    
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    GET SCHEDULE PHYSICAL INVENTORY CODE                                 
      ******************************************************************        
W33304 Z540-GET-SCHD-PHY-CDE.                                                   
                                                                                
           EXEC SQL                                                             
             SELECT DISTINCT                                                    
                     A.SCHD_PHY_CNT_CDE                                         
               INTO                                                             
W33304               :INVPAR-SCHD-PHY-CNT-CDE                                   
               FROM                                                             
                     TINVPAR A                                                  
W33304              ,TINCNTL B                                                  
              WHERE                                                             
W33304             A.INV_ID    = B.INV_ID                                       
W33304         AND A.LOC_INV_STAT_CDE = 'IN'                                    
W33304         AND B.ACTV_IND         = 'Y'                                     
               AND ((:RQ-FIELD = 'PLANNED  '                                    
                        AND PLND_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'ACTUAL   '                                    
                        AND ACTL_INV_DTE = :PV-NEXT-DATE                        
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'UNIT_BOOK'                                    
                        AND ACTL_UNIT_BK_DTE = :PV-NEXT-DATE                    
W30692                  AND ACTL_FIN_BK_DTE = '9999-09-09') OR                  
                    (:RQ-FIELD = 'FIN_BOOK'                                     
                        AND ACTL_FIN_BK_DTE = :PV-NEXT-DATE))                   
               AND ((:RQ-FIELD-QUALIFIER = 'SCHED  '                            
W33304                  AND SCHD_PHY_CNT_CDE IN ('PI','NS')) OR                 
RONNA**             (:RQ-FIELD-QUALIFIER = 'NOTSCHD'                            
RONNA**                 AND SCHD_PHY_CNT_CDE = 'EI') OR                         
                    (:RQ-FIELD-QUALIFIER = 'CLOSED '                            
W33304                  AND SCHD_PHY_CNT_CDE = 'CL'))                           
             WITH UR                                                            
           END-EXEC                                                             
                                                                                
           EVALUATE SQLCODE                                                     
               WHEN +0                                                          
                   CONTINUE                                                     
               WHEN +100                                                        
W33304             MOVE LOW-VALUES      TO INVPAR-SCHD-PHY-CNT-CDE              
               WHEN OTHER                                                       
                   DISPLAY ' NEXT DATE: ' PV-NEXT-DATE                          
                   MOVE 'GET SCHED PHYS INV IND   '                             
                       TO  PV-OPER-ATTEMPTED                                    
                   PERFORM Z900-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
      ******************************************************************        
      *    SQL ERROR - ABEND                                                    
      ******************************************************************        
       Z900-SQL-ABEND.                                                          
                                                                                
           MOVE +4013                 TO ABEND-CODE.                            
           DISPLAY '**  ABEND     **'.                                          
           DISPLAY '**  PROGRAM   **  =  INKUT999'.                             
           DISPLAY '**  OPERATION **  = '  PV-OPER-ATTEMPTED                    
                                                                                
      *    THE FOLLOWING COPYBOOK UTILIZES THE DB2 ABEND MODULE                 
      *    DSNTIAR TO CONVERT SQLCA INTO UNDERSTANDABLE VERBAGE.                
                                                                                
           COPY DPPD004.                                                        
                                                                                
           PERFORM Z999-ABEND.                                                  
                                                                                
      ******************************************************************        
      *    STANDARD ABEND ROUTINE                                               
      ******************************************************************        
       Z999-ABEND.                                                              
                                                                                
           CALL 'ILBOABN0'  USING ABEND-CODE.                                   
                                                                                
