       IDENTIFICATION DIVISION.                                                 
W34517 PROGRAM-ID.    VAKUT186.                                                 
       AUTHOR.        TESS BESTE.                                               
       INSTALLATION.  KOHLS DEPARTMENT STORES.                                  
       DATE-WRITTEN.  03/08/2000.                                               
       DATE-COMPILED.                                                           
W34517****IMPORTANT*****************************************************        
W34517* THIS IS A CLONE OF THE INKUT186 CREATED FOR THE VA PROJECT     *        
W34517* THE MAJOR CHANGES ARE .....                                    *        
W34517******************************************************************        
      ******************************************************************        
      *            INKUT186 - BUILD SALES BASE FILES                            
      *                                                                         
      * THIS PROGRAM CREATES TWO RELATED SALES BASE FILES - THE SALES           
      * BASE CONTROL FILE AND THE SALES BASE CUM FILE - THAT WILL BE            
      * USED TO DETERMINE THE SALES BASE AND ITS ASSOCIATED SHRINK FOR          
      * BOTH SALES BASE REPORTING AND INVENTORY SHORTAGE PROCESSING.            
      *                                                                         
      * THE PROGRAM READS THE LOCATION TABLE (XMT_LOC) AND THE INVENTORY        
      * PARAMETERS TABLE (TINVPAR) TO DETERMINE THE STORES THAT SHOULD          
      * BE INCLUDED, AND THE RELEVANT INVENTORY INFORMATION FOR EACH            
      * STORE. THIS INFORMATION IS LOADED INTO A STORE TABLE IN WORKING         
      * STORAGE.                                                                
      *                                                                         
      * IT THEN READS AN UNLOAD FILE OF THE MERCHANDISE LEDGER MONTHLY          
W20445* SUBCLASS/STORE TABLE (MNLYSUM). THE UNLOAD FILE CONTAINS SALES          
      * AND SHRINK BY FISCAL MONTH/DEPARTMENT/SUBCLASS/STORE. AS EACH           
      * RECORD IN THE UNLOAD FILE IS READ, IT IS MATCHED AGAINST THE            
      * WORKING-STORAGE STORE TABLE. THE FISCAL MONTH-END DATE OF THE           
      * UNLOAD RECORD IS EVALUATED AGAINST THE STORE'S INVENTORY                
      * INFORMATION TO DETERMINE WHETHER THE SALES AND SHRINK FOR THAT          
      * MONTH SHOULD FACTOR INTO THE CALCULATION OF ANY OF THE SALES            
      * BASE SALES AND SHRINK AMOUNTS. IF THE AMOUNTS DO FACTOR IN,             
      * THEY ARE ADDED TO OR SUBTRACTED FROM THE APPROPRIATE BUCKETS            
      * IN THE CUM FILE OUTPUT RECORD. WHEN A BREAK OCCURS ON                   
      * DEPARMENT/SUBCLASS/STORE, THE OUTPUT RECORD IS WRITTEN.                 
      *                                                                         
      * THE PROGRAM THEN READS AN UNLOAD FILE OF THE INVENTORY LEDGER           
      * MONTHLY SUBCLASS/STORE TABLE (TINSCLS). THIS UNLOAD FILE ALSO           
      * CONTAINS SALE AND SHRINK BY FISCAL MONTH/DEPARTMENT/SUBCLASS/           
      * /STORE. (ON THIS UNLOAD, THERE ARE TWO COLUMNS, A CUTOFF COLUMN         
      * AND A 'REGULAR' COLUMN, THAT MUST BE ADDED TOGETHER TO GET THE          
      * SALES OR SHRINK.) THIS UNLOAD FILE IS PROCESSED IN A MANNER             
W20445* SIMILAR TO THE MNLYSUM UNLOAD FILE.  THE LOGIC FOR EVALUATING           
      * THE FISCAL MONTH-END DATE, AND THE ACTION TAKEN AS A RESULT OF          
      * THAT EVALUATION IS DIFFERENT BECAUSE TINSCLS ONLY CONTAINS              
      * BEFORE-INVENTORY SALES AND SHRINK.                                      
      *                                                                         
RB0600* THE PROGRAM THEN READS AN UNLOAD FILE OF THE INVENTORY LEDGER           
RB0600* WEEKLY SHRINK TABLE (TWKSHNK).  THIS UNLOAD FILE ALSO CONTAINS          
RB0600* SALE AND SHRINK BY FISCAL WEEK/DEPARTMENT/SUBCLASS/STORE.               
W20445* THIS UNLOAD FILE IS PROCESSED IN A MANNER SIMILAR TO THE MNLYSUM        
RB0600* UNLOAD FILE.  THIS DATA IS USED ONLY FOR STORES THAT ARE DOING          
RB0600* AN ESTIMATE INVENTORY.                                                  
RB0600*                                                                         
      * AT THE END OF THE PROGRAM, THE SALES BASE CONTROL FILE IS               
      * CREATED BY LOOPING THROUGH THE WORKING-STORAGE STORE TABLE,             
      * AND WRITING THE INVENTORY INFORMATION FOR EACH STORE TO AN              
      * OUTPUT RECORD.                                                          
      *                                                                         
      * THE CONTENTS OF THE TWO OUTPUT FILES IS DETAILED MORE                   
      * THOROUGHLY BELOW.                                                       
      *                                                                         
      ******************************************************************        
      *                 SALES BASE CONTROL FILE                                 
      ******************************************************************        
      * THE SALES BASE CONTROL FILE CONTAINS ONE RECORD FOR EACH STORE          
      * THAT IS VALID FOR MERCHANDISE LEDGER. EACH RECORD CONTAINS THE          
      * SALES BASE BEGIN DATE, SALES BASE END DATE, AND AN INDICATOR            
      * THAT SPECIFIES WHETHER THERE IS AN UNBOOKED INVENTORY IN THE            
      * OPEN MONTH.                                                             
      *                                                                         
      * *************************                                               
      * * SALES BASE BEGIN DATE *                                               
      * *************************                                               
      * THE SALES BASE BEGINS ON THE DAY AFTER THE LAST BOOKED INVENTORY        
      * FOR THE STORE. IF THE STORE HAS NO BOOKED INVENTORIES, THE SALES        
      * BASE BEGINS ON THE STORE OPEN DATE. BOOKED INVENTORIES THAT             
      * OCCURRED DURING THE OPEN MONTH ARE NOT TAKEN INTO CONSIDERATION         
      * WHEN DETERMINING THE SALES BASE BEGIN DATE. (AN INVENTORY TAKEN         
      * DURING THE OPEN MONTH IS CONSIDERED TO BE THE END OF THE SALES          
      * BASE THIS MONTH.  IT WILL BE THE BEGINNING OF THE NEW SALES             
      * BASE NEXT MONTH.)                                                       
      *                                                                         
      * *************************                                               
      * * SALES BASE END DATE   *                                               
      * *************************                                               
      * THE SALES BASE ENDS ON THE DAY OF AN  ACTUAL INVENTORY (BOOKED          
      * OR UNBOOKED) IN THE OPEN MONTH. IF THERE IS NO ACTUAL INVENTORY         
      * IN THE OPEN MONTH, THE SALES BASE HAS NOT ENDED, AND THE SALES          
      * BASE END DATE IS LEFT BLANK.                                            
      *                                                                         
      * *************************                                               
      * * UNBOOKED INV IND      *                                               
      * *************************                                               
      * THE UNBOOKED INVENTORY INDICATOR IS SET TO 'Y' IF THE STORE HAS         
      * AN ACTUAL UNBOOKED INVENTORY IN THE OPEN MONTH. THIS INDICATOR          
      * IS USED IN SHORTAGE PROCESSING. ONLY STORES WITH AN INDICATOR OF        
      * 'Y' ARE PROCESSED BECAUSE THE END RESULT OF THE SHORTAGE PROCESS        
      * IS AN INVENTORY ADJUSTMENT TO BOOK THE INVENTORY. ONLY UNBOOKED         
      * INVENTORIES SHOULD BE BOOKED BY THE SHORTAGE/INVENTORY                  
      * ADJUSTMENT PROCESS.                                                     
      *                                                                         
RB0600* *********************************                                       
RB0600* * SCHEDULED INVENTORY TYPE CODE *                                       
RB0600* *********************************                                       
RB0600* THE SCHEDULED INVENTORY TYPE CODE HAS 4 POSSIBLE VALUES, 'Y',           
RB0600* 'C', 'N', AND SPACE.  THIS CODE IS USED TO TELL IF A STORE IS           
RB0600* DOING A PHYSICAL INVENTORY ('Y' OR 'C'), AN ESTIMATE INVENTORY          
RB0600* ('N'), OR NO INVENTORY (SPACE).  FOR STORES DOING AN ESTIMATED          
RB0600* INVENTORY, THE BEFORE-INVENTORY SALES AND SHRINK COMES FROM THE         
RB0600* TWKSHNK TABLE                                                           
RB0600*                                                                         
      ******************************************************************        
      *                 SALES BASE CUM FILE                                     
      ******************************************************************        
      * THE SALES BASE CUM FILE CONTAINS ONE RECORD FOR EACH DEPARTMENT/        
W20445* SUBCLASS/STORE FOR WHICH THERE WAS SALES OR SHRINK ON MNLYSUM OR        
RB0600* TINSCLS OR TWKSHNK DURING THE CURRENT OR NEXT SALES BASE PERIOD.        
RB0600* EACH RECORD CONTAINS THE OPEN SALES AND SHRINK, CUMULATIVE SALES        
RB0600* AND SHRINK, AND NEXT SALES AND SHRINK.                                  
      *                                                                         
      * *************************                                               
      * * OPEN SALES AND SHRINK *                                               
      * *************************                                               
      * THE OPEN SALES AND SHRINK REFLECT THE PORTION OF THE OPEN FISCAL        
      * MONTH'S SALES AND SHRINK THAT BELONGS TO THE SALES BASE THAT            
      * BEGAN ACCUMULATING ON THE STORE'S SALES BASE BEGIN DATE.                
      *                                                                         
RB0600* IF THE STORE IS NOT DOING ANY INVENTORY, THE OPEN SALES AND             
      * SHRINK SHOULD INCLUDE ALL SALES AND SHRINK FOR THE OPEN MONTH.          
W20445* IN THIS CASE, THE SALES AND SHRINK ARE TAKEN FROM MNLYSUM               
      * BECAUSE IT CONTAINS ALL SALES AND SHRINK.                               
RB0600*                                                                         
RB0600* IF THE STORE IS DOING A ESTIMATED INVENTORY, THE BEFORE-                
RB0600* INVENTORY SALES AND SHRINK ARE TAKEN FROM THE TWKSHNK                   
RB0600* BECAUSE THE SALES BASE CALCULATION IS DEPENDANT UPON THE                
RB0600* BEFORE-INVENTORY SALES FOR THE OPEN MONTH.  THE PERIOD OF TIME          
RB0600* FOR THE BEFORE-INVENTORY IS FROM THE BEGINNING OF THE OPEN MONTH        
RB0600* TO THE SALES BASE END DATE (INCLUSIVE).                                 
      *                                                                         
RB0600* IF THE STORE IS DOING A PHYSICAL INVENTORY, THE OPEN SALES AND          
RB0600* SHRINK SHOULD INCLUDE ONLY THE SALES AND SHRINK FOR THE OPEN            
      * MONTH THAT OCCURRED ON OR BEFORE INVENTORY DATE. IN THIS CASE,          
      * THE SALES AND SHRINK ARE TAKEN FROM TINSCLS BECAUSE IT ONLY             
      * CONTAINS THE BEFORE- INVENTORY SALES AND SHRINK.                        
      *                                                                         
      *                                                                         
      *************************                                                 
      * CUM SALES AND SHRINK  *                                                 
      *************************                                                 
      * THE CUMULATIVE SALES AND SHRINK REFLECT ALL THE SALES AND SHRINK        
      * THAT HAVE BEEN ACCUMULATED SINCE THE STORE'S SALES BASE BEGIN           
      * DATE.                                                                   
      *                                                                         
      * FOR EACH MONTH BETWEEN (BUT NOT INCLUDING) THE FIRST MONTH OF           
      * THE SALES BASE AND THE LAST MONTH OF THE SALES BASE, THE CUM            
      * SALES AND SHRINK SHOULD INCLUDE ALL SALES AND SHRINK FOR THE            
      * MONTH. THESE SALES AND SHRINK AMOUNTS ARE OBTAINED FROM MNLYSUM,        
W20445* WHICH CONTAINS ALL SALES AND SHRINK.                                    
      *                                                                         
      * FOR THE FIRST MONTH OF THE SALES BASE, ONLY SALES AND SHRINK            
      * THAT OCCURRED ON OR AFTER THE SALES BASE BEGIN DATE SHOULD BE           
      * INCLUDED. THE SALES BASE ALWAYS BEGINS ON THE DAY AFTER THE             
      * LAST INVENTORY PRIOR TO THE OPEN MONTH, SO THIS IS THE SAME AS          
      * SAYING THAT ONLY THE AFTER-INVENTORY SALES AND SHRINK FOR THE           
      * MONTH SHOULD BE INCLUDED. THE AFTER-INVENTORY SALES AND SHRINK          
      * AMOUNTS ARE DETERMINED BY ADDING IN THE ENTIRE MONTH'S SALES            
W20445* AND SHRINK (FROM MNLYSUM) AND SUBTRACTING THE BEFORE-INVENTORY          
      * SALES AND SHRINK.                                                       
      *                                                                         
      * FOR THE LAST MONTH OF THE SALES BASE, ONLY SALES AND SHRINK             
      * THAT OCCURRED ON OR BEFORE THE SALE BASE END DATE SHOULD BE             
      * INCLUDED. THE SALES BASE ALWAYS ENDS ON THE DAY OF AN INVENTORY         
      * IN THE OPEN MONTH, SO THIS IS THE SAME AS SAYING THAT ONLY THE          
      * BEFORE-INVENTORY SALES AND SHRINK FOR THAT MONTH SHOULD BE              
RB0600* INCLUDED.  (FOR A STORE THAT IS DOING A PHYSICAL INVENTORY, THE         
RB0600* BEFORE-INVENTORY SALES AND SHRINK COMES FROM THE TINSCLS; FOR A         
RB0600* STORE THAT IS DOING AN ESTIMATED INVENTORY, THE BEFORE-INVENTORY        
RB0600* SALES AND SHRINK COMES FROM THE TWKSHNK.)  IF THE SALES BASE HAS        
      * NOT ENDED (I.E. THERE IS NO INVENTORY IN THE OPEN MONTH), THE           
      * ENTIRE MONTH'S SALES AND SHRINK SHOULD BE INCLUDED.  THESE              
W20445* AMOUNTS ARE OBTAINED FROM MNLYSUM.                                      
      *                                                                         
      *                                                                         
      *************************                                                 
      * NEXT SALES AND SHRINK *                                                 
      *************************                                                 
      * THE NEXT SALES AND SHRINK REFLECT THE PORTION OF THE OPEN FISCAL        
      * MONTH'S SALES AND SHRINK THAT BELONG TO THE NEXT SALES BASE.            
      * THESE NUMBERS ARE ONLY RELEVANT IF THE STORE HAS INVENTORIED IN         
      * THE OPEN MONTH, THUS ENDING THE CURRENT SALES BASE AND BEGINNING        
      * THE NEXT ONE. IN THAT SITUATION, ONLY AFTER-INVENTORY SALES AND         
RB0600* SHRINK FOR THE OPEN MONTH ARE INCLUDED.  WHEN A STORE IS DOING          
RB0600* PHYSICAL INVENTORY, THESE AMOUNTS ARE DETERMINED BY ADDING IN           
W20445* THE ENTIRE MONTH'S SALES AND SHRINK (FROM MNLYSUM) AND                  
      * SUBTRACTING THE BEFORE-INVENTORY SALES AND SHRINK (FROM                 
RB0600* TINSCLS).  WHEN A STORE IS DOING AN ESTIMATED INVENTORY THESE           
RB0600* AMOUNTS ARE DETERMINED FROM THE TWKSHNK TABLE WHERE THE FISCAL          
RB0600* WEEK DATE AFTER THE SALES BASE END.  IF THE SALES BASE HAS NOT          
      * ENDED, THESE AMOUNTS ARE ZERO.                                          
      ****************************************************************          
      **04/03/2000          CHANGED BY:  B MCASEY WR:20839                      
      *                                                                         
      *  MODIFIED LOGIC TO DETERMINE SALES BASE BEGIN DATE.  IT WILL NOW        
      *  PREVENT THE CURSOR FROM RETURNING ROWS FOR "FAKE" INVENTORIES.         
W20445*  MODIFIED RECORD LENGTHS FOR MNLYSUM TO INCLUDE ESTIMATED-INV-          
      *  AMTS.                                                                  
      ******************************************************************        
RB0600* 06/06/2000          CHANGED BY:  R BUTZ   WR:21015                      
RB0600*                                                                         
RB0600*  ADDED LOGIC TO CALCULATE SALES BASE FOR STORES THAT ARE                
RB0600*  PROCESSING AN ESTIMATE INVENTORY.  AN EXTRACT OF THE TWKSHNK           
RB0600*  IS USED TO DETERMINE THE SALES BASE FOR STORES THAT ARE                
RB0600*  DOING AN ESTIMATE INVENTORY.  BECAUSE THE STORES THAT ARE DOING        
RB0600*  AN ESTIMATE INVENTORY ARE NOT INCLUDED IN THE INVENTORY LEDGER         
RB0600*  TABLES, AND IT IS NECESSARY TO GET THE BEFORE-INVENTORY SALES          
RB0600*  FOR THE OPEN MONTH TO CALCULATE THE SALES BASE, THE                    
RB0600*  BEFORE-INVENTORY SALES AND SHRINK FOR THE LAST MONTH OF THE            
RB0600*  SALES BASE WILL BE TAKEN FROM TWKSHNK.                                 
RB0600*                                                                         
21015 * 01/11/2001          CHANGED BY: R JANSSEN WR:21015                      
21015 *                                                                         
21015 *  CHANGE FILE SIZE FOR TWKSHNK TABLE UNLOAD....                          
      ******************************************************************        
23511 * 06/13/2002          MADE BY: V. LEE YANG WR/IR #: 23511                 
  |   *  CHANGE MADE: UPDATE SALES BASE EXTRACTION PROCESS TO INCLUDE           
  |   *      FUTURE PHYSICAL INVENTORYING STORES.  THIS WILL ACCOMMODATE        
  |   *      THE CHANGES MADE TO INKRP020 TO REPORT ON ALL PHYSICAL             
  |   *      INVENTORYING AND FUTURE PHYSICAL INVENTORYING STORES               
  |   *      REPORTS.                                                           
23511 ******************************************************************        
W23511* 06/28/2002          MADE BY: S. JACKSON  WR/IR #: W23511                
  |   *  CHANGE MADE: MODIFY THIS_MN_INV_CSR TO INCLUDE STORES WITH             
  |   *      EITHER AN ACTL_INV_DTE OR A PLND_INV_DTE THIS MONTH.               
  |   *      CHANGE MADE TO CORRECT AN ISSUE WITH INKRP020 REPORTS AND          
  |   *      POPULATING NEXT SALES BASE COLUMNS TOO EARLY.                      
W23511******************************************************************        
W24029* 01/22/2003          MADE BY: S. JACKSON  WR/IR #: W24029                
  |   *  CHANGE MADE: EST STORES AND FUTURE STORES WILL KEEP DEFAULT            
  |   *      DATE IN SALES BASE END DATE (ST-SLS-BSE-END-DTE) VS SPACES         
  |   *      UNTIL ACTL_INV_DTE IS SET. (CHGID W23511*)                         
W24029******************************************************************        
W26600* 04/01/2004          MADE BY: M. JOHNSON  WR/IR #: W26600                
W2660 *  CHANGE MADE: STORE EXPANSION                                           
W20445* W20445  09-01-2004 ROD JANSSEN DETAILED INVNENTORY ADJUSTMENT           
      ******************************************************************        
W26006* 02/24/2005          MADE BY: ERIN SEARL  WR/IR #: W26006                
W26006*  CHANGE MADE: REMOVE REFERENCES TO OBSOLETE STORE TABLE.                
W26006******************************************************************        
30272 * 03/17/2006          MADE BY: ROD JANSSEN WR/IR #: WR30272               
30272 *  CHANGE MADE: FOR MARCH 2006 INVENTORY, INCLUDE MYSTERY STORES          
30272 *               WHICH ARE FUTURED DATED LOCATIONS.....                    
30272 ******************************************************************        
30272 * 03/26/2006          MADE BY: S JACKSON   WR/IR #: WR30272               
30272 *  CHANGE MADE: FOR MARCH 2006 INVENTORY, INCLUDE MYSTERY STORES          
30272 *               REMOVE LOC 1019 FROM XMT_LOC CSR-NOT INVENTORYING         
30272 ******************************************************************        
30692 * 03/26/2006          MADE BY: ROD JANSSEN WR/IR #: WR30692               
30692 *  CHANGE MADE: REMOVE THE MYSTERY STORE LOGIC FOR 1020....               
30692 ******************************************************************        
W26006******************************************************************        
W28582* 05/15/2006          MADE BY: CLARK SCHWENN                              
W28582*  CHANGE MADE: REPLACE ALL ENT-ID REFERENCES WITH ML-LWST-ID             
W28582*               FOR THE VENDOR/BRAND PROJECT.                             
W28582******************************************************************        
RONNA1* 03/12/2007          MADE BY: R.MCDONALD  WR/IR #:                       
RONNA1*  CHANGE MADE: ADD 2 OTHER MYSTERY STORES : 1086, 1138                   
RONNA1*               SEE PITS PM00994317                                       
RONNA1******************************************************************        
30692 * 04/11/2007          MADE BY: JILL LIN    PITS #: PM01006483             
30692 *  CHANGE MADE: REMOVE THE MYSTERY STORE LOGIC FOR 1086, 1138.            
30692 ******************************************************************        
W34517* W34517  10-14-2008 IN-VA INVENTORY STREAM SPLIT                         
      ******************************************************************        
W33304* 02/02/2009          MADE BY: INFOSYS/ JIMMY WR #: W33304                
W33304*  CHANGE MADE: HILO CHANGES. STORES FROM PRIOR CYCLES CAN BE KEPT        
W33304*              OPEN. SALES BASE CREATION TO CONSIDER THOSE TOO.           
W33304******************************************************************        
W34557* W34557  09-13-2011 PROVIDE FUNCTIONALITY TO ALLOW INVENTORIES           
W34557*                    TO BE SCHEDULED DURING MERCHANDISING LEDGER          
W34557*                    CLOSING WEEK WHICH IS ALSO THE FIRST FISCAL          
W34557*                    WEEK OF THE MONTH.                                   
W34557*                    USE ALTERNATE DATE CONTROL CARD INFO INSTEAD         
W34557*                    OF TMLCNTL DURING CLOSE WEEK.                        
W34557*                                                                         
W34557* PLEASE SEE INRD001 FOR EXAMPLES OF THE ALTERNATE DATE CARD              
W34557* AND ITS VALUES                                                          
W34557*                                                                         
W34557******************************************************************        
C13503* CRQ000000013503    10/21/2011  MADE BY: RAVIKUMAR GUNTHA                
C13503*                 -> CHANGED PARA 3400-PROCESS-NONCLOSE-WK-STRS           
C13503*                    TO ADD SALES AND SHRINK DOLLARS FROM                 
C13503*                    MONTHLY SUM CUM FILE TO CURRENT AND CUM              
C13503*                    BUCKETS WHEN INK410 RUN DURING CLOSE WEEK            
C13503*                    AFTER ACTIVATION OF 2'ND WEEK COUNTING STORES        
C13503*                 -> CHANGED CODE CAN BE FOUND USING TAG C13503           
C13503******************************************************************        
                                                                                
       ENVIRONMENT DIVISION.                                                    
       CONFIGURATION SECTION.                                                   
       SOURCE-COMPUTER.        IBM-3090.                                        
       OBJECT-COMPUTER.        IBM-3090.                                        
       INPUT-OUTPUT SECTION.                                                    
                                                                                
       FILE-CONTROL.                                                            
                                                                                
W20445     SELECT MNLYSUM-UNLOAD-FILE                                           
               ASSIGN TO  INP01.                                                
                                                                                
           SELECT TINSCLS-UNLOAD-FILE                                           
               ASSIGN TO  INP02.                                                
                                                                                
RB0600     SELECT TWKSHNK-UNLOAD-FILE                                           
RB0600         ASSIGN TO  INP03.                                                
RB0600                                                                          
W34557     SELECT ALTERNATE-DATE-CNTL-FILE                                      
W34557         ASSIGN TO INP04.                                                 
W34557                                                                          
           SELECT SALES-BASE-CNTL-FILE                                          
               ASSIGN TO  OUT01.                                                
                                                                                
           SELECT SALES-BASE-CUM-FILE                                           
               ASSIGN TO  OUT02.                                                
                                                                                
       DATA DIVISION.                                                           
       FILE SECTION.                                                            
                                                                                
W20445 FD  MNLYSUM-UNLOAD-FILE                                                  
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE STANDARD                                           
           BLOCK CONTAINS 0 RECORDS.                                            
W20445 01  MNLYSUM-UNLOAD-RECORD       PIC X(71).                               
                                                                                
       FD  TINSCLS-UNLOAD-FILE                                                  
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE STANDARD                                           
           BLOCK CONTAINS 0 RECORDS.                                            
W20445 01  TINSCLS-UNLOAD-RECORD       PIC X(49).                               
                                                                                
RB0600 FD  TWKSHNK-UNLOAD-FILE                                                  
RB0600     RECORDING MODE IS F                                                  
RB0600     LABEL RECORDS ARE STANDARD                                           
RB0600     BLOCK CONTAINS 0 RECORDS.                                            
W33304 01  TWKSHNK-UNLOAD-RECORD       PIC X(41).                               
                                                                                
W34557 FD  ALTERNATE-DATE-CNTL-FILE                                             
W34557     LABEL RECORDS ARE STANDARD                                           
W34557     RECORDING MODE F                                                     
W34557     BLOCK CONTAINS 0 RECORDS.                                            
W34557                                                                          
W34557 01  ALTERNATE-DATE-CNTL-REC     PIC X(80).                               
W34557                                                                          
       FD  SALES-BASE-CNTL-FILE                                                 
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE STANDARD                                           
           BLOCK CONTAINS 0 CHARACTERS.                                         
       01  SALES-BASE-CNTL-REC         PIC X(50).                               
                                                                                
       FD  SALES-BASE-CUM-FILE                                                  
           RECORDING MODE IS F                                                  
           LABEL RECORDS ARE STANDARD                                           
           BLOCK CONTAINS 0 CHARACTERS.                                         
W20445 01  SALES-BASE-CUM-REC          PIC X(80).                               
                                                                                
      ******************************************************************        
       WORKING-STORAGE SECTION.                                                 
      ******************************************************************        
                                                                                
           COPY INRD022.                                                        
                                                                                
      ******************************************************************        
      * SALES BASE CUM FILE LAYOUT                                              
      ******************************************************************        
                                                                                
W20445     COPY INRD023.                                                        
                                                                                
      ******************************************************************        
      * WORK AREA FOR DSNTIAR SUBROUTINE CALL (IN DPPD004).                     
      ******************************************************************        
                                                                                
           COPY DPWS004.                                                        
                                                                                
      *****************************************************************         
      * WORK ARE FOR CALENDAR ROUTINE                                           
      *****************************************************************         
                                                                                
           COPY DPWS500.                                                        
W34557*****************************************************************         
W34557*  COPYBOOK OF INPUT ALTERNATE DATE CONTROL CARD RECORD LAYOUT  *         
W34557*****************************************************************         
W34557*                                                                         
W34557     COPY INRD001.                                                        
W34557                                                                          
W34557*****************************************************************         
W34557*  COPYBOOK OF FIELDS USED IN THE EDIT / VALIDATE PROCESS.      *         
W34557*****************************************************************         
W34557                                                                          
W34557     COPY INWS050.                                                        
                                                                                
       01  PC-PROGRAM-CONSTANTS.                                                
           05  PC-FUTURE-DATE           PIC X(10)    VALUE '9999-09-09'.        
W34557     05  PC-VAKUT186              PIC X(08)    VALUE 'VAKUT186'.          
                                                                                
       01  PS-PROGRAM-SWITCHES.                                                 
           05  PS-END-OF-STORE-CSR-SW          PIC X VALUE 'N'.                 
               88  PS-END-OF-STORE-CSR               VALUE 'Y'.                 
                                                                                
           05  PS-END-OF-LAST-INV-CSR-SW       PIC X VALUE 'N'.                 
               88  PS-END-OF-LAST-INV-CSR            VALUE 'Y'.                 
                                                                                
W33304     05  PS-END-OF-INV-ACT-STR-CSR-SW    PIC X VALUE 'N'.                 
W33304         88  PS-END-OF-INV-ACTIVE-STR-CSR      VALUE 'Y'.                 
                                                                                
W34557     05  PS-END-OF-INCNTL-CSR-SW         PIC X VALUE 'N'.                 
W34557         88  PS-END-OF-INCNTL-CSR              VALUE 'Y'.                 
W34557                                                                          
W20445     05  PS-END-OF-MNLYSUM-UNLD-SW       PIC X VALUE 'N'.                 
W20445         88  PS-END-OF-MNLYSUM-UNLD            VALUE 'Y'.                 
                                                                                
           05  PS-END-OF-TINSCLS-UNLD-SW       PIC X VALUE 'N'.                 
               88  PS-END-OF-TINSCLS-UNLD            VALUE 'Y'.                 
                                                                                
RB0600     05  PS-END-OF-TWKSHNK-UNLD-SW       PIC X VALUE 'N'.                 
RB0600         88  PS-END-OF-TWKSHNK-UNLD            VALUE 'Y'.                 
RB0600                                                                          
           05  PS-STR-IN-TBL-SW                PIC X VALUE 'Y'.                 
               88  PS-STR-IN-TBL                     VALUE 'Y'.                 
               88  PS-STR-NOT-IN-TBL                 VALUE 'N'.                 
                                                                                
           05  PS-MN-END-DTE-FND-SW            PIC X VALUE 'N'.                 
               88  PS-MN-END-DTE-FND                 VALUE 'Y'.                 
               88  PS-MN-END-DTE-NOT-FND             VALUE 'N'.                 
                                                                                
           05  PS-DATA-FND-FOR-KEY-SW          PIC X VALUE 'N'.                 
               88  PS-DATA-FND-FOR-KEY               VALUE 'Y'.                 
               88  PS-DATA-NOT-FND-FOR-KEY           VALUE 'N'.                 
                                                                                
       01  PV-PROGRAM-VARIABLES.                                                
           05  PV-ABEND-CODE                PIC S9(04)    COMP VALUE +0.        
           05  PV-SQL-SUB                   PIC S9(04)    COMP VALUE +0.        
           05  PV-PARAGRAPH-NAME            PIC X(30).                          
           05  PV-DB2-OPER-ATTEMPTED        PIC X(30).                          
           05  PV-MAX-STR-NBR               PIC S9(04)    COMP VALUE +0.        
W20445     05  PV-PREV-TINSCLS-UNLD-KEY     PIC X(11)     VALUE SPACE.          
W20445     05  PV-PREV-MNLYSUM-UNLD-KEY     PIC X(12)     VALUE SPACE.          
           05  PV-PREV-TWKSHNK-UNLD-KEY     PIC X(07)     VALUE SPACE.          
           05  PV-STR-NBR-9                 PIC 9(04)     VALUE ZERO.           
           05  PV-OPN-FSCL-MN-BEG-DTE       PIC X(10)     VALUE SPACE.          
W33304     05  PV-OPN-FSCL-MN-END-DTE       PIC X(10)     VALUE SPACE.          
W33304     05  PV-SLSBASE-END-MN-BEGIN      PIC X(10)     VALUE SPACE.          
W20445     05  PV-EDIT-SUB-CLASS       PIC 9(03)  VALUE ZEROS.                  
W20445     05  PV-EDIT-SUB-CLASS-RED REDEFINES                                  
W20445         PV-EDIT-SUB-CLASS.                                               
W20445         10  PV-EDIT-CLASS-P1    PIC X(01).                               
W20445         10  PV-EDIT-CLASS-P2    PIC X(02).                               
W20445     05  PV-EDIT-DEPT-NBR        PIC 9(03)  VALUE ZEROS.                  
W20445     05  PV-EDIT-DEPT-NBR-RED REDEFINES                                   
W20445         PV-EDIT-DEPT-NBR        PIC X(03).                               
W34557     05  PV-HOLD-MLCNTL-OPN-MN-DTE    PIC X(10)    VALUE SPACE.           
                                                                                
W20445 01  MNLYSUM-UNLD-REC.                                                    
W20445     05  MNLYSUM-UNLD-FSCL-MN-END-DTE PIC X(10)    VALUE SPACE.           
W20445     05  MNLYSUM-UNLD-KEY.                                                
W20445         10  MNLYSUM-UNLD-DEPT-NBR    PIC S9(4)V COMP-3 VALUE +0.         
W20445         10  MNLYSUM-UNLD-SUB-CL-NBR  PIC S9(4)V COMP-3 VALUE +0.         
W20445         10  MNLYSUM-UNLD-STR-NBR     PIC S9(04) COMP VALUE +0.           
W20445         10  MNLYSUM-UNLD-ML-LWST-ID  PIC S9(09) COMP VALUE +0.           
W20445     05  MNLYSUM-UNLD-REG-RTL-AMT                                         
W20445                                   PIC S9(11)V99 COMP-3 VALUE +0.         
W20445     05  MNLYSUM-UNLD-PROMO-RTL-AMT                                       
W20445                                   PIC S9(11)V99 COMP-3 VALUE +0.         
W20445     05  MNLYSUM-UNLD-PROCLR-RTL-AMT                                      
W20445                                   PIC S9(11)V99 COMP-3 VALUE +0.         
W20445     05  MNLYSUM-UNLD-CLR-RTL-AMT                                         
W20445                                   PIC S9(11)V99 COMP-3 VALUE +0.         
W20445     05  MNLYSUM-UNLD-OTH-RTL-AMT                                         
W20445                                   PIC S9(11)V99 COMP-3 VALUE +0.         
W20445     05  MNLYSUM-UNLD-SHNK-RTL-AMT PIC S9(11)V99 COMP-3 VALUE +0.         
W20445     05  MNLYSUM-UNLD-EST-INV-ADJ-AMT PIC S9(11)V99                       
W26600                                                 COMP-3 VALUE +0.         
                                                                                
       01  TINSCLS-UNLD-REC.                                                    
           05  TINSCLS-UNLD-FSCL-MN-END-DTE PIC X(10)    VALUE SPACE.           
           05  TINSCLS-UNLD-KEY.                                                
               10  TINSCLS-UNLD-DEPT-NBR    PIC X(03)    VALUE SPACE.           
               10  TINSCLS-UNLD-SUB-CL-NBR  PIC X(02)    VALUE SPACE.           
               10  TINSCLS-UNLD-STR-NBR     PIC S9(04)   COMP VALUE +0.         
W20445         10  TINSCLS-UNLD-IN-LWST-ID  PIC S9(09)   COMP VALUE +0.         
W26600     05  TINSCLS-UNLD-SLS-RTL-AMT   PIC S9(11)V99 COMP-3 VALUE +0.        
W26600     05  TINSCLS-UNLD-SHNK-RTL-AMT  PIC S9(11)V99 COMP-3 VALUE +0.        
W26600     05  TINSCLS-UNLD-CTOFF-SLS-AMT PIC S9(11)V99 COMP-3 VALUE +0.        
W26600     05  TINSCLS-UNLD-CTOFF-SHNK-AMT PIC S9(11)V99                        
W26600                                                  COMP-3 VALUE +0.        
                                                                                
RB0600 01  TWKSHNK-UNLD-REC.                                                    
RB0600     05  TWKSHNK-UNLD-FSCL-WK-END-DTE PIC X(10)    VALUE SPACE.           
RB0600     05  TWKSHNK-UNLD-KEY.                                                
RB0600         10  TWKSHNK-UNLD-DEPT-NBR    PIC X(03)    VALUE SPACE.           
RB0600         10  TWKSHNK-UNLD-SUB-CL-NBR  PIC X(02)    VALUE SPACE.           
RB0600         10  TWKSHNK-UNLD-STR-NBR     PIC S9(04)   COMP VALUE +0.         
W33304     05  TWKSHNK-UNLD-FSCL-MN-END-DTE PIC X(10)    VALUE SPACE.           
W26600     05  TWKSHNK-UNLD-SLS-RTL-AMT  PIC S9(11)V99 COMP-3 VALUE +0.         
W26600     05  TWKSHNK-UNLD-SHNK-RTL-AMT PIC S9(11)V99 COMP-3 VALUE +0.         
                                                                                
       01  ST-SUB                             PIC S9(04) COMP SYNC.             
       01  ST-MAX-ENTRIES                     PIC  9(05) VALUE 9999.            
       01  ST-STORE-TABLE.                                                      
           05  ST-STORE-TABLE-ENTRY           OCCURS 9999 TIMES.                
               10  ST-STR-NBR                 PIC 9(04).                        
               10  ST-OPENED-DTE              PIC X(10).                        
               10  ST-SLS-BSE-BEG-DTE         PIC X(10).                        
W33304         10  ST-SLS-BSE-BEG-FSCL-MN-DTE PIC X(10).                        
W23511         10  ST-PLND-INV-DTE            PIC X(10).                        
W33304         10  ST-SLS-BSE-END-FSCL-MN-BEG PIC X(10).                        
W33304         10  ST-SLS-BSE-END-DTE         PIC X(10).                        
W33304         10  ST-SLS-BSE-END-FSCL-MN-END PIC X(10).                        
W33304         10  ST-UNBKD-INV-IND           PIC X.                            
W33304         10  ST-SCHEDULED-INV-TYPE-CDE  PIC XX.                           
W33304         10  ST-INV-ID                  PIC S9(9) COMP.                   
W33304         10  ST-FINCL-INV-STAT-CDE      PIC X(02).                        
W34557         10  ST-CNT-IN-CLSWK-IND        PIC X(01).                        
                                                                                
      ******************************************************************        
      *  STORE TABLE                                                            
      ******************************************************************        
W26600     EXEC SQL                                                             
W26600         INCLUDE XMT00001                                                 
W26600     END-EXEC.                                                            
                                                                                
      ******************************************************************        
      *  INVENTORY PARAMETERS TABLE                                             
      ******************************************************************        
           EXEC SQL                                                             
               INCLUDE TINVPAR                                                  
           END-EXEC.                                                            
                                                                                
      ******************************************************************        
      *  MERCHANDISE LEDGER CONTROL TABLE                                       
      ******************************************************************        
           EXEC SQL                                                             
               INCLUDE TMLCNTL                                                  
           END-EXEC.                                                            
                                                                                
W33304******************************************************************        
W33304*  INVENTORY LEDGER CONTROL TABLE                                         
W33304******************************************************************        
W33304     EXEC SQL                                                             
W33304         INCLUDE TINCNTL                                                  
W33304     END-EXEC.                                                            
W33304                                                                          
      ******************************************************************        
      *  MERCHANDISE LEDGER DATE ATTRIBUTE TABLE                                
      ******************************************************************        
           EXEC SQL                                                             
               INCLUDE TDTATTR                                                  
           END-EXEC.                                                            
                                                                                
      ******************************************************************        
      *  COMMUNICATION AREA FOR DB2                                             
      ******************************************************************        
           EXEC SQL                                                             
               INCLUDE SQLCA                                                    
           END-EXEC.                                                            
                                                                                
      ******************************************************************        
      * CURSOR TO RETRIEVE STORES TO BE PROCESSED FROM THE STORE                
      * TABLE.                                                                  
      ******************************************************************        
                                                                                
W26000     EXEC SQL                                                             
W26000       DECLARE STORE_CSR CURSOR FOR                                       
W26000             SELECT LOC_NBR,                                              
W26000                    OPN_DTE                                               
W26000             FROM XMT_LOC                                                 
30692 ***          WHERE (LOC_TYP_CDE   IN ('DC','DS','RV','CS','DA')           
30692 *MYSTERY       AND (FINCL_CLO_DTE > :MLCNTL-OPN-FSCL-MN-DTE OR            
30692 *STORE              FINCL_CLO_DTE IS NULL)                                
30692 *LOGIC         AND  OPN_DTE <= :MLCNTL-OPN-FSCL-MN-DTE)                   
30692 ***          OR (LOC_NBR IN (1020))                                       
30692              WHERE LOC_TYP_CDE   IN ('DC','DS','RV','CS','DA')            
30692                AND (FINCL_CLO_DTE > :MLCNTL-OPN-FSCL-MN-DTE OR            
30692                     FINCL_CLO_DTE IS NULL)                                
30692                AND OPN_DTE <= :MLCNTL-OPN-FSCL-MN-DTE                     
W26000             ORDER BY LOC_NBR                                             
30372              WITH UR                                                      
W26000     END-EXEC.                                                            
                                                                                
      ******************************************************************        
W33304*  CURSOR TO GET THE DATE OF THE LAST ACTUAL INVENTORY                    
      *  PRIOR TO THE OPEN MONTH FOR EACH STORE. THESE DATES WILL               
      *  BE USED TO DETERMINE WHEN THE SALE BASE BEGAN FOR EACH STORE.          
W33304*  ADDED SCHD_PHY_CNT_CDE CHECK TO BRING BACK ONLY ROWS THAT HAD          
W33304*  AN ACTUAL INVENTORY.(NOT ESTIMATED INVENTORY)                          
      ******************************************************************        
                                                                                
W26600     EXEC SQL                                                             
W26600         DECLARE LAST_INV_CSR CURSOR FOR                                  
W26600             SELECT  LOC_NBR                                              
W26600                    ,MAX (ACTL_INV_DTE)                                   
W26600             FROM  TINVPAR                                                
W26600             WHERE NOT ACTL_FIN_BK_DTE = :PC-FUTURE-DATE                  
W26600               AND ACTL_INV_DTE        < :PV-OPN-FSCL-MN-BEG-DTE          
W33304               AND SCHD_PHY_CNT_CDE IN ('PI','CL','NS')                   
W33304               AND LOC_INV_STAT_CDE   = 'IN'                              
W33304               AND FINCL_INV_STAT_CDE = 'TP'                              
W26600             GROUP BY LOC_NBR                                             
W26600             ORDER BY LOC_NBR                                             
30272              WITH UR                                                      
W26600     END-EXEC.                                                            
                                                                                
W26600*    EXEC SQL                                                             
W26600*        DECLARE LAST_INV_CSR CURSOR FOR                                  
W26600*            SELECT  STORE_NBR                                            
W26600*                   ,MAX (ACTL_INV_DTE)                                   
W26600*            FROM  TINVPAR                                                
W26600*            WHERE NOT ACTL_FIN_BK_DTE = :PC-FUTURE-DATE                  
W26600*              AND ACTL_INV_DTE        < :PV-OPN-FSCL-MN-BEG-DTE          
W26000*              AND SCHD_PHY_CNT_IND ^= 'N'                                
W26600*            GROUP BY STORE_NBR                                           
W26600*            ORDER BY STORE_NBR                                           
W26600*    END-EXEC.                                                            
                                                                                
      ******************************************************************        
      * CURSOR TO GET STORES THAT HAVE SCHEDULED AN INVENTORY IN THE            
      * OPEN FISCAL MONTH. THIS CURSOR WILL BE USED TO DETERMINE IF             
      * THE SALES BASE HAS ENDED.                                               
      ******************************************************************        
                                                                                
           EXEC SQL                                                             
W33304         DECLARE INV_ACTIVE_STR_CSR CURSOR FOR                            
W33304             SELECT A.INV_ID                                              
W33304                   ,A.LOC_NBR                                             
W33304                   ,A.ACTL_INV_DTE                                        
W33304                   ,A.ACTL_FIN_BK_DTE                                     
W33304                   ,A.SCHD_PHY_CNT_CDE                                    
W33304                   ,A.PLND_INV_DTE                                        
W33304                   ,B.OPN_FSCL_MN_DTE                                     
W33304                   ,A.FINCL_INV_STAT_CDE                                  
W33304             FROM  TINVPAR A                                              
W33304                  ,TINCNTL B                                              
W33304             WHERE A.PLND_INV_DTE <= :PV-OPN-FSCL-MN-END-DTE              
W33304               AND B.ACTV_IND = 'Y'                                       
W33304               AND A.INV_ID = B.INV_ID                                    
W33304               AND A.LOC_INV_STAT_CDE = 'IN'                              
W33304               AND A.ACTL_FIN_BK_DTE = '9999-09-09'                       
W26600             ORDER BY LOC_NBR                                             
30272              WITH UR                                                      
           END-EXEC.                                                            
                                                                                
W34557******************************************************************        
W34557* CURSOR TO GET STORES THAT HAVE SCHEDULED AN INVENTORY BETWEEN           
W34557* WEEK BEGIN AND END DATES IN A FISCAL MONTH. THIS CURSOR IS              
W34557* USED TO DETERMINE THE STORE NUMBERS COUNTING IN THE CLOSE WEEK          
W34557******************************************************************        
W34557                                                                          
W34557     EXEC SQL                                                             
W34557         DECLARE INCNTL-CSR CURSOR WITH HOLD FOR                          
W34557          SELECT A.LOC_NBR                                                
W34557            FROM TINVPAR A                                                
W34557                ,TINCNTL B                                                
W34557           WHERE A.INV_ID           = B.INV_ID                            
W34557             AND B.ACTV_IND         = 'Y'                                 
W34557             AND B.OPN_FSCL_MN_NBR  = :IN001-OPN-FSCL-MN-NBR              
W34557             AND B.OPN_FSCL_MN_DTE  = :IN001-OPN-FSCL-MN-DTE              
W34557             AND (A.PLND_INV_DTE   >= :IN001-OPN-FSCL-WK-BEG-DTE          
W34557             AND A.PLND_INV_DTE    <= :IN001-OPN-FSCL-WK-DTE)             
W34557             AND A.ACTL_FIN_BK_DTE  = '9999-09-09'                        
W34557             AND A.LOC_INV_STAT_CDE = 'IN'                                
W34557     END-EXEC.                                                            
W34557*                                                                         
W26600*    EXEC SQL                                                             
W26600*        DECLARE INV_THIS_MN_CSR CURSOR FOR                               
W26600*            SELECT STORE_NBR                                             
W26600*                  ,ACTL_INV_DTE                                          
W26600*                  ,ACTL_FIN_BK_DTE                                       
RB0600*                  ,SCHD_PHY_CNT_IND                                      
W23511*                  ,PLND_INV_DTE                                          
W26600*            FROM  TINVPAR                                                
W26600*            WHERE (ACTL_INV_DTE BETWEEN :PV-OPN-FSCL-MN-BEG-DTE          
W26600*                                   AND :MLCNTL-OPN-FSCL-MN-DTE)          
W23511*               OR (PLND_INV_DTE BETWEEN :PV-OPN-FSCL-MN-BEG-DTE          
W26600*                                   AND :MLCNTL-OPN-FSCL-MN-DTE)          
W26600*            ORDER BY STORE_NBR                                           
W26600*    END-EXEC.                                                            
                                                                                
      ******************************************************************        
       PROCEDURE DIVISION.                                                      
      ******************************************************************        
       0000-MAIN-MODULE.                                                        
                                                                                
           PERFORM 1000-INITIALIZATION.                                         
                                                                                
           PERFORM 2000-BUILD-SLS-BSE-FRM-TINSCLS.                              
W20445     PERFORM 3000-BUILD-SLS-BSE-FRM-MNLYSUM.                              
RB0600     PERFORM 4000-BUILD-SLS-BSE-FRM-TWKSHNK.                              
RB0600     PERFORM 5000-CREATE-SLS-BSE-CNTL-FILE.                               
                                                                                
W20445     CLOSE MNLYSUM-UNLOAD-FILE                                            
                 TINSCLS-UNLOAD-FILE                                            
                 TWKSHNK-UNLOAD-FILE                                            
W34557           ALTERNATE-DATE-CNTL-FILE                                       
                 SALES-BASE-CNTL-FILE                                           
                 SALES-BASE-CUM-FILE.                                           
                                                                                
           STOP RUN.                                                            
                                                                                
       1000-INITIALIZATION.                                                     
                                                                                
W20445     OPEN INPUT  MNLYSUM-UNLOAD-FILE                                      
                       TINSCLS-UNLOAD-FILE                                      
                       TWKSHNK-UNLOAD-FILE                                      
W34557                 ALTERNATE-DATE-CNTL-FILE                                 
                OUTPUT SALES-BASE-CNTL-FILE                                     
                       SALES-BASE-CUM-FILE.                                     
                                                                                
W34557     DISPLAY 'STARTING ' PC-VAKUT186.                                     
W34557                                                                          
W34557     INITIALIZE IN001-RECORD.                                             
W34557                                                                          
W34557     MOVE PC-VAKUT186 TO PV-IN050-PGM-NUMBER.                             
W34557     PERFORM 1100-EDIT-VALIDATE-CNTL.                                     
W34557                                                                          
           PERFORM 8000-GET-OPN-FSCL-MN-END-DTE.                                
W34557                                                                          
W34557     IF IN001-IN-CLOSE-WK-YES                                             
W34557         DISPLAY 'USING ALTERNATE DATE CONTROL CARD/CLOSE WEEK'           
W34557         DISPLAY 'IN001-OPN-FSCL-MN-DTE : '                               
W34557                                 IN001-OPN-FSCL-MN-DTE                    
W34557         DISPLAY 'IN001-OPN-FSCL-MN-NBR : '                               
W34557                                 IN001-OPN-FSCL-MN-NBR                    
W34557         MOVE IN001-OPN-FSCL-MN-DTE TO MLCNTL-OPN-FSCL-MN-DTE             
W34557         MOVE IN001-OPN-FSCL-MN-NBR TO MLCNTL-OPN-FSCL-MN-NBR             
W34557      END-IF.                                                             
W34557                                                                          
           PERFORM 8100-GET-OPN-FSCL-MN-BEG-DTE.                                
W34557                                                                          
           PERFORM 1100-LOAD-STORE-TABLE.                                       
                                                                                
       1100-LOAD-STORE-TABLE.                                                   
                                                                                
           INITIALIZE ST-STORE-TABLE.                                           
                                                                                
           PERFORM 1110-LOAD-STORES.                                            
           PERFORM 1120-LOAD-SLS-BSE-BEG-DTES.                                  
           PERFORM 1130-LOAD-SLS-BSE-END-DTE.                                   
W34557     IF IN001-IN-CLOSE-WK-YES                                             
W34557        PERFORM 1140-LOAD-ST-CNT-IN-CLSWK-IND                             
W34557     END-IF.                                                              
                                                                                
30272      DISPLAY '*** '                                                       
30272      DISPLAY 'STORE TABLE LOAD RESULTS: '                                 
30272      DISPLAY '*** '                                                       
30272                                                                           
30272      PERFORM 10000-DISPLAY-STORES                                         
30272         VARYING ST-SUB FROM 1 BY 1                                        
30272         UNTIL ST-SUB > 9999.                                              
30272                                                                           
30272      DISPLAY '*** '.                                                      
30272                                                                           
      ******************************************************************        
      * LOAD THE STORE NUMBERS INTO THE STORE TABLE.                            
      ******************************************************************        
       1110-LOAD-STORES.                                                        
                                                                                
           PERFORM 8200-OPEN-STORE-CSR.                                         
           PERFORM 8225-FETCH-STORE-CSR.                                        
                                                                                
           PERFORM UNTIL PS-END-OF-STORE-CSR                                    
W26600         MOVE XMT00001-LOC-NBR    TO PV-STR-NBR-9                         
               MOVE PV-STR-NBR-9        TO ST-SUB                               
               IF ST-SUB > ST-MAX-ENTRIES                                       
                   DISPLAY '** ABEND **'                                        
W34517             DISPLAY '** PGM = VAKUT186 **'                               
                   DISPLAY '** TABLE OVERFLOW ON ST-STORE-TABLE.'               
                   MOVE +4004 TO PV-ABEND-CODE                                  
                   PERFORM 9999-ABEND                                           
               ELSE                                                             
                   MOVE PV-STR-NBR-9        TO ST-STR-NBR       (ST-SUB)        
W26600             MOVE XMT00001-OPN-DTE    TO ST-OPENED-DTE    (ST-SUB)        
                   MOVE 'N'                 TO ST-UNBKD-INV-IND (ST-SUB)        
                   MOVE ST-SUB TO PV-MAX-STR-NBR                                
               END-IF                                                           
               PERFORM 8225-FETCH-STORE-CSR                                     
           END-PERFORM.                                                         
                                                                                
           PERFORM 8250-CLOSE-STORE-CSR.                                        
                                                                                
      ******************************************************************        
      * FILL IN THE SALES BASE BEGIN DATE. USE THE DATE OF THE LAST             
      * BOOKED INVENTORY PRIOR TO THE OPEN MONTH, IF THERE IS ONE. IF           
      * NOT, USE THE STORE OPEN DATE. AFTER THE SALES BASE BEGIN DATE           
      * HAS BEEN DETERMINED, FILL IN THE MONTH-END DATE THAT CORRESPONDS        
      * TO THE SALES BASE BEGIN DATE.                                           
      ******************************************************************        
       1120-LOAD-SLS-BSE-BEG-DTES.                                              
                                                                                
           PERFORM 8300-OPEN-LAST-INV-CSR.                                      
           PERFORM 8325-FETCH-LAST-INV-CSR.                                     
           MOVE 1 TO ST-SUB.                                                    
                                                                                
           PERFORM UNTIL ST-SUB > PV-MAX-STR-NBR                                
               IF ST-STR-NBR (ST-SUB) = ZERO                                    
                   ADD +1 TO ST-SUB                                             
               ELSE                                                             
                   IF PS-END-OF-LAST-INV-CSR                                    
W26600             OR INVPAR-LOC-NBR > ST-STR-NBR (ST-SUB)                      
                       MOVE ST-OPENED-DTE      (ST-SUB)                         
                         TO ST-SLS-BSE-BEG-DTE (ST-SUB)                         
                       PERFORM 1125-LOAD-SLS-BSE-BEG-FSCL-MN                    
                       ADD +1 TO ST-SUB                                         
                   ELSE                                                         
W26600                 IF INVPAR-LOC-NBR = ST-STR-NBR (ST-SUB)                  
                           PERFORM 1127-ADD-1-DAY-TO-INV-DTE                    
                           MOVE DPG55-DB2-ISO-DATE-FMT TO                       
                                ST-SLS-BSE-BEG-DTE (ST-SUB)                     
                           PERFORM 1125-LOAD-SLS-BSE-BEG-FSCL-MN                
                           PERFORM 8325-FETCH-LAST-INV-CSR                      
                           ADD +1 TO ST-SUB                                     
                       ELSE                                                     
                           PERFORM 8325-FETCH-LAST-INV-CSR                      
                       END-IF                                                   
                   END-IF                                                       
               END-IF                                                           
           END-PERFORM.                                                         
                                                                                
           PERFORM 8350-CLOSE-LAST-INV-CSR.                                     
                                                                                
                                                                                
       1125-LOAD-SLS-BSE-BEG-FSCL-MN.                                           
                                                                                
           MOVE ST-SLS-BSE-BEG-DTE (ST-SUB) TO DTATTR-KY-DTE.                   
           PERFORM 8150-GET-FSCL-MN-END-DTE.                                    
           IF  PS-MN-END-DTE-FND                                                
               MOVE DTATTR-FSCL-MN-END-DTE                                      
                 TO ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)                         
           ELSE                                                                 
               MOVE ST-SLS-BSE-BEG-DTE         (ST-SUB)                         
                 TO ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)                         
           END-IF.                                                              
                                                                                
                                                                                
       1127-ADD-1-DAY-TO-INV-DTE.                                               
                                                                                
           INITIALIZE DPG51 DPG52 DPG53 DPG54 DPG55 DPG56.                      
                                                                                
           SET DPG51-ACTUAL-CALENDAR-ONLY                                       
               DPG52-LK-DTE-ISO-FMT                                             
               DPG51-INCREMENT-DATE TO TRUE.                                    
           MOVE 1                   TO  DPG51-INCR-DECR-DAYS-9.                 
           MOVE INVPAR-ACTL-INV-DTE TO  DPG52-LK-DATE-INPUT.                    
                                                                                
           CALL DP500-KOHLS-CALENDAR-ROUTINE USING DPG51                        
                                                   DPG52                        
                                                   DPG53                        
                                                   DPG54                        
                                                   DPG55                        
                                                   DPG56.                       
                                                                                
           IF DPG54-SEVERE-ERROR                                                
           OR DPG54-WARNING-ERROR                                               
               DISPLAY '** ABEND **'                                            
W34517         DISPLAY '** PGM = VAKUT186 **'                                   
               DISPLAY '** CALENDAR ROUTINE ERROR'                              
               DISPLAY '** CALENDAR ROUTINE ERROR INDICATOR = '                 
                        DPG54-ERROR-IND                                         
               DISPLAY '** CALENDAR ROUTINE ERROR MESSAGE = '                   
                        DPG54-ERROR-MESSAGE                                     
               MOVE +4001 TO PV-ABEND-CODE                                      
               PERFORM 9999-ABEND                                               
           END-IF.                                                              
                                                                                
      ******************************************************************        
      * FILL IN THE SALES BASE END DATE AND THE UNBOOKED INVENTORY              
      * INDICATOR IN THE WS STORE TABLE.                                *       
      *                                                                         
      * IF THE STORE HAS AN ACTUAL INVENTORY IN THE OPEN MONTH, THE     *       
      * SALES BASE END DATE IS SET TO THE INVENTORY DATE. IF NOT, IT IS         
      * LEFT BLANK.                                                             
      *                                                                         
      * IF INVENTORY HAS NOT YET BEEN BOOKED, THE UNBOOKED INVENTORY            
      * INDICATOR IS SET TO 'Y'. (THE INDICATOR WAS INITIALIZED TO 'N'          
      * WHEN THE STORES WERE LOADED INTO THE TABLE.)                            
      ******************************************************************        
       1130-LOAD-SLS-BSE-END-DTE.                                               
                                                                                
W33304     PERFORM 8400-OPEN-INV-ACTIVE-STR-CSR.                                
W33304     PERFORM 8425-FETCH-INV-ACTIVE-STR-CSR.                               
           MOVE 1 TO ST-SUB.                                                    
                                                                                
           PERFORM UNTIL ST-SUB > PV-MAX-STR-NBR                                
               IF ST-STR-NBR (ST-SUB) = ZERO                                    
                   ADD +1 TO ST-SUB                                             
               ELSE                                                             
W33304             IF PS-END-OF-INV-ACTIVE-STR-CSR                              
W26600             OR INVPAR-LOC-NBR > ST-STR-NBR (ST-SUB)                      
                       ADD +1 TO ST-SUB                                         
                   ELSE                                                         
W26600                 IF INVPAR-LOC-NBR = ST-STR-NBR (ST-SUB)                  
W24029*                    IF INVPAR-ACTL-INV-DTE NOT = PC-FUTURE-DATE          
                               MOVE INVPAR-ACTL-INV-DTE                         
                                   TO ST-SLS-BSE-END-DTE (ST-SUB)               
W24029*                    ELSE                                                 
W24029*                        MOVE SPACES                                      
W24029*                            TO ST-SLS-BSE-END-DTE (ST-SUB)               
W24029*                    END-IF                                               
                           IF INVPAR-ACTL-FIN-BK-DTE = PC-FUTURE-DATE           
                               MOVE 'Y' TO ST-UNBKD-INV-IND (ST-SUB)            
                           END-IF                                               
W33304*                                                                         
W33304                     MOVE INVPAR-INV-ID                                   
W33304                           TO ST-INV-ID (ST-SUB)                          
W33304                     MOVE INCNTL-OPN-FSCL-MN-DTE                          
W33304                           TO ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)          
W33304                     MOVE INVPAR-FINCL-INV-STAT-CDE                       
W33304                           TO ST-FINCL-INV-STAT-CDE(ST-SUB)               
W33304                     MOVE INVPAR-SCHD-PHY-CNT-CDE                         
W33304                           TO ST-SCHEDULED-INV-TYPE-CDE(ST-SUB)           
W33304                     MOVE INVPAR-PLND-INV-DTE                             
W33304                           TO ST-PLND-INV-DTE(ST-SUB)                     
W33304*                                                                         
W33304                     PERFORM 8125-GET-END-SLSBASE-BEG-MN                  
W33304                     MOVE PV-SLSBASE-END-MN-BEGIN                         
W33304                           TO ST-SLS-BSE-END-FSCL-MN-BEG(ST-SUB)          
W33304*                                                                         
W33304                     PERFORM 8425-FETCH-INV-ACTIVE-STR-CSR                
                           ADD +1 TO ST-SUB                                     
                       ELSE                                                     
W33304                     PERFORM 8425-FETCH-INV-ACTIVE-STR-CSR                
                       END-IF                                                   
                   END-IF                                                       
               END-IF                                                           
           END-PERFORM.                                                         
                                                                                
W33304     PERFORM 8450-CLOSE-INV-ACTIVE-STR-CSR.                               
                                                                                
W34557******************************************************************        
W34557* POPULATE ST-CNT-IN-CLSWK-IND WITH 'Y' FOR THE STORES COUNTING           
W34557* IN THE CLOSE WEEK. FOR ALL OTHER STORES THIS WILL BE SPACES.            
W34557* THIS PARA IS EXECUTED ONLY DURING THE 1ST WEEK OF FISCAL MONTH          
W34557******************************************************************        
W34557 1140-LOAD-ST-CNT-IN-CLSWK-IND.                                           
W34557                                                                          
W34557     PERFORM 8500-OPEN-INCNTL-CSR                                         
W34557     PERFORM 8525-FETCH-INCNTL-CSR                                        
W34557       UNTIL PS-END-OF-INCNTL-CSR.                                        
W34557                                                                          
      ******************************************************************        
      * EVALUTE THE FISCAL MONTH-END DATE OF EACH RECORD ON THE TINSCLS         
      * UNLOAD FILE, AND DETERMINE WHETHER IT FACTORS INTO ANY OF THE           
      * BUCKETS ON THE SALES BASE CUM FILE.  IF SO, ADD OR SUBTRACT             
      * THE SALES AND SHRINK FROM THE APPROPRIATE BUCKET ON THE CUM             
      * FILE OUTPUT RECORD.                                                     
      *                                                                         
      * WHEN A BREAK ON DEPARTMENT/SUBCLASS/STORE IS ENCOUNTERED, WRITE         
      * THE OUTPUT RECORD.                                                      
      ******************************************************************        
       2000-BUILD-SLS-BSE-FRM-TINSCLS.                                          
                                                                                
           PERFORM 7100-READ-TINSCLS-UNLOAD.                                    
           PERFORM 2300-PREP-FOR-NEW-TINSCLS-KEY.                               
           PERFORM 2100-PROCESS-TINSCLS-UNLD                                    
               UNTIL PS-END-OF-TINSCLS-UNLD.                                    
           PERFORM 2200-FINISH-OLD-TINSCLS-KEY.                                 
                                                                                
       2100-PROCESS-TINSCLS-UNLD.                                               
                                                                                
           IF TINSCLS-UNLD-KEY NOT = PV-PREV-TINSCLS-UNLD-KEY                   
               IF  PS-STR-IN-TBL                                                
                   PERFORM 2200-FINISH-OLD-TINSCLS-KEY                          
               END-IF                                                           
               PERFORM 2300-PREP-FOR-NEW-TINSCLS-KEY                            
           END-IF.                                                              
                                                                                
      *    ONLY RECORDS THAT ARE HAVE EITHER SALES OR SHRINK AND ARE FOR        
      *    A VALID STORE WILL BE EVALUATED.                                     
           IF  (TINSCLS-UNLD-SLS-RTL-AMT    NOT = ZERO                          
           OR   TINSCLS-UNLD-SHNK-RTL-AMT   NOT = ZERO                          
           OR   TINSCLS-UNLD-CTOFF-SLS-AMT  NOT = ZERO                          
           OR   TINSCLS-UNLD-CTOFF-SHNK-AMT NOT = ZERO)                         
           AND  PS-STR-IN-TBL                                                   
RB0600*            WHEN PROCESSING FOR THE LAST MONTH OF THE SALES BASE,        
RB0600*            AND PHYSICAL INVENTORY IS INDICATED, ADD TO OPEN,            
RB0600*            ADD TO CUM, AND SUBTRACT FROM NEXT                           
W33304*  ONLY PHYSICAL-COUNT, CLOSED OR NON-SCAN LOCATIONS ARE PROCESSED        
W33304*  ESTIMATED INVENTORY LOCATIONS ARE NOT PROCESSED                        
W33304*                                                                         
W33304*  THE TINSCLS UNLOAD MONTH WILL NOW COMPARE AGAINST THE SALES            
W33304*  BASE MONTH END TO HANDLE LOCATIONS HELD-OPEN FROM PRIOR CYCLES         
W33304         IF TINSCLS-UNLD-FSCL-MN-END-DTE =                                
W33304            ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                            
W33304             IF (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'PI' OR              
W33304                 ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'CL' OR              
W33304                 ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'NS')                
                       SET PS-DATA-FND-FOR-KEY TO TRUE                          
                       PERFORM 2110-ADD-TO-OPN                                  
                       PERFORM 2120-ADD-TO-CUM                                  
                       PERFORM 2140-SUBTRACT-FROM-NXT                           
                   END-IF                                                       
               ELSE                                                             
                   IF TINSCLS-UNLD-FSCL-MN-END-DTE =                            
                                     ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)        
                       SET PS-DATA-FND-FOR-KEY TO TRUE                          
                       PERFORM 2130-SUBTRACT-FROM-CUM                           
                   END-IF                                                       
               END-IF                                                           
           END-IF.                                                              
                                                                                
           PERFORM 7100-READ-TINSCLS-UNLOAD.                                    
                                                                                
                                                                                
                                                                                
       2110-ADD-TO-OPN.                                                         
                                                                                
           COMPUTE IN023-OPN-SLS-RTL-AMT                                        
                 = IN023-OPN-SLS-RTL-AMT                                        
                 + TINSCLS-UNLD-CTOFF-SLS-AMT                                   
                 + TINSCLS-UNLD-SLS-RTL-AMT.                                    
           COMPUTE IN023-OPN-SHNK-RTL-AMT                                       
                 = IN023-OPN-SHNK-RTL-AMT                                       
                 + TINSCLS-UNLD-SHNK-RTL-AMT                                    
                 + TINSCLS-UNLD-CTOFF-SHNK-AMT.                                 
                                                                                
                                                                                
       2120-ADD-TO-CUM.                                                         
                                                                                
           COMPUTE IN023-CUM-SLS-RTL-AMT                                        
                 = IN023-CUM-SLS-RTL-AMT                                        
                 + TINSCLS-UNLD-CTOFF-SLS-AMT                                   
                 + TINSCLS-UNLD-SLS-RTL-AMT.                                    
           COMPUTE IN023-CUM-SHNK-RTL-AMT                                       
                 = IN023-CUM-SHNK-RTL-AMT                                       
                 + TINSCLS-UNLD-SHNK-RTL-AMT                                    
                 + TINSCLS-UNLD-CTOFF-SHNK-AMT.                                 
                                                                                
                                                                                
       2130-SUBTRACT-FROM-CUM.                                                  
                                                                                
           COMPUTE IN023-CUM-SLS-RTL-AMT                                        
                 = IN023-CUM-SLS-RTL-AMT                                        
                 - TINSCLS-UNLD-CTOFF-SLS-AMT                                   
                 - TINSCLS-UNLD-SLS-RTL-AMT.                                    
           COMPUTE IN023-CUM-SHNK-RTL-AMT                                       
                 = IN023-CUM-SHNK-RTL-AMT                                       
                 - TINSCLS-UNLD-SHNK-RTL-AMT                                    
                 - TINSCLS-UNLD-CTOFF-SHNK-AMT.                                 
                                                                                
                                                                                
       2140-SUBTRACT-FROM-NXT.                                                  
                                                                                
           COMPUTE IN023-NXT-SLS-RTL-AMT                                        
                 = IN023-NXT-SLS-RTL-AMT                                        
                 - TINSCLS-UNLD-SLS-RTL-AMT                                     
                 - TINSCLS-UNLD-CTOFF-SLS-AMT.                                  
           COMPUTE IN023-NXT-SHNK-RTL-AMT                                       
                 = IN023-NXT-SHNK-RTL-AMT                                       
                 - TINSCLS-UNLD-SHNK-RTL-AMT                                    
                 - TINSCLS-UNLD-CTOFF-SHNK-AMT.                                 
                                                                                
                                                                                
       2200-FINISH-OLD-TINSCLS-KEY.                                             
                                                                                
           IF PS-DATA-FND-FOR-KEY                                               
               WRITE SALES-BASE-CUM-REC FROM IN023-SALES-BASE-CUM-REC           
           END-IF.                                                              
                                                                                
                                                                                
       2300-PREP-FOR-NEW-TINSCLS-KEY.                                           
                                                                                
           MOVE TINSCLS-UNLD-KEY        TO PV-PREV-TINSCLS-UNLD-KEY             
           MOVE TINSCLS-UNLD-STR-NBR    TO ST-SUB.                              
           SET PS-DATA-NOT-FND-FOR-KEY  TO TRUE.                                
                                                                                
      *    SET A SWITCH INDICATING WHETHER THE STORE ON THE UNLOAD              
      *    RECORD EXISTS IN THE WORKING-STORAGE STORE TABLE. IF NOT,            
      *    THE UNLOAD RECORDS FOR THIS KEY WILL BE BYPASSED.                    
           IF ST-SUB > PV-MAX-STR-NBR                                           
               SET PS-STR-NOT-IN-TBL TO TRUE                                    
           ELSE                                                                 
               IF ST-STR-NBR (ST-SUB) = ZERO                                    
                   SET PS-STR-NOT-IN-TBL TO TRUE                                
               ELSE                                                             
                   SET PS-STR-IN-TBL TO TRUE                                    
                   INITIALIZE IN023-SALES-BASE-CUM-REC                          
                   MOVE TINSCLS-UNLD-DEPT-NBR  TO IN023-DEPT-NBR                
                   MOVE TINSCLS-UNLD-SUB-CL-NBR                                 
                                               TO IN023-SUB-CL-NBR              
                   MOVE TINSCLS-UNLD-STR-NBR    TO IN023-STR-NBR                
W20445             MOVE TINSCLS-UNLD-IN-LWST-ID TO IN023-ML-LWST-ID             
               END-IF                                                           
           END-IF.                                                              
                                                                                
                                                                                
      ******************************************************************        
W20445* EVALUTE THE FISCAL MONTH-END DATE OF EACH RECORD ON THE MNLYSUM         
      * UNLOAD FILE, AND DETERMINE WHETHER IT FACTORS INTO ANY OF THE           
      * BUCKETS ON THE SALES BASE CUM FILE.  IF SO, ADD OR SUBTRACT             
      * THE SALES AND SHRINK FROM THE APPROPRIATE BUCKET ON THE CUM             
      * FILE OUTPUT RECORD.                                                     
      *                                                                         
      * WHEN A BREAK ON DEPARTMENT/SUBCLASS/STORE IS ENCOUNTERED, WRITE         
      * THE OUTPUT RECORD.                                                      
      ******************************************************************        
W20445 3000-BUILD-SLS-BSE-FRM-MNLYSUM.                                          
                                                                                
W20445     PERFORM 7000-READ-MNLYSUM-UNLOAD.                                    
W20445     PERFORM 3300-PREP-FOR-NEW-MNLYSUM-KEY.                               
W20445     PERFORM 3100-PROCESS-MNLYSUM-UNLD                                    
W20445         UNTIL PS-END-OF-MNLYSUM-UNLD.                                    
W20445     PERFORM 3200-FINISH-OLD-MNLYSUM-KEY.                                 
                                                                                
                                                                                
W20445 3100-PROCESS-MNLYSUM-UNLD.                                               
                                                                                
W20445     IF MNLYSUM-UNLD-KEY NOT = PV-PREV-MNLYSUM-UNLD-KEY                   
               IF  PS-STR-IN-TBL                                                
W20445             PERFORM 3200-FINISH-OLD-MNLYSUM-KEY                          
               END-IF                                                           
W20445         PERFORM 3300-PREP-FOR-NEW-MNLYSUM-KEY                            
           END-IF.                                                              
                                                                                
      *    ONLY RECORDS THAT ARE HAVE EITHER SALES OR SHRINK AND ARE FOR        
      *    A VALID STORE WILL BE EVALUATED.                                     
W20445     IF (MNLYSUM-UNLD-REG-RTL-AMT        NOT = ZERO                       
W20445     OR  MNLYSUM-UNLD-PROMO-RTL-AMT      NOT = ZERO                       
W20445     OR  MNLYSUM-UNLD-PROCLR-RTL-AMT NOT = ZERO                           
W20445     OR  MNLYSUM-UNLD-CLR-RTL-AMT        NOT = ZERO                       
W20445     OR  MNLYSUM-UNLD-OTH-RTL-AMT        NOT = ZERO                       
W20445     OR  MNLYSUM-UNLD-EST-INV-ADJ-AMT    NOT = ZERO                       
W20445     OR  MNLYSUM-UNLD-SHNK-RTL-AMT       NOT = ZERO)                      
           AND PS-STR-IN-TBL                                                    
W34557*      FOR THE STORES COUNTING DURING THE CLOSE WEEK, PERFORM             
W34557*      CODE IN THE ELSE CONDITION. FOR ALL OTHER STORES,                  
W34557*      PERFORM 3400-PROCESS-NONCLOSE-WK-STRS PARA                         
W34557       IF ST-CNT-IN-CLSWK-IND (ST-SUB) NOT = 'Y'                          
W34557         PERFORM 3400-PROCESS-NONCLOSE-WK-STRS                            
W34557       ELSE                                                               
W20445*        MNLYSUM DATA FOR THE LAST MONTH OF THE SALES BASE                
RB0600*        THIS GOES INTO EITHER THE OPEN AND CUMMULATIVE, OR THE           
RB0600*        NEXT, OR NEITHER                                                 
W20445         IF MNLYSUM-UNLD-FSCL-MN-END-DTE                                  
W20445                            = MLCNTL-OPN-FSCL-MN-DTE                      
W33304         OR (MNLYSUM-UNLD-FSCL-MN-END-DTE >=                              
W33304             ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                           
W33304             AND ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                       
W33304                 NOT EQUAL SPACES)                                        
W20445         AND (MNLYSUM-UNLD-REG-RTL-AMT        NOT = ZERO                  
W20445          OR  MNLYSUM-UNLD-PROMO-RTL-AMT      NOT = ZERO                  
W20445          OR  MNLYSUM-UNLD-PROCLR-RTL-AMT NOT = ZERO                      
W20445          OR  MNLYSUM-UNLD-CLR-RTL-AMT        NOT = ZERO                  
W20445          OR  MNLYSUM-UNLD-OTH-RTL-AMT        NOT = ZERO                  
W20445          OR  MNLYSUM-UNLD-SHNK-RTL-AMT       NOT = ZERO)                 
                   SET PS-DATA-FND-FOR-KEY  TO TRUE                             
W33304             EVALUATE TRUE                                                
RB0600*                PHYSICAL INVENTORY IS SCHEDULED                          
W33304                 WHEN                                                     
W33304                (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'PI' OR              
W33304                 ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'CL' OR              
W33304                 ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'NS')                
RB0600                                                                          
W33304                     IF MNLYSUM-UNLD-FSCL-MN-END-DTE >=                   
W33304                        ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                
W33304                         PERFORM 3130-ADD-TO-NXT                          
W33304                     END-IF                                               
RB0600                                                                          
RB0600*                NO SCHEDULED INVENTORY                                   
RB0600                 WHEN (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = SPACE)         
RB0600                                                                          
W33304                     IF MNLYSUM-UNLD-FSCL-MN-END-DTE =                    
W33304                        MLCNTL-OPN-FSCL-MN-DTE                            
W33304                         PERFORM 3110-ADD-TO-OPN                          
W33304                         PERFORM 3120-ADD-TO-CUM                          
W33304                     END-IF                                               
RB0600                                                                          
RB0600*                ESTIMATED INVENTORY                                      
RB0600                 WHEN OTHER                                               
                           CONTINUE                                             
                   END-EVALUATE                                                 
               ELSE                                                             
W20445*            MNLYSUM DATA FOR THE BEGINNING MONTH OR MIDDLE MONTHS        
RB0600*            OF THE SALES BASE (THIS GOES INTO THE CUMMULATIVE)           
W20445             IF MNLYSUM-UNLD-FSCL-MN-END-DTE >=                           
                       ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)                      
W33304             AND ((MNLYSUM-UNLD-FSCL-MN-END-DTE <                         
W33304                  MLCNTL-OPN-FSCL-MN-DTE)                                 
W33304              OR (MNLYSUM-UNLD-FSCL-MN-END-DTE <                          
W33304                  ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)))                    
W20445             AND (MNLYSUM-UNLD-REG-RTL-AMT        NOT = ZERO              
W20445              OR  MNLYSUM-UNLD-PROMO-RTL-AMT      NOT = ZERO              
W20445              OR  MNLYSUM-UNLD-PROCLR-RTL-AMT NOT = ZERO                  
W20445              OR  MNLYSUM-UNLD-CLR-RTL-AMT        NOT = ZERO              
W20445              OR  MNLYSUM-UNLD-OTH-RTL-AMT        NOT = ZERO              
W20445              OR  MNLYSUM-UNLD-SHNK-RTL-AMT       NOT = ZERO)             
                       SET PS-DATA-FND-FOR-KEY  TO TRUE                         
W33304             EVALUATE TRUE                                                
W33304*                PHYSICAL INVENTORY IS SCHEDULED                          
W33304                 WHEN                                                     
W33304                (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'PI' OR              
W33304                 ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'CL' OR              
W33304                 ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'NS')                
W33304                                                                          
W33304                     IF MNLYSUM-UNLD-FSCL-MN-END-DTE <                    
W33304                        ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                
W33304                                                                          
W33304                         PERFORM 3120-ADD-TO-CUM                          
W33304                                                                          
W33304                     END-IF                                               
W33304                                                                          
W33304*                NO SCHEDULED INVENTORY                                   
W33304                 WHEN (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = SPACE)         
W33304                                                                          
W33304                     IF MNLYSUM-UNLD-FSCL-MN-END-DTE <                    
W33304                        MLCNTL-OPN-FSCL-MN-DTE                            
W33304                                                                          
W33304                         PERFORM 3120-ADD-TO-CUM                          
W33304                                                                          
W33304                     END-IF                                               
W33304              END-EVALUATE                                                
                   END-IF                                                       
W20445*            MNLYSUM ADJUSTMENTS FOR THE MIDDLE MONTHS                    
RB0600*            OF THE SALES BASE                                            
W20445             IF MNLYSUM-UNLD-FSCL-MN-END-DTE >                            
0400RM                ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)                       
W20445             AND MNLYSUM-UNLD-FSCL-MN-END-DTE <                           
0400RM                 MLCNTL-OPN-FSCL-MN-DTE                                   
W20445             AND MNLYSUM-UNLD-EST-INV-ADJ-AMT NOT = ZERO                  
W33304                IF MNLYSUM-UNLD-FSCL-MN-END-DTE <                         
W33304                   ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                     
0400RM                 SET PS-DATA-FND-FOR-KEY      TO TRUE                     
0400RM                 PERFORM 3140-ADD-TO-ADJ                                  
W33304                END-IF                                                    
0400RM             END-IF                                                       
               END-IF                                                           
W34557       END-IF                                                             
           END-IF.                                                              
                                                                                
W20445     PERFORM 7000-READ-MNLYSUM-UNLOAD.                                    
                                                                                
                                                                                
       3110-ADD-TO-OPN.                                                         
                                                                                
           COMPUTE IN023-OPN-SLS-RTL-AMT                                        
                 = IN023-OPN-SLS-RTL-AMT                                        
W20445           + MNLYSUM-UNLD-REG-RTL-AMT                                     
W20445           + MNLYSUM-UNLD-PROMO-RTL-AMT                                   
W20445           + MNLYSUM-UNLD-PROCLR-RTL-AMT                                  
W20445           + MNLYSUM-UNLD-CLR-RTL-AMT                                     
W20445           + MNLYSUM-UNLD-OTH-RTL-AMT.                                    
           COMPUTE IN023-OPN-SHNK-RTL-AMT                                       
                 = IN023-OPN-SHNK-RTL-AMT                                       
W20445           + MNLYSUM-UNLD-SHNK-RTL-AMT.                                   
                                                                                
                                                                                
       3120-ADD-TO-CUM.                                                         
                                                                                
           COMPUTE IN023-CUM-SLS-RTL-AMT                                        
                 = IN023-CUM-SLS-RTL-AMT                                        
W20445           + MNLYSUM-UNLD-REG-RTL-AMT                                     
W20445           + MNLYSUM-UNLD-PROMO-RTL-AMT                                   
W20445           + MNLYSUM-UNLD-PROCLR-RTL-AMT                                  
W20445           + MNLYSUM-UNLD-CLR-RTL-AMT                                     
W20445           + MNLYSUM-UNLD-OTH-RTL-AMT.                                    
           COMPUTE IN023-CUM-SHNK-RTL-AMT                                       
                 = IN023-CUM-SHNK-RTL-AMT                                       
W20445           + MNLYSUM-UNLD-SHNK-RTL-AMT.                                   
                                                                                
                                                                                
       3130-ADD-TO-NXT.                                                         
                                                                                
           COMPUTE IN023-NXT-SLS-RTL-AMT                                        
                 = IN023-NXT-SLS-RTL-AMT                                        
W20445           + MNLYSUM-UNLD-REG-RTL-AMT                                     
W20445           + MNLYSUM-UNLD-PROMO-RTL-AMT                                   
W20445           + MNLYSUM-UNLD-PROCLR-RTL-AMT                                  
W20445           + MNLYSUM-UNLD-CLR-RTL-AMT                                     
W20445           + MNLYSUM-UNLD-OTH-RTL-AMT.                                    
           COMPUTE IN023-NXT-SHNK-RTL-AMT                                       
                 = IN023-NXT-SHNK-RTL-AMT                                       
W20445           + MNLYSUM-UNLD-SHNK-RTL-AMT.                                   
                                                                                
0400RM 3140-ADD-TO-ADJ.                                                         
0400RM     COMPUTE IN023-ESTIMATED-INV-ADJ-AMT                                  
0400RM           = IN023-ESTIMATED-INV-ADJ-AMT                                  
W20445           + MNLYSUM-UNLD-EST-INV-ADJ-AMT.                                
                                                                                
W20445 3200-FINISH-OLD-MNLYSUM-KEY.                                             
                                                                                
           IF PS-DATA-FND-FOR-KEY                                               
               WRITE SALES-BASE-CUM-REC FROM IN023-SALES-BASE-CUM-REC           
           END-IF.                                                              
                                                                                
                                                                                
W20445 3300-PREP-FOR-NEW-MNLYSUM-KEY.                                           
                                                                                
W20445     MOVE MNLYSUM-UNLD-KEY        TO PV-PREV-MNLYSUM-UNLD-KEY             
W20445     MOVE MNLYSUM-UNLD-STR-NBR    TO ST-SUB.                              
           SET PS-DATA-NOT-FND-FOR-KEY  TO TRUE.                                
                                                                                
      *    SET A SWITCH INDICATING WHETHER THE STORE ON THE UNLOAD              
      *    RECORD EXISTS IN THE WORKING-STORAGE STORE TABLE. IF NOT,            
      *    THE UNLOAD RECORDS FOR THIS KEY WILL BE BYPASSED.                    
           IF ST-SUB > PV-MAX-STR-NBR                                           
               SET PS-STR-NOT-IN-TBL TO TRUE                                    
           ELSE                                                                 
               IF ST-STR-NBR (ST-SUB) = ZERO                                    
                   SET PS-STR-NOT-IN-TBL TO TRUE                                
               ELSE                                                             
                   SET PS-STR-IN-TBL TO TRUE                                    
                   INITIALIZE IN023-SALES-BASE-CUM-REC                          
W20445             MOVE MNLYSUM-UNLD-DEPT-NBR  TO PV-EDIT-DEPT-NBR              
W20445             MOVE PV-EDIT-DEPT-NBR-RED   TO IN023-DEPT-NBR                
W20445             MOVE MNLYSUM-UNLD-SUB-CL-NBR TO PV-EDIT-SUB-CLASS            
W20445             MOVE PV-EDIT-CLASS-P2       TO IN023-SUB-CL-NBR              
W20445             MOVE MNLYSUM-UNLD-STR-NBR    TO IN023-STR-NBR                
W20445             MOVE MNLYSUM-UNLD-ML-LWST-ID TO IN023-ML-LWST-ID             
               END-IF                                                           
           END-IF.                                                              
                                                                                
W34557******************************************************************        
W34557* THIS PARA IS PERFORMED FOR THE STORES THAT ARE NOT COUNTING             
W34557* DURING THE CLOSE WEEK. THE LOGIC FOR THIS PARA IS COPIED FROM           
W34557* PARA 3100-PROCESS-MNLYSUM-UNLD. THE ONLY DIFFERENCE IS INSTEAD          
W34557* OF USING MLCNTL-OPN-FSCL-MN-DTE DATE, PV-HOLD-MLCNTL-OPN-MN-DTE         
W34557* IS USED.                                                                
W34557******************************************************************        
W34557 3400-PROCESS-NONCLOSE-WK-STRS.                                           
W34557                                                                          
W34557*    MNLYSUM DATA FOR THE LAST MONTH OF THE SALES BASE                    
W34557*    THIS GOES INTO EITHER THE OPEN AND CUMMULATIVE, OR THE               
W34557*    NEXT, OR NEITHER                                                     
W34557                                                                          
W34557     IF MNLYSUM-UNLD-FSCL-MN-END-DTE =                                    
W34557                          PV-HOLD-MLCNTL-OPN-MN-DTE                       
W34557      OR (MNLYSUM-UNLD-FSCL-MN-END-DTE >=                                 
W34557          ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                              
W34557     AND  ST-SLS-BSE-END-FSCL-MN-END(ST-SUB) NOT EQUAL SPACES)            
W34557     AND (MNLYSUM-UNLD-REG-RTL-AMT        NOT = ZERO                      
W34557      OR  MNLYSUM-UNLD-PROMO-RTL-AMT      NOT = ZERO                      
W34557      OR  MNLYSUM-UNLD-PROCLR-RTL-AMT     NOT = ZERO                      
W34557      OR  MNLYSUM-UNLD-CLR-RTL-AMT        NOT = ZERO                      
W34557      OR  MNLYSUM-UNLD-OTH-RTL-AMT        NOT = ZERO                      
W34557      OR  MNLYSUM-UNLD-SHNK-RTL-AMT       NOT = ZERO)                     
W34557                                                                          
W34557         SET PS-DATA-FND-FOR-KEY      TO TRUE                             
W34557                                                                          
W34557         EVALUATE TRUE                                                    
W34557*            PHYSICAL INVENTORY IS SCHEDULED                              
W34557             WHEN                                                         
W34557            (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'PI' OR                  
W34557             ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'CL' OR                  
W34557             ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'NS')                    
W34557                                                                          
W34557                 IF MNLYSUM-UNLD-FSCL-MN-END-DTE >=                       
W34557                    ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                    
W34557                     PERFORM 3130-ADD-TO-NXT                              
W34557                 END-IF                                                   
C13503                                                                          
C13503                 IF  IN001-IN-CLOSE-WK-YES                                
C13503                 AND ST-PLND-INV-DTE(ST-SUB) >                            
C13503                                     IN001-OPN-FSCL-WK-DTE                
C13503                     PERFORM 3110-ADD-TO-OPN                              
C13503                     PERFORM 3120-ADD-TO-CUM                              
C13503                 END-IF                                                   
W34557                                                                          
W34557*            NO SCHEDULED INVENTORY                                       
W34557             WHEN (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = SPACE)             
W34557                                                                          
W34557                 IF MNLYSUM-UNLD-FSCL-MN-END-DTE =                        
W34557                    PV-HOLD-MLCNTL-OPN-MN-DTE                             
W34557                     PERFORM 3110-ADD-TO-OPN                              
W34557                     PERFORM 3120-ADD-TO-CUM                              
W34557                 END-IF                                                   
W34557                                                                          
W34557*            ESTIMATED INVENTORY                                          
W34557             WHEN OTHER                                                   
W34557                 CONTINUE                                                 
W34557         END-EVALUATE                                                     
W34557     ELSE                                                                 
W34557*        MNLYSUM DATA FOR THE BEGINNING MONTH OR MIDDLE MONTHS            
W34557*        OF THE SALES BASE (THIS GOES INTO THE CUMMULATIVE)               
W34557         IF MNLYSUM-UNLD-FSCL-MN-END-DTE >=                               
W34557             ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)                          
W34557         AND ((MNLYSUM-UNLD-FSCL-MN-END-DTE <                             
W34557               PV-HOLD-MLCNTL-OPN-MN-DTE)                                 
W34557          OR (MNLYSUM-UNLD-FSCL-MN-END-DTE <                              
W34557              ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)))                        
W34557         AND (MNLYSUM-UNLD-REG-RTL-AMT    NOT = ZERO                      
W34557          OR  MNLYSUM-UNLD-PROMO-RTL-AMT  NOT = ZERO                      
W34557          OR  MNLYSUM-UNLD-PROCLR-RTL-AMT NOT = ZERO                      
W34557          OR  MNLYSUM-UNLD-CLR-RTL-AMT    NOT = ZERO                      
W34557          OR  MNLYSUM-UNLD-OTH-RTL-AMT    NOT = ZERO                      
W34557          OR  MNLYSUM-UNLD-SHNK-RTL-AMT   NOT = ZERO)                     
W34557                                                                          
W34557             SET PS-DATA-FND-FOR-KEY      TO TRUE                         
W34557                                                                          
W34557          EVALUATE TRUE                                                   
W34557*            PHYSICAL INVENTORY IS SCHEDULED                              
W34557             WHEN                                                         
W34557            (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'PI' OR                  
W34557             ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'CL' OR                  
W34557             ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'NS')                    
W34557                                                                          
W34557                 IF MNLYSUM-UNLD-FSCL-MN-END-DTE <                        
W34557                    ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                    
W34557                     PERFORM 3120-ADD-TO-CUM                              
W34557                 END-IF                                                   
W34557                                                                          
W34557*            NO SCHEDULED INVENTORY                                       
W34557             WHEN (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = SPACE)             
W34557                                                                          
W34557                 IF MNLYSUM-UNLD-FSCL-MN-END-DTE <                        
W34557                    PV-HOLD-MLCNTL-OPN-MN-DTE                             
W34557                     PERFORM 3120-ADD-TO-CUM                              
W34557                 END-IF                                                   
W34557          END-EVALUATE                                                    
W34557         END-IF                                                           
W34557                                                                          
W34557*        MNLYSUM ADJUSTMENTS FOR THE MIDDLE MONTHS                        
W34557*        OF THE SALES BASE                                                
W34557         IF MNLYSUM-UNLD-FSCL-MN-END-DTE >                                
W34557            ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB)                           
W34557         AND MNLYSUM-UNLD-FSCL-MN-END-DTE <                               
W34557             PV-HOLD-MLCNTL-OPN-MN-DTE                                    
W34557         AND MNLYSUM-UNLD-EST-INV-ADJ-AMT NOT = ZERO                      
W34557*                                                                         
W34557             IF MNLYSUM-UNLD-FSCL-MN-END-DTE <                            
W34557                ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                        
W34557                SET PS-DATA-FND-FOR-KEY          TO TRUE                  
W34557                PERFORM 3140-ADD-TO-ADJ                                   
W34557             END-IF                                                       
W34557         END-IF                                                           
W34557     END-IF.                                                              
                                                                                
RB0600******************************************************************        
RB0600* EVALUTE THE FISCAL MONTH-END DATE OF EACH RECORD ON THE TWKSHNK         
RB0600* UNLOAD FILE, AND DETERMINE WHETHER IT FACTORS INTO ANY OF THE           
RB0600* BUCKETS ON THE SALES BASE CUM FILE.  IF SO, ADD OR SUBTRACT             
RB0600* THE SALES AND SHRINK FROM THE APPROPRIATE BUCKET ON THE CUM             
RB0600* FILE OUTPUT RECORD.                                                     
RB0600*                                                                         
RB0600* WHEN A BREAK ON DEPARTMENT/SUBCLASS/STORE IS ENCOUNTERED, WRITE         
RB0600* THE OUTPUT RECORD.                                                      
RB0600******************************************************************        
RB0600 4000-BUILD-SLS-BSE-FRM-TWKSHNK.                                          
RB0600                                                                          
RB0600     PERFORM 7200-READ-TWKSHNK-UNLOAD.                                    
RB0600     PERFORM 4300-PREP-FOR-NEW-TWKSHNK-KEY.                               
RB0600     PERFORM 4100-PROCESS-TWKSHNK-UNLD                                    
RB0600         UNTIL PS-END-OF-TWKSHNK-UNLD.                                    
RB0600     PERFORM 4200-FINISH-OLD-TWKSHNK-KEY.                                 
RB0600                                                                          
RB0600                                                                          
RB0600 4100-PROCESS-TWKSHNK-UNLD.                                               
RB0600                                                                          
RB0600     IF TWKSHNK-UNLD-KEY NOT = PV-PREV-TWKSHNK-UNLD-KEY                   
RB0600         IF  PS-STR-IN-TBL                                                
RB0600             PERFORM 4200-FINISH-OLD-TWKSHNK-KEY                          
RB0600         END-IF                                                           
RB0600         PERFORM 4300-PREP-FOR-NEW-TWKSHNK-KEY                            
RB0600     END-IF.                                                              
RB0600                                                                          
RB0600*    PROCESS TWKSHNK WHEN THE STORE DOES AN ESTIMATED INVENTORY           
RB0600*    A VALID STORE WILL BE EVALUATED.                                     
W33304     IF (ST-SCHEDULED-INV-TYPE-CDE(ST-SUB) = 'EI')                        
W33304*       ADD AMOUNTS FOR OPEN AND CUMMULATIVE IF THE TWKSHNK               
W33304*       FISCAL MONTH = THE SALES BASE END FISCAL MONTH                    
W33304*                                                                         
W33304         IF  TWKSHNK-UNLD-FSCL-MN-END-DTE =                               
W33304             ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                           
W33304*                                                                         
W33304             IF (TWKSHNK-UNLD-FSCL-WK-END-DTE >=                          
W33304                 ST-SLS-BSE-END-FSCL-MN-BEG(ST-SUB) AND                   
W33304                 TWKSHNK-UNLD-FSCL-WK-END-DTE <=                          
W33304                 ST-SLS-BSE-END-DTE(ST-SUB))                              
RB0600                                                                          
RB0600                SET PS-DATA-FND-FOR-KEY TO TRUE                           
RB0600                PERFORM 4110-ADD-TO-OPN                                   
RB0600                PERFORM 4120-ADD-TO-CUM                                   
RB0600                                                                          
RB0600             END-IF                                                       
RB0600             IF (TWKSHNK-UNLD-FSCL-WK-END-DTE >                           
RB0600                 ST-SLS-BSE-END-DTE(ST-SUB)         AND                   
RB0600                 TWKSHNK-UNLD-FSCL-WK-END-DTE <=                          
W33304                 ST-SLS-BSE-END-FSCL-MN-END(ST-SUB) )                     
RB0600                                                                          
RB0600                 SET PS-DATA-FND-FOR-KEY TO TRUE                          
RB0600                 PERFORM 4130-ADD-TO-NXT                                  
RB0600             END-IF                                                       
RB0600         END-IF                                                           
RB0600     END-IF.                                                              
RB0600                                                                          
RB0600     PERFORM 7200-READ-TWKSHNK-UNLOAD.                                    
RB0600                                                                          
RB0600                                                                          
RB0600 4110-ADD-TO-OPN.                                                         
RB0600                                                                          
RB0600     COMPUTE IN023-OPN-SLS-RTL-AMT                                        
RB0600           = IN023-OPN-SLS-RTL-AMT                                        
RB0600           + TWKSHNK-UNLD-SLS-RTL-AMT.                                    
RB0600     COMPUTE IN023-OPN-SHNK-RTL-AMT                                       
RB0600           = IN023-OPN-SHNK-RTL-AMT                                       
RB0600           + TWKSHNK-UNLD-SHNK-RTL-AMT.                                   
RB0600                                                                          
RB0600                                                                          
RB0600 4120-ADD-TO-CUM.                                                         
RB0600                                                                          
RB0600     COMPUTE IN023-CUM-SLS-RTL-AMT                                        
RB0600           = IN023-CUM-SLS-RTL-AMT                                        
RB0600           + TWKSHNK-UNLD-SLS-RTL-AMT.                                    
RB0600     COMPUTE IN023-CUM-SHNK-RTL-AMT                                       
RB0600           = IN023-CUM-SHNK-RTL-AMT                                       
RB0600           + TWKSHNK-UNLD-SHNK-RTL-AMT.                                   
RB0600                                                                          
RB0600                                                                          
RB0600 4130-ADD-TO-NXT.                                                         
RB0600                                                                          
RB0600     COMPUTE IN023-NXT-SLS-RTL-AMT                                        
RB0600           = IN023-NXT-SLS-RTL-AMT                                        
RB0600           + TWKSHNK-UNLD-SLS-RTL-AMT.                                    
RB0600     COMPUTE IN023-NXT-SHNK-RTL-AMT                                       
RB0600           = IN023-NXT-SHNK-RTL-AMT                                       
RB0600           + TWKSHNK-UNLD-SHNK-RTL-AMT.                                   
RB0600                                                                          
RB0600 4200-FINISH-OLD-TWKSHNK-KEY.                                             
RB0600                                                                          
RB0600     IF PS-DATA-FND-FOR-KEY                                               
RB0600         WRITE SALES-BASE-CUM-REC FROM IN023-SALES-BASE-CUM-REC           
RB0600     END-IF.                                                              
RB0600                                                                          
RB0600                                                                          
RB0600 4300-PREP-FOR-NEW-TWKSHNK-KEY.                                           
RB0600                                                                          
RB0600     MOVE TWKSHNK-UNLD-KEY        TO PV-PREV-TWKSHNK-UNLD-KEY             
RB0600     MOVE TWKSHNK-UNLD-STR-NBR    TO ST-SUB.                              
RB0600     SET PS-DATA-NOT-FND-FOR-KEY  TO TRUE.                                
RB0600                                                                          
RB0600*    SET A SWITCH INDICATING WHETHER THE STORE ON THE UNLOAD              
RB0600*    RECORD EXISTS IN THE WORKING-STORAGE STORE TABLE. IF NOT,            
RB0600*    THE UNLOAD RECORDS FOR THIS KEY WILL BE BYPASSED.                    
RB0600     IF ST-SUB > PV-MAX-STR-NBR                                           
RB0600         SET PS-STR-NOT-IN-TBL TO TRUE                                    
RB0600     ELSE                                                                 
RB0600         IF ST-STR-NBR (ST-SUB) = ZERO                                    
RB0600             SET PS-STR-NOT-IN-TBL TO TRUE                                
RB0600         ELSE                                                             
RB0600             SET PS-STR-IN-TBL TO TRUE                                    
RB0600             INITIALIZE IN023-SALES-BASE-CUM-REC                          
RB0600             MOVE TWKSHNK-UNLD-DEPT-NBR  TO IN023-DEPT-NBR                
RB0600             MOVE TWKSHNK-UNLD-SUB-CL-NBR                                 
RB0600                                         TO IN023-SUB-CL-NBR              
RB0600             MOVE TWKSHNK-UNLD-STR-NBR   TO IN023-STR-NBR                 
W20445             MOVE ZEROS                  TO IN023-ML-LWST-ID              
RB0600         END-IF                                                           
RB0600     END-IF.                                                              
RB0600                                                                          
RB0600                                                                          
      ******************************************************************        
      * WRITE A RECORD TO THE SALES BASE CNTL FILE FOR EACH STORE IN THE        
      * WORKING-STORAGE STORE TABLE.                                            
      ******************************************************************        
RB0600 5000-CREATE-SLS-BSE-CNTL-FILE.                                           
                                                                                
           PERFORM VARYING ST-SUB FROM 1 BY 1                                   
             UNTIL ST-SUB > PV-MAX-STR-NBR                                      
               IF ST-STR-NBR (ST-SUB) NOT = ZERO                                
                   MOVE ST-STR-NBR               (ST-SUB)                       
                     TO IN022-STR-NBR                                           
                   MOVE ST-SLS-BSE-BEG-DTE       (ST-SUB)                       
                     TO IN022-SLS-BSE-BEG-DTE                                   
                   MOVE ST-SLS-BSE-END-DTE       (ST-SUB)                       
                     TO IN022-SLS-BSE-END-DTE                                   
                   MOVE ST-UNBKD-INV-IND         (ST-SUB)                       
                     TO IN022-UNBKD-INV-IND                                     
                   MOVE ST-SCHEDULED-INV-TYPE-CDE(ST-SUB)                       
                     TO IN022-SCHEDULED-INV-TYPE-CDE                            
W33304             MOVE ST-INV-ID                (ST-SUB)                       
W33304               TO IN022-INV-ID                                            
W33304             MOVE ST-SLS-BSE-END-FSCL-MN-END(ST-SUB)                      
W33304               TO IN022-SLS-BSE-MN-END-DTE                                
W33304             MOVE ST-FINCL-INV-STAT-CDE    (ST-SUB)                       
W33304               TO IN022-FINCL-INV-STAT-CDE                                
                   WRITE SALES-BASE-CNTL-REC                                    
                    FROM IN022-SALES-BASE-CNTL-REC                              
               END-IF                                                           
           END-PERFORM.                                                         
                                                                                
                                                                                
W20445 7000-READ-MNLYSUM-UNLOAD.                                                
                                                                                
W20445     READ MNLYSUM-UNLOAD-FILE INTO MNLYSUM-UNLD-REC                       
W20445         AT END SET PS-END-OF-MNLYSUM-UNLD TO TRUE                        
           END-READ.                                                            
                                                                                
                                                                                
       7100-READ-TINSCLS-UNLOAD.                                                
                                                                                
           READ TINSCLS-UNLOAD-FILE INTO TINSCLS-UNLD-REC                       
               AT END SET PS-END-OF-TINSCLS-UNLD TO TRUE                        
           END-READ.                                                            
                                                                                
                                                                                
RB0600 7200-READ-TWKSHNK-UNLOAD.                                                
RB0600                                                                          
RB0600     READ TWKSHNK-UNLOAD-FILE INTO TWKSHNK-UNLD-REC                       
RB0600         AT END SET PS-END-OF-TWKSHNK-UNLD TO TRUE                        
RB0600     END-READ.                                                            
                                                                                
                                                                                
      ******************************************************************        
      * GET THE OPEN FISCAL MONTH-END DATE FROM THE MERCHANDISE LEDGER          
      * CONTROL TABLE.                                                          
      ******************************************************************        
       8000-GET-OPN-FSCL-MN-END-DTE.                                            
                                                                                
           EXEC SQL                                                             
               SELECT   OPN_FSCL_MN_DTE,                                        
                        OPN_FSCL_MN_NBR                                         
               INTO     :MLCNTL-OPN-FSCL-MN-DTE,                                
                        :MLCNTL-OPN-FSCL-MN-NBR                                 
               FROM     TMLCNTL                                                 
30272          WITH UR                                                          
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   MOVE '8000-GET-OPN-FSCL-MN-END-DTE'                          
                                                TO PV-PARAGRAPH-NAME            
                   MOVE 'SELECT FROM TMLCNTL'   TO PV-DB2-OPER-ATTEMPTED        
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
           DISPLAY '** OPEN FISCAL MONTH DATE :' MLCNTL-OPN-FSCL-MN-DTE.        
           DISPLAY '** OPEN FISCAL MONTH NBR  :' MLCNTL-OPN-FSCL-MN-NBR.        
                                                                                
W34557     MOVE MLCNTL-OPN-FSCL-MN-DTE TO PV-HOLD-MLCNTL-OPN-MN-DTE.            
                                                                                
      ******************************************************************        
      * GET THE BEGIN DATE FOR THE OPEN FISCAL MONTH.                           
      ******************************************************************        
       8100-GET-OPN-FSCL-MN-BEG-DTE.                                            
                                                                                
           EXEC SQL                                                             
               SELECT  FSCL_MN_BEG_DTE                                          
W33304                ,FSCL_MN_END_DTE                                          
               INTO   :PV-OPN-FSCL-MN-BEG-DTE                                   
W33304               ,:PV-OPN-FSCL-MN-END-DTE                                   
               FROM    TDTATTR                                                  
               WHERE   KY_DTE = :MLCNTL-OPN-FSCL-MN-DTE                         
30272          WITH UR                                                          
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   MOVE '8100-GET-OPN-FSCL-MN-BEG-DTE'                          
                                                TO PV-PARAGRAPH-NAME            
                   MOVE 'SELECT FROM TDTATTR'   TO PV-DB2-OPER-ATTEMPTED        
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
           DISPLAY '** OPEN FISCAL MONTH BEGIN DATE :'                          
                   PV-OPN-FSCL-MN-BEG-DTE.                                      
W33304                                                                          
W33304******************************************************************        
W33304* GET THE BEGIN DATE FOR THE OPEN FISCAL MONTH.                           
W33304******************************************************************        
W33304 8125-GET-END-SLSBASE-BEG-MN.                                             
W33304                                                                          
W33304     EXEC SQL                                                             
W33304         SELECT  FSCL_MN_BEG_DTE                                          
W33304         INTO   :PV-SLSBASE-END-MN-BEGIN                                  
W33304         FROM    TDTATTR                                                  
W33304         WHERE   KY_DTE = :INCNTL-OPN-FSCL-MN-DTE                         
W33304         WITH UR                                                          
W33304     END-EXEC.                                                            
W33304                                                                          
W33304     EVALUATE TRUE                                                        
W33304         WHEN SQLCODE = ZERO                                              
W33304             CONTINUE                                                     
W33304         WHEN OTHER                                                       
W33304             MOVE '8125-GET-END-SLSBASE-BEG-MN'                           
W33304                                          TO PV-PARAGRAPH-NAME            
W33304             MOVE 'SELECT BEG MN DATE '   TO PV-DB2-OPER-ATTEMPTED        
W33304             PERFORM 9998-SQL-ABEND                                       
W33304     END-EVALUATE.                                                        
                                                                                
       8150-GET-FSCL-MN-END-DTE.                                                
                                                                                
           EXEC SQL                                                             
               SELECT   FSCL_MN_END_DTE                                         
               INTO     :DTATTR-FSCL-MN-END-DTE                                 
               FROM     TDTATTR                                                 
               WHERE  KY_DTE = :DTATTR-KY-DTE                                   
30272          WITH UR                                                          
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   SET PS-MN-END-DTE-FND     TO TRUE                            
               WHEN SQLCODE = +100                                              
                   SET PS-MN-END-DTE-NOT-FND TO TRUE                            
               WHEN OTHER                                                       
                   MOVE '8150-GET-FSCL-MN-END-DTE'                              
                                                TO PV-PARAGRAPH-NAME            
                   MOVE 'SELECT FROM TDTATTR'   TO PV-DB2-OPER-ATTEMPTED        
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
       8200-OPEN-STORE-CSR.                                                     
                                                                                
           EXEC SQL                                                             
               OPEN STORE_CSR                                                   
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   MOVE '8200-OPEN-STORE-CSR' TO PV-PARAGRAPH-NAME              
                   MOVE 'OPEN STORE_CSR'      TO PV-DB2-OPER-ATTEMPTED          
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
       8225-FETCH-STORE-CSR.                                                    
                                                                                
W26600     EXEC SQL                                                             
W26600         FETCH STORE_CSR                                                  
W26600         INTO   :XMT00001-LOC-NBR,                                        
W26600                :XMT00001-OPN-DTE                                         
W26600     END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN SQLCODE = +100                                              
                   SET PS-END-OF-STORE-CSR TO TRUE                              
               WHEN OTHER                                                       
                   MOVE '8225-FETCH-STORE-CSR' TO PV-PARAGRAPH-NAME             
                   MOVE 'FETCH STORE_CSR'      TO PV-DB2-OPER-ATTEMPTED         
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
       8250-CLOSE-STORE-CSR.                                                    
                                                                                
           EXEC SQL                                                             
               CLOSE STORE_CSR                                                  
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   MOVE '8250-CLOSE-STORE-CSR' TO PV-PARAGRAPH-NAME             
                   MOVE 'CLOSE STORE_CSR'      TO PV-DB2-OPER-ATTEMPTED         
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
       8300-OPEN-LAST-INV-CSR.                                                  
                                                                                
           EXEC SQL                                                             
               OPEN LAST_INV_CSR                                                
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   MOVE '8300-OPEN-LAST-INV-CSR'                                
                                              TO PV-PARAGRAPH-NAME              
                   MOVE 'OPEN LAST_INV_CSR'                                     
                                              TO PV-DB2-OPER-ATTEMPTED          
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
       8325-FETCH-LAST-INV-CSR.                                                 
                                                                                
           EXEC SQL                                                             
               FETCH LAST_INV_CSR                                               
               INTO   :INVPAR-LOC-NBR                                           
                     ,:INVPAR-ACTL-INV-DTE                                      
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN SQLCODE = +100                                              
                   SET PS-END-OF-LAST-INV-CSR TO TRUE                           
               WHEN OTHER                                                       
                   MOVE '8325-FETCH-LAST-INV-CSR'                               
                                                TO PV-PARAGRAPH-NAME            
                   MOVE 'FETCH LAST_INV_CSR'                                    
                                                TO PV-DB2-OPER-ATTEMPTED        
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
       8350-CLOSE-LAST-INV-CSR.                                                 
                                                                                
           EXEC SQL                                                             
               CLOSE LAST_INV_CSR                                               
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
                   MOVE '8350-CLOSE-LAST-INV-CSR'                               
                                               TO PV-PARAGRAPH-NAME             
                   MOVE 'CLOSE LAST-INV-CSR'                            D       
                                               TO PV-DB2-OPER-ATTEMPTED D       
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
W33304 8400-OPEN-INV-ACTIVE-STR-CSR.                                            
                                                                                
           EXEC SQL                                                             
W33304         OPEN INV_ACTIVE_STR_CSR                                          
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
W33304             MOVE '8400-OPEN-INV-ACTIVE-STR-CSR'                          
                                              TO PV-PARAGRAPH-NAME              
W33304             MOVE 'OPEN INV_ACTIVE_STR_CSR'                               
                                              TO PV-DB2-OPER-ATTEMPTED          
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
W33304 8425-FETCH-INV-ACTIVE-STR-CSR.                                           
                                                                                
           EXEC SQL                                                             
W33304         FETCH INV_ACTIVE_STR_CSR                                         
W33304         INTO   :INVPAR-INV-ID                                            
W33304               ,:INVPAR-LOC-NBR                                           
                     ,:INVPAR-ACTL-INV-DTE                                      
                     ,:INVPAR-ACTL-FIN-BK-DTE                                   
W33304               ,:INVPAR-SCHD-PHY-CNT-CDE                                  
W33304               ,:INVPAR-PLND-INV-DTE                                      
W33304               ,:INCNTL-OPN-FSCL-MN-DTE                                   
W33304               ,:INVPAR-FINCL-INV-STAT-CDE                                
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN SQLCODE = +100                                              
W33304             SET PS-END-OF-INV-ACTIVE-STR-CSR TO TRUE                     
               WHEN OTHER                                                       
W33304             MOVE '8425-FETCH-INV-ACTIVE-STR-CSR'                         
                                                TO PV-PARAGRAPH-NAME            
W33304             MOVE 'FETCH INV_ACTIVE_STR_CSR'                              
                                                TO PV-DB2-OPER-ATTEMPTED        
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
                                                                                
W33304 8450-CLOSE-INV-ACTIVE-STR-CSR.                                           
                                                                                
           EXEC SQL                                                             
W33304         CLOSE INV_ACTIVE_STR_CSR                                         
           END-EXEC.                                                            
                                                                                
           EVALUATE TRUE                                                        
               WHEN SQLCODE = ZERO                                              
                   CONTINUE                                                     
               WHEN OTHER                                                       
W33304             MOVE '8450-CLOSE-INV-ACTIVE-STR-CSR'                         
                                               TO PV-PARAGRAPH-NAME             
W33304             MOVE 'CLOSE INV-ACTIVE-STR-CSR'                      D       
                                               TO PV-DB2-OPER-ATTEMPTED D       
                   PERFORM 9998-SQL-ABEND                                       
           END-EVALUATE.                                                        
                                                                                
W34557 8500-OPEN-INCNTL-CSR.                                                    
W34557                                                                          
W34557     EXEC SQL                                                             
W34557         OPEN INCNTL-CSR                                                  
W34557     END-EXEC.                                                            
W34557                                                                          
W34557     EVALUATE TRUE                                                        
W34557         WHEN SQLCODE = ZERO                                              
W34557             CONTINUE                                                     
W34557         WHEN OTHER                                                       
W34557             MOVE '8500-OPEN-INCNTL-CSR'                                  
W34557                                        TO PV-PARAGRAPH-NAME              
W34557             MOVE 'OPEN INCNTL-CSR'     TO PV-DB2-OPER-ATTEMPTED          
W34557             PERFORM 9998-SQL-ABEND                                       
W34557     END-EVALUATE.                                                        
W34557                                                                          
W34557 8525-FETCH-INCNTL-CSR.                                                   
W34557                                                                          
W34557     EXEC SQL                                                             
W34557         FETCH INCNTL-CSR                                                 
W34557         INTO   :INVPAR-LOC-NBR                                           
W34557     END-EXEC.                                                            
W34557                                                                          
W34557     EVALUATE TRUE                                                        
W34557         WHEN SQLCODE = ZERO                                              
W34557             MOVE INVPAR-LOC-NBR TO ST-SUB                                
W34557             MOVE 'Y'            TO ST-CNT-IN-CLSWK-IND (ST-SUB)          
W34557         WHEN SQLCODE = +100                                              
W34557             SET PS-END-OF-INCNTL-CSR     TO TRUE                         
W34557         WHEN OTHER                                                       
W34557             MOVE '8525-FETCH-INCNTL-CSR' TO PV-PARAGRAPH-NAME            
W34557             MOVE 'FETCH INCNTL-CSR'      TO PV-DB2-OPER-ATTEMPTED        
W34557             PERFORM 9998-SQL-ABEND                                       
W34557     END-EVALUATE.                                                        
W34557                                                                          
30272  10000-DISPLAY-STORES.                                                    
30272                                                                           
30272      IF ST-STR-NBR (ST-SUB) NOT EQUAL ZEROS                               
W33304       DISPLAY                                                            
W33304           'STR ', ST-STR-NBR (ST-SUB), '|',                              
W33304           'OPN ', ST-OPENED-DTE (ST-SUB), '|',                           
W33304           'BEG ', ST-SLS-BSE-BEG-DTE (ST-SUB), '|',                      
W33304           'SLSBSE/BEG/MONTH/END '                                        
W33304                 , ST-SLS-BSE-BEG-FSCL-MN-DTE (ST-SUB), '|',              
W33304           'SLSBSE/END/MONTH/BEG '                                        
W33304                 , ST-SLS-BSE-END-FSCL-MN-BEG (ST-SUB), '|',              
W33304           'END ', ST-SLS-BSE-END-DTE (ST-SUB), '|',                      
W33304           'SLSBSE/END/MONTH/END '                                        
W33304                 , ST-SLS-BSE-END-FSCL-MN-END (ST-SUB), '|',              
W33304           'UBK ', ST-UNBKD-INV-IND (ST-SUB), '|',                        
W33304           'TYP ', ST-SCHEDULED-INV-TYPE-CDE (ST-SUB), '|',               
W34557           'STAT ', ST-FINCL-INV-STAT-CDE(ST-SUB), '|',                   
W34557           'CLS WK IND', ST-CNT-IN-CLSWK-IND(ST-SUB)                      
30272      END-IF.                                                              
30272                                                                           
W34557                                                                          
W34557*****************************************************************         
W34557*  COPYBOOK OF DATE EDIT LOGIC FOR INPUT ALTERNATE DATES        *         
W34557*****************************************************************         
W34557     COPY INPD050.                                                        
W34557*****************************************************************         
W34557                                                                          
       9998-SQL-ABEND.                                                          
                                                                                
           MOVE +4013 TO PV-ABEND-CODE.                                         
           DISPLAY ' '.                                                         
           DISPLAY '** ABEND **         ** = SQLERROR'.                         
W34517     DISPLAY '** PROGRAM          ** = VAKUT186'.                         
           DISPLAY '** PARAGRAPH        ** = ' PV-PARAGRAPH-NAME.               
           DISPLAY '** OPERATION        ** = ' PV-DB2-OPER-ATTEMPTED.           
                                                                                
      *    THE FOLLOWING COPYBOOK UTILIZES THE DB2 ABEND MODULE                 
      *    DSNTIAR TO CONVERT SQLCA INTO UNDERSTANDABLE VERBAGE.                
           COPY DPPD004.                                                        
                                                                                
           PERFORM 9999-ABEND.                                                  
                                                                                
                                                                                
       9999-ABEND.                                                              
                                                                                
           CALL 'ILBOABN0'  USING PV-ABEND-CODE.                                
