000100******************************************************************00010000
000200 IDENTIFICATION DIVISION.                                         00020000
000300******************************************************************00030000
000400                                                                  00040000
000500 PROGRAM-ID.             SVKUP004.                                00050000
000600 AUTHOR.                 AMY REILAND.                             00060000
000700 INSTALLATION.           KOHLS DEPARTMENT STORES.                 00070000
000800 DATE-WRITTEN.           08/20/96.                                00080000
000900 DATE-COMPILED.                                                   00090000
001000                                                                  00100000
001100******************************************************************00110000
001200* THIS PROGRAM WILL POPULATE THE SVT_KOHLS_CRD_ACCT TABLE WITH   *00120000
001300* KOHLS STORED VALUE CARD NUMBERS WHICH ARE RANDOMLY GENERATED.  *00130000
001400* THE SVT_CRD_PROD TABLE WILL BE READ TO DETERMINE IF THERE IS A *00140000
001500* REQUEST(S) TO GENERATE CARDS.  FOR EACH REQUEST, CARD NUMBERS  *00150000
001600* WILL BE RANDOMLY GENERATED.  IF THE CARD NUMBER IS NOT ON THE  *00160000
001700* SVT_KOHLS_CRD_ACCT OR SVT_CRD_ACCT_HIST TABLE, IT WILL BE      *00170000
001800* ADDED TO THE SVT_KOHLS_CRD_ACCT TABLE.  IF THE CARD NUMBER     *00180000
001900* IS ON THE TABLE, IT WILL BE BYPASSED, AND THE RANDOM GENERATION*00190000
002000* WILL TAKE PLACE AGAIN UNTIL ALL THE REQUESTS ARE PROCESSED.    *00200000
002100*                                                                *00210000
002200* INPUT FILES:  NONE                                             *00220000
002300*                                                                *00230000
002400* OUTPUT FILES: NONE                                             *00240000
002500*                                                                *00250000
002600* TABLES:       SVT_CRD_PROD (READ/UPDATE)                       *00260000
002700*               SVT_KOHLS_CRD_ACCT (READ/ADD)                    *00270000
002800*               SVT_CRD_ACCT_HIST  (READ)                        *00280000
002900*                                                                *00290000
      ******************************************************************00300000
      * 09/25/2015 JOE GARDETTO    CHG0123471  (JPGFX1)                 00310000
      *    -CHANGED LOGIC TO MOVE CORRECT CODE FOR KCK CARDS (VGCKCK)   00320000
      *     SO THAT THEY CAN BE USED TO MAKE PAYMENTS ON CUSTOMERS      00330000
      *     KOHL'S CHARGE ACCOUNTS.                                     00340000
003100******************************************************************00350000
      ******************************************************************00360000
      * 05/17/2016 NEHA BAGRODIA   CHG0141575                           00370000
      *    -ADDED LOGIC FOR FILA-GC, FILA-KMC                           00380000
003100******************************************************************00390000
OAKMC1* 06/22/2016 JIM HUNTER      CHG0145393                           00400000
OAKMC1*    -CHANGED FILA-GC TO OA-KMC FOR OFF-AISLE KMC                 00410000
003100******************************************************************00420000
208819* 09/18/2018 JIM HUNTER      CHG0208819                           00430000
208819*    -MAINFRAME REFACTORING - REPLACE CGU040MC WITH DPPD036 AND   00440000
208819*                             REPLACE CGU042MC WITH DPWS036       00450000
208819******************************************************************00450100
092821* 09/28/2021 DAN PAYNTER     CHG0261461                           00451000
092821*              ADDED CODE TO SUPPORT THE ENTRY OF TWO NEW         00451200
092821*              VIRTUAL KMC TYPES (KMCVIR AND KMCVRINT)            00451300
092821* CHANGE#    - CHG0261461                                         00452200
092821******************************************************************00452500
041923* 04/19/2023 DAN PAYNTER     CHG0287388                           00452600
041923*              BLOCK KCK AND VGCKCK CARD STOCK ID'S FROM          00452700
041923*              HAVING CARD NUMBERS CREATED                        00452800
041923* CHANGE#    - CHG0287388                                         00452900
041923******************************************************************00453000
003200 ENVIRONMENT DIVISION.                                            00470000
003300******************************************************************00480000
003400                                                                  00490000
003500 CONFIGURATION SECTION.                                           00500000
003600                                                                  00510000
003700 SOURCE-COMPUTER.                        IBM-3090.                00520000
003800 OBJECT-COMPUTER.                        IBM-3090.                00530000
003900                                                                  00540000
004000 INPUT-OUTPUT SECTION.                                            00550000
004100                                                                  00560000
004200 FILE-CONTROL.                                                    00570000
004300******************************************************************00580000
004400 DATA DIVISION.                                                   00590000
004500******************************************************************00600000
004600                                                                  00610000
004700 FILE SECTION.                                                    00620000
004800 WORKING-STORAGE SECTION.                                         00630000
004900******************************************************************00640000
005000* PC PROGRAM CONSTANTS                                           *00650000
005100******************************************************************00660000
005200 01  PC-PROGRAM-CONSTANTS.                                        00670000
005300     05  PC-PROGRAM-NAME          PIC  X(08)   VALUE 'SVKUP004'.  00680000
005400     05  PC-JOB-NAME              PIC  X(08)   VALUE 'SVK055  '.  00690000
005500     05  PC-MAX-CURRENT-CRD-VALUE PIC  9(03)   VALUE 100.         00700000
005600******************************************************************00710000
005700* PV PROGRAM VARIABLES                                           *00720000
005800******************************************************************00730000
005900 01  PV-PROGRAM-VARIABLES.                                        00740000
006000     05  PV-RETURN-CODE           PIC S9(08) COMP-3 VALUE ZERO.   00750000
006100     05  PV-PARAGRAPH-NAME        PIC  X(30)   VALUE SPACE.       00760000
006200     05  PV-DB2-OPERATION-ATTEMPTED                               00770000
006300                                  PIC  X(30)   VALUE SPACE.       00780000
006400     05  PV-COMMIT-TIMESTAMP      PIC  X(26)   VALUE SPACES.      00790000
006500     05  PV-CURRENT-TIMESTAMP     PIC  X(26)   VALUE SPACES.      00800000
006600     05  PV-CURRENT-TMS  REDEFINES  PV-CURRENT-TIMESTAMP.         00810000
006700         10  PV-TMS-DATE.                                         00820000
006800             15  PV-TMS-YEAR      PIC  9(04).                     00830000
006900             15  FILLER           PIC  X(01).                     00840000
007000             15  PV-TMS-MONTH     PIC  9(02).                     00850000
007100             15  FILLER           PIC  X(01).                     00860000
007200             15  PV-TMS-DAY       PIC  9(02).                     00870000
007300         10  FILLER               PIC X(01).                      00880000
007400         10  PV-TMS-HOUR          PIC 9(02).                      00890000
007500         10  FILLER               PIC X(01).                      00900000
007600         10  PV-TMS-MINUTE        PIC 9(02).                      00910000
007700         10  FILLER               PIC X(01).                      00920000
007800         10  PV-TMS-SECOND        PIC 9(02).                      00930000
007900         10  FILLER               PIC X(01).                      00940000
008000         10  PV-TMS-MSECOND1      PIC 9(01).                      00950000
008100         10  PV-TMS-MSECOND2      PIC 9(01).                      00960000
008200         10  PV-TMS-MSECOND3      PIC 9(01).                      00970000
008300         10  PV-TMS-MSECOND4      PIC 9(01).                      00980000
008400         10  PV-TMS-MSECOND5      PIC 9(01).                      00990000
008500         10  PV-TMS-MSECOND6      PIC 9(01).                      01000000
008600     05  PV-GET-TIME-COUNTER      PIC S9(07)   VALUE +0.          01010000
008700     05  PV-DUPLICATE-KEY-COUNTER PIC  9(07)   VALUE  0.          01020000
008800     05  PV-LOOP                  PIC S9(01)   VALUE +0.          01030000
008900     05  PV-LOOP-MAX              PIC S9(01)   VALUE +5.          01040000
009000     05  PV-MULTIPLIER            PIC S9(03)   VALUE +0.          01050000
009100     05  FILLER  REDEFINES  PV-MULTIPLIER.                        01060000
009200         10  PV-MULTIPLIER-DIGIT1 PIC  9(01).                     01070000
009300         10  PV-MULTIPLIER-DIGIT2 PIC  9(01).                     01080000
009400         10  PV-MULTIPLIER-DIGIT3 PIC  9(01).                     01090000
009500     05  PV-MULTIPLIER-2          PIC S9(03)   VALUE +0.          01100000
009600     05  FILLER  REDEFINES  PV-MULTIPLIER-2.                      01110000
009700         10  PV-MULTIPLIER-2-DIGIT1                               01120000
009800                                  PIC  9(01).                     01130000
009900         10  PV-MULTIPLIER-2-DIGIT2                               01140000
010000                                  PIC  9(01).                     01150000
010100         10  PV-MULTIPLIER-2-DIGIT3                               01160000
010200                                  PIC  9(01).                     01170000
010300     05  PV-HOLD-CARD-NUMBER-NUM  PIC  9(12)   VALUE 0.           01180000
010400     05  PV-HOLD-CARD-NUMBER  REDEFINES  PV-HOLD-CARD-NUMBER-NUM. 01190000
010500         10  PV-HOLD-CARD-1-3     PIC  9(03).                     01200000
010600         10  PV-HOLD-CARD-4-6     PIC  9(03).                     01210000
010700         10  PV-HOLD-CARD-7-9     PIC  9(03).                     01220000
010800         10  PV-HOLD-CARD-10-11   PIC  9(02).                     01230000
010900         10  PV-HOLD-CHECK-DIGIT  PIC  9(01).                     01240000
011000     05  PV-CARD-NUMBER.                                          01250000
011100         10  PV-CARD-1-3          PIC  9(03)   VALUE 0.           01260000
011200         10  PV-CARD-4-6          PIC  9(03)   VALUE 0.           01270000
011300         10  PV-CARD-7-9          PIC  9(03)   VALUE 0.           01280000
011400         10  PV-CARD-10-11        PIC  9(02)   VALUE 0.           01290000
011500     05  PV-NEW-CARD-NUMBER       PIC S9(06)   VALUE +0.          01300000
011600     05  FILLER  REDEFINES  PV-NEW-CARD-NUMBER.                   01310000
011700         10  FILLER               PIC  X(02).                     01320000
011800         10  PV-NEW-CARD-1-3      PIC  9(03).                     01330000
011900         10  FILLER               PIC  X(01).                     01340000
012000     05  PV-NEW-CARD-NUMBER-2     PIC S9(06)   VALUE +0.          01350000
012100     05  FILLER  REDEFINES  PV-NEW-CARD-NUMBER-2.                 01360000
012200         10  FILLER               PIC  X(03).                     01370000
012300         10  PV-NEW-CARD-10-11    PIC  9(02).                     01380000
012400         10  FILLER               PIC  X(01).                     01390000
012500     05  PV-PIN-NBR               PIC S9(04)   VALUE 0 COMP-3.    01400000
012600     05  PV-MAX-VALUE             PIC  9(03)   VALUE 0.           01410000
012700     05  PV-CRD-NBR-START         PIC  9(12)   VALUE 0.           01420000
012800     05  PV-HOLD-CR-CNTRL-NBR     PIC  9(14)   VALUE ZEROS.       01430000
012900     05  PV-HOLD-CR-CNTRL-NBR-X  REDEFINES                        01440000
013000                                     PV-HOLD-CR-CNTRL-NBR.        01450000
013100             10  PV-HOLD-CR-CNTRL-NBR-YEAR                        01460000
013200                                     PIC  9(04).                  01470000
013300             10  PV-HOLD-CR-CNTRL-NBR-REQUEST                     01480000
013400                                     PIC  9(04).                  01490000
013500             10  PV-HOLD-CR-CNTRL-NBR-SEQUENCE                    01500000
013600                                     PIC  9(06).                  01510000
013610                                                                  01520000
013620     05  PV-CRD-STK-TYP-ID                 PIC  X(08).            01530000
013630     05  PV-CRD-STK-TYP-SPLIT REDEFINES PV-CRD-STK-TYP-ID.        01540000
013640         10  PV-CRD-STK-ID-3CHAR           PIC  X(03).            01550000
013650             88 PV-CARD-STOCK-SAFEWAY      VALUE 'SAF', 'SWH'.    01560000
013660         10  FILLER                        PIC  X(05).            01570000
013670                                                                  01580000
013700******************************************************************01590000
013800* CR CHECKPOINT RESTART VARIABLES                                *01600000
013900******************************************************************01610000
014000 01  CR-CHECKPOINT-RESTART-AREA.                                  01620000
014100     05  CR-AREA-LEN                 PIC S9(04) VALUE +91         01630000
014200                                                COMP.             01640000
014300     05  CR-CHECKPOINT-RESTART-VAR.                               01650000
014400         10  CR-CRD-REQ-QTY          PIC  9(06) VALUE ZEROS.      01660000
014500         10  CR-REQUESTS-PROCESSED   PIC  9(07) VALUE ZEROS.      01670000
014600         10  CR-CARD-NBR             PIC  9(10) VALUE ZEROS.      01680000
014700         10  CR-CNTRL-NBR            PIC  9(14) VALUE ZEROS.      01690000
014800         10  CR-CNTRL-NBR-X  REDEFINES  CR-CNTRL-NBR.             01700000
014900             15  CR-CNTRL-NBR-YEAR   PIC  9(04).                  01710000
015000             15  CR-CNTRL-NBR-REQUEST                             01720000
015100                                     PIC  9(04).                  01730000
015200             15  CR-CNTRL-NBR-SEQUENCE                            01740000
015300                                     PIC  9(06).                  01750000
015400         10  CR-CRD-TYP-CDE          PIC  9(01).                  01760000
015500         10  CR-PRE-DNNTD-CRD-AMT    PIC  9(07)V99                01770000
015600                                                VALUE ZEROS.      01780000
015700         10  CR-CRD-STK-TYP-ID       PIC  X(08) VALUE SPACES.     01790000
015800         10  CR-COMMIT-COUNT         PIC  9(09) VALUE ZEROS.      01800000
015900         10  CR-KMRC-CARD-INSERT-COUNT                            01810000
016000                                     PIC  9(09) VALUE ZEROS.      01820000
016100         10  CR-GIFT-CARD-INSERT-COUNT                            01830000
016200                                     PIC  9(09) VALUE ZEROS.      01840000
016300******************************************************************01850000
016400* PS PROGRAM SWITCHES                                            *01860000
016500******************************************************************01870000
016600 01  PS-PROGRAM-SWITCHES.                                         01880000
016700     05  PS-END-OF-CURSOR           PIC X(01)   VALUE 'N'.        01890000
016800         88  END-OF-CURSOR                      VALUE 'Y'.        01900000
016900     05  PS-FIRST-COMMIT-SW         PIC X(01)   VALUE 'N'.        01910000
017000         88  PS-FIRST-COMMIT                    VALUE 'Y'.        01920000
017100     05  PS-NO-REQUEST-SW           PIC X(01)   VALUE 'N'.        01930000
017200         88  PS-NO-REQUEST                      VALUE 'Y'.        01940000
017300                                                                  01950000
017400 01  ABEND-CODE                     PIC S9(04)                    01960000
017500                                    COMP SYNC   VALUE 0.          01970000
017600******************************************************************01980000
017700* REFUND AUTHORIZATION WORKING STORAGE VALUES                    *01990000
017800******************************************************************02000000
017900     COPY SVWS004.                                                02010000
018000******************************************************************02020000
018100* CREATE/VERIFY CHECK DIGIT ROUTINE WORKING STORAGE              *02030000
018200******************************************************************02040000
208819     COPY DPWS036.                                                02050000
018400******************************************************************02060000
018500*  COBOL DECLARATIONS FOR THE KOHLS STORED VALUE CARD TABLE       02070000
018600******************************************************************02080000
018700                                                                  02090000
018800     EXEC SQL                                                     02100000
018900         INCLUDE SVT00001                                         02110000
019000     END-EXEC.                                                    02120000
019100                                                                  02130000
019200******************************************************************02140000
019300*  COBOL DECLARATIONS FOR THE KOHLS STORED VALUE CARD HISTORY TBL 02150000
019400******************************************************************02160000
019500                                                                  02170000
019600     EXEC SQL                                                     02180000
019700         INCLUDE SVT00005                                         02190000
019800     END-EXEC.                                                    02200000
019900                                                                  02210000
020000******************************************************************02220000
020100*  COBOL DECLARATIONS FOR THE KOHLS STORED VALUE CARD CONTROL     02230000
020200*  NUMBER TABLE                                                   02240000
020300******************************************************************02250000
020400                                                                  02260000
020500     EXEC SQL                                                     02270000
020600         INCLUDE SVT00000                                         02280000
020700     END-EXEC.                                                    02290000
020800                                                                  02300000
020900******************************************************************02310000
021000*  COBOL DECLARATIONS FOR THE CHECKPOINT RESTART CONTROL TABLE    02320000
021100******************************************************************02330000
021200                                                                  02340000
021300     EXEC SQL                                                     02350000
021400         INCLUDE TCKRSTCN                                         02360000
021500     END-EXEC.                                                    02370000
021600                                                                  02380000
021700******************************************************************02390000
021800*  COBOL DECLARATIONS FOR THE CHECKPOINT RESTART INFO TABLE       02400000
021900******************************************************************02410000
022000                                                                  02420000
022100     EXEC SQL                                                     02430000
022200         INCLUDE TCKRSTIN                                         02440000
022300     END-EXEC.                                                    02450000
022400                                                                  02460000
022500*                                                                 02470000
022600*  STANDARD LAYOUT FOR THE SQL COMMUNICATIONS AREA                02480000
022700*                                                                 02490000
022800                                                                  02500000
022900     EXEC SQL                                                     02510000
023000         INCLUDE SQLCA                                            02520000
023100     END-EXEC.                                                    02530000
023200                                                                  02540000
023300     COPY SQLCA2.                                                 02550000
023400                                                                  02560000
023500******************************************************************02570000
023600*  THIS CURSOR WILL SELECT ALL CARD REQUESTS                      02580000
023700******************************************************************02590000
023800                                                                  02600000
023900     EXEC SQL                                                     02610000
024000         DECLARE  REQUEST_CURSOR CURSOR FOR                       02620000
024100          SELECT  CRD_PROD_YR                                     02630000
024200                 ,SHIPT_REQ_NBR                                   02640000
024300                 ,CRD_TYP_CDE                                     02650000
024400                 ,PRE_DNNTD_CRD_AMT                               02660000
024500                 ,CRD_STK_TYP_ID                                  02670000
024600                 ,CRD_REQ_QTY                                     02680000
024700                 ,CRD_PRDR_CDE                                    02690000
024800            FROM  SVT_CRD_PROD                                    02700000
024900           WHERE CRD_PROD_YR >= :SVT00000-CRD-PROD-YR             02710000
025000             AND SHIPT_REQ_NBR >= :SVT00000-SHIPT-REQ-NBR         02720000
025100             AND CRD_PROD_STAT_CDE = 'PN'                         02730000
041923             AND CRD_STK_TYP_ID <> 'KCK     '                     02731000
041923             AND CRD_STK_TYP_ID <> 'VGCKCK  '                     02732000
025200          ORDER BY CRD_PROD_YR                                    02740000
025300                  ,SHIPT_REQ_NBR                                  02750000
025400     END-EXEC.                                                    02760000
025500                                                                  02770000
025600                                                                  02780000
025700******************************************************************02790000
025800*  VARIABLES REQUIRED FOR THE FORMAT SQLCA ROUTINE DPPD004        02800000
025900******************************************************************02810000
026000     COPY DPWS004.                                                02820000
026100                                                                  02830000
026200 LINKAGE SECTION.                                                 02840000
026300                                                                  02850000
026400 PROCEDURE DIVISION.                                              02860000
026500                                                                  02870000
026600******************************************************************02880000
026700*                 A100-MAINLINE                                  *02890000
026800******************************************************************02900000
026900 A100-MAINLINE.                                                   02910000
027000                                                                  02920000
027100     PERFORM B100-INITIALIZE.                                     02930000
027200                                                                  02940000
027300     PERFORM B200-PROCESS-REQUESTS                                02950000
027400       UNTIL END-OF-CURSOR                                        02960000
027500                                                                  02970000
027600     PERFORM B300-EOJ-ROUTINE.                                    02980000
027700                                                                  02990000
027800     MOVE PV-RETURN-CODE TO RETURN-CODE.                          03000000
027900                                                                  03010000
028000     STOP RUN.                                                    03020000
028100                                                                  03030000
028200******************************************************************03040000
028300*      B100-INITIALIZE                                           *03050000
028400*  ==> PROCESSES:                                                *03060000
028500*      - CHECKS FOR RESTART PROCESSING.                          *03070000
028600*      - INITIALIZES VARIABLES.                                  *03080000
028700*      - OPENS THE REQUEST CURSOR.                               *03090000
028800*      - FETCHES THE FIRST ROW FROM THE TABLE.                   *03100000
028900*  ==> PERFORMED FROM: A100-MAINLINE                             *03110000
029000******************************************************************03120000
029100 B100-INITIALIZE.                                                 03130000
029200                                                                  03140000
029300     PERFORM C600-INIT-CHECKPOINT-SELECT.                         03150000
029400                                                                  03160000
029500******************************************************************03170000
029600*     IF PROGRAM IS IN A RESTART STATUS.  SELECT SAVED DATA FROM *03180000
029700*     THE RESTART INFO TABLE.                                    *03190000
029800******************************************************************03200000
029900     IF TCKRSTCNTL-CKPT-STAT-CODE = '9'                           03210000
030000         PERFORM C700-SELECT-RESTART-INFO                         03220000
030100         MOVE TCKRSTINF-WORK-STRG-DESC-TEXT                       03230000
030200                                  TO CR-CHECKPOINT-RESTART-VAR    03240000
030300         MOVE CR-CNTRL-NBR-YEAR   TO SVT00000-CRD-PROD-YR         03250000
030400         MOVE CR-CNTRL-NBR-REQUEST                                03260000
030500                                  TO SVT00000-SHIPT-REQ-NBR       03270000
030600     ELSE                                                         03280000
030700         SET PS-FIRST-COMMIT      TO TRUE                         03290000
030800         MOVE ZEROS               TO SVT00000-SHIPT-REQ-NBR       03300000
030900                                     SVT00000-CRD-PROD-YR         03310000
031000     END-IF                                                       03320000
031100                                                                  03330000
031200     PERFORM C100-OPEN-REQUEST-CURSOR.                            03340000
031300                                                                  03350000
031400     PERFORM C200-FETCH-REQUEST-CURSOR.                           03360000
031500                                                                  03370000
031600     IF END-OF-CURSOR                                             03380000
031700         SET PS-NO-REQUEST        TO TRUE                         03390000
031800         DISPLAY ' '                                              03400000
031900         DISPLAY '******************************'                 03410000
032000         DISPLAY 'NO REQUESTS TODAY.            '                 03420000
032100         DISPLAY '******************************'                 03430000
032200         DISPLAY ' '                                              03440000
032300         MOVE 4095 TO PV-RETURN-CODE                              03450000
032400     ELSE                                                         03460000
032500         IF TCKRSTCNTL-CKPT-STAT-CODE = '9'                       03470000
032600             DISPLAY 'THIS IS A RESTART OF SVKUP004'              03480000
032700             DISPLAY 'CONTROL NUMBER BEING PROCESSED: '           03490000
032800                                  CR-CNTRL-NBR                    03500000
032900         ELSE                                                     03510000
033000             MOVE SVT00000-CRD-PROD-YR TO CR-CNTRL-NBR-YEAR       03520000
033100             MOVE SVT00000-SHIPT-REQ-NBR                          03530000
033200                                       TO CR-CNTRL-NBR-REQUEST    03540000
033300             MOVE 000001               TO CR-CNTRL-NBR-SEQUENCE   03550000
033400             MOVE 1                    TO CR-REQUESTS-PROCESSED   03560000
033500             DISPLAY 'CONTROL NUMBER BEING PROCESSED: '           03570000
033600                                  CR-CNTRL-NBR                    03580000
033700         END-IF                                                   03590000
033800         PERFORM D700-GET-COMMIT-TIMESTAMP                        03600000
033900                                                                  03610000
034000     END-IF.                                                      03620000
034100                                                                  03630000
034200******************************************************************03640000
034300*      B200-PROCESS-REQUESTS                                     *03650000
034400*  ==> PROCESSES:                                                *03660000
034500*      PROCESSES EACH REQUEST BY GENERATING THE RANDOM CARD      *03670000
034600*      NUMBERS AND COMMITTING THE INSERTS TO THE KOHLS-CRD-ACCT. *03680000
034700*  ==> PERFORMED FROM: A100-MAINLINE.                            *03690000
034800******************************************************************03700000
034900 B200-PROCESS-REQUESTS.                                           03710000
035000                                                                  03720000
035100     PERFORM B400-GENERATE-RANDOM-NBRS                            03730000
035200         UNTIL CR-REQUESTS-PROCESSED > CR-CRD-REQ-QTY.            03740000
035300                                                                  03750000
035400     PERFORM C900-COMMIT-PROCESSING.                              03760000
035500                                                                  03770000
035600     PERFORM C200-FETCH-REQUEST-CURSOR.                           03780000
035700*   FORMAT THE NEXT CONTROL NUMBER                                03790000
035800     IF SQLCODE = 0                                               03800000
035900         MOVE SVT00000-CRD-PROD-YR    TO CR-CNTRL-NBR-YEAR        03810000
036000         MOVE SVT00000-SHIPT-REQ-NBR  TO CR-CNTRL-NBR-REQUEST     03820000
036100         MOVE 000001                  TO CR-CNTRL-NBR-SEQUENCE    03830000
036200         MOVE 1                       TO CR-REQUESTS-PROCESSED    03840000
036300         DISPLAY 'CONTROL NUMBER BEING PROCESSED: '               03850000
036400                                  CR-CNTRL-NBR                    03860000
036500     END-IF.                                                      03870000
036600                                                                  03880000
036700******************************************************************03890000
036800*      B300-EOJ-ROUTINE                                          *03900000
036900*  ==> PROCESSES:                                                *03910000
037000*    - CLOSES THE REQUEST CURSOR                                 *03920000
037100*    - UPDATES THE CHECKPOINT STATUS TO INDICATE SUCCESSFUL      *03930000
037200*      COMPLETION                                                *03940000
037300*  ==> PERFORMED FROM: A100-MAINLINE                             *03950000
037400******************************************************************03960000
037500 B300-EOJ-ROUTINE.                                                03970000
037600                                                                  03980000
037700     PERFORM C500-CLOSE-REQUEST-CURSOR.                           03990000
037800                                                                  04000000
037900     IF PS-NO-REQUEST                                             04010000
038000         CONTINUE                                                 04020000
038100     ELSE                                                         04030000
038200         MOVE '0' TO TCKRSTCNTL-CKPT-STAT-CODE                    04040000
038300         PERFORM D950-UPDATE-CHECKPOINT-STATUS                    04050000
038400     END-IF.                                                      04060000
038500                                                                  04070000
038600     DISPLAY ' '                                                  04080000
038700     DISPLAY 'KMRC CARDS INSERTED:     '                          04090000
038800                                       CR-KMRC-CARD-INSERT-COUNT. 04100000
038900     DISPLAY 'GIFT CARDS INSERTED:     '                          04110000
039000                                       CR-GIFT-CARD-INSERT-COUNT. 04120000
039100     DISPLAY 'NUMBER OF COMMITS TAKEN: '  CR-COMMIT-COUNT.        04130000
039200     DISPLAY 'DUPLICATES:              '                          04140000
039300                                         PV-DUPLICATE-KEY-COUNTER.04150000
039400                                                                  04160000
039500******************************************************************04170000
039600*      B400-GENERATE-RANDOM-NBRS                                 *04180000
039700*  ==> PROCESSES:                                                *04190000
039800*    - GENERATES THE RANDOM KOHLS MERCHANDISE CARD NUMBERS       *04200000
039900*    - CREATES THE CHECK DIGIT                                   *04210000
040000*    - PERFORMS THE PARAGRAPH TO INSERT TO KOHLS-CRD-ACCT        *04220000
040100*  ==> PERFORMED FROM:  B200-PROCESS-REQUESTS                    *04230000
040200*                                                                *04240000
040300*  NOTE:  DUE TO THE CHANGE TO THE 30 DIGIT CARD NUMBER THE      *04250000
040400*         USE OF NUMBER RANGES FOR CERTAIN CARD TYPES WAS        *04260000
040500*         REMOVED.  THE MAXIMUM STARTING NUMBER FOR THE NEW      *04270000
040600*         30 DIGIT CARD NUMBERS NEEDS TO START WITH '100' TO     *04280000
040700*         ENSURE THAT THERE IS NO CONFUSION BETWEEN OLD CARD     *04290000
040800*         NUMBERS AND THE NEW CARD NUMBERS.  THUS THE MAXIMUM    *04300000
040900*         STARTING NUMBER USES THE VARIABLE PV-MAX-VALUE AND IS  *04310000
041000*         SET TO '100' TO ENSURE THAT ALL NEW CARD NUMBERS       *04320000
041100*         GENERATED WITH THE 30 DIGIT CARD FORMAT BEGINS WITH    *04330000
041200*         '100'.                                                 *04340000
041300******************************************************************04350000
041400                                                                  04360000
041500 B400-GENERATE-RANDOM-NBRS.                                       04370000
041600     PERFORM D800-SET-CURRENT-TIMESTAMP                           04380000
041700     MOVE PV-TMS-MSECOND1           TO PV-MULTIPLIER-2-DIGIT2.    04390000
041800     MOVE PV-TMS-MSECOND2           TO PV-MULTIPLIER-2-DIGIT3.    04400000
041900     MOVE PV-TMS-MSECOND3           TO PV-MULTIPLIER-2-DIGIT1.    04410000
042000     MOVE PV-TMS-MSECOND4           TO PV-MULTIPLIER-DIGIT2.      04420000
042100     MOVE PV-TMS-MSECOND5           TO PV-MULTIPLIER-DIGIT3.      04430000
042200     MOVE PV-TMS-MSECOND6           TO PV-MULTIPLIER-DIGIT1.      04440000
042300     IF PV-CARD-1-3 = 0                                           04450000
042400         ADD 1                      TO PV-CARD-1-3                04460000
042500     END-IF.                                                      04470000
042600     COMPUTE PV-NEW-CARD-NUMBER =                                 04480000
042700             (PV-CARD-1-3 *                                       04490000
042800              PV-MULTIPLIER).                                     04500000
042900     MOVE 0                         TO PV-LOOP.                   04510000
043000     IF PV-NEW-CARD-1-3 < PV-MAX-VALUE                            04520000
043100         PERFORM                                                  04530000
043200           VARYING PV-LOOP                                        04540000
043300           FROM 1 BY 1                                            04550000
043400           UNTIL (PV-LOOP > PV-LOOP-MAX                           04560000
043500               OR PV-NEW-CARD-1-3 >= PV-MAX-VALUE)                04570000
043600             COMPUTE PV-NEW-CARD-NUMBER =                         04580000
043700                 (PV-NEW-CARD-1-3 *                               04590000
043800                  PV-MULTIPLIER-2)                                04600000
043900         END-PERFORM                                              04610000
044000     END-IF.                                                      04620000
044100     IF PV-LOOP > PV-LOOP-MAX                                     04630000
044200         ADD PV-MAX-VALUE TO PV-NEW-CARD-1-3                      04640000
044300             GIVING PV-NEW-CARD-1-3                               04650000
044400     END-IF.                                                      04660000
044500     MOVE PV-NEW-CARD-1-3           TO PV-HOLD-CARD-1-3.          04670000
044600                                                                  04680000
044700     IF PV-CARD-4-6 = 0                                           04690000
044800         ADD 1                      TO PV-CARD-4-6                04700000
044900     END-IF.                                                      04710000
045000     COMPUTE PV-NEW-CARD-NUMBER =                                 04720000
045100             (PV-CARD-4-6 *                                       04730000
045200              PV-MULTIPLIER).                                     04740000
045300     MOVE PV-NEW-CARD-1-3           TO PV-HOLD-CARD-4-6.          04750000
045400                                                                  04760000
045500     IF PV-CARD-7-9 = 0                                           04770000
045600         ADD 1                      TO PV-CARD-7-9                04780000
045700     END-IF.                                                      04790000
045800     COMPUTE PV-NEW-CARD-NUMBER =                                 04800000
045900             (PV-CARD-7-9 *                                       04810000
046000              PV-MULTIPLIER).                                     04820000
046100     MOVE PV-NEW-CARD-1-3           TO PV-HOLD-CARD-7-9.          04830000
046200                                                                  04840000
046300     IF PV-CARD-10-11 = 0                                         04850000
046400         ADD 1                      TO PV-CARD-10-11              04860000
046500     END-IF.                                                      04870000
046600     COMPUTE PV-NEW-CARD-NUMBER =                                 04880000
046700             (PV-CARD-10-11 *                                     04890000
046800              PV-MULTIPLIER).                                     04900000
046900     MOVE PV-NEW-CARD-1-3           TO PV-HOLD-CARD-10-11.        04910000
047000                                                                  04920000
047100******************************************************************04930000
047200*    CALCULATE PIN NUMBER                                         04940000
047300******************************************************************04950000
047400                                                                  04960000
047500     COMPUTE PV-PIN-NBR = PV-MULTIPLIER * PV-MULTIPLIER-2.        04970000
047600                                                                  04980000
047700     MOVE 0                         TO PV-LOOP.                   04990000
047800     IF PV-PIN-NBR = 0                                            05000000
047900         PERFORM                                                  05010000
048000           VARYING PV-LOOP                                        05020000
048100           FROM 1 BY 1                                            05030000
048200           UNTIL (PV-LOOP > PV-LOOP-MAX                           05040000
048300               OR PV-PIN-NBR > 0)                                 05050000
048400             COMPUTE PV-MULTIPLIER   = PV-MULTIPLIER + 1          05060000
048500             COMPUTE PV-MULTIPLIER-2 = PV-MULTIPLIER-2 + 1        05070000
048600             COMPUTE PV-PIN-NBR      = PV-MULTIPLIER              05080000
048700                                     * PV-MULTIPLIER-2            05090000
048800         END-PERFORM                                              05100000
048900     END-IF.                                                      05110000
049000                                                                  05120000
049100     IF PV-LOOP > PV-LOOP-MAX                                     05130000
049200         MOVE 1092 TO PV-PIN-NBR                                  05140000
049300     END-IF.                                                      05150000
049400                                                                  05160000
049500     IF PV-HOLD-CARD-NUMBER-NUM >= PV-CRD-NBR-START               05170000
049600         MOVE PV-HOLD-CARD-NUMBER-NUM                             05180000
049700                                    TO BASE-NUMBER                05190000
049800         PERFORM CREATE-CHECK-DIGIT-NUMBER                        05200000
049900         MOVE BASE-NUMBER           TO CR-CARD-NBR                05210000
050000                                       SVT00001-CRD-NBR           05220000
050100         MOVE CR-CNTRL-NBR-YEAR     TO SVT00001-CRD-PROD-YR       05230000
050200         MOVE CR-CNTRL-NBR-REQUEST  TO SVT00001-SHIPT-REQ-NBR     05240000
050300         MOVE CR-CNTRL-NBR-SEQUENCE TO SVT00001-CNTL-NBR          05250000
050400         IF CR-PRE-DNNTD-CRD-AMT > 0                              05260000
050500             MOVE SV004-PRE-DNNTD-IND TO SVT00001-PDNNTD-IND      05270000
050600         ELSE                                                     05280000
050700             MOVE SV004-NON-DNNTD-IND TO SVT00001-PDNNTD-IND      05290000
050800         END-IF                                                   05300000
050900         MOVE SV004-NO-SPECIALTY    TO SVT00001-CRD-SPCTY-TYP-CDE 05310000
051000         IF CR-CRD-STK-TYP-ID = SV004-VIRTUAL-CARD                05320000
051100             MOVE SV004-VIRTUAL-SPECIALTY                         05330000
051200                                     TO SVT00001-CRD-SPCTY-TYP-CDE05340000
051300         END-IF                                                   05350000
051400         IF CR-CRD-STK-TYP-ID = SV004-KOHLS-CARES-FOR-KIDS        05360000
051500             MOVE SV004-KCK-SPECIALTY                             05370000
051600                                     TO SVT00001-CRD-SPCTY-TYP-CDE05380000
051700         END-IF                                                   05390000
051800         IF CR-CRD-STK-TYP-ID = SV004-KMRC-CARD                   05400000
051900             MOVE SV004-KMRC-SPECIALTY                            05410000
052000                                     TO SVT00001-CRD-SPCTY-TYP-CDE05420000
052100         END-IF                                                   05430000
JPGFX1         IF CR-CRD-STK-TYP-ID = SV004-KOHLS-VIRTUAL-KCK           05440000
JPGFX1             MOVE SV004-KCK-SPECIALTY                             05450000
JPGFX1                                    TO SVT00001-CRD-SPCTY-TYP-CDE 05460000
JPGFX1         END-IF                                                   05470000
OAKMC1         IF CR-CRD-STK-TYP-ID = SV004-OA-KMC                      05480000
OAKMC1             MOVE SV004-OA-KMC-SPECIALTY                          05490000
052119                                    TO SVT00001-CRD-SPCTY-TYP-CDE 05500000
052120         END-IF                                                   05510000
052130         IF CR-CRD-STK-TYP-ID = SV004-FILA-KMC                    05520000
052140             MOVE SV004-FILA-KMC-SPECIALTY                        05530000
052150                                    TO SVT00001-CRD-SPCTY-TYP-CDE 05540000
052160         END-IF                                                   05550000
092821         IF CR-CRD-STK-TYP-ID = SV004-VIR-KMC                     05551000
092821             MOVE SV004-VIRT-KMC-SPECIALTY                        05552000
092821                                    TO SVT00001-CRD-SPCTY-TYP-CDE 05553000
092821         END-IF                                                   05554000
092821         IF CR-CRD-STK-TYP-ID = SV004-VIR-INT-KMC                 05555000
092821             MOVE SV004-VINT-KMC-SPECIALTY                        05556000
092821                                    TO SVT00001-CRD-SPCTY-TYP-CDE 05557000
092821         END-IF                                                   05558000
052200         MOVE CR-CRD-TYP-CDE        TO SVT00001-CRD-TYP-CDE       05560000
052300         MOVE SV004-CRD-STAT-TYP-AVAILABLE                        05570000
052400                                    TO SVT00001-CRD-STAT-CDE      05580000
052500         MOVE SV004-DEFAULT-DATE    TO SVT00001-CRD-STAT-CHG-DTE  05590000
052600                                       SVT00001-CRD-DISTRB-DTE    05600000
052700                                       SVT00001-CRD-CLO-DTE       05610000
052800         MOVE SV004-DEFAULT-TIME    TO SVT00001-CRD-STAT-CHG-TM   05620000
052900                                       SVT00001-CRD-DISTRB-TM     05630000
053000                                       SVT00001-CRD-CLO-TM        05640000
053100         MOVE SPACES                TO SVT00001-STAT-CHG-BY-USR-ID05650000
053200                                       SVT00001-DISTRB-USR-ID     05660000
053300                                       SVT00001-CLO-USR-ID        05670000
053400         IF  PV-CARD-STOCK-SAFEWAY                                05680000
053800             MOVE SV004-SAFEWAY-LOCATION       TO SVT00001-STR-NBR05690000
053900         ELSE                                                     05700000
054000             IF SVT00000-CRD-PRDR-CDE =                           05710000
054100                                     SV004-CARD-PRODUCER-GIFT-CERT05720000
054200                 MOVE SV004-HALLMARK-LOCATION  TO SVT00001-STR-NBR05730000
054300             ELSE                                                 05740000
054400               IF SVT00000-CRD-PRDR-CDE =                         05750000
054500                                     SV004-CARD-PRDR-MTL          05760000
054600                 MOVE SV004-INCOMM-LOCATION    TO SVT00001-STR-NBR05770000
054700               ELSE                                               05780000
054800                                                                  05790000
054900                 MOVE SV004-CORPORATE-LOCATION TO SVT00001-STR-NBR05800000
055000               END-IF                                             05810000
055100             END-IF                                               05820000
055200         END-IF                                                   05830000
055300         MOVE PV-PIN-NBR            TO SVT00001-CRD-PIN-NBR       05840000
055400         PERFORM C300-SELECT-CRD-ACCT-HIST                        05850000
055500         IF SQLCODE = +100                                        05860000
055600             PERFORM C350-INSERT-KOHLS-CRD-ACCT                   05870000
055700             IF SQLCODE = 0                                       05880000
055800                ADD 1              TO CR-CNTRL-NBR-SEQUENCE       05890000
055900                                      CR-REQUESTS-PROCESSED       05900000
056000                PERFORM C900-COMMIT-PROCESSING                    05910000
056100             END-IF                                               05920000
056200         END-IF                                                   05930000
056300     END-IF.                                                      05940000
056400     ADD 1                          TO PV-GET-TIME-COUNTER.       05950000
056500     MOVE PV-HOLD-CARD-1-3          TO PV-CARD-4-6.               05960000
056600     MOVE PV-HOLD-CARD-4-6          TO PV-CARD-7-9.               05970000
056700     MOVE PV-HOLD-CARD-7-9          TO PV-CARD-1-3.               05980000
056800                                                                  05990000
056900******************************************************************06000000
057000*      C100-OPEN-REQUEST-CURSOR                                  *06010000
057100*  ==> PROCESSES:                                                *06020000
057200*    - OPENS THE REQUEST CURSOR                                  *06030000
057300*  ==> PERFORMED FROM: B100-INITIALIZE                           *06040000
057400******************************************************************06050000
057500                                                                  06060000
057600 C100-OPEN-REQUEST-CURSOR.                                        06070000
057700                                                                  06080000
057800     EXEC SQL                                                     06090000
057900         OPEN REQUEST_CURSOR                                      06100000
058000     END-EXEC.                                                    06110000
058100                                                                  06120000
058200     IF SQLCODE = +0                                              06130000
058300         CONTINUE                                                 06140000
058400     ELSE                                                         06150000
058500         MOVE 'C100-OPEN-REQUEST-CURSOR    '                      06160000
058600                                 TO PV-PARAGRAPH-NAME             06170000
058700         MOVE 'OPEN OF THE REQUEST CURSOR  '                      06180000
058800                                 TO PV-DB2-OPERATION-ATTEMPTED    06190000
058900         PERFORM Z900-SQL-ABEND                                   06200000
059000     END-IF.                                                      06210000
059100                                                                  06220000
059200******************************************************************06230000
059300*      C200-FETCH-REQUEST-CURSOR                                 *06240000
059400*  ==> PROCESSES:                                                *06250000
059500*    - FETCHES A ROW FROM THE REQUEST CURSOR                     *06260000
059600*  ==> PERFORMED FROM: B100-INITIALIZATION                       *06270000
059700******************************************************************06280000
059800                                                                  06290000
059900 C200-FETCH-REQUEST-CURSOR.                                       06300000
060000                                                                  06310000
060100     EXEC SQL                                                     06320000
060200         FETCH   REQUEST_CURSOR                                   06330000
060300          INTO  :SVT00000-CRD-PROD-YR                             06340000
060400               ,:SVT00000-SHIPT-REQ-NBR                           06350000
060500               ,:SVT00000-CRD-TYP-CDE                             06360000
060600               ,:SVT00000-PRE-DNNTD-CRD-AMT                       06370000
060700               ,:SVT00000-CRD-STK-TYP-ID                          06380000
060800               ,:SVT00000-CRD-REQ-QTY                             06390000
060900               ,:SVT00000-CRD-PRDR-CDE                            06400000
061000     END-EXEC.                                                    06410000
061100                                                                  06420000
061200     EVALUATE SQLCODE                                             06430000
061300         WHEN 0                                                   06440000
061400             MOVE SVT00000-CRD-REQ-QTY  TO CR-CRD-REQ-QTY         06450000
061500             MOVE SVT00000-CRD-TYP-CDE  TO CR-CRD-TYP-CDE         06460000
061600             MOVE SVT00000-PRE-DNNTD-CRD-AMT                      06470000
061700                                        TO CR-PRE-DNNTD-CRD-AMT   06480000
061800             MOVE SVT00000-CRD-STK-TYP-ID TO CR-CRD-STK-TYP-ID    06490000
061810                                             PV-CRD-STK-TYP-ID    06500000
061900             MOVE PC-MAX-CURRENT-CRD-VALUE                        06510000
062000                                        TO PV-MAX-VALUE           06520000
062100         WHEN +100                                                06530000
062200             SET END-OF-CURSOR          TO TRUE                   06540000
062300         WHEN OTHER                                               06550000
062400             MOVE 'C200-FETCH-REQUEST-CURSOR     '                06560000
062500                                 TO PV-PARAGRAPH-NAME             06570000
062600             MOVE 'FETCH OF ROW ON REQUEST CURSOR'                06580000
062700                                 TO PV-DB2-OPERATION-ATTEMPTED    06590000
062800             PERFORM Z900-SQL-ABEND                               06600000
062900     END-EVALUATE.                                                06610000
063000                                                                  06620000
063100******************************************************************06630000
063200*      C300-SELECT-CRD-ACCT-HIST                                 *06640000
063300*  ==> PROCESSES:                                                *06650000
063400*    - CHECKS CRD-ACCT-HIST TO SEE IF ROW ALREADY EXISTS         *06660000
063500*  ==> PERFORMED FROM: B100-INITIALIZATION                       *06670000
063600******************************************************************06680000
063700                                                                  06690000
063800 C300-SELECT-CRD-ACCT-HIST.                                       06700000
063900                                                                  06710000
064000     EXEC SQL                                                     06720000
064100       SELECT CRD_NBR                                             06730000
064200           INTO :SVT00005-CRD-NBR                                 06740000
064300           FROM SVT_CRD_ACCT_HIST                                 06750000
064400        WHERE  CRD_NBR  = :SVT00001-CRD-NBR                       06760000
064500     END-EXEC.                                                    06770000
064600                                                                  06780000
064700     EVALUATE TRUE                                                06790000
064800         WHEN SQLCODE = ZERO                                      06800000
064900             ADD 1               TO PV-DUPLICATE-KEY-COUNTER      06810000
065000         WHEN SQLCODE = +100                                      06820000
065100             CONTINUE                                             06830000
065200         WHEN OTHER                                               06840000
065300             DISPLAY SVT00005-CRD-NBR                             06850000
065400             MOVE 'C300-SELECT-CRD-ACCT-HIST     '                06860000
065500                                 TO PV-PARAGRAPH-NAME             06870000
065600             MOVE 'SELECT A ROW FROM CRD-ACCT-HIST '              06880000
065700                                 TO PV-DB2-OPERATION-ATTEMPTED    06890000
065800             PERFORM Z900-SQL-ABEND                               06900000
065900     END-EVALUATE.                                                06910000
066000                                                                  06920000
066100******************************************************************06930000
066200*      C350-INSERT-KOHLS-CRD-ACCT                                *06940000
066300*  ==> PROCESSES:                                                *06950000
066400*    - INSERTS A ROW IN THE KOHLS-CRD-ACCT                       *06960000
066500*  ==> PERFORMED FROM: B400-GENERATE-RANDOM-NUMBERS              *06970000
066600******************************************************************06980000
066700                                                                  06990000
066800 C350-INSERT-KOHLS-CRD-ACCT.                                      07000000
066900     EXEC SQL                                                     07010000
067000         INSERT INTO SVT_KOHLS_CRD_ACCT                           07020000
067100                (CRD_NBR,                                         07030000
067200                 CRD_PROD_YR,                                     07040000
067300                 SHIPT_REQ_NBR,                                   07050000
067400                 CNTL_NBR,                                        07060000
067500                 PDNNTD_IND,                                      07070000
067600                 CRD_SPCTY_TYP_CDE,                               07080000
067700                 CRD_TYP_CDE,                                     07090000
067800                 CRD_STAT_CDE,                                    07100000
067900                 CRD_STAT_CHG_DTE,                                07110000
068000                 CRD_STAT_CHG_TM,                                 07120000
068100                 STAT_CHG_BY_USR_ID,                              07130000
068200                 CRD_DISTRB_DTE,                                  07140000
068300                 CRD_DISTRB_TM,                                   07150000
068400                 DISTRB_USR_ID,                                   07160000
068500                 STR_NBR,                                         07170000
068600                 CRD_CLO_DTE,                                     07180000
068700                 CRD_CLO_TM,                                      07190000
068800                 CLO_USR_ID,                                      07200000
068900                 CRD_PIN_NBR)                                     07210000
069000            VALUES                                                07220000
069100                (:SVT00001-CRD-NBR,                               07230000
069200                 :SVT00001-CRD-PROD-YR,                           07240000
069300                 :SVT00001-SHIPT-REQ-NBR,                         07250000
069400                 :SVT00001-CNTL-NBR,                              07260000
069500                 :SVT00001-PDNNTD-IND,                            07270000
069600                 :SVT00001-CRD-SPCTY-TYP-CDE,                     07280000
069700                 :SVT00001-CRD-TYP-CDE,                           07290000
069800                 :SVT00001-CRD-STAT-CDE,                          07300000
069900                 :SVT00001-CRD-STAT-CHG-DTE,                      07310000
070000                 :SVT00001-CRD-STAT-CHG-TM,                       07320000
070100                 :SVT00001-STAT-CHG-BY-USR-ID,                    07330000
070200                 :SVT00001-CRD-DISTRB-DTE,                        07340000
070300                 :SVT00001-CRD-DISTRB-TM,                         07350000
070400                 :SVT00001-DISTRB-USR-ID,                         07360000
070500                 :SVT00001-STR-NBR,                               07370000
070600                 :SVT00001-CRD-CLO-DTE,                           07380000
070700                 :SVT00001-CRD-CLO-TM,                            07390000
070800                 :SVT00001-CLO-USR-ID,                            07400000
070900                 :SVT00001-CRD-PIN-NBR)                           07410000
071000     END-EXEC.                                                    07420000
071100                                                                  07430000
071200     EVALUATE TRUE                                                07440000
071300         WHEN SQLCODE = ZERO                                      07450000
071400             IF CR-CRD-TYP-CDE = SV004-KMRC-CRD-TYP               07460000
071500                 ADD 1           TO CR-KMRC-CARD-INSERT-COUNT     07470000
071600             ELSE                                                 07480000
071700                 ADD 1           TO CR-GIFT-CARD-INSERT-COUNT     07490000
071800             END-IF                                               07500000
071900         WHEN SQLCODE = -803                                      07510000
072000             ADD 1               TO PV-DUPLICATE-KEY-COUNTER      07520000
072100         WHEN OTHER                                               07530000
072200             MOVE 'C350-INSERT-KOHLS-CRD-ACCT      '              07540000
072300                                 TO PV-PARAGRAPH-NAME             07550000
072400             MOVE 'INSERT A ROW INTO THE KOHLS-CRD-ACCT '         07560000
072500                                 TO PV-DB2-OPERATION-ATTEMPTED    07570000
072600             PERFORM Z900-SQL-ABEND                               07580000
072700     END-EVALUATE.                                                07590000
072800                                                                  07600000
072900******************************************************************07610000
073000*      C500-CLOSE-REQUEST-CURSOR                                 *07620000
073100*  ==> PROCESSES:                                                *07630000
073200*    - CLOSES THE REQUEST CURSOR                                 *07640000
073300*  ==> PERFORMED FROM: B300-EOJ-ROUTINE                          *07650000
073400******************************************************************07660000
073500 C500-CLOSE-REQUEST-CURSOR.                                       07670000
073600                                                                  07680000
073700     EXEC SQL                                                     07690000
073800         CLOSE REQUEST_CURSOR                                     07700000
073900     END-EXEC.                                                    07710000
074000                                                                  07720000
074100     IF SQLCODE = 0                                               07730000
074200         CONTINUE                                                 07740000
074300     ELSE                                                         07750000
074400         MOVE 'B300-CLOSE-REQUEST-CURSOR       '                  07760000
074500                                TO PV-PARAGRAPH-NAME              07770000
074600         MOVE 'ERROR ON CLOSE OF REQUEST CSR '                    07780000
074700                                TO PV-DB2-OPERATION-ATTEMPTED     07790000
074800         PERFORM Z900-SQL-ABEND                                   07800000
074900     END-IF.                                                      07810000
075000                                                                  07820000
075100******************************************************************07830000
075200*      C600-INIT-CHECKPOINT-SELECT                               *07840000
075300*  ==> PROCESSES:                                                *07850000
075400*    - SELECTS FROM THE CHECKPOINT RESTART CONTROL TABLE TO SEE  *07860000
075500*      IF WE ARE IN A RESTART CONDITION.                         *07870000
075600*  ==> PERFORMED FROM: B100-INITIALIZE                           *07880000
075700******************************************************************07890000
075800 C600-INIT-CHECKPOINT-SELECT.                                     07900000
075900                                                                  07910000
076000     EXEC SQL                                                     07920000
076100       SELECT  CKPT_STAT_CODE                                     07930000
076200         INTO  :TCKRSTCNTL-CKPT-STAT-CODE                         07940000
076300         FROM  TCKRSTCNTL                                         07950000
076400        WHERE  JOB_NAME  = :PC-JOB-NAME                           07960000
076500          AND  PLAN_NAME = :PC-PROGRAM-NAME                       07970000
076600     END-EXEC.                                                    07980000
076700                                                                  07990000
076800     IF SQLCODE = 0                                               08000000
076900         CONTINUE                                                 08010000
077000     ELSE                                                         08020000
077100         MOVE 'C600-INIT-CHECKPOINT-SELECT     '                  08030000
077200                             TO PV-PARAGRAPH-NAME                 08040000
077300         MOVE 'ERROR ON SELECT OF TCKRSTCNTL '                    08050000
077400                             TO PV-DB2-OPERATION-ATTEMPTED        08060000
077500         PERFORM Z900-SQL-ABEND                                   08070000
077600     END-IF.                                                      08080000
077700                                                                  08090000
077800******************************************************************08100000
077900*      C700-SELECT-RESTART-INFO                                  *08110000
078000*  ==> PROCESSES:                                                *08120000
078100*    - SELECTS FROM THE CHECKPOINT RESTART INFORMATION TABLE TO  *08130000
078200*      OBTAIN THE PROGRAMS SAVED VARIABLES.                      *08140000
078300*  ==> PERFORMED FROM: B100-INITIALIZE                           *08150000
078400******************************************************************08160000
078500 C700-SELECT-RESTART-INFO.                                        08170000
078600                                                                  08180000
078700     EXEC SQL                                                     08190000
078800       SELECT  WORK_STRG_DESC                                     08200000
078900         INTO  :TCKRSTINF-WORK-STRG-DESC                          08210000
079000         FROM  TCKRSTINF                                          08220000
079100        WHERE  JOB_NAME  = :PC-JOB-NAME                           08230000
079200          AND  PLAN_NAME = :PC-PROGRAM-NAME                       08240000
079300     END-EXEC.                                                    08250000
079400                                                                  08260000
079500     IF SQLCODE = 0                                               08270000
079600         CONTINUE                                                 08280000
079700     ELSE                                                         08290000
079800         MOVE 'C700-SELECT-RESTART-INFO        '                  08300000
079900                             TO PV-PARAGRAPH-NAME                 08310000
080000         MOVE 'ERROR ON SELECT OF TCKRSTINF  '                    08320000
080100                             TO PV-DB2-OPERATION-ATTEMPTED        08330000
080200         PERFORM Z900-SQL-ABEND                                   08340000
080300     END-IF.                                                      08350000
080400                                                                  08360000
080500******************************************************************08370000
080600*      C900-COMMIT-PROCESSING.                                   *08380000
080700*  ==> PROCESSES:                                                *08390000
080800*    - CHECK IF WE NEED TO TAKE A COMMIT.                        *08400000
080900*    - COMMIT THIS UNIT OF WORK.                                 *08410000
081000*    - ESTABLISH THE CORRECT POSITION IN THE TKMCREQ TABLE       *08420000
081100*  ==> PERFORMED FROM: B200-PROCESS-REQUESTS.                    *08430000
081200******************************************************************08440000
081300 C900-COMMIT-PROCESSING.                                          08450000
081400                                                                  08460000
081500     PERFORM D800-SET-CURRENT-TIMESTAMP.                          08470000
081600                                                                  08480000
081700     IF PV-CURRENT-TIMESTAMP >= PV-COMMIT-TIMESTAMP               08490000
081800         IF PS-FIRST-COMMIT                                       08500000
081900             MOVE '9'               TO TCKRSTCNTL-CKPT-STAT-CODE  08510000
082000             PERFORM D950-UPDATE-CHECKPOINT-STATUS                08520000
082100             MOVE 'N'               TO PS-FIRST-COMMIT-SW         08530000
082200         END-IF                                                   08540000
082300         PERFORM D900-COMMIT                                      08550000
082400         MOVE CR-CNTRL-NBR-REQUEST  TO SVT00000-SHIPT-REQ-NBR     08560000
082500         PERFORM C100-OPEN-REQUEST-CURSOR                         08570000
082600         PERFORM C200-FETCH-REQUEST-CURSOR                        08580000
082700         PERFORM D700-GET-COMMIT-TIMESTAMP                        08590000
082800     END-IF.                                                      08600000
082900                                                                  08610000
083000******************************************************************08620000
083100*      D700-GET-COMMIT-TIMESTAMP.                                *08630000
083200*  ==> PROCESSES:                                                *08640000
083300*    - GET THE COMMIT TIMESTAMP FROM THE CHECKPOINT CONTROL      *08650000
083400*      TABLE.                                                    *08660000
083500*  ==> PERFORMED FROM: C900-COMMIT-PROCESSING                    *08670000
083600*                      B100-INITIALIZE                           *08680000
083700******************************************************************08690000
083800 D700-GET-COMMIT-TIMESTAMP.                                       08700000
083900                                                                  08710000
084000     EXEC SQL                                                     08720000
084100       SELECT (CURRENT TIMESTAMP + CKPT_FRQNCY_QTY SECONDS)       08730000
084200         INTO :PV-COMMIT-TIMESTAMP                                08740000
084300         FROM TCKRSTCNTL                                          08750000
084400        WHERE JOB_NAME  = :PC-JOB-NAME                            08760000
084500          AND PLAN_NAME = :PC-PROGRAM-NAME                        08770000
084600     END-EXEC.                                                    08780000
084700                                                                  08790000
084800     IF SQLCODE = 0                                               08800000
084900         CONTINUE                                                 08810000
085000     ELSE                                                         08820000
085100         MOVE 'D700-GET-COMMIT-TIMESTAMP       '                  08830000
085200                             TO PV-PARAGRAPH-NAME                 08840000
085300         MOVE 'ERROR ON SELECT OF TIMESTAMP  '                    08850000
085400                             TO PV-DB2-OPERATION-ATTEMPTED        08860000
085500         PERFORM Z900-SQL-ABEND                                   08870000
085600     END-IF.                                                      08880000
085700                                                                  08890000
085800******************************************************************08900000
085900*      D800-SET-CURRENT-TIMESTAMP.                               *08910000
086000*  ==> PROCESSES:                                                *08920000
086100*    - GET THE CURRENT TIMESTAMP FROM DB2.                       *08930000
086200*  ==> PERFORMED FROM: C900-COMMIT-PROCESSING.                   *08940000
086300******************************************************************08950000
086400 D800-SET-CURRENT-TIMESTAMP.                                      08960000
086500                                                                  08970000
086600     EXEC SQL                                                     08980000
086700          SET :PV-CURRENT-TIMESTAMP = CURRENT TIMESTAMP           08990000
086800     END-EXEC.                                                    09000000
086900                                                                  09010000
087000     IF SQLCODE = 0                                               09020000
087100         CONTINUE                                                 09030000
087200     ELSE                                                         09040000
087300         MOVE 'D800-SET-CURRENT-TIMESTAMP      '                  09050000
087400                             TO PV-PARAGRAPH-NAME                 09060000
087500         MOVE 'ERROR ON SET OF TIMESTAMP     '                    09070000
087600                             TO PV-DB2-OPERATION-ATTEMPTED        09080000
087700         PERFORM Z900-SQL-ABEND                                   09090000
087800     END-IF.                                                      09100000
087900                                                                  09110000
088000******************************************************************09120000
088100*      D900-COMMIT.                                              *09130000
088200*  ==> PROCESSES:                                                *09140000
088300*    - PERFORM UPDATE OF CHECKPOINT INFORMATION TABLE.           *09150000
088400*    - TAKE A COMMIT.                                            *09160000
088500*  ==> PERFORMED FROM: C900-COMMIT-PROCESSING.                   *09170000
088600******************************************************************09180000
088700 D900-COMMIT.                                                     09190000
088800                                                                  09200000
088900     MOVE CR-CHECKPOINT-RESTART-AREA TO TCKRSTINF-WORK-STRG-DESC. 09210000
089000                                                                  09220000
089100     EXEC SQL                                                     09230000
089200       UPDATE TCKRSTINF                                           09240000
089300          SET WORK_STRG_DESC = :TCKRSTINF-WORK-STRG-DESC          09250000
089400        WHERE JOB_NAME       = :PC-JOB-NAME                       09260000
089500          AND PLAN_NAME      = :PC-PROGRAM-NAME                   09270000
089600     END-EXEC.                                                    09280000
089700                                                                  09290000
089800     IF SQLCODE = 0                                               09300000
089900         CONTINUE                                                 09310000
090000     ELSE                                                         09320000
090100         MOVE 'D900-COMMIT ' TO PV-PARAGRAPH-NAME                 09330000
090200         MOVE 'ERROR ON UPDATE OF TCKRSTINF  '                    09340000
090300                             TO PV-DB2-OPERATION-ATTEMPTED        09350000
090400         PERFORM Z900-SQL-ABEND                                   09360000
090500     END-IF.                                                      09370000
090600                                                                  09380000
090700     EXEC SQL                                                     09390000
090800         COMMIT                                                   09400000
090900     END-EXEC.                                                    09410000
091000                                                                  09420000
091100     IF SQLCODE = 0                                               09430000
091200         ADD +1              TO CR-COMMIT-COUNT                   09440000
091300     ELSE                                                         09450000
091400         MOVE 'D900-COMMIT                     '                  09460000
091500                             TO PV-PARAGRAPH-NAME                 09470000
091600         MOVE 'ERROR ON COMMIT               '                    09480000
091700                             TO PV-DB2-OPERATION-ATTEMPTED        09490000
091800         PERFORM Z900-SQL-ABEND                                   09500000
091900     END-IF.                                                      09510000
092000                                                                  09520000
092100******************************************************************09530000
092200*      D950-UPDATE-CHECKPOINT-STATUS                             *09540000
092300*  ==> PROCESSES:                                                *09550000
092400*    - UPDATES THE STATUS ON THE CHECKPOINT CONTROL TABLE        *09560000
092500*  ==> PERFORMED FROM: C900-COMMIT-PROCESSING                    *09570000
092600******************************************************************09580000
092700 D950-UPDATE-CHECKPOINT-STATUS.                                   09590000
092800                                                                  09600000
092900     EXEC SQL                                                     09610000
093000       UPDATE  TCKRSTCNTL                                         09620000
093100          SET  CKPT_STAT_CODE = :TCKRSTCNTL-CKPT-STAT-CODE        09630000
093200        WHERE  JOB_NAME  = :PC-JOB-NAME                           09640000
093300          AND  PLAN_NAME = :PC-PROGRAM-NAME                       09650000
093400     END-EXEC.                                                    09660000
093500                                                                  09670000
093600     IF SQLCODE = 0                                               09680000
093700         CONTINUE                                                 09690000
093800     ELSE                                                         09700000
093900         MOVE 'D950-UPDATE-CHECKPOINT-STATUS   '                  09710000
094000                             TO PV-PARAGRAPH-NAME                 09720000
094100         MOVE 'ERROR ON UPDATE OF TCKRSTCNTL '                    09730000
094200                             TO PV-DB2-OPERATION-ATTEMPTED        09740000
094300         PERFORM Z900-SQL-ABEND                                   09750000
094400     END-IF.                                                      09760000
094500                                                                  09770000
094600******************************************************************09780000
094700*      Z900-SQL-ABEND                                            *09790000
094800*  ==> PROCESSES:                                                *09800000
094900*    - PERFORMS ABEND PROCESSING FOR SQL ERRORS.                 *09810000
095000*  ==> PERFORMED FROM: C100-OPEN-REQUEST-CURSOR                  *09820000
095100*                      C200-FETCH-REQUEST-CURSOR                 *09830000
095200*                      C500-CLOSE-REQUEST-CURSOR                 *09840000
095300*                      C600-INIT-CHECKPOINT-SELECT               *09850000
095400*                      C700-SELECT-RESTART-INFO                  *09860000
095500*                      D700-GET-COMMIT-TIMESTAMP                 *09870000
095600*                      D800-SET-CURRENT-TIMESTAMP                *09880000
095700*                      D900-COMMIT                               *09890000
095800*                      D950-UPDATE-CHECKPOINT-STATUS             *09900000
095900******************************************************************09910000
096000 Z900-SQL-ABEND.                                                  09920000
096100     DISPLAY 'Z900-SQL-ABEND'                                     09930000
096200     DISPLAY '** ABEND     **'.                                   09940000
096300     DISPLAY '** PROGRAM   ** = ' PC-PROGRAM-NAME.                09950000
096400     DISPLAY '** PARAGRAPH ** = ' PV-PARAGRAPH-NAME.              09960000
096500     DISPLAY '** OPERATION ** = ' PV-DB2-OPERATION-ATTEMPTED.     09970000
096600                                                                  09980000
096700******************************************************************09990000
096800* THIS COPY BOOK MEMBER CONTAINS THE PROCEDURE DIVISION STATE-    10000000
096900* MENTS THAT ARE REQUIRED TO UTILIZE THE DB2 ABEND MODULE         10010000
097000* 'DSNTIAR' AND CONVERT THE SQLCA INFORMATION INTO A READABLE     10020000
097100* FORMAT.                                                         10030000
097200******************************************************************10040000
097300     COPY DPPD004.                                                10050000
097400                                                                  10060000
097500     EXEC SQL                                                     10070000
097600         ROLLBACK                                                 10080000
097700     END-EXEC.                                                    10090000
097800                                                                  10100000
097900     MOVE +4013 TO ABEND-CODE.                                    10110000
098000     CALL 'ILBOABN0' USING ABEND-CODE.                            10120000
098100                                                                  10130000
098200***********************************************************       10140000
098300*    CREATE/VERIFY CHECK DIGIT ROUTINE                    *       10150000
098400***********************************************************       10160000
098500*                                                                 10170000
208819     COPY DPPD036.                                                10180000
