/* REXX */                                                                      
/* DEKRX001 - Create the dynamic spool retrieval job JCL.  Receive    */        
/*    and validate arguments for the job name, workload object name   */        
/*    and spool file name.  The model JCL will be loaded into a       */        
/*    variable.  Each JCL line will modified to replace the model     */        
/*    JCL symbolics with the related argument values.  The final      */        
/*    JCL will be loaded into an output stem variable and written to  */        
/*    the output file.                                                */        
/*                                                                    */        
                                                                                
ARG JOBNAME WOBNAME FILENAME                                                    
                                                                                
/**********************************************************************/        
/* Set values for constants.                                          */        
/**********************************************************************/        
CURRPGM = ' DEKRX001 - '                                                        
                                                                                
/**********************************************************************/        
/* Program mainline.                                                  */        
/**********************************************************************/        
JOBNAME = STRIP(JOBNAME)                                                        
SAY CURRPGM 'JOB NAME =' JOBNAME                                                
WOBNAME = STRIP(WOBNAME)                                                        
SAY CURRPGM 'WOB NAME =' WOBNAME                                                
FILENAME = STRIP(FILENAME)                                                      
SAY CURRPGM 'SPOOL FILE NAME =' FILENAME                                        
                                                                                
IF STRIP(JOBNAME) = '' THEN                                                     
DO                                                                              
  SAY CURRPGM 'JOB NAME WAS NOT PASSED AS AN ARGUMENT'                          
  EXIT 4                                                                        
END                                                                             
IF STRIP(WOBNAME) = '' THEN                                                     
DO                                                                              
  SAY CURRPGM 'WORKLOAD OBJECT NAME WAS NOT PASSED AS AN ARGUMENT'              
  EXIT 4                                                                        
END                                                                             
IF STRIP(FILENAME) = '' THEN                                                    
DO                                                                              
  SAY CURRPGM 'SPOOL RETRIEVAL DATASET NAME WAS NOT PASSED AS AN',              
            'ARGUMENT'                                                          
  EXIT 4                                                                        
END                                                                             
                                                                                
"EXECIO * DISKR" INP01 "(STEM MODELJCL. FINIS"                                  
IF RC /=0 & RC /= 2 THEN                                                        
DO                                                                              
  SAY CURRPGM 'ERROR' RC 'READING INP01 SPOOL RETRIEVAL JOB JCL MODEL'          
  EXIT 4                                                                        
END                                                                             
DO I=1 TO MODELJCL.0                                                            
  SPOOLJCL.I = CHANGE_JCL_LINE("%JOBNAME", JOBNAME, MODELJCL.I)                 
  SPOOLJCL.I = CHANGE_JCL_LINE("%WOBNAME", WOBNAME, SPOOLJCL.I)                 
  SPOOLJCL.I = CHANGE_JCL_LINE("%FILENAME", FILENAME, SPOOLJCL.I)               
                                                                                
  /* Display the modified spool retrieval job JCL line */                       
  SAY CURRPGM 'SPOOL JOB JCL:' SPOOLJCL.I                                       
END                                                                             
                                                                                
"EXECIO * DISKW" OUT01 "(STEM SPOOLJCL. FINIS)"                                 
IF RC /=0 THEN                                                                  
DO                                                                              
  SAY CURRPGM 'ERROR' RC 'WRITING OUT01 SPOOL RETRIEVAL JOB JCL'                
  EXIT 4                                                                        
END                                                                             
                                                                                
EXIT                                                                            
                                                                                
/* ----------------------------------------------------------------- */         
/* Subroutines                                                       */         
/* ----------------------------------------------------------------- */         
/* ----------------------------------------------------------------- */         
/* CHANGE_JCL_LINE                                                   */         
/*                                                                   */         
/* Replace one string for another within a JCL line.  While the      */         
/* string is still found in the JCL line, parse the JCL line into    */         
/* the characters before and after the string.  Contruct the         */         
/* replacement line by concatenating the characters before the       */         
/* string, the replacement string, and the characters after the      */         
/* string.  Return a JCL line of 80 characters, in case the          */         
/* original string and the replacement string are not the same       */         
/* length.                                                           */         
/* ----------------------------------------------------------------- */         
                                                                                
CHANGE_JCL_LINE:                                                                
PARSE ARG ORIGINAL_VALUE, NEW_VALUE, JCL_LINE                                   
                                                                                
/* Iterate through checking for the string, in case more than one    */         
/* string is found in the JCL line.                                  */         
                                                                                
DO WHILE POS(ORIGINAL_VALUE, JCL_LINE) > 0                                      
  PARSE VALUE JCL_LINE WITH START_OF_LINE (ORIGINAL_VALUE) REST_OF_LINE         
  IF START_OF_LINE <> JCL_LINE THEN                                             
    JCL_LINE = START_OF_LINE || NEW_VALUE || REST_OF_LINE                       
END                                                                             
                                                                                
RETURN LEFT(JCL_LINE, 80)                                                       
