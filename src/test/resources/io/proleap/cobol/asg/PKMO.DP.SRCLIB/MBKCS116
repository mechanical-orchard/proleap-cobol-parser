00001 *                                                                 02/06/92
00002 *                                                                 MBKCS116
00003 *                                                                    LV002
00004  IDENTIFICATION DIVISION.                                            CL**1
00005                                                                      CL**1
00006  PROGRAM-ID.    MBKCS116.                                            CL**1
00007  AUTHOR.        BOB LOOS - STRATAGEM.                                CL**1
00008  INSTALLATION.  KOHLS DEPARTMENT STORES.                             CL**1
00009  DATE-WRITTEN.  08-08-91.                                            CL**1
00010  DATE-COMPILED.                                                      CL**1
00011                                                                      CL**1
00012 *****************************************************************    CL**1
00013 *    LIST PROCESSOR APPLICATION SYSTEM AVAILABILITY                  CL**1
00014 *                                                                    CL**1
00015 *    THIS PROGRAM WILL RETRIEVE DATA FROM THE MERCHANDISE AREA       CL**1
00016 *    TABLE BASED ON REQUEST FROM THE APPLICATION SYSTEM              CL**1
00017 *    AVAILABILITY SELECTION PANEL. ALSO WILL GET THE                 CL**1
00018 *    APPLICATION SYSTEM DESCRIPTION FROM THE APPLICATION             CL**1
00019 *    SYSTEM AVAILABILITY TABLE.                                      CL**1
00020 *****************************************************************    CL**1
262978* CHANGED 10/22/2021    BY JIM HUNTER      WR: CHG0262978                 
262978* CHANGE CALL OF DPKUT100 TO CALL DP010I-NUMERIC-EDIT-ROUTINE             
262978* MAKING THE CALL DYNAMIC VS STATIC.                                      
262978******************************************************************        
00021                                                                      CL**1
00022 *                                                                    CL**1
00023 *                                                                    CL**1
00024 *                                                                    CL**1
00025  ENVIRONMENT DIVISION.                                               CL**1
00026 *                                                                    CL**1
00027 *                                                                    CL**1
00028 *                                                                    CL**1
00029  DATA DIVISION.                                                      CL**1
00030 *                                                                    CL**1
00031 *                                                                    CL**1
00032  WORKING-STORAGE SECTION.                                            CL**1
00033  01  AM-ABEND-MESSAGES.                                              CL**1
00034      05  AM-ABEND-MESSAGE-8             PIC X(78)    VALUE           CL**1
00035      'ERROR TRYING TO DELETE TEMP STORAGE QUEUE'.                    CL**1
00036      05  AM-ABEND-MESSAGE-9             PIC X(78)    VALUE           CL**1
00037      'ERROR TRYING TO REWRITE TEMP STORAGE QUEUE'.                   CL**1
00038      05  AM-ABEND-MESSAGE-10            PIC X(78)    VALUE           CL**1
00039      'ERROR TRYING TO WRITE TEMP STORAGE QUEUE'.                     CL**1
00040      05  AM-ABEND-MESSAGE-11            PIC X(78)    VALUE           CL**1
00041      'LOGIC ERROR IN TRYING TO WRITE TO TEMP STORAGE QUEUE - BLOCK   CL**1
00042 -    '      '.                                                       CL**1
00043      05  FILLER REDEFINES AM-ABEND-MESSAGE-11.                       CL**1
00044          10  FILLER                     PIC X(61).                   CL**1
00045          10  AM-BLOCK-NUMBER-11         PIC Z(03)9-.                 CL**1
00046          10  FILLER                     PIC X(12).                   CL**1
00047      05  AM-ABEND-MESSAGE-12            PIC X(78)    VALUE           CL**1
00048      'ERROR TRYING TO READ TEMP STORAGE QUEUE'.                      CL**1
00049      05  AM-ABEND-MESSAGE-13            PIC X(78)    VALUE           CL**1
00050      'ERROR TRYING TO SELECT A RECORD FROM TMDSEAR TABLE - KEY       CL**1
00051 -    '      '.                                                       CL**1
00052      05  FILLER REDEFINES AM-ABEND-MESSAGE-13.                       CL**1
00053          10  FILLER                     PIC X(57).                   CL**1
00054          10  AM-OPERCO-NBR-13           PIC X(02).                   CL**1
00055          10  AM-GMA-NBR-13              PIC X(02).                   CL**1
00056          10  AM-DMA-NBR-13              PIC X(02).                   CL**1
00057          10  AM-DEPT-NBR-13             PIC X(03).                   CL**1
00058          10  AM-MCL-NBR-13              PIC X(02).                   CL**1
00059          10  AM-SCL-NBR-13              PIC X(03).                   CL**1
00060          10  FILLER                     PIC X(07).                   CL**1
00061      05  AM-ABEND-MESSAGE-14            PIC X(78)    VALUE           CL**1
00062      'ERROR TRYING TO SELECT A RECORD FROM TAPLSYS TABLE - KEY       CL**1
00063 -    '      '.                                                       CL**1
00064      05  FILLER REDEFINES AM-ABEND-MESSAGE-14.                       CL**1
00065          10  FILLER                     PIC X(57).                   CL**1
00066          10  AM-OPERCO-NBR-14           PIC X(02).                   CL**1
00067          10  AM-APL-CDE-14              PIC X(02).                   CL**1
00068          10  FILLER                     PIC X(17).                   CL**1
00069      05  AM-ABEND-MESSAGE-21            PIC X(78)    VALUE           CL**1
00070      'ERROR TRYING TO OPEN MERCH-CURSOR'.                            CL**1
00071      05  AM-ABEND-MESSAGE-22            PIC X(78)    VALUE           CL**1
00072      'ERROR TRYING TO CLOSE MERCH-CURSOR'.                           CL**1
00073  01  PC-PROGRAM-CONSTANTS.                                           CL**1
00074      05  PC-NAVIGATOR-TRAN-ID           PIC X(04)    VALUE 'Z008'.   CL**1
00075      05  PC-SELECTED                    PIC X(01)    VALUE 'S'.      CL**1
00076      05  PC-MAXIMUM-COMMAREA-LENGTH     PIC S9(04)   VALUE +4072     CL**1
00077                                                      COMP SYNC.      CL**1
00078      05  PC-CURRENT-MAP-NAME            PIC X(08)    VALUE           CL**1
00079      'MB116A  '.                                                     CL**1
00080      05  PC-CURRENT-MAPSET-NAME         PIC X(08)    VALUE           CL**1
00081      'MBKM116 '.                                                     CL**1
00082      05  PC-CURRENT-PROGRAM-NAME        PIC X(08)    VALUE           CL**1
00083      'MBKCS116'.                                                     CL**1
00084 *****************************************************************    CL**1
00085 *    PC-ITEMS-PER-PANEL = MAXIMUM NUMBER OF ITEMS ON THE SCREEN      CL**1
00086 *****************************************************************    CL**1
00087      05  PC-ITEMS-PER-PANEL             PIC S9(04)   VALUE +13       CL**1
00088                                                      COMP SYNC.      CL**1
00089 *****************************************************************    CL**1
00090 *    PC-ITEMS-PER-BLOCK = MAXIMUM NUMBER OF ITEMS IN A BLOCK         CL**1
00091 *****************************************************************    CL**1
00092      05  PC-ITEMS-PER-BLOCK             PIC S9(04)   VALUE +18       CL**1
00093                                                      COMP SYNC.      CL**1
00094 *****************************************************************    CL**1
00095 *    PC-MAX-ITEMS-TO-BE-READ = THE MAXIMUM NUMBER OF ITEMS TO        CL**1
00096 *    BE READ FROM THE DATABASE AT ONE TIME.  USED WHEN THE USER      CL**1
00097 *    CHANGES THE BEGINNING LIST NUMBER.                              CL**1
00098 *****************************************************************    CL**1
00099      05  PC-MAX-ITEMS-TO-BE-READ        PIC S9(04)   VALUE +100      CL**1
00100                                                      COMP SYNC.      CL**1
00101      05  PC-MAX-BLOCKS-IN-ARRAY         PIC S9(04)   VALUE +2        CL**1
00102                                                      COMP SYNC.      CL**1
00103 *****************************************************************    CL**1
00104 *    PC-MAX-ITEMS = MAXIMUM NUMBER OF ITEMS THAT CAN APPEAR ON       CL**1
00105 *    THE LIST.                                                       CL**1
00106 *****************************************************************    CL**1
00107      05  PC-MAX-ITEMS                   PIC S9(09)   VALUE           CL**1
00108                                                      +1000000        CL**1
00109                                                      COMP-3.         CL**1
00110 *****************************************************************    CL**1
00111 *    PC-BLOCK-LENGTH = THE LENGTH OF 1 BLOCK WORTH OF DATA.          CL**1
00112 *****************************************************************    CL**1
00113      05  PC-BLOCK-LENGTH                PIC S9(04)   VALUE +1243     CL**1
00114                                                      COMP SYNC.      CL**1
00115 *****************************************************************    CL**1
00116 *    PC-FIELD-LENGTH = THE LENGTH OF THE BEGINNING LIST NUMBER.      CL**1
00117 *****************************************************************    CL**1
00118      05  PC-FIELD-LENGTH                PIC S9(04)   VALUE +7        CL**1
00119                                                      COMP SYNC.      CL**1
00120      05  PC-ERASE-EOF-COMP              PIC S9(04)   VALUE +128      CL**1
00121                                                      COMP SYNC.      CL**1
00122      05  FILLER REDEFINES PC-ERASE-EOF-COMP.                         CL**1
00123          10  FILLER                     PIC X(01).                   CL**1
00124          10  PC-ERASE-EOF               PIC X(01).                   CL**1
00125                                                                      CL**1
00126      05  PC-MAX-QUEUE-ITEMS             PIC S9(03)   VALUE +100      CL**1
00127                                                      COMP-3.         CL**1
00128      05  PC-DB2-HISTORY-DATE            PIC X(10)    VALUE           CL**1
00129                                                      '1900-01-01'.   CL**1
00130      05  PC-NO-DISPLAY-DATE             PIC X(10)    VALUE           CL**1
00131                                                      '9999-09-09'.   CL**1
00132      05  PC-NO-END-OF-RANGE             PIC 9(02)    VALUE 51.       CL**1
00133      05  PC-END-BEFORE-START            PIC 9(02)    VALUE 52.       CL**1
00134      05  PC-NO-START-OF-RANGE           PIC 9(02)    VALUE 53.       CL**1
00135      05  PC-MULTIPLE-START-RANGES       PIC 9(02)    VALUE 54.       CL**1
00136      05  PC-MULTIPLE-END-RANGES         PIC 9(02)    VALUE 55.       CL**1
00137      05  PC-MAX-RETRYS                  PIC S9(04)   VALUE +3        CL**1
00138                                                      COMP SYNC.      CL**1
00139      05  PC-OPERCO-NBR                  PIC X(02)    VALUE '03'.     CL**1
00140      05  PC-GMA-LITERAL                 PIC X(03)    VALUE 'GMA'.    CL**1
00141      05  PC-DMA-LITERAL                 PIC X(03)    VALUE 'DMA'.    CL**1
00142      05  PC-DPT-LITERAL                 PIC X(03)    VALUE 'DPT'.    CL**1
00143      05  PC-MCL-LITERAL                 PIC X(03)    VALUE 'MCL'.    CL**1
00144      05  PC-SCL-LITERAL                 PIC X(03)    VALUE 'SCL'.    CL**1
00145      05  PC-DEL                         PIC X(03)    VALUE 'DEL'.    CL**1
00146      05  PC-INQ                         PIC X(03)    VALUE 'INQ'.    CL**1
00147      05  PC-UPD                         PIC X(03)    VALUE 'UPD'.    CL**1
00148      05  PC-TSYMSG-NUMBERS.                                          CL**1
00149          10  PC-TSYMSG-00005            PIC 9(05)    VALUE 00005.    CL**1
00150          10  PC-TSYMSG-00008            PIC 9(05)    VALUE 00008.    CL**1
00151          10  PC-TSYMSG-00045            PIC 9(05)    VALUE 00045.    CL**1
00152          10  PC-TSYMSG-00050            PIC 9(05)    VALUE 00050.    CL**1
00153          10  PC-TSYMSG-00051            PIC 9(05)    VALUE 00051.    CL**1
00154          10  PC-TSYMSG-00052            PIC 9(05)    VALUE 00052.    CL**1
00155          10  PC-TSYMSG-00053            PIC 9(05)    VALUE 00053.    CL**1
00156          10  PC-TSYMSG-00054            PIC 9(05)    VALUE 00054.    CL**1
00157          10  PC-TSYMSG-00055            PIC 9(05)    VALUE 00055.    CL**1
00158          10  PC-TSYMSG-00056            PIC 9(05)    VALUE 00056.    CL**1
00159          10  PC-TSYMSG-00057            PIC 9(05)    VALUE 00057.    CL**1
00160          10  PC-TSYMSG-00060            PIC 9(05)    VALUE 00060.    CL**1
00161          10  PC-TSYMSG-00069            PIC 9(05)    VALUE 00069.    CL**1
00162          10  PC-TSYMSG-00070            PIC 9(05)    VALUE 00070.    CL**1
00163          10  PC-TSYMSG-00146            PIC 9(05)    VALUE 00146.    CL**1
00164          10  PC-TSYMSG-00207            PIC 9(05)    VALUE 00207.    CL**1
00165          10  PC-TSYMSG-99901            PIC 9(05)    VALUE 99901.    CL**1
00166                                                                      CL**1
00167  01  PC-PROGRAM-COUNTERS.                                            CL**1
00168      05  PC-RETRY-CNTR                  PIC S9(04)   VALUE +0        CL**1
00169                                                      COMP SYNC.      CL**1
00170                                                                      CL**1
00171  01  PM-PROGRAM-MESSAGES.                                            CL**1
00172      05  INVALID-NEXT-ACT-MSG           PIC X(78)    VALUE           CL**1
00173      'UNRECOGNIZED ACTION ENCOUNTERED BY THIS PROGRAM'.              CL**1
00174                                                                      CL**1
00175  01  PS-PROGRAM-SUBSCRIPTS.                                          CL**1
00176      05  PS-SUB                         PIC S9(04)   VALUE +0        CL**1
00177                                                      COMP SYNC.      CL**1
00178      05  PS-ITEM-SUB                    PIC S9(09)   VALUE +0        CL**1
00179                                                      COMP-3.         CL**1
00180                                                                      CL**1
00181  01  PS-PROGRAM-SWITCHES.                                            CL**1
00182      05  PS-MAP-SEND-TYPE               PIC X(01)    VALUE '1'.      CL**1
00183          88  PS-SEND-MAP-N-DATA-FRSET                VALUE '1'.      CL**1
00184          88  PS-SEND-MAP-N-DATA-FRSET-CPOSN          VALUE '2'.      CL**1
00185          88  PS-SEND-DATA-ONLY-FRSET                 VALUE '3'.      CL**1
00186          88  PS-SEND-DATA-ONLY                       VALUE '4'.      CL**1
00187          88  PS-SEND-DATA-ONLY-ERASEAUP              VALUE '5'.      CL**1
00188          88  PS-SEND-MAP-ONLY-FRSET                  VALUE '6'.      CL**1
00189      05  PS-ERROR-SW                    PIC X(01)    VALUE 'N'.      CL**1
00190          88  PS-ERROR                                VALUE 'Y'.      CL**1
00191          88  PS-NO-ERROR                             VALUE 'N'.      CL**1
00192      05  PS-TOP-ITEM-IN-ARRAY-SW        PIC X(01)    VALUE 'N'.      CL**1
00193          88  PS-TOP-ITEM-IN-ARRAY                    VALUE 'Y'.      CL**1
00194          88  PS-TOP-ITEM-NOT-IN-ARRAY                VALUE 'N'.      CL**1
00195      05  PS-BOTTOM-ITEM-IN-ARRAY-SW     PIC X(01)    VALUE 'N'.      CL**1
00196          88  PS-BOTTOM-ITEM-IN-ARRAY                 VALUE 'Y'.      CL**1
00197          88  PS-BOTTOM-ITEM-NOT-IN-ARRAY             VALUE 'N'.      CL**1
00198      05  PS-TOP-ITEM-IN-TEMP-SW         PIC X(01)    VALUE 'N'.      CL**1
00199          88  PS-TOP-ITEM-IN-TEMP                     VALUE 'Y'.      CL**1
00200          88  PS-TOP-ITEM-NOT-IN-TEMP                 VALUE 'N'.      CL**1
00201      05  PS-BOTTOM-ITEM-IN-TEMP-SW      PIC X(01)    VALUE 'N'.      CL**1
00202          88  PS-BOTTOM-ITEM-IN-TEMP                  VALUE 'Y'.      CL**1
00203          88  PS-BOTTOM-ITEM-NOT-IN-TEMP              VALUE 'N'.      CL**1
00204      05  PS-LAST-BLOCK-IN-ARRAY-SW      PIC X(01)    VALUE 'N'.      CL**1
00205          88  PS-LAST-BLOCK-IN-ARRAY                  VALUE 'Y'.      CL**1
00206          88  PS-LAST-BLOCK-NOT-IN-ARRAY              VALUE 'N'.      CL**1
00207      05  PS-VALID-SELECTIONS-SW         PIC X(01)    VALUE 'N'.      CL**1
00208          88  PS-VALID-SELECTIONS                     VALUE 'Y'.      CL**1
00209          88  PS-INVALID-SELECTIONS                   VALUE 'N'.      CL**1
00210      05  PS-VALID-BEG-ITEM-SW           PIC X(01)    VALUE 'N'.      CL**1
00211          88  PS-VALID-BEG-ITEM                       VALUE 'Y'.      CL**1
00212          88  PS-INVALID-BEG-ITEM                     VALUE 'N'.      CL**1
00213      05  PS-DB2-RETRY-SW                PIC X(01)    VALUE 'N'.      CL**1
00214          88  PS-DB2-OK                               VALUE 'Y'.      CL**1
00215          88  PS-DB2-RETRY                            VALUE 'N'.      CL**1
00216      05  PS-CURSOR-POSITION-SW          PIC X(01)    VALUE 'N'.      CL**1
00217          88  PS-CURSOR-POSITIONED                    VALUE 'Y'.      CL**1
00218          88  PS-CURSOR-NOT-POSITIONED                VALUE 'N'.      CL**1
00219      05  PS-WARNING-SW                  PIC X(01)    VALUE 'N'.      CL**1
00220          88  PS-WARNING                              VALUE 'Y'.      CL**1
00221          88  PS-NO-WARNING                           VALUE 'N'.      CL**1
00222      05  PS-INFORMATIONAL-SW            PIC X(01)    VALUE 'N'.      CL**1
00223          88  PS-INFORMATIONAL                        VALUE 'Y'.      CL**1
00224          88  PS-NOT-INFORMATIONAL                    VALUE 'N'.      CL**1
00225      05  PS-SAME-ITEMS-DISPLAYED-SW     PIC X(01)    VALUE 'N'.      CL**1
00226          88  PS-SAME-ITEMS-DISPLAYED                 VALUE 'Y'.      CL**1
00227          88  PS-DIFFERENT-ITEMS-DISPLAYED            VALUE 'N'.      CL**1
00228      05  PS-SELECTION-FOUND-SW          PIC X(01)    VALUE 'N'.      CL**1
00229          88  PS-SELECTION-FOUND                      VALUE 'Y'.      CL**1
00230          88  PS-NO-SELECTION-FOUND                   VALUE 'N'.      CL**1
00231      05  PS-MERCH-CURSOR-OPENED-SW      PIC X(01)    VALUE 'N'.      CL**1
00232          88  PS-MERCH-CURSOR-NOT-OPENED              VALUE 'N'.      CL**1
00233          88  PS-MERCH-CURSOR-OPENED                  VALUE 'Y'.      CL**1
00234      05  PS-GMA-CURSOR-OPENED-SW        PIC X(01)    VALUE 'N'.      CL**1
00235          88  PS-GMA-CURSOR-NOT-OPENED                VALUE 'N'.      CL**1
00236          88  PS-GMA-CURSOR-OPENED                    VALUE 'Y'.      CL**1
00237      05  PS-DMA-CURSOR-OPENED-SW        PIC X(01)    VALUE 'N'.      CL**1
00238          88  PS-DMA-CURSOR-NOT-OPENED                VALUE 'N'.      CL**1
00239          88  PS-DMA-CURSOR-OPENED                    VALUE 'Y'.      CL**1
00240      05  PS-DPT-CURSOR-OPENED-SW        PIC X(01)    VALUE 'N'.      CL**1
00241          88  PS-DPT-CURSOR-NOT-OPENED                VALUE 'N'.      CL**1
00242          88  PS-DPT-CURSOR-OPENED                    VALUE 'Y'.      CL**1
00243      05  PS-MCL-CURSOR-OPENED-SW        PIC X(01)    VALUE 'N'.      CL**1
00244          88  PS-MCL-CURSOR-NOT-OPENED                VALUE 'N'.      CL**1
00245          88  PS-MCL-CURSOR-OPENED                    VALUE 'Y'.      CL**1
00246      05  PS-SCL-CURSOR-OPENED-SW        PIC X(01)    VALUE 'N'.      CL**1
00247          88  PS-SCL-CURSOR-NOT-OPENED                VALUE 'N'.      CL**1
00248          88  PS-SCL-CURSOR-OPENED                    VALUE 'Y'.      CL**1
00249      05  PS-DMA-ITEM-SW                 PIC X(01)    VALUE 'N'.      CL**1
00250          88  PS-DO-NOT-HAVE-GMA-ITEM                 VALUE 'N'.      CL**1
00251          88  PS-HAVE-GMA-ITEM                        VALUE 'Y'.      CL**1
00252          88  PS-DO-NOT-HAVE-DMA-ITEM                 VALUE 'N'.      CL**1
00253          88  PS-HAVE-DMA-ITEM                        VALUE 'Y'.      CL**1
00254      05  PS-DPT-ITEM-SW                 PIC X(01)    VALUE 'N'.      CL**1
00255          88  PS-DO-NOT-HAVE-DPT-ITEM                 VALUE 'N'.      CL**1
00256          88  PS-HAVE-DPT-ITEM                        VALUE 'Y'.      CL**1
00257      05  PS-MCL-ITEM-SW                 PIC X(01)    VALUE 'N'.      CL**1
00258          88  PS-DO-NOT-HAVE-MCL-ITEM                 VALUE 'N'.      CL**1
00259          88  PS-HAVE-MCL-ITEM                        VALUE 'Y'.      CL**1
00260      05  PS-SCL-ITEM-SW                 PIC X(01)    VALUE 'N'.      CL**1
00261          88  PS-DO-NOT-HAVE-SCL-ITEM                 VALUE 'N'.      CL**1
00262          88  PS-HAVE-SCL-ITEM                        VALUE 'Y'.      CL**1
00263      05  PS-APL-CODE-SW                 PIC X(01)    VALUE 'N'.      CL**1
00264          88  PS-NO-APPLICATION-FOUND                 VALUE 'N'.      CL**1
00265          88  PS-APPLICATION-FOUND                    VALUE 'Y'.      CL**1
00266      05  PS-SELECTION-SW                PIC X(01)    VALUE 'N'.      CL**1
00267          88  PS-NO-SELECTIONS-FOUND                  VALUE 'N'.      CL**1
00268          88  PS-SELECTIONS-FOUND                     VALUE 'Y'.      CL**1
00269      05  PS-DESELECT-SW                 PIC X(01)    VALUE 'N'.      CL**1
00270          88  PS-NOT-END                              VALUE 'N'.      CL**1
00271          88  PS-END-OF-ITEMS                         VALUE 'Y'.      CL**1
00272      05  PS-HISTORY-SW                  PIC X(01)    VALUE 'N'.      CL**1
00273          88  PS-NO-HISTORY                           VALUE 'N'.      CL**1
00274          88  PS-SELECTED-HISTORY                     VALUE 'Y'.      CL**1
00275      05  PS-PROCESS-SW                  PIC X(01)    VALUE 'N'.      CL**1
00276          88  PS-DONT-PROCESS                         VALUE 'N'.      CL**1
00277          88  PS-CONTINUE                             VALUE 'Y'.      CL**1
00278                                                                      CL**1
00279  01  PV-PROGRAM-VARIABLES.                                           CL**1
00280      05  PV-CICS-RESPONSE               PIC S9(04)   VALUE +0        CL**1
00281                                                      COMP SYNC.      CL**1
00282      05  PV-RESP                        PIC S9(04)   VALUE +0        CL**1
00283                                                      COMP SYNC.      CL**1
00284      05  PV-HIGHEST-ITEM-TO-BE-READ     PIC S9(09)   VALUE +0        CL**1
00285                                                      COMP-3.         CL**1
00286      05  PV-ENDING-ITEM-ON-PANEL        PIC S9(09)   VALUE +0        CL**1
00287                                                      COMP-3.         CL**1
00288      05  PV-ITEM-IN-USE                 PIC S9(09)   VALUE +0        CL**1
00289                                                      COMP-3.         CL**1
00290      05  PV-TOP-ITEM                    PIC S9(09)   VALUE +0        CL**1
00291                                                      COMP-3.         CL**1
00292      05  PV-BOTTOM-ITEM                 PIC S9(09)   VALUE +0        CL**1
00293                                                      COMP-3.         CL**1
00294      05  PV-MAX-ITEMS-TO-BE-READ        PIC S9(09)   VALUE +0        CL**1
00295                                                      COMP-3.         CL**1
00296      05  PV-FIRST-ITEM-IN-ARRAY         PIC S9(09)   VALUE +0        CL**1
00297                                                      COMP-3.         CL**1
00298      05  PV-LAST-ITEM-IN-ARRAY          PIC S9(09)   VALUE +0        CL**1
00299                                                      COMP-3.         CL**1
00300      05  PV-LAST-ITEM-IN-TEMP           PIC S9(09)   VALUE +0        CL**1
00301                                                      COMP-3.         CL**1
00302      05  PV-BEGINNING-ITEM              PIC S9(09)   VALUE +0        CL**1
00303                                                      COMP-3.         CL**1
00304      05  PV-TEMP-BLOCK-NUMBER           PIC S9(09)   VALUE +0        CL**1
00305                                                      COMP-3.         CL**1
00306      05  PV-ROW-COUNT                   PIC S9(05)   VALUE +0        CL**1
00307                                                      COMP-3.         CL**1
00308      05  PV-BLOCK-NUMBER                PIC S9(04)   VALUE +0        CL**1
00309                                                      COMP SYNC.      CL**1
00310      05  PV-SAVE-ITEM                   PIC S9(04)   VALUE +0        CL**1
00311                                                      COMP SYNC.      CL**1
00312      05  PV-MA-ITEM                     PIC S9(04)   VALUE +0        CL**1
00313                                                      COMP SYNC.      CL**1
00314      05  PV-ITEM                        PIC S9(04)   VALUE +0        CL**1
00315                                                      COMP SYNC.      CL**1
00316      05  PV-HIGHEST-BLOCK-WRITTEN       PIC S9(04)   VALUE +0        CL**1
00317                                                      COMP SYNC.      CL**1
00318      05  PV-LIST-ITEM-NUMBER            PIC S9(04)   VALUE +0        CL**1
00319                                                      COMP SYNC.      CL**1
00320      05  PV-FIRST-BLOCK-IN-ARRAY        PIC S9(04)   VALUE +0        CL**1
00321                                                      COMP SYNC.      CL**1
00322      05  PV-NEXT-BLOCK-IN-ARRAY         PIC S9(04)   VALUE +0        CL**1
00323                                                      COMP SYNC.      CL**1
00324      05  PV-PREV-BLOCK-IN-ARRAY         PIC S9(04)   VALUE +0        CL**1
00325                                                      COMP SYNC.      CL**1
00326      05  PV-FIRST-BLOCK-IN-RANGE        PIC S9(04)   VALUE +0        CL**1
00327                                                      COMP SYNC.      CL**1
00328      05  PV-LAST-BLOCK-IN-RANGE         PIC S9(04)   VALUE +0        CL**1
00329                                                      COMP SYNC.      CL**1
00330      05  PV-START-OF-SELECTED-RANGE     PIC S9(04)   VALUE +0        CL**1
00331                                                      COMP SYNC.      CL**1
00332      05  PV-END-OF-SELECTED-RANGE       PIC S9(04)   VALUE +0        CL**1
00333                                                      COMP SYNC.      CL**1
00334      05  PV-MESSAGE                     PIC X(78)    VALUE SPACES.   CL**1
00335      05  PV-DISPLAY-7                   PIC ZZZZZZ9.                 CL**1
00336      05  PV-DB2-DATE.                                                CL**1
00337          10  PV-DB2-CENTURY             PIC X(02)    VALUE SPACES.   CL**1
00338          10  PV-DB2-YEAR                PIC X(02)    VALUE SPACES.   CL**1
00339          10  PV-DB2-DASH-1              PIC X(01)    VALUE SPACES.   CL**1
00340          10  PV-DB2-MONTH               PIC X(02)    VALUE SPACES.   CL**1
00341          10  PV-DB2-DASH-2              PIC X(01)    VALUE SPACES.   CL**1
00342          10  PV-DB2-DAY                 PIC X(02)    VALUE SPACES.   CL**1
00343                                                                      CL**1
00344      05  PV-PANEL-DATE.                                              CL**1
00345          10  PV-PANEL-MONTH             PIC X(02)    VALUE SPACES.   CL**1
00346          10  PV-PANEL-SLASH-1           PIC X(01)    VALUE '/'.      CL**1
00347          10  PV-PANEL-DAY               PIC X(02)    VALUE SPACES.   CL**1
00348          10  PV-PANEL-SLASH-2           PIC X(01)    VALUE '/'.      CL**1
00349          10  PV-PANEL-YEAR              PIC X(02)    VALUE SPACES.   CL**1
00350                                                                      CL**1
00351      05  PV-MSG-NUMBER-X                PIC X(05)    VALUE SPACES.   CL**1
00352      05  PV-GMA-CODE                    PIC X(03)    VALUE SPACES.   CL**1
00353      05  PV-DMA-CODE                    PIC X(03)    VALUE SPACES.   CL**1
00354      05  PV-DPT-CODE                    PIC X(03)    VALUE SPACES.   CL**1
00355      05  PV-MCL-CODE                    PIC X(03)    VALUE SPACES.   CL**1
00356      05  PV-SCL-CODE                    PIC X(03)    VALUE SPACES.   CL**1
00357      05  PV-GMA-NBR                     PIC X(02)    VALUE SPACES.   CL**1
00358      05  PV-DMA-NBR                     PIC X(02)    VALUE SPACES.   CL**1
00359      05  PV-DPT-NBR                     PIC X(03)    VALUE SPACES.   CL**1
00360      05  PV-MCL-NBR                     PIC X(02)    VALUE SPACES.   CL**1
00361      05  PV-SCL-NBR                     PIC X(03)    VALUE SPACES.   CL**1
00362      05  PV-QUEUE-NAME.                                              CL**1
00363          10  PV-TERM-ID                 PIC X(4).                    CL**1
00364          10  PV-TASK-NUMBER             PIC S9(7)     COMP-3.        CL**1
00365      05  PV-WORK-SEQ-NBR                PIC S9(15).                  CL**1
00366      05  FILLER  REDEFINES  PV-WORK-SEQ-NBR.                         CL**1
00367          10  PV-WS-OPER-CO              PIC XX.                      CL**1
00368          10  PV-WS-GMA-NBR              PIC XX.                      CL**1
00369          10  PV-WS-DMA-NBR              PIC XX.                      CL**1
00370          10  PV-WS-DEPT-NBR             PIC X(3).                    CL**1
00371          10  PV-WS-MAJ-CL-NBR           PIC XX.                      CL**1
00372          10  PV-WS-SUB-CL-NBR           PIC X(3).                    CL**1
00373          10  PV-WS-ZERO                 PIC X.                       CL**1
00374 *                                                                    CL**1
00375  01  PV-TEMP-WORK-AREA.                                              CL**1
00376          10  PV-BLOCK-MODIFIED          PIC X.                       CL**1
00377          10  PV-TW-ITEM-ENTRIES          OCCURS  18 TIMES            CL**1
00378              INDEXED BY PV-TW-IDX.                                   CL**1
00379              15  PV-TW-LIST-ITEM-NUMBER PIC S9(9)     COMP-3.        CL**1
00380              15  PV-TW-SELECTED-SW      PIC X(01).                   CL**1
00381                  88  PV-TW-SELECT                    VALUE 'S'.      CL**1
00382                  88  PV-TW-DESELECT                  VALUE ' '.      CL**1
00383            12    PV-TW-KEY-DATA.                                     CL**1
00384              15  PV-TW-ITEM-GMA         PIC X(02).                   CL**1
00385              15  PV-TW-ITEM-DMA         PIC X(02).                   CL**1
00386              15  PV-TW-ITEM-DEPT        PIC X(03).                   CL**1
00387              15  PV-TW-ITEM-MCLASS      PIC X(02).                   CL**1
00388              15  PV-TW-ITEM-SCLASS      PIC X(03).                   CL**1
00389              15  PV-TW-ITEM-LEVEL       PIC X(03).                   CL**1
00390            12    PV-TW-KEY-DATA-END.                                 CL**1
00391              15  PV-TW-ITEM-DESC        PIC X(25).                   CL**1
00392              15  PV-TW-ITEM-APLSYS-CDE  PIC XX.                      CL**1
00393              15  PV-TW-ITEM-STR-DATE    PIC X(08).                   CL**1
00394              15  PV-TW-ITEM-END-DATE    PIC X(08).                   CL**1
00395              15  PV-TW-ITEM-ACTION      PIC X(03).                   CL**1
00396              15  PV-TW-COLOR            PIC X.                       CL**1
00397                                                                      CL**1
00398  EJECT                                                               CL**1
00399 *****************************************************************    CL**1
00400 *    STANDARD COMMAREA.                                              CL**1
00401 *****************************************************************    CL**1
00402                                                                      CL**1
00403      COPY DPWS020.                                                   CL**1
00404      05  FILLER REDEFINES DP020-VARIABLE-COMMAREA.                   CL**1
00405                                                                      CL**1
00406 *****************************************************************    CL**1
00407 *    INTER-APPLICATION COMMAREA.                                     CL**1
00408 *****************************************************************    CL**1
00409                                                                      CL**1
00410          10  INTER-APPL-COMM-AREA       PIC X(200).                  CL**1
00411      COPY MBWS005.                                                   CL**1
00412                                                                      CL**1
00413 *****************************************************************    CL**1
00414 *    SPECIFIC COMMMAREA FOR MBKCS116.                                CL**1
00415 *****************************************************************    CL**1
00416                                                                      CL**1
00417      COPY MBWS016.                                                   CL**1
00418                                                                      CL**1
00419                                                                      CL**1
00420 *****************************************************************    CL**1
00421 *    TS QUEUE SELECTED LIST RECORD.                                  CL**1
00422 *****************************************************************    CL**1
00423  01  SELECTED-LIST-RECORD.                                           CL**1
00424      COPY MBWS023.                                                   CL**1
00425                                                                      CL**1
00426                                                                      CL**1
00427 *****************************************************************    CL**1
00428 *    ABEND PROCESSING COPYBOOK.                                      CL**1
00429 *****************************************************************    CL**1
00430                                                                      CL**1
00431      COPY DPWS013.                                                   CL**1
00432                                                                      CL**1
00433 *****************************************************************    CL**1
00434 *    ATTRIBUTE SETTINGS COPYBOOK.                                    CL**1
00435 *****************************************************************    CL**1
00436                                                                      CL**1
00437      COPY DPWS015.                                                   CL**1
00438                                                                      CL**1
00439 *****************************************************************    CL**1
00440 *    CURRENT DATE AND TIME COPYBOOK.                                 CL**1
00441 *****************************************************************    CL**1
00442                                                                      CL**1
00443      COPY DPWS017.                                                   CL**1
00444                                                                      CL**1
00445 *****************************************************************    CL**1
00446 *    TOGGLE FUNCTION KEY LINES COPYBOOK.                             CL**1
00447 *****************************************************************    CL**1
00448                                                                      CL**1
00449      COPY DPWS009.                                                   CL**1
                                                                        MBKCS101
      *****************************************************************         
      *    SYSTEM MESSAGE FIELDS                                                
      *****************************************************************         
                                                                                
           COPY DPWS006.                                                        
                                                                                
00451 *****************************************************************    CL**1
00452 *    FUNCTION KEYS COPYBOOK.                                         CL**1
00453 *****************************************************************    CL**1
00454                                                                      CL**1
00455      COPY DPWS016.                                                   CL**1
00456                                                                      CL**1
00457 *****************************************************************    CL**1
00458 *    DPKUT045 COPYBOOK.                                              CL**1
00459 *                                                                    CL**1
00460 *    DATA AREA NECESSARY TO INTERACT WITH SUB-ROUTINE DPKUT045       CL**1
00461 *                                                                    CL**1
00462 *    DPKUT045 IS A UTILITY ROUTINE THAT CONVERTS THE EIBAID          CL**1
00463 *    CHARACTER RECEIVED FROM THE TERMINAL INTO A INTEGER VALUE       CL**1
00464 *    FROM 1 TO 29. THIS INTEGER VALUE IS STORED IN DP020-SRC-AID     CL**1
00465 *    AND IS USED TO INTERROGATE THE DP020-FUNCTION-KEY-ARRAY         CL**1
00466 *    TABLE IN THE STANDARD COMMAREA TO DETERMINE WHAT TO DO NEXT.    CL**1
00467 *    IN ADDITION DPKUT045 WILL PARSE THE SCREEN INPUT COMMAND        CL**1
00468 *    FIELD AND CONVERT RECOGNIZED SCREEN MANIPULATION COMMANDS       CL**1
00469 *    INTO THE DP020-SRC-AID EQUIVALENT.                              CL**1
00470 *****************************************************************    CL**1
00471                                                                      CL**1
00472      COPY DPWS045.                                                   CL**1
00473                                                                      CL**1
00474 *****************************************************************    CL**1
00475 *    NUMERIC EDIT LAYOUT.                                            CL**1
00476 *****************************************************************    CL**1
00477                                                                      CL**1
00478      COPY DPWS010I.                                                  CL**1
00479                                                                      CL**1
00480 *****************************************************************    CL**1
00481 *    SYSTEM MESSAGES RECORD LAYOUT                                   CL**1
00482 *****************************************************************    CL**1
00483                                                                      CL**1
00484      COPY DPRD507I.                                                  CL**1
00485                                                                      CL**1
00486 *****************************************************************    CL**1
00487 *    STANDARD ATTENTION IDENTIFIER LIST                              CL**1
00488 *****************************************************************    CL**1
00489                                                                      CL**1
00490      COPY DFHAID.                                                    CL**1
00491                                                                      CL**1
00492 *****************************************************************    CL**1
00493 *    MAP LAYOUT                                                      CL**1
00494 *****************************************************************    CL**1
00495                                                                      CL**1
00496      COPY MBKM116.                                                   CL**1
00497                                                                      CL**1
00498      COPY MBWS017.                                                   CL**1
00499                                                                      CL**1
00500  EJECT                                                               CL**1
00501 *****************************************************************    CL**1
00502 *    DB2 COMMUNICATION AREA                                          CL**1
00503 *****************************************************************    CL**1
00504                                                                      CL**1
00505      EXEC SQL                                                        CL**1
00506          INCLUDE SQLCA                                               CL**1
00507      END-EXEC.                                                       CL**1
00508                                                                      CL**1
00509 *****************************************************************    CL**1
00510 *    APPLICATION SYSTEM TABLE - TAPLSYS                              CL**1
00511 *****************************************************************    CL**1
00512                                                                      CL**1
00513      EXEC SQL                                                        CL**1
00514          INCLUDE TAPLSYS                                             CL**1
00515      END-EXEC.                                                       CL**1
00516                                                                      CL**1
00517 *****************************************************************    CL**1
00518 *    APPLICATION SYSTEM AVAILABILITY TABLE - TAPLAVL                 CL**1
00519 *****************************************************************    CL**1
00520                                                                      CL**1
00521      EXEC SQL                                                        CL**1
00522          INCLUDE TAPLAVL                                             CL**1
00523      END-EXEC.                                                       CL**1
00524                                                                      CL**1
00525 *****************************************************************    CL**1
00526 *    MERCHANDISE AREA TABLE - TMDSEAR                                CL**1
00527 *****************************************************************    CL**1
00528                                                                      CL**1
00529      EXEC SQL                                                        CL**1
00530          INCLUDE TMDSEAR                                             CL**1
00531      END-EXEC.                                                       CL**1
00532                                                                      CL**1
00533 *****************************************************************    CL**1
00534 *    DECLARE FOR THE MERCH-CURSOR                                    CL**1
00535 *       THIS CURSOR IS USED IF THE SELECTION CRITERION               CL**1
00536 *       IS FOR ALL GMAS, DMAS, DEPARTMENTS, MAJOR CLASSES,           CL**1
00537 *       AND SUB CLASSES                                              CL**1
00538 *****************************************************************    CL**1
00539                                                                      CL**1
00540      EXEC SQL                                                        CL**1
00541          DECLARE MERCH-CURSOR CURSOR FOR                             CL**1
00542              SELECT  A.OPERCO_NBR                                    CL**1
00543                    , A.GMA_NBR                                       CL**1
00544                    , A.DMA_NBR                                       CL**1
00545                    , A.DEPT_NBR                                      CL**1
00546                    , A.MAJ_CL_NBR                                    CL**1
00547                    , A.SUB_CL_NBR                                    CL**1
00548                    , A.MDSELV_CDE                                    CL**1
00549                    , A.MDSEAR_DESC                                   CL**1
00550                    , A.LIST_SEQ_NBR                                  CL**1
00551                    , B.APLSYS_CDE                                    CL**1
00552                    , B.MDSEAR_STRT_DTE                               CL**1
00553                    , B.MDSEAR_END_DTE                                CL**1
00554                FROM  TMDSEAR A                                       CL**1
00555                    , TAPLAVL B                                       CL**1
00556               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00557                 AND (MDSELV_CDE    = :MB016-SAVE-GMA  OR             CL**1
00558                      MDSELV_CDE    = :MB016-SAVE-DMA  OR             CL**1
00559                      MDSELV_CDE    = :MB016-SAVE-DPT  OR             CL**1
00560                      MDSELV_CDE    = :MB016-SAVE-MCL  OR             CL**1
00561                      MDSELV_CDE    = :MB016-SAVE-SCL)                CL**1
00562                 AND  LIST_SEQ_NBR  > :MB016-SAVE-SEQ-NBR             CL**1
00563                 AND  APLSYS_CDE    = :MB016-SAVE-APLS-CDE            CL**1
00564                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00565                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00566                                    > :MB016-DB2-END-DATE             CL**1
00567            ORDER BY  A.LIST_SEQ_NBR                                  CL**1
00568      END-EXEC.                                                       CL**1
00569                                                                      CL**1
00570 *****************************************************************    CL**1
00571 *    DECLARE FOR THE GMA-CURSOR                                      CL**1
00572 *       THIS CURSOR IS USED IF THE SELECTION CRITERION               CL**1
00573 *       IS FOR A SPECIFIC GMA, AND ALL LEVELS SELECTED WITHIN        CL**1
00574 *       THE REQUESTED GMA                                            CL**1
00575 *****************************************************************    CL**1
00576                                                                      CL**1
00577      EXEC SQL                                                        CL**1
00578          DECLARE GMA-CURSOR CURSOR FOR                               CL**1
00579              SELECT  A.OPERCO_NBR                                    CL**1
00580                    , A.GMA_NBR                                       CL**1
00581                    , A.DMA_NBR                                       CL**1
00582                    , A.DEPT_NBR                                      CL**1
00583                    , A.MAJ_CL_NBR                                    CL**1
00584                    , A.SUB_CL_NBR                                    CL**1
00585                    , A.MDSELV_CDE                                    CL**1
00586                    , A.MDSEAR_DESC                                   CL**1
00587                    , A.LIST_SEQ_NBR                                  CL**1
00588                    , B.APLSYS_CDE                                    CL**1
00589                    , B.MDSEAR_STRT_DTE                               CL**1
00590                    , B.MDSEAR_END_DTE                                CL**1
00591                FROM  TMDSEAR A                                       CL**1
00592                    , TAPLAVL B                                       CL**1
00593               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00594                 AND (MDSELV_CDE    = :MB016-SAVE-GMA  OR             CL**1
00595                      MDSELV_CDE    = :MB016-SAVE-DMA  OR             CL**1
00596                      MDSELV_CDE    = :MB016-SAVE-DPT  OR             CL**1
00597                      MDSELV_CDE    = :MB016-SAVE-MCL  OR             CL**1
00598                      MDSELV_CDE    = :MB016-SAVE-SCL)                CL**1
00599                 AND  LIST_SEQ_NBR  > :MB016-SAVE-SEQ-NBR             CL**1
00600                 AND  GMA_NBR       = :MB016-SAVE-GMA-NBR             CL**1
00601                 AND  APLSYS_CDE    = :MB016-SAVE-APLS-CDE            CL**1
00602                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00603                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00604                                    > :MB016-DB2-END-DATE             CL**1
00605            ORDER BY  A.LIST_SEQ_NBR                                  CL**1
00606      END-EXEC.                                                       CL**1
00607                                                                      CL**1
00608 *****************************************************************    CL**1
00609 *    DECLARE FOR THE DMA-CURSOR                                      CL**1
00610 *       THIS CURSOR IS USED IF THE SELECTION CRITERION               CL**1
00611 *       IS FOR A SPECIFIC DMA, AND ALL LEVELS,(DMA AND LOWER),       CL**1
00612 *       SELECTED WITHIN THE REQUESTED DMA                            CL**1
00613 *****************************************************************    CL**1
00614                                                                      CL**1
00615      EXEC SQL                                                        CL**1
00616          DECLARE DMA-CURSOR CURSOR FOR                               CL**1
00617              SELECT  A.OPERCO_NBR                                    CL**1
00618                    , A.GMA_NBR                                       CL**1
00619                    , A.DMA_NBR                                       CL**1
00620                    , A.DEPT_NBR                                      CL**1
00621                    , A.MAJ_CL_NBR                                    CL**1
00622                    , A.SUB_CL_NBR                                    CL**1
00623                    , A.MDSELV_CDE                                    CL**1
00624                    , A.MDSEAR_DESC                                   CL**1
00625                    , A.LIST_SEQ_NBR                                  CL**1
00626                    , B.APLSYS_CDE                                    CL**1
00627                    , B.MDSEAR_STRT_DTE                               CL**1
00628                    , B.MDSEAR_END_DTE                                CL**1
00629                FROM  TMDSEAR A                                       CL**1
00630                    , TAPLAVL B                                       CL**1
00631               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00632                 AND (MDSELV_CDE    = :MB016-SAVE-DMA  OR             CL**1
00633                      MDSELV_CDE    = :MB016-SAVE-DPT  OR             CL**1
00634                      MDSELV_CDE    = :MB016-SAVE-MCL  OR             CL**1
00635                      MDSELV_CDE    = :MB016-SAVE-SCL)                CL**1
00636                 AND  LIST_SEQ_NBR  > :MB016-SAVE-SEQ-NBR             CL**1
00637                 AND  DMA_NBR       = :MB016-SAVE-DMA-NBR             CL**1
00638                 AND  APLSYS_CDE    = :MB016-SAVE-APLS-CDE            CL**1
00639                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00640                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00641                                    > :MB016-DB2-END-DATE             CL**1
00642            ORDER BY  A.LIST_SEQ_NBR                                  CL**1
00643      END-EXEC.                                                       CL**1
00644                                                                      CL**1
00645 *****************************************************************    CL**1
00646 *    DECLARE FOR THE DPT-CURSOR                                      CL**1
00647 *       THIS CURSOR IS USED IF THE SELECTION CRITERION               CL**1
00648 *       IS FOR A SPECIFIC DPT, AND ALL LEVELS,(DPT AND LOWER),       CL**1
00649 *       SELECTED WITHIN THE REQUESTED DPT                            CL**1
00650 *****************************************************************    CL**1
00651                                                                      CL**1
00652      EXEC SQL                                                        CL**1
00653          DECLARE DPT-CURSOR CURSOR FOR                               CL**1
00654              SELECT  A.OPERCO_NBR                                    CL**1
00655                    , A.GMA_NBR                                       CL**1
00656                    , A.DMA_NBR                                       CL**1
00657                    , A.DEPT_NBR                                      CL**1
00658                    , A.MAJ_CL_NBR                                    CL**1
00659                    , A.SUB_CL_NBR                                    CL**1
00660                    , A.MDSELV_CDE                                    CL**1
00661                    , A.MDSEAR_DESC                                   CL**1
00662                    , A.LIST_SEQ_NBR                                  CL**1
00663                    , B.APLSYS_CDE                                    CL**1
00664                    , B.MDSEAR_STRT_DTE                               CL**1
00665                    , B.MDSEAR_END_DTE                                CL**1
00666                FROM  TMDSEAR A                                       CL**1
00667                    , TAPLAVL B                                       CL**1
00668               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00669                 AND (MDSELV_CDE    = :MB016-SAVE-DPT  OR             CL**1
00670                      MDSELV_CDE    = :MB016-SAVE-MCL  OR             CL**1
00671                      MDSELV_CDE    = :MB016-SAVE-SCL)                CL**1
00672                 AND  LIST_SEQ_NBR  > :MB016-SAVE-SEQ-NBR             CL**1
00673                 AND  DEPT_NBR      = :MB016-SAVE-DPT-NBR             CL**1
00674                 AND  APLSYS_CDE    = :MB016-SAVE-APLS-CDE            CL**1
00675                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00676                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00677                                    > :MB016-DB2-END-DATE             CL**1
00678            ORDER BY  A.LIST_SEQ_NBR                                  CL**1
00679      END-EXEC.                                                       CL**1
00680                                                                      CL**1
00681 *****************************************************************    CL**1
00682 *    DECLARE FOR THE MCL-CURSOR                                      CL**1
00683 *       THIS CURSOR IS USED IF THE SELECTION CRITERION               CL**1
00684 *       IS FOR A SPECIFIC MCL, WITHIN A DEPARTMENT AND ALL           CL**1
00685 *       LEVELS,(MCL AND LOWER), SELECTED WITHIN THE REQUESTED MCL    CL**1
00686 *****************************************************************    CL**1
00687                                                                      CL**1
00688      EXEC SQL                                                        CL**1
00689          DECLARE MCL-CURSOR CURSOR FOR                               CL**1
00690              SELECT  A.OPERCO_NBR                                    CL**1
00691                    , A.GMA_NBR                                       CL**1
00692                    , A.DMA_NBR                                       CL**1
00693                    , A.DEPT_NBR                                      CL**1
00694                    , A.MAJ_CL_NBR                                    CL**1
00695                    , A.SUB_CL_NBR                                    CL**1
00696                    , A.MDSELV_CDE                                    CL**1
00697                    , A.MDSEAR_DESC                                   CL**1
00698                    , A.LIST_SEQ_NBR                                  CL**1
00699                    , B.APLSYS_CDE                                    CL**1
00700                    , B.MDSEAR_STRT_DTE                               CL**1
00701                    , B.MDSEAR_END_DTE                                CL**1
00702                FROM  TMDSEAR A                                       CL**1
00703                    , TAPLAVL B                                       CL**1
00704               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00705                AND ((MAJ_CL_NBR    = :MB016-SAVE-MCL-NBR AND         CL**1
00706                     (MDSELV_CDE    = :MB016-SAVE-MCL  OR             CL**1
00707                      MDSELV_CDE    = :MB016-SAVE-SCL))               CL**1
00708                  OR (MDSELV_CDE    = :MB016-SAVE-DPT))               CL**1
00709                 AND  LIST_SEQ_NBR  > :MB016-SAVE-SEQ-NBR             CL**1
00710                 AND  DEPT_NBR      = :MB016-SAVE-DPT-NBR             CL**1
00711                 AND  APLSYS_CDE    = :MB016-SAVE-APLS-CDE            CL**1
00712                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00713                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00714                                    > :MB016-DB2-END-DATE             CL**1
00715            ORDER BY  A.LIST_SEQ_NBR                                  CL**1
00716      END-EXEC.                                                       CL**1
00717                                                                      CL**1
00718 *****************************************************************    CL**1
00719 *    DECLARE FOR THE SCL-CURSOR                                      CL**1
00720 *       THIS CURSOR IS USED IF THE SELECTION CRITERION               CL**1
00721 *       IS FOR A SPECIFIC SCL, WITHIN A DEPARTMENT AND MAJOR CLASS   CL**1
00722 *****************************************************************    CL**1
00723                                                                      CL**1
00724      EXEC SQL                                                        CL**1
00725          DECLARE SCL-CURSOR CURSOR FOR                               CL**1
00726              SELECT  A.OPERCO_NBR                                    CL**1
00727                    , A.GMA_NBR                                       CL**1
00728                    , A.DMA_NBR                                       CL**1
00729                    , A.DEPT_NBR                                      CL**1
00730                    , A.MAJ_CL_NBR                                    CL**1
00731                    , A.SUB_CL_NBR                                    CL**1
00732                    , A.MDSELV_CDE                                    CL**1
00733                    , A.MDSEAR_DESC                                   CL**1
00734                    , A.LIST_SEQ_NBR                                  CL**1
00735                    , B.APLSYS_CDE                                    CL**1
00736                    , B.MDSEAR_STRT_DTE                               CL**1
00737                    , B.MDSEAR_END_DTE                                CL**1
00738                FROM  TMDSEAR A                                       CL**1
00739                    , TAPLAVL B                                       CL**1
00740               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00741                 AND  MDSELV_CDE    = :MB016-SAVE-SCL                 CL**1
00742                 AND  LIST_SEQ_NBR  > :MB016-SAVE-SEQ-NBR             CL**1
00743                 AND  DEPT_NBR      = :MB016-SAVE-DPT-NBR             CL**1
00744                 AND  MAJ_CL_NBR    = :MB016-SAVE-MCL-NBR             CL**1
00745                 AND  SUB_CL_NBR    = :MB016-SAVE-SCL-NBR             CL**1
00746                 AND  APLSYS_CDE    = :MB016-SAVE-APLS-CDE            CL**1
00747                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00748                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00749                                    > :MB016-DB2-END-DATE             CL**1
00750            ORDER BY  A.LIST_SEQ_NBR                                  CL**1
00751      END-EXEC.                                                       CL**1
00752                                                                      CL**1
00753 *****************************************************************    CL**1
00754 *    DECLARE FOR THE ALL-APLAVL CURSOR                               CL**1
00755 *       THIS CURSOR IS USED IF THE SELECTION CRITERION INDICATES     CL**1
00756 *       THAT ALL APLAVL ROWS ASSOCIATED WITH A SPECIFIC KEY          CL**1
00757 *       SHOULD BE LISTED.                                            CL**1
00758 *****************************************************************    CL**1
00759 *                                                                    CL**1
00760      EXEC SQL                                                        CL**1
00761          DECLARE ALL-APLAVL CURSOR FOR                               CL**1
00762              SELECT  A.OPERCO_NBR                                    CL**1
00763                    , A.GMA_NBR                                       CL**1
00764                    , A.DMA_NBR                                       CL**1
00765                    , A.DEPT_NBR                                      CL**1
00766                    , A.MAJ_CL_NBR                                    CL**1
00767                    , A.SUB_CL_NBR                                    CL**1
00768                    , A.MDSELV_CDE                                    CL**1
00769                    , A.MDSEAR_DESC                                   CL**1
00770                    , A.LIST_SEQ_NBR                                  CL**1
00771                    , B.APLSYS_CDE                                    CL**1
00772                    , B.MDSEAR_STRT_DTE                               CL**1
00773                    , B.MDSEAR_END_DTE                                CL**1
00774                FROM  TMDSEAR A                                       CL**1
00775                    , TAPLAVL B                                       CL**1
00776               WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00777                 AND  LIST_SEQ_NBR  = :MB016-SAVE-SEQ-NBR             CL**1
00778                 AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00779                 AND  B.APLSYS_CDE  > :MB016-HOLD-APLSYS-CDE          CL**1
00780                 AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00781                                    > :MB016-DB2-END-DATE             CL**1
00782            ORDER BY  B.APLSYS_CDE                                    CL**1
00783      END-EXEC.                                                       CL**1
00784 *                                                                    CL**1
00785 *    EXEC SQL                                                        CL**1
00786 *        DECLARE ALL-APLAVL CURSOR FOR                               CL**1
00787 *            SELECT  A.OPERCO_NBR                                    CL**1
00788 *                  , A.GMA_NBR                                       CL**1
00789 *                  , A.DMA_NBR                                       CL**1
00790 *                  , A.DEPT_NBR                                      CL**1
00791 *                  , A.MAJ_CL_NBR                                    CL**1
00792 *                  , A.SUB_CL_NBR                                    CL**1
00793 *                  , A.MDSELV_CDE                                    CL**1
00794 *                  , A.MDSEAR_DESC                                   CL**1
00795 *                  , A.LIST_SEQ_NBR                                  CL**1
00796 *                  , B.APLSYS_CDE                                    CL**1
00797 *                  , B.MDSEAR_STRT_DTE                               CL**1
00798 *                  , B.MDSEAR_END_DTE                                CL**1
00799 *              FROM  TMDSEAR A                                       CL**1
00800 *                  , TAPLAVL B                                       CL**1
00801 *             WHERE  A.OPERCO_NBR  = :PC-OPERCO-NBR                  CL**1
00802 *               AND  GMA_NBR       = :MB016-SAVE-GMA-NBR             CL**1
00803 *               AND  DMA_NBR       = :MB016-SAVE-DMA-NBR             CL**1
00804 *               AND  DEPT_NBR      = :MB016-SAVE-DPT-NBR             CL**1
00805 *               AND  MAJ_CL_NBR    = :MB016-SAVE-MCL-NBR             CL**1
00806 *               AND  SUB_CL_NBR    = :MB016-SAVE-SCL-NBR             CL**1
00807 *               AND  A.MDSEAR_DKEY = B.MDSEAR_DKEY                   CL**1
00808 *               AND  B.APLSYS_CDE  > :MB016-HOLD-APLSYS-CDE          CL**1
00809 *               AND  CHAR(MDSEAR_END_DTE,ISO)                        CL**1
00810 *                                  > :MB016-DB2-END-DATE             CL**1
00811 *          ORDER BY  B.APLSYS_CDE                                    CL**1
00812 *    END-EXEC.                                                       CL**1
00813                                                                      CL**1
00814  LINKAGE SECTION.                                                    CL**1
00815                                                                      CL**1
00816  01  DFHCOMMAREA.                                                    CL**1
00817      05  FILLER                         OCCURS  1 TO 4072 TIMES      CL**1
00818                                         DEPENDING ON EIBCALEN.       CL**1
00819          10  FILLER                     PIC X.                       CL**1
00820                                                                      CL**1
00821 *                                                                    CL**1
00822 *                                                                    CL**1
00823 *                                                                    CL**1
00824  PROCEDURE DIVISION.                                                 CL**1
00825                                                                      CL**1
00826                                                                      CL**1
00827  A100-MAIN-MODULE.                                                   CL**1
00828                                                                      CL**1
00829 ******************************************************************   CL**1
00830 *    PROCESS THIS TRANSACTION IF THE COMMAREA IS VALID.              CL**1
00831 *                                                                    CL**1
00832 ******************************************************************   CL**1
00833                                                                      CL**1
00834      PERFORM DP015-0000-CHECK-COMMAREA.                              CL**1
00835                                                                      CL**1
00836 ******************************************************************   CL**1
00837 *    DP020-SRC-RETURN-W-TRAN-ID WILL BE TRUE IF THIS PROGRAM WAS     CL**1
00838 *    SENT A STANDARD COMMAREA. IF NOT SET TRUE (MEANING OTHER        CL**1
00839 *    THAN A STANDARD COMMAREA WAS SENT TO THIS PROGRAM, THIS         CL**1
00840 *    PROGRAM WILL RETURN TO CICS.                                    CL**1
00841 ******************************************************************   CL**1
00842                                                                      CL**1
00843      IF DP020-SRC-RETURN-W-TRAN-ID                                   CL**1
00844          PERFORM B100-CONTROL-PROCESSING                             CL**1
00845      END-IF.                                                         CL**1
00846                                                                      CL**1
00847      PERFORM DP003-0000-RETURN-TO-CICS.                              CL**1
00848  EJECT                                                               CL**1
00849  B100-CONTROL-PROCESSING.                                            CL**1
00850                                                                      CL**1
00851 ******************************************************************   CL**1
00852 *    PROCESS THE APPROPRIATE PARAGRAPHS BASED ON WHAT THE NEXT       CL**1
00853 *    COURSE OF ACTION IS FOR THIS TRANSACTION.                       CL**1
00854 *                                                                    CL**1
00855 *    PERFORMED BY A100-MAIN-MODULE                                   CL**1
00856 ******************************************************************   CL**1
00857                                                                      CL**1
00858      MOVE LENGTH OF MB016-BLOCK-ENTRIES (1) TO PC-BLOCK-LENGTH.      CL**1
00859      EVALUATE TRUE                                                   CL**1
00860                                                                      CL**1
00861          WHEN DP020-NEXT-ACT-INITIAL                                 CL**1
00862              SET PS-SEND-MAP-N-DATA-FRSET TO TRUE                    CL**1
00863              PERFORM C100-INITIALIZE-COMMAREA                        CL**1
00864              IF  PS-CONTINUE                                         CL**1
00865                  PERFORM C200-SAVE-INITIAL-INTERAPPL                 CL**1
00866                  PERFORM D100-SETUP-INIT-PANEL                       CL**1
00867 *                                                                    CL**1
00868                  IF  PS-NO-SELECTIONS-FOUND                          CL**1
00869                      MOVE DP016-PF3 TO DP020-SRC-AID                 CL**1
00870                      MOVE PC-TSYMSG-00050                            CL**1
00871                                TO DP020-MSG-NUMBER                   CL**1
00872                      SET DP020-MSG-FATAL TO TRUE                     CL**1
00873                      PERFORM DP015-1000-START-NAVIGATOR              CL**1
00874                  END-IF                                              CL**1
00875 *                                                                    CL**1
00876              ELSE                                                    CL**1
00877                  MOVE DP016-PF3 TO DP020-SRC-AID                     CL**1
00878                  MOVE PC-TSYMSG-99901                                CL**1
00879                                TO DP020-MSG-NUMBER                   CL**1
00880                  SET DP020-MSG-FATAL                                 CL**1
00881                                TO  TRUE                              CL**1
00882                  PERFORM DP015-1000-START-NAVIGATOR                  CL**1
00883              END-IF                                                  CL**1
00884                                                                      CL**1
00885          WHEN DP020-NEXT-ACT-READ-MAP                                CL**1
00886              PERFORM C300-PROCESS-PANEL                              CL**1
00887                                                                      CL**1
00888          WHEN DP020-NEXT-ACT-RETURN                                  CL**1
00889              SET PS-SEND-MAP-N-DATA-FRSET   TO TRUE                  CL**1
00890                                                                      CL**1
00891              PERFORM C400-UPDATE-INITIAL-INTERAPPL                   CL**1
00892              PERFORM C500-REFRESH-PANEL-FROM-TEMP                    CL**1
00893                                                                      CL**1
00894          WHEN DP020-NEXT-ACT-ERROR                                   CL**1
00895                                                                      CL**1
00896 ******************************************************************   CL**1
00897 *    THE FOLLOWING CODE HAS BEEN INSERTED IN ORDER TO PRESERVE       CL**1
00898 *    THE ERROR MESSAGE BEING RETURNED FROM THE NAVIGATOR. SINCE      CL**1
00899 *    THE ERROR BEING RETURNED WILL TYPICALLY BE A SECURITY           CL**1
00900 *    VIOLATION OR THE UNAVAILABILITY OF THE REQUESTED TRANSACTION    CL**1
00901 *    THIS CODE ALSO CHECKS TO SEE HOW  THE NAVIGATION REQUEST WAS    CL**1
00902 *    INVOKED. IF DP020-NAV-MNEMONIC FIELD IN THE STANDARD            CL**1
00903 *    COMMAREA IS SPACES, THE NAVIGATION REQUEST WAS VIA A FUNCTION   CL**1
00904 *    KEY. IF NOT, IT WAS VIA A COMMAND ENTERED IN THE COMMAND LINE   CL**1
00905 *    COMMAND FIELD AND THIS LOGIC SETS THE ATTRIBUTE FOR THIS FIEL   CL**1
00906 *    TO RED, REVERSE VIDEO.                                          CL**1
00907 ******************************************************************   CL**1
00908                                                                      CL**1
00909              MOVE DP020-MSG-MESSAGE         TO PV-MESSAGE            CL**1
00910                                                                      CL**1
00911              IF DP020-NAV-MNEMONIC = SPACES                          CL**1
00912                  MOVE SPACES                TO ANAVCMDO              CL**1
00913                  MOVE DP015-GREEN           TO ANAVCMDC              CL**1
00914                  MOVE DP015-UNDERLINE       TO ANAVCMDH              CL**1
00915              ELSE                                                    CL**1
00916                  MOVE DP015-RED             TO ANAVCMDC              CL**1
00917                  MOVE DP015-REVERSE         TO ANAVCMDH              CL**1
00918              END-IF                                                  CL**1
00919                                                                      CL**1
00920              PERFORM E100-EDIT-SELECTIONS                            CL**1
00921                                                                      CL**1
00922              MOVE -1                        TO ANAVCMDL              CL**1
00923              MOVE PV-MESSAGE                TO DP020-MSG-MESSAGE     CL**1
00924                                                                      CL**1
00925              SET DP020-MSG-FATAL            TO TRUE                  CL**1
00926              SET PS-SEND-DATA-ONLY-FRSET    TO TRUE                  CL**1
00927              SET PS-SAME-ITEMS-DISPLAYED    TO TRUE                  CL**1
00928              SET PS-CURSOR-POSITIONED       TO TRUE                  CL**1
00929                                                                      CL**1
00930              PERFORM G100-DISPLAY-PANEL                              CL**1
00931                                                                      CL**1
00932          WHEN OTHER                                                  CL**1
00933              SET DP013-LOGIC-ABEND          TO TRUE                  CL**1
00934              SET DP013-NO-ROLLBACK          TO TRUE                  CL**1
00935                                                                      CL**1
00936              MOVE 'B100-CONTROL-PROCESSING' TO                       CL**1
00937                   DP013-PARAGRAPH                                    CL**1
00938              MOVE INVALID-NEXT-ACT-MSG      TO                       CL**1
00939                   DP013-MESSAGE-TEXT(1)                              CL**1
00940                                                                      CL**1
00941              PERFORM DP013-0000-PROCESS-ABEND                        CL**1
00942                                                                      CL**1
00943      END-EVALUATE.                                                   CL**1
00944  EJECT                                                               CL**1
00945  C100-INITIALIZE-COMMAREA.                                           CL**1
00946                                                                      CL**1
00947 ******************************************************************   CL**1
00948 *    INITIALIZE THE APPLICATION SPECIFIC AND INTER-APPLICATION       CL**1
00949 *    PLACE WHATEVER INITIALIZATION LOGIC IS NECESSARY.               CL**1
00950 *                                                                    CL**1
00951 ******************************************************************   CL**1
00952                                                                      CL**1
00953      IF  DP020-MB-APPL-AVAIL-SELECT                                  CL**1
00954          INITIALIZE MB016-SPECIFIC-COMMAREA                          CL**1
00955          SET PS-CONTINUE       TO TRUE                               CL**1
00956      ELSE                                                            CL**1
00957          SET PS-DONT-PROCESS   TO TRUE                               CL**1
00958      END-IF.                                                         CL**1
00959                                                                      CL**1
00960  EJECT                                                               CL**1
00961  C200-SAVE-INITIAL-INTERAPPL.                                        CL**1
00962                                                                      CL**1
00963 ******************************************************************   CL**1
00964 *    SAVE THE INTER-APPLICATION COMMAREA ON THE FIRST CYCLE          CL**1
00965 *    OF THIS TRANSACTION.                                            CL**1
00966 *                                                                    CL**1
00967 *    THIS PARAGRAPH MUST BE CODED IF YOU PLAN ON USING ANY           CL**1
00968 *    DATA IN THE INTER APPLICATIONS DATA ARE OF THE COMMAREA.        CL**1
00969 *    A TWO HUNDRED BYTE AREA IN THE APPLICATIONS SPECIFIC            CL**1
00970 *    COMMAREA MUST BE CREATED TO HOLD THE INITIAL VALUE OF THE       CL**1
00971 *    TWO HUNDRED BYTE  INTER APPLICATION COMMAREA SENT TO THIS       CL**1
00972 *    TRANSACTION.                                                    CL**1
00973 *                                                                    CL**1
00974 *    IF THIS TRANSACTION WILL NOT USE THE INTER APPL COMMAREA        CL**1
00975 *    AT ALL, THIS PARAGRAPH SHOULD MOVE BE REMOVED AS WELL AS        CL**1
00976 *    ANY REFERENCE TO IT. YOU ALSO DO NOT NEED TO DEFINE A 200       CL**1
00977 *    BYTE AREA IN THE APPL SPECIFIC COMMAREA TO SAVE THE INITIAL     CL**1
00978 *    INTER-APPL-COMMAREA.                                            CL**1
00979 *                                                                    CL**1
00980 ******************************************************************   CL**1
00981                                                                      CL**1
00982      IF DP020-NAV-KEY-DATA GREATER THAN SPACES                       CL**1
00983          MOVE DP020-NAV-KEY-DATA   TO MB016-REQUEST-DATA             CL**1
00984          MOVE PC-OPERCO-NBR        TO MB016-CO-NUMBER                CL**1
00985          MOVE MB016-APLS-CODE      TO MB016-SAVE-APLS-CDE            CL**1
00986          MOVE SPACES               TO DP020-NAV-KEY-DATA             CL**1
00987      ELSE                                                            CL**1
00988          MOVE MB005-CO-NUMBER      TO MB016-CO-NUMBER                CL**1
00989          MOVE MB005-APPL-SYS-CODE  TO MB016-APLS-CODE                CL**1
00990                                       MB016-SAVE-APLS-CDE            CL**1
00991          MOVE MB005-GMA-NUMBER     TO MB016-GMA-NUMBER               CL**1
00992          MOVE MB005-DMA-NUMBER     TO MB016-DMA-NUMBER               CL**1
00993          MOVE MB005-DEPT-NUMBER    TO MB016-DEPT-NUMBER              CL**1
00994          MOVE MB005-MCLASS-NUMBER  TO MB016-MCLASS-NUMBER            CL**1
00995          MOVE MB005-SCLASS-NUMBER  TO MB016-SCLASS-NUMBER            CL**1
00996          IF  MB016-NO-APLS-CDE                                       CL**1
00997              MOVE MB016-CO-NUMBER  TO PV-WS-OPER-CO                  CL**1
00998              MOVE MB016-GMA-NUMBER TO PV-WS-GMA-NBR                  CL**1
00999                                       MB016-SAVE-GMA-NBR             CL**1
01000              MOVE MB016-DMA-NUMBER TO PV-WS-DMA-NBR                  CL**1
01001                                       MB016-SAVE-DMA-NBR             CL**1
01002              MOVE MB016-DEPT-NUMBER                                  CL**1
01003                                    TO PV-WS-DEPT-NBR                 CL**1
01004                                       MB016-SAVE-DPT-NBR             CL**1
01005              MOVE MB016-MCLASS-NUMBER                                CL**1
01006                                    TO PV-WS-MAJ-CL-NBR               CL**1
01007                                       MB016-SAVE-MCL-NBR             CL**1
01008              MOVE MB016-SCLASS-NUMBER                                CL**1
01009                                    TO PV-WS-SUB-CL-NBR               CL**1
01010                                       MB016-SAVE-SCL-NBR             CL**1
01011              MOVE ZERO             TO PV-WS-ZERO                     CL**1
01012          END-IF                                                      CL**1
01013      END-IF.                                                         CL**1
01014                                                                      CL**1
01015  EJECT                                                               CL**1
01016  C300-PROCESS-PANEL.                                                 CL**1
01017                                                                      CL**1
01018 ******************************************************************   CL**1
01019 *    RECEIVE THE MAP AND PERFORM THE APPROPRIATE PARAGRAPH BASED     CL**1
01020 *    ON WHAT FUNCTION KEY WAS SELECTED.                              CL**1
01021 *                                                                    CL**1
01022 ******************************************************************   CL**1
01023                                                                      CL**1
01024      PERFORM DP007-0000-GET-PANEL.                                   CL**1
01025                                                                      CL**1
01026      SET PS-SEND-DATA-ONLY-FRSET             TO TRUE.                CL**1
01027                                                                      CL**1
01028      EVALUATE TRUE                                                   CL**1
01029                                                                      CL**1
01030          WHEN DP020-SRC-AID = DP016-CLEAR                            CL**1
01031              SET PS-SEND-MAP-N-DATA-FRSET    TO TRUE                 CL**1
01032              SET PS-SAME-ITEMS-DISPLAYED     TO TRUE                 CL**1
01033                                                                      CL**1
01034              PERFORM E100-EDIT-SELECTIONS                            CL**1
01035              PERFORM G100-DISPLAY-PANEL                              CL**1
01036                                                                      CL**1
01037          WHEN DP020-SRC-AID = DP016-PF5                              CL**1
01038              SET PS-SEND-MAP-N-DATA-FRSET    TO TRUE                 CL**1
01039              PERFORM Z050-DELETE-TEMP-STORAGE                        CL**1
01040              MOVE MB016-SAVE-SEQ-NBR                                 CL**1
01041                                TO  PV-WORK-SEQ-NBR                   CL**1
01042              PERFORM D100-SETUP-INIT-PANEL                           CL**1
01043                                                                      CL**1
01044          WHEN DP020-SRC-AID = DP016-PA2                              CL**1
01045              PERFORM DP009-0000-LOAD-FK-LINES                        CL**1
01046              PERFORM DP017-0000-GET-CURR-DATE-TIME                   CL**1
01047                                                                      CL**1
01048              SET PS-SEND-DATA-ONLY           TO TRUE                 CL**1
01049                                                                      CL**1
01050              MOVE -1 TO ANAVCMDL                                     CL**1
01051                                                                      CL**1
01052              PERFORM DP008-0000-WRITE-PANEL                          CL**1
01053                                                                      CL**1
01054          WHEN OTHER                                                  CL**1
01055              SET PS-INVALID-SELECTIONS TO TRUE                       CL**1
01056              PERFORM D200-RECORD-SELECTIONS                          CL**1
01057                                                                      CL**1
01058              IF PS-VALID-SELECTIONS                                  CL**1
01059                  PERFORM D300-CHECK-FUNCTION-KEY                     CL**1
01060              ELSE                                                    CL**1
01061                  SET PS-SAME-ITEMS-DISPLAYED TO TRUE                 CL**1
01062                  PERFORM G100-DISPLAY-PANEL                          CL**1
01063              END-IF                                                  CL**1
01064                                                                      CL**1
01065      END-EVALUATE.                                                   CL**1
01066  EJECT                                                               CL**1
01067  C400-UPDATE-INITIAL-INTERAPPL.                                      CL**1
01068                                                                      CL**1
01069 ******************************************************************   CL**1
01070 *    WHENEVER THIS TRANSACTION HAS UPDATED VALUES THAT WERE PASSED   CL**1
01071 *    TO IT THRU THE INTER APPLICATION COMMAREA, THIS PARAGRAPH       CL**1
01072 *    IS INVOKED AND IT UPDATES THE FIELDS IN THE TWO HUNDRED BYTE    CL**1
01073 *    AREA IN THE APPLICATIONS SPECIFIC COMMAREA THAT WAS RESERVED    CL**1
01074 *    FOR THE INITIAL VALUE OF THE ORIGINAL TWO HUNDRED BYTES SENT    CL**1
01075 *    TO THIS TRANSACTION, THIS ALLOWS THE TRANSACTION THAT INVOKED   CL**1
01076 *    THIS TRANSACTION TO RECEIVE UPDATES THRU THE INTER APPL COMM    CL**1
01077 *    AREA WHEN THE USER PRESSES F3 - END ON THIS SCREEN. IN          CL**1
01078 *    ADDITION THIS PARAGRAPH WILL BE INVOKED WHEN THIS TRANSACTION   CL**1
01079 *    IS INVOKED VIA AN F3 - END AID KEY NAVIGATION. CODE MUST BE     CL**1
01080 *    INSERTED IN THIS PARAGRAPH TO HANDLE ANY UPDATES PASSED BACK    CL**1
01081 *    TO THIS TRANSACTION AS WELL. THIS LOGIC MAY BECOME QUITE OMPL   CL**1
01082 *    COMPLEX. FOR AN EXAMPLE OF HOW A SPECIFIC PROGRAM IS DOING      CL**1
01083 *    THIS LOGIC SEE DPKCS019.                                        CL**1
01084 *                                                                    CL**1
01085 *    THIS PARAGRAPH MUST BE CODED IF YOU PLAN ON USING ANY           CL**1
01086 *    DATA IN THE INTER APPLICATIONS DATA AREA OF THE COMMAREA.       CL**1
01087 *    A TWO HUNDRED BYTE AREA IN THE APPLICATIONS SPECIFIC            CL**1
01088 *    COMMAREA MUST BE CREATED TO HOLD THE INITIAL VALUE OF THE       CL**1
01089 *    TWO HUNDRED BYTE  INTER APPLICATION COMMAREA SENT TO THIS       CL**1
01090 *    TRANSACTION.                                                    CL**1
01091 *                                                                    CL**1
01092 *    IF THIS TRANSACTION WILL NOT USE THE INTER APPL COMMAREA        CL**1
01093 *    AT ALL, THIS PARAGRAPH SHOULD MOVE BE REMOVED AS WELL AS        CL**1
01094 *    ANY REFERENCE TO IT. YOU ALSO DO NOT NEED TO DEFINE A 200       CL**1
01095 *    BYTE AREA IN THE APPL SPECIFIC COMMAREA TO SAVE THE INITIAL     CL**1
01096 *    INTER-APPL-COMMAREA.                                            CL**1
01097 *                                                                    CL**1
01098 ******************************************************************   CL**1
01099                                                                      CL**1
01100                                                                      CL**1
01101  EJECT                                                               CL**1
01102  C500-REFRESH-PANEL-FROM-TEMP.                                       CL**1
01103                                                                      CL**1
01104 ******************************************************************   CL**1
01105 *    WHEN RETURNING TO THIS TRANSACTION FROM ANOTHER TRANSACTION,    CL**1
01106 *    SETUP THE ARRAY AS IT WAS WHEN WE HAD LEFT PREVIOUSLY.          CL**1
01107 *    EDIT THE SELECTIONS MADE AT THAT TIME AND DISPLAY THE PANEL     CL**1
01108 *    TO THE USER.                                                    CL**1
01109 *                                                                    CL**1
01110 ******************************************************************   CL**1
01111 *                                                                    CL**1
01112      IF  MB016-UPDATE-TSQ                                            CL**1
01113          MOVE ZERO             TO  PV-SAVE-ITEM                      CL**1
01114                                    PV-MA-ITEM                        CL**1
01115          SET PS-NOT-END        TO  TRUE                              CL**1
01116          PERFORM C600-UPDATE-TSQ                                     CL**1
01117                  UNTIL PS-END-OF-ITEMS                               CL**1
01118          PERFORM X900-DELETE-LIST-QUEUE                              CL**1
01119          MOVE SPACES           TO  MB005-LIST-QUEUE-NAME             CL**1
01120      END-IF.                                                         CL**1
01121 *                                                                    CL**1
01122      PERFORM D400-REFRESH-BLOCK-ARRAY.                               CL**1
01123      PERFORM E100-EDIT-SELECTIONS.                                   CL**1
01124      SET PS-DIFFERENT-ITEMS-DISPLAYED TO TRUE.                       CL**1
01125      PERFORM G100-DISPLAY-PANEL.                                     CL**1
01126 *                                                                    CL**1
01127  EJECT                                                               CL**1
01128 *                                                                    CL**1
01129 ******************************************************************   CL**1
01130 *    INCREMENT THE TSQ ITEM NUMBER AND READ THE LIST QUEUE.          CL**1
01131 *    LOOP THROUGH THE LIST QUEUE TO OBTAIN THE LINE ITEM NUMBER      CL**1
01132 *    TO BE USED TO UPDATE (DESELECT) THE CORRECT LINE ITEM IN        CL**1
01133 *    THE TEMP QUEUE.                                                 CL**1
01134 *                                                                    CL**1
01135 *    PERFORMED BY C400                                               CL**1
01136 ******************************************************************   CL**1
01137 *                                                                    CL**1
01138  C600-UPDATE-TSQ.                                                    CL**1
01139 *                                                                    CL**1
01140      ADD 1                     TO  PV-MA-ITEM.                       CL**1
01141      PERFORM X600-READ-LIST-QUEUE.                                   CL**1
01142      IF  PV-RESP EQUAL DFHRESP(NORMAL)                               CL**1
01143          SET MB023-IDX         TO  1                                 CL**1
01144          PERFORM C700-PROCESS-ITEMS                                  CL**1
01145              UNTIL MB023-KEY-DATA (MB023-IDX) EQUAL SPACES           CL**1
01146                OR  MB023-IDX GREATER THAN MB023-MAX-ITEMS            CL**1
01147          PERFORM X550-WRITE-TS-QUEUE                                 CL**1
01148      ELSE                                                            CL**1
01149          SET PS-END-OF-ITEMS   TO  TRUE                              CL**1
01150      END-IF.                                                         CL**1
01151 *                                                                    CL**1
01152  EJECT                                                               CL**1
01153 *                                                                    CL**1
01154 ******************************************************************   CL**1
01155 *    CALCULATE THE TEMP QUEUE ITEM THAT MUST BE READ AND READ IT.    CL**1
01156 *    REWRITE THE CURRENT TEMP QUEUE ITEM IF NECESSARY.  CALCULATE    CL**1
01157 *    THE LINE ITEM OCCURENCE AND UPDATE (DESELECT) IT.               CL**1
01158 *                                                                    CL**1
01159 *    PERFORMED BY C600                                               CL**1
01160 ******************************************************************   CL**1
01161 *                                                                    CL**1
01162  C700-PROCESS-ITEMS.                                                 CL**1
01163 *                                                                    CL**1
01164      COMPUTE PV-ITEM = 1 + ((MB023-ITEM (MB023-IDX) - 1)             CL**1
01165                      / PC-ITEMS-PER-BLOCK).                          CL**1
01166 *                                                                    CL**1
01167      IF  PV-ITEM NOT EQUAL PV-SAVE-ITEM                              CL**1
01168          IF  PV-SAVE-ITEM NOT EQUAL ZERO                             CL**1
01169              PERFORM X550-WRITE-TS-QUEUE                             CL**1
01170          END-IF                                                      CL**1
01171          MOVE PV-ITEM          TO  PV-SAVE-ITEM                      CL**1
01172 *                                                                    CL**1
01173          PERFORM X250-READ-TS-QUEUE                                  CL**1
01174          IF  PV-RESP NOT EQUAL DFHRESP(NORMAL)                       CL**1
01175              SET PS-END-OF-ITEMS TO  TRUE                            CL**1
01176          END-IF                                                      CL**1
01177      END-IF.                                                         CL**1
01178 *                                                                    CL**1
01179      IF  PS-NOT-END                                                  CL**1
01180          COMPUTE PS-SUB = (MB023-ITEM (MB023-IDX)                    CL**1
01181                         - PV-TW-LIST-ITEM-NUMBER (1)) + 1            CL**1
01182          SET PV-TW-DESELECT (PS-SUB)                                 CL**1
01183                                TO  TRUE                              CL**1
01184          SUBTRACT 1          FROM  MB005-NUMBER-PROCESSED-ITEMS      CL**1
01185                                    MB016-NUMBER-OF-ITEMS-SELECTED    CL**1
01186 *                                                                    CL**1
01187          IF  MB023-INQ (MB023-IDX)                                   CL**1
01188              MOVE PC-INQ       TO  PV-TW-ITEM-ACTION (PS-SUB)        CL**1
01189          END-IF                                                      CL**1
01190          IF  MB023-UPD (MB023-IDX)                                   CL**1
01191              MOVE PC-UPD       TO  PV-TW-ITEM-ACTION (PS-SUB)        CL**1
01192          END-IF                                                      CL**1
01193          IF  MB023-DEL (MB023-IDX)                                   CL**1
01194              MOVE PC-DEL       TO  PV-TW-ITEM-ACTION (PS-SUB)        CL**1
01195          END-IF                                                      CL**1
01196 *                                                                    CL**1
01197          IF  MB005-NUMBER-PROCESSED-ITEMS EQUAL ZERO                 CL**1
01198              SET PS-END-OF-ITEMS TO TRUE                             CL**1
01199              SET MB023-IDX     TO  MB023-MAX-ITEMS                   CL**1
01200          END-IF                                                      CL**1
01201          SET MB023-IDX      UP BY  1                                 CL**1
01202      END-IF.                                                         CL**1
01203 *                                                                    CL**1
01204  EJECT                                                               CL**1
01205  D100-SETUP-INIT-PANEL.                                              CL**1
01206                                                                      CL**1
01207 ******************************************************************   CL**1
01208 *    INITIALIZE BOTH BLOCKS IN THE ARRAY.                            CL**1
01209 *    INITIALIZE ALL COUNTERS AND FLAGS.                              CL**1
01210 *    READ THE DATA BASE FOR THE 1ST TIME AND FILL UP THE ARRAY.      CL**1
01211 *    DISPLAY THE PANEL TO USER.                                      CL**1
01212 *                                                                    CL**1
01213 *    MB016 - MEMBER NAME USED FOR SPECIFIC COMMAREA.                 CL**1
01214 *                                                                    CL**1
01215 ******************************************************************   CL**1
01216                                                                      CL**1
01217      MOVE +1                  TO MB016-BLOCK-SUB.                    CL**1
01218                                                                      CL**1
01219      PERFORM I100-INITIALIZE-BLOCK.                                  CL**1
01220                                                                      CL**1
01221      ADD +1                   TO MB016-BLOCK-SUB.                    CL**1
01222                                                                      CL**1
01223      PERFORM I100-INITIALIZE-BLOCK.                                  CL**1
01224                                                                      CL**1
01225      MOVE +1                  TO MB016-BLOCK-SUB.                    CL**1
01226      MOVE +0                  TO MB016-ITEM-SUB.                     CL**1
01227      MOVE +0                  TO MB016-NUMBER-OF-ITEMS-READ.         CL**1
01228      MOVE +0                  TO MB016-NUMBER-OF-ITEMS-SELECTED.     CL**1
01229      MOVE SPACES              TO MB016-TEMP-QUEUE-NAME.              CL**1
01230      MOVE +0                  TO MB016-HIGHEST-BLOCK-WRITTEN.        CL**1
01231      MOVE +0                  TO MB016-START-OF-SELECTED-RANGE.      CL**1
01232      MOVE +0                  TO MB016-END-OF-SELECTED-RANGE.        CL**1
01233      MOVE +0                  TO MB016-SAVE-SEQ-NBR.                 CL**1
01234      MOVE PC-ITEMS-PER-PANEL  TO PV-HIGHEST-ITEM-TO-BE-READ.         CL**1
01235                                                                      CL**1
01236      SET MB016-NO-CURSOR-OPEN TO TRUE                                CL**1
01237                                                                      CL**1
01238      IF  MB016-NO-APLS-CDE                                           CL**1
01239          MOVE PV-WORK-SEQ-NBR TO MB016-SAVE-SEQ-NBR                  CL**1
01240          MOVE SPACES          TO MB016-HOLD-APLSYS-CDE               CL**1
01241          SET MB016-OPEN-ALL-APLAVL                                   CL**1
01242                               TO  TRUE                               CL**1
01243      ELSE                                                            CL**1
01244          PERFORM D150-DETERMINE-WHICH-CURSOR                         CL**1
01245      END-IF.                                                         CL**1
01246 *                                                                    CL**1
01247      PERFORM DP017-0000-GET-CURR-DATE-TIME.                          CL**1
01248      MOVE DP017-EDITED-DATE-YYYYMMDD TO MB016-SAVE-CUR-DATE.         CL**1
01249      IF  MB005-INCLUDE-HISTORY                                       CL**1
01250          MOVE PC-DB2-HISTORY-DATE TO MB016-DB2-END-DATE              CL**1
01251      ELSE                                                            CL**1
01252          MOVE MB016-SAVE-CUR-DATE TO MB016-DB2-END-DATE              CL**1
01253      END-IF.                                                         CL**1
01254                                                                      CL**1
01255      PERFORM D500-OPEN-CURSOR.                                       CL**1
01256                                                                      CL**1
01257      SET MB016-ITEMS-LEFT-ON-DB TO TRUE.                             CL**1
01258                                                                      CL**1
01259      PERFORM H100-READ-ITEMS-FROM-DB.                                CL**1
01260                                                                      CL**1
01261      MOVE +1 TO MB016-ITEM-AT-TOP-OF-PANEL.                          CL**1
01262                                                                      CL**1
01263      SET PS-DIFFERENT-ITEMS-DISPLAYED TO TRUE.                       CL**1
01264                                                                      CL**1
01265      IF PS-NO-SELECTIONS-FOUND                                       CL**1
01266          CONTINUE                                                    CL**1
01267      ELSE                                                            CL**1
01268          PERFORM G100-DISPLAY-PANEL                                  CL**1
01269      END-IF.                                                         CL**1
01270  EJECT                                                               CL**1
01271 ******************************************************************   CL**1
01272 *                                                                    CL**1
01273 *    DETERMINE WHICH CURSOR SHOULD BE SELECTED FOR PROCESSING.       CL**1
01274 *                                                                    CL**1
01275 * PERFORMED BY D100                                                  CL**1
01276 ******************************************************************   CL**1
01277 *                                                                    CL**1
01278  D150-DETERMINE-WHICH-CURSOR.                                        CL**1
01279 *                                                                    CL**1
01280      IF MB016-ALL-SCLASSES                                           CL**1
01281         MOVE PC-SCL-LITERAL   TO MB016-SAVE-SCL                      CL**1
01282      ELSE                                                            CL**1
01283          IF (MB016-SCLASS-NUMBER = SPACES) OR                        CL**1
01284             (MB016-SCLASS-NUMBER = LOW-VALUES)                       CL**1
01285              MOVE SPACES      TO MB016-SAVE-SCL                      CL**1
01286              MOVE SPACES      TO MB016-SAVE-SCL-NBR                  CL**1
01287          ELSE                                                        CL**1
01288              MOVE PC-SCL-LITERAL       TO MB016-SAVE-SCL             CL**1
01289              MOVE MB016-SCLASS-NUMBER  TO MB016-SAVE-SCL-NBR         CL**1
01290              SET MB016-OPEN-SCL-CURSOR TO TRUE                       CL**1
01291          END-IF                                                      CL**1
01292      END-IF.                                                         CL**1
01293                                                                      CL**1
01294      IF MB016-ALL-MCLASSES                                           CL**1
01295          MOVE PC-MCL-LITERAL  TO MB016-SAVE-MCL                      CL**1
01296      ELSE                                                            CL**1
01297          IF (MB016-MCLASS-NUMBER = SPACES) OR                        CL**1
01298             (MB016-MCLASS-NUMBER = LOW-VALUES)                       CL**1
01299              MOVE SPACES      TO MB016-SAVE-MCL                      CL**1
01300              MOVE SPACES      TO MB016-SAVE-MCL-NBR                  CL**1
01301          ELSE                                                        CL**1
01302              MOVE PC-MCL-LITERAL      TO MB016-SAVE-MCL              CL**1
01303              MOVE MB016-MCLASS-NUMBER TO MB016-SAVE-MCL-NBR          CL**1
01304              IF MB016-NO-CURSOR-OPEN                                 CL**1
01305                  SET MB016-OPEN-MCL-CURSOR TO TRUE                   CL**1
01306              END-IF                                                  CL**1
01307          END-IF                                                      CL**1
01308      END-IF.                                                         CL**1
01309                                                                      CL**1
01310      IF MB016-ALL-DEPARTMENTS                                        CL**1
01311          MOVE PC-DPT-LITERAL    TO MB016-SAVE-DPT                    CL**1
01312      ELSE                                                            CL**1
01313          IF (MB016-DEPT-NUMBER = SPACES) OR                          CL**1
01314             (MB016-DEPT-NUMBER = LOW-VALUES)                         CL**1
01315              MOVE SPACES        TO MB016-SAVE-DPT                    CL**1
01316              MOVE SPACES        TO MB016-SAVE-DPT-NBR                CL**1
01317          ELSE                                                        CL**1
01318              MOVE PC-DPT-LITERAL    TO MB016-SAVE-DPT                CL**1
01319              MOVE MB016-DEPT-NUMBER TO MB016-SAVE-DPT-NBR            CL**1
01320              IF MB016-NO-CURSOR-OPEN                                 CL**1
01321                  SET MB016-OPEN-DPT-CURSOR TO TRUE                   CL**1
01322              END-IF                                                  CL**1
01323          END-IF                                                      CL**1
01324      END-IF.                                                         CL**1
01325                                                                      CL**1
01326      IF MB016-ALL-DMAS                                               CL**1
01327          MOVE PC-DMA-LITERAL         TO MB016-SAVE-DMA               CL**1
01328      ELSE                                                            CL**1
01329          IF (MB016-DMA-NUMBER = SPACES) OR                           CL**1
01330             (MB016-DMA-NUMBER = LOW-VALUES)                          CL**1
01331              MOVE SPACES               TO MB016-SAVE-DMA             CL**1
01332              MOVE SPACES               TO MB016-SAVE-DMA-NBR         CL**1
01333          ELSE                                                        CL**1
01334              MOVE PC-DMA-LITERAL       TO MB016-SAVE-DMA             CL**1
01335              MOVE MB016-DMA-NUMBER     TO MB016-SAVE-DMA-NBR         CL**1
01336              IF MB016-NO-CURSOR-OPEN                                 CL**1
01337                  SET MB016-OPEN-DMA-CURSOR TO TRUE                   CL**1
01338              END-IF                                                  CL**1
01339          END-IF                                                      CL**1
01340      END-IF.                                                         CL**1
01341                                                                      CL**1
01342      IF MB016-ALL-GMAS                                               CL**1
01343         MOVE PC-GMA-LITERAL         TO MB016-SAVE-GMA                CL**1
01344      ELSE                                                            CL**1
01345         MOVE PC-GMA-LITERAL         TO MB016-SAVE-GMA                CL**1
01346         MOVE MB016-GMA-NUMBER       TO MB016-SAVE-GMA-NBR            CL**1
01347         IF MB016-NO-CURSOR-OPEN                                      CL**1
01348             SET MB016-OPEN-GMA-CURSOR TO TRUE                        CL**1
01349         END-IF                                                       CL**1
01350      END-IF.                                                         CL**1
01351                                                                      CL**1
01352      IF (MB016-ALL-GMAS        AND                                   CL**1
01353          MB016-ALL-DMAS        AND                                   CL**1
01354          MB016-ALL-DEPARTMENTS AND                                   CL**1
01355          MB016-ALL-MCLASSES    AND                                   CL**1
01356          MB016-ALL-SCLASSES)                                         CL**1
01357          SET MB016-OPEN-MERCH-CURSOR TO TRUE                         CL**1
01358      END-IF.                                                         CL**1
01359                                                                      CL**1
01360      IF (MB016-ALL-GMAS               AND                            CL**1
01361          MB016-SAVE-DMA-NBR = SPACES  AND                            CL**1
01362          MB016-SAVE-DPT-NBR = SPACES  AND                            CL**1
01363          MB016-SAVE-MCL-NBR = SPACES  AND                            CL**1
01364          MB016-SAVE-SCL-NBR = SPACES)                                CL**1
01365          SET MB016-OPEN-MERCH-CURSOR TO TRUE                         CL**1
01366      END-IF.                                                         CL**1
01367                                                                      CL**1
01368      IF (MB016-ALL-GMAS               AND                            CL**1
01369          MB016-ALL-DMAS               AND                            CL**1
01370          MB016-SAVE-DPT-NBR = SPACES  AND                            CL**1
01371          MB016-SAVE-MCL-NBR = SPACES  AND                            CL**1
01372          MB016-SAVE-SCL-NBR = SPACES)                                CL**1
01373          SET MB016-OPEN-MERCH-CURSOR TO TRUE                         CL**1
01374      END-IF.                                                         CL**1
01375                                                                      CL**1
01376      IF (MB016-ALL-GMAS        AND                                   CL**1
01377          MB016-ALL-DMAS        AND                                   CL**1
01378          MB016-ALL-DEPARTMENTS AND                                   CL**1
01379          MB016-SAVE-MCL-NBR  = SPACES AND                            CL**1
01380          MB016-SAVE-SCL-NBR  = SPACES)                               CL**1
01381          SET MB016-OPEN-MERCH-CURSOR TO TRUE                         CL**1
01382      END-IF.                                                         CL**1
01383                                                                      CL**1
01384      IF (MB016-ALL-GMAS        AND                                   CL**1
01385          MB016-ALL-DMAS        AND                                   CL**1
01386          MB016-ALL-DEPARTMENTS AND                                   CL**1
01387          MB016-ALL-MCLASSES    AND                                   CL**1
01388          MB016-SAVE-SCL-NBR  = SPACES)                               CL**1
01389          SET MB016-OPEN-MERCH-CURSOR TO TRUE                         CL**1
01390      END-IF.                                                         CL**1
01391      EJECT                                                           CL**1
01392  D200-RECORD-SELECTIONS.                                             CL**1
01393                                                                      CL**1
01394 ******************************************************************   CL**1
01395 *    IF THE USER HIT THE DESELECT KEY, OR A KEY WHICH INVOLVES       CL**1
01396 *    LEAVING THIS TRANSACTION AND GOING TO ANOTHER, SET A FLAG       CL**1
01397 *    INDICATING THAT ALL SELECTIONS ARE VALID.  IF ANY OTHER KEY     CL**1
01398 *    IS HIT, MOVE THE SELECTIONS MADE TO THE COMMAREA, AND EDIT      CL**1
01399 *    THOSE SELECTIONS.                                               CL**1
01400 *                                                                    CL**1
01401 *    IF THE USER ENTERED SOMETHING IN THE COMMAND LINE OR HIT        CL**1
01402 *    AN INVALID FUNCTION KEY, DO NOT EDIT THE SELECTIONS.            CL**1
01403 *                                                                    CL**1
01404 *    PERFORMED BY C300-PROCESS-PANEL.                                CL**1
01405 ******************************************************************   CL**1
01406                                                                      CL**1
01407      IF (DP020-FK-DESELECT(DP020-SRC-AID))   OR                      CL**1
01408         (DP020-FK-SELECT-ALL(DP020-SRC-AID)) OR                      CL**1
01409         (DP020-FK-RETURN(DP020-SRC-AID))     OR                      CL**1
01410         (DP020-FK-GO-TO-TRAN(DP020-SRC-AID))                         CL**1
01411          SET PS-VALID-SELECTIONS TO TRUE                             CL**1
01412      ELSE                                                            CL**1
01413          PERFORM E200-MOVE-SELECTS-TO-COMMAREA                       CL**1
01414                                                                      CL**1
01415          IF (DP020-SRC-AID          = DP016-ENTER) AND               CL**1
01416             (DP020-NAV-MNEMONIC NOT = SPACES)      AND               CL**1
01417             (DP020-NAV-MNEMONIC NOT = LOW-VALUES)                    CL**1
01418              SET PS-VALID-SELECTIONS TO TRUE                         CL**1
01419          ELSE                                                        CL**1
01420                                                                      CL**1
01421              IF (DP020-FK-FIRST-PAGE(DP020-SRC-AID)) OR              CL**1
01422                 (DP020-FK-PREV-PAGE(DP020-SRC-AID))  OR              CL**1
01423                 (DP020-FK-NEXT-PAGE(DP020-SRC-AID))  OR              CL**1
01424                 (DP020-FK-EDIT-GOTO(DP020-SRC-AID))  OR              CL**1
01425                 (DP020-SRC-AID = DP016-ENTER)                        CL**1
01426                  PERFORM E100-EDIT-SELECTIONS                        CL**1
01427              ELSE                                                    CL**1
01428                  SET PS-VALID-SELECTIONS TO TRUE                     CL**1
01429              END-IF                                                  CL**1
01430                                                                      CL**1
01431          END-IF                                                      CL**1
01432                                                                      CL**1
01433      END-IF.                                                         CL**1
01434  EJECT                                                               CL**1
01435  D300-CHECK-FUNCTION-KEY.                                            CL**1
01436                                                                      CL**1
01437 ******************************************************************   CL**1
01438 *    PERFORM THE APPROPRIATE PARAGRAPH BASED ON WHICH FUNCTION       CL**1
01439 *    KEY HAD BEEN SELECTED BY THE USER.                              CL**1
01440 *                                                                    CL**1
01441 *    PERFORMED BY C300-PROCESS-PANEL.                                CL**1
01442 ******************************************************************   CL**1
01443                                                                      CL**1
01444      EVALUATE TRUE                                                   CL**1
01445                                                                      CL**1
01446          WHEN DP020-FK-GO-TO-TRAN(DP020-SRC-AID)                     CL**1
01447              SET MB016-NO-UPDATE-TSQ TO TRUE                         CL**1
01448              PERFORM E300-NAVIGATE                                   CL**1
01449                                                                      CL**1
01450          WHEN DP020-FK-EDIT-GOTO(DP020-SRC-AID)                      CL**1
01451              IF  MB016-NUMBER-OF-ITEMS-SELECTED > ZERO               CL**1
01452                  SET MB016-UPDATE-TSQ TO TRUE                        CL**1
01453                  PERFORM X100-PREPARE-LIST-QUEUE                     CL**1
01454                  IF (PS-SELECTED-HISTORY                             CL**1
01455                  AND DP020-SRC-AID EQUAL DP016-PF15)                 CL**1
01456                      MOVE PC-TSYMSG-00146 TO DP020-MSG-NUMBER        CL**1
01457                      SET DP020-MSG-FATAL  TO TRUE                    CL**1
01458                      PERFORM G100-DISPLAY-PANEL                      CL**1
01459                  ELSE                                                CL**1
01460                      SET MB016-UPDATE-TSQ TO TRUE                    CL**1
01461                      PERFORM E300-NAVIGATE                           CL**1
01462                  END-IF                                              CL**1
01463              ELSE                                                    CL**1
01464                  MOVE PC-TSYMSG-00057 TO DP020-MSG-NUMBER            CL**1
01465                  SET DP020-MSG-WARNING TO TRUE                       CL**1
01466                  PERFORM G100-DISPLAY-PANEL                          CL**1
01467              END-IF                                                  CL**1
01468                                                                      CL**1
01469          WHEN DP020-FK-RETURN(DP020-SRC-AID)                         CL**1
01470              PERFORM X900-DELETE-LIST-QUEUE                          CL**1
01471              PERFORM E300-NAVIGATE                                   CL**1
01472                                                                      CL**1
01473          WHEN DP020-FK-FIRST-PAGE(DP020-SRC-AID)                     CL**1
01474              PERFORM E400-DISPLAY-TOP-OF-LIST                        CL**1
01475                                                                      CL**1
01476          WHEN DP020-FK-PREV-PAGE(DP020-SRC-AID)                      CL**1
01477              PERFORM E500-BROWSE-BACKWARD                            CL**1
01478                                                                      CL**1
01479          WHEN DP020-FK-NEXT-PAGE(DP020-SRC-AID)                      CL**1
01480              PERFORM E600-BROWSE-FORWARD                             CL**1
01481                                                                      CL**1
01482          WHEN (DP020-FK-DESELECT(DP020-SRC-AID))   OR                CL**1
01483               (DP020-FK-SELECT-ALL(DP020-SRC-AID))                   CL**1
01484              PERFORM E700-DESELECT-ALL-ITEMS                         CL**1
01485                                                                      CL**1
01486          WHEN DP020-SRC-AID = DP016-ENTER                            CL**1
01487                                                                      CL**1
01488              IF (DP020-NAV-MNEMONIC = LOW-VALUES) OR                 CL**1
01489                 (DP020-NAV-MNEMONIC = SPACES)                        CL**1
01490                  PERFORM E800-CHECK-FOR-JUMP-BROWSE                  CL**1
01491              ELSE                                                    CL**1
01492                  SET MB016-NO-UPDATE-TSQ TO TRUE                     CL**1
01493                  PERFORM E300-NAVIGATE                               CL**1
01494              END-IF                                                  CL**1
01495                                                                      CL**1
01496          WHEN OTHER                                                  CL**1
01497              MOVE PC-TSYMSG-00045 TO DP020-MSG-NUMBER                CL**1
01498              SET DP020-MSG-FATAL  TO TRUE                            CL**1
01499              PERFORM G100-DISPLAY-PANEL                              CL**1
01500                                                                      CL**1
01501      END-EVALUATE.                                                   CL**1
01502  EJECT                                                               CL**1
01503  D400-REFRESH-BLOCK-ARRAY.                                           CL**1
01504                                                                      CL**1
01505 ******************************************************************   CL**1
01506 *    WHEN RETURNING TO THIS TRANSACTION FROM ANOTHER TRANSACTION,    CL**1
01507 *    READ TEMPORARY STORAGE FILLING IN BOTH BLOCKS IN THE ARRAY      CL**1
01508 *    WITH THE ITEMS THAT WERE AT THE TOP OF THE LIST WHEN WE         CL**1
01509 *    HAD LEFT PREVIOUSLY.                                            CL**1
01510 *                                                                    CL**1
01511 ******************************************************************   CL**1
01512                                                                      CL**1
01513      COMPUTE PV-TEMP-BLOCK-NUMBER =                                  CL**1
01514          1 + ((MB016-LIST-ITEM-NUMBER(1 1) - 1) /                    CL**1
01515                PC-ITEMS-PER-BLOCK).                                  CL**1
01516                                                                      CL**1
01517      MOVE PV-TEMP-BLOCK-NUMBER TO PV-BLOCK-NUMBER.                   CL**1
01518      MOVE +1                   TO MB016-BLOCK-SUB.                   CL**1
01519                                                                      CL**1
01520      PERFORM Z100-READ-TEMP-STORAGE.                                 CL**1
01521                                                                      CL**1
01522      ADD +1 TO PV-BLOCK-NUMBER.                                      CL**1
01523                                                                      CL**1
01524      IF (PV-BLOCK-NUMBER < MB016-HIGHEST-BLOCK-WRITTEN) OR           CL**1
01525         (PV-BLOCK-NUMBER = MB016-HIGHEST-BLOCK-WRITTEN)              CL**1
01526          ADD +1 TO MB016-BLOCK-SUB                                   CL**1
01527                                                                      CL**1
01528          PERFORM Z100-READ-TEMP-STORAGE                              CL**1
01529      END-IF.                                                         CL**1
01530  EJECT                                                               CL**1
01531 ******************************************************************   CL**1
01532 *    DETERMIN WHETHER A CURSOR NEEDS TO BE OPENED                    CL**1
01533 *                                                                    CL**1
01534 ******************************************************************   CL**1
01535                                                                      CL**1
01536  D500-OPEN-CURSOR.                                                   CL**1
01537                                                                      CL**1
01538      EVALUATE TRUE                                                   CL**1
01539                                                                      CL**1
01540           WHEN MB016-OPEN-MERCH-CURSOR AND                           CL**1
01541                PS-MERCH-CURSOR-NOT-OPENED                            CL**1
01542                PERFORM Z200-OPEN-MERCH-CURSOR                        CL**1
01543                                                                      CL**1
01544           WHEN MB016-OPEN-GMA-CURSOR AND                             CL**1
01545                PS-GMA-CURSOR-NOT-OPENED                              CL**1
01546                PERFORM Z300-OPEN-GMA-CURSOR                          CL**1
01547                                                                      CL**1
01548           WHEN MB016-OPEN-DMA-CURSOR AND                             CL**1
01549                PS-DMA-CURSOR-NOT-OPENED                              CL**1
01550                PERFORM Z400-OPEN-DMA-CURSOR                          CL**1
01551                                                                      CL**1
01552           WHEN MB016-OPEN-DPT-CURSOR AND                             CL**1
01553                PS-DPT-CURSOR-NOT-OPENED                              CL**1
01554                PERFORM Z500-OPEN-DPT-CURSOR                          CL**1
01555                                                                      CL**1
01556           WHEN MB016-OPEN-MCL-CURSOR AND                             CL**1
01557                PS-MCL-CURSOR-NOT-OPENED                              CL**1
01558                PERFORM Z600-OPEN-MCL-CURSOR                          CL**1
01559                                                                      CL**1
01560           WHEN MB016-OPEN-SCL-CURSOR AND                             CL**1
01561                PS-SCL-CURSOR-NOT-OPENED                              CL**1
01562                PERFORM Z700-OPEN-SCL-CURSOR                          CL**1
01563                                                                      CL**1
01564           WHEN MB016-OPEN-ALL-APLAVL                                 CL**1
01565                PERFORM Z800-OPEN-ALL-APLAVL                          CL**1
01566                                                                      CL**1
01567      END-EVALUATE.                                                   CL**1
01568                                                                      CL**1
01569  EJECT                                                               CL**1
01570  E100-EDIT-SELECTIONS.                                               CL**1
01571                                                                      CL**1
01572 ******************************************************************   CL**1
01573 *    EDIT EACH SELECTION ENTRY.  IF EACH ENTRY IS CONSIDERED         CL**1
01574 *    VALID, CHECK IF A BEGINNING AND ENDING ENTRY WAS ENTERED,       CL**1
01575 *    AND CHECK THE FOLLOWING.                                        CL**1
01576 *                                                                    CL**1
01577 *    1) IF THERE IS A BEGINNING RANGE, THERE MUST BE AN ENDING.      CL**1
01578 *    2) IF THERE IS A ENDING RANGE, THERE MUST BE AN BEGINNING.      CL**1
01579 *    3) BEGINNING RANGE MUST PRECEDE ENDING RANGE.                   CL**1
01580 *                                                                    CL**1
01581 *    IF A VALID BEGINNING AND ENDING RANGE HAVE BEEN SELECTED,       CL**1
01582 *    MARK ALL ITEMS IN THAT RANGE AS BEING SELECTED.                 CL**1
01583 *                                                                    CL**1
01584 *    PERFORMED BY D200-RECORD-SELECTIONS                             CL**1
01585 ******************************************************************   CL**1
01586                                                                      CL**1
01587      SET PS-VALID-SELECTIONS TO TRUE.                                CL**1
01588                                                                      CL**1
01589      COMPUTE PV-ENDING-ITEM-ON-PANEL =                               CL**1
01590          (MB016-ITEM-AT-TOP-OF-PANEL + PC-ITEMS-PER-PANEL) - 1.      CL**1
01591                                                                      CL**1
01592      MOVE MB016-ITEM-AT-TOP-OF-PANEL TO PV-ITEM-IN-USE.              CL**1
01593      MOVE +1                         TO PS-SUB.                      CL**1
01594                                                                      CL**1
01595      PERFORM F100-EDIT                                               CL**1
01596          UNTIL (PV-ITEM-IN-USE > PV-ENDING-ITEM-ON-PANEL)    OR      CL**1
01597                (PV-ITEM-IN-USE > MB016-NUMBER-OF-ITEMS-READ)         CL**1
01598                                                                      CL**1
01599      IF PS-VALID-SELECTIONS                                          CL**1
01600                                                                      CL**1
01601          IF MB016-START-OF-SELECTED-RANGE > +0                       CL**1
01602                                                                      CL**1
01603              IF MB016-END-OF-SELECTED-RANGE   >                      CL**1
01604                 MB016-START-OF-SELECTED-RANGE                        CL**1
01605                  PERFORM F200-MARK-RANGE-AS-SELECTED                 CL**1
01606              ELSE                                                    CL**1
01607                                                                      CL**1
01608                  IF MB016-END-OF-SELECTED-RANGE = +0                 CL**1
01609                      MOVE PC-TSYMSG-00051    TO DP020-MSG-NUMBER     CL**1
01610                      SET PS-CURSOR-POSITIONED  TO TRUE               CL**1
01611                      SET PS-WARNING            TO TRUE               CL**1
01612                      IF NOT DP020-NEXT-ACT-ERROR                     CL**1
01613                          SET DP020-MSG-WARNING TO TRUE               CL**1
01614                      END-IF                                          CL**1
01615                  ELSE                                                CL**1
01616                      SET PS-INVALID-SELECTIONS TO TRUE               CL**1
01617                      SET PS-CURSOR-POSITIONED  TO TRUE               CL**1
01618                      SET DP020-MSG-FATAL       TO TRUE               CL**1
01619                      MOVE PC-TSYMSG-00052    TO DP020-MSG-NUMBER     CL**1
01620                      IF NOT DP020-NEXT-ACT-ERROR                     CL**1
01621                          MOVE MB016-ITEM-AT-TOP-OF-PANEL             CL**1
01622                                                TO PV-ITEM-IN-USE     CL**1
01623                          MOVE +1               TO PS-SUB             CL**1
01624                          PERFORM                                     CL**1
01625                              UNTIL (PV-ITEM-IN-USE >                 CL**1
01626                                     PV-ENDING-ITEM-ON-PANEL)  OR     CL**1
01627                                    (PV-ITEM-IN-USE >                 CL**1
01628                                     MB016-NUMBER-OF-ITEMS-READ)      CL**1
01629                              PERFORM K100-SET-SUBSCRIPTS             CL**1
01630                              IF (MB016-BEGIN(MB016-BLOCK-SUB         CL**1
01631                                              MB016-ITEM-SUB)) OR     CL**1
01632                                 (MB016-END(MB016-BLOCK-SUB           CL**1
01633                                            MB016-ITEM-SUB))          CL**1
01634                                  MOVE -1                      TO     CL**1
01635                                       MB017I-ASELL(PS-SUB)           CL**1
01636                                  MOVE PV-ENDING-ITEM-ON-PANEL TO     CL**1
01637                                       PV-ITEM-IN-USE                 CL**1
01638                              END-IF                                  CL**1
01639                              ADD +1            TO PS-SUB             CL**1
01640                              ADD +1            TO PV-ITEM-IN-USE     CL**1
01641                          END-PERFORM                                 CL**1
01642                      END-IF                                          CL**1
01643                  END-IF                                              CL**1
01644              END-IF                                                  CL**1
01645          ELSE                                                        CL**1
01646              IF MB016-END-OF-SELECTED-RANGE > +0                     CL**1
01647                  SET PS-CURSOR-POSITIONED  TO TRUE                   CL**1
01648                  SET PS-WARNING            TO TRUE                   CL**1
01649                  MOVE PC-TSYMSG-00053      TO DP020-MSG-NUMBER       CL**1
01650                  IF NOT DP020-NEXT-ACT-ERROR                         CL**1
01651                      SET DP020-MSG-WARNING TO TRUE                   CL**1
01652                  END-IF                                              CL**1
01653              END-IF                                                  CL**1
01654          END-IF                                                      CL**1
01655      END-IF.                                                         CL**1
01656  EJECT                                                               CL**1
01657  E200-MOVE-SELECTS-TO-COMMAREA.                                      CL**1
01658                                                                      CL**1
01659 ******************************************************************   CL**1
01660 *    MOVE THE SELECTIONS MADE FROM THE CURRENT PAGE INTO             CL**1
01661 *    THE COMMAREA.                                                   CL**1
01662 *                                                                    CL**1
01663 *    PERFORMED BY D200-RECORD-SELECTIONS.                            CL**1
01664 ******************************************************************   CL**1
01665                                                                      CL**1
01666      COMPUTE PV-ENDING-ITEM-ON-PANEL =                               CL**1
01667          (MB016-ITEM-AT-TOP-OF-PANEL + PC-ITEMS-PER-PANEL) - 1.      CL**1
01668                                                                      CL**1
01669      MOVE +1                         TO PS-SUB.                      CL**1
01670      MOVE MB016-ITEM-AT-TOP-OF-PANEL TO PV-ITEM-IN-USE.              CL**1
01671                                                                      CL**1
01672      PERFORM F300-CHECK-SELECTIONS                                   CL**1
01673          UNTIL PV-ITEM-IN-USE > PV-ENDING-ITEM-ON-PANEL.             CL**1
01674  EJECT                                                               CL**1
01675  E300-NAVIGATE.                                                      CL**1
01676                                                                      CL**1
01677 ******************************************************************   CL**1
01678 *    DELETE THE TEMPORARY STORAGE IF THE USER HIT PF3.  IF WE ARE    CL**1
01679 *    GOING TO ANOTHER TRANSACTION, BUT PLANNING TO COME BACK,        CL**1
01680 *    WRITE OUT THE LAST 2 BLOCKS FROM THE ARRAY TO TEMPORARY         CL**1
01681 *    STORAGE. IN EITHER CASE, SET UP THE INTER APPLICATION           CL**1
01682 *    COMMAREA, AND START THE NAVIGATOR.                              CL**1
01683 *                                                                    CL**1
01684 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
01685 ******************************************************************   CL**1
01686                                                                      CL**1
01687      PERFORM H400-WRITE-OUT-LAST-BLOCKS.                             CL**1
01688 *    PERFORM F400-SETUP-INTER-APPL.                                  CL**1
01689      PERFORM DP015-1000-START-NAVIGATOR.                             CL**1
01690  EJECT                                                               CL**1
01691  E400-DISPLAY-TOP-OF-LIST.                                           CL**1
01692                                                                      CL**1
01693 ******************************************************************   CL**1
01694 *    IF THE USER HITS THE 1ST PAGE KEY, COMPUTE THE TOP ITEM         CL**1
01695 *    NUMBER FOR THE NEW PAGE AND DETERMINE IF THIS ITEM              CL**1
01696 *    IS CURRENTLY IN THE ARRAY, OR IN TEMPORARY STORAGE OR NEEDS     CL**1
01697 *    TO BE READ.                                                     CL**1
01698 *                                                                    CL**1
01699 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
01700 ******************************************************************   CL**1
01701                                                                      CL**1
01702      IF MB016-NUMBER-OF-ITEMS-READ > +0                              CL**1
01703          MOVE +1 TO PV-TOP-ITEM                                      CL**1
01704                                                                      CL**1
01705          PERFORM F500-BROWSE                                         CL**1
01706      ELSE                                                            CL**1
01707          SET PS-SAME-ITEMS-DISPLAYED TO TRUE                         CL**1
01708          PERFORM G100-DISPLAY-PANEL                                  CL**1
01709      END-IF.                                                         CL**1
01710  EJECT                                                               CL**1
01711  E500-BROWSE-BACKWARD.                                               CL**1
01712                                                                      CL**1
01713 ******************************************************************   CL**1
01714 *    IF THE USER HITS THE PAGE BACKARD KEY, COMPUTE THE TOP          CL**1
01715 *    ITEM NUMBER FOR THE NEW PAGE AND DETERMINE IF THIS ITEM         CL**1
01716 *    IS CURRENTLY IN THE ARRAY, OR IN TEMPORARY STORAGE OR NEEDS     CL**1
01717 *    TO BE READ.                                                     CL**1
01718 *                                                                    CL**1
01719 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
01720 ******************************************************************   CL**1
01721                                                                      CL**1
01722      IF MB016-NUMBER-OF-ITEMS-READ > +0                              CL**1
01723          COMPUTE PV-TOP-ITEM =                                       CL**1
01724              MB016-ITEM-AT-TOP-OF-PANEL - PC-ITEMS-PER-PANEL         CL**1
01725                                                                      CL**1
01726          PERFORM F500-BROWSE                                         CL**1
01727      ELSE                                                            CL**1
01728          SET PS-SAME-ITEMS-DISPLAYED TO TRUE                         CL**1
01729          PERFORM G100-DISPLAY-PANEL                                  CL**1
01730      END-IF.                                                         CL**1
01731  EJECT                                                               CL**1
01732  E600-BROWSE-FORWARD.                                                CL**1
01733                                                                      CL**1
01734 ******************************************************************   CL**1
01735 *    IF THE USER HITS THE PAGE FORWARD KEY, COMPUTE THE TOP          CL**1
01736 *    ITEM NUMBER FOR THE NEW PAGE AND DETERMINE IF THIS ITEM         CL**1
01737 *    IS CURRENTLY IN THE ARRAY, OR IN TEMPORARY STORAGE OR NEEDS     CL**1
01738 *    TO BE READ.                                                     CL**1
01739 *                                                                    CL**1
01740 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
01741 ******************************************************************   CL**1
01742                                                                      CL**1
01743      IF MB016-NUMBER-OF-ITEMS-READ > +0                              CL**1
01744          COMPUTE PV-TOP-ITEM =                                       CL**1
01745              MB016-ITEM-AT-TOP-OF-PANEL + PC-ITEMS-PER-PANEL         CL**1
01746                                                                      CL**1
01747          PERFORM F500-BROWSE                                         CL**1
01748      ELSE                                                            CL**1
01749          SET PS-SAME-ITEMS-DISPLAYED TO TRUE                         CL**1
01750          PERFORM G100-DISPLAY-PANEL                                  CL**1
01751      END-IF.                                                         CL**1
01752  EJECT                                                               CL**1
01753  E700-DESELECT-ALL-ITEMS.                                            CL**1
01754                                                                      CL**1
01755 ******************************************************************   CL**1
01756 *    IF THE USER HITS THE DESELECT KEY, CLEAR THE SELECTION          CL**1
01757 *    SWITCH FOR ALL ITEMS THAT WERE PREVIOUSLY SELECTED.             CL**1
01758 *                                                                    CL**1
01759 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
01760 ******************************************************************   CL**1
01761                                                                      CL**1
01762      IF MB016-NUMBER-OF-ITEMS-READ > +0                              CL**1
01763          MOVE +1 TO MB016-BLOCK-SUB                                  CL**1
01764                                                                      CL**1
01765          PERFORM F600-CLEAR-SELECTED-INDS                            CL**1
01766              VARYING MB016-ITEM-SUB FROM 1 BY 1                      CL**1
01767              UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK               CL**1
01768                                                                      CL**1
01769          ADD +1 TO MB016-BLOCK-SUB                                   CL**1
01770                                                                      CL**1
01771          PERFORM F600-CLEAR-SELECTED-INDS                            CL**1
01772              VARYING MB016-ITEM-SUB FROM 1 BY 1                      CL**1
01773              UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK               CL**1
01774                                                                      CL**1
01775          MOVE MB016-LIST-ITEM-NUMBER(1 1) TO PV-LIST-ITEM-NUMBER     CL**1
01776                                                                      CL**1
01777 ******************************************************************   CL**1
01778 *    CALCULATE THE BLOCK NUMBER OF THE FIRST BLOCK IN WORKING        CL**1
01779 *    STORAGE.  IF THIS BLOCK NUMBER IS NOT = 1, WE KNOW THAT         CL**1
01780 *    THERE ARE BLOCKS WITH SMALLER BLOCK NUMBERS SITTING OUT         CL**1
01781 *    IN TEMPORARY STORAGE THAT NEED TO BE RETRIEVED.                 CL**1
01782 *                                                                    CL**1
01783 *    IF THE BLOCK NUMBER DOES = 1, BUT THE HIGHEST BLOCK NUMBER      CL**1
01784 *    WRITTEN TO TEMPORARY STORAGE IS GREATER THAN THE MAXIMUM        CL**1
01785 *    NUMBER OF BLOCKS IN WORKING STORAGE, WE KNOW THAT               CL**1
01786 *    THERE ARE BLOCKS WITH LARGER BLOCK NUMBERS SITTING OUT          CL**1
01787 *    IN TEMPORARY STORAGE THAT NEED TO BE RETRIEVED.                 CL**1
01788 ******************************************************************   CL**1
01789                                                                      CL**1
01790          COMPUTE PV-FIRST-BLOCK-IN-ARRAY =                           CL**1
01791              1 + ((PV-LIST-ITEM-NUMBER - 1) / PC-ITEMS-PER-BLOCK)    CL**1
01792                                                                      CL**1
01793          IF (PV-FIRST-BLOCK-IN-ARRAY NOT = +1) OR                    CL**1
01794             (MB016-HIGHEST-BLOCK-WRITTEN > PC-MAX-BLOCKS-IN-ARRAY)   CL**1
01795              MOVE +1 TO MB016-BLOCK-SUB                              CL**1
01796                                                                      CL**1
01797              PERFORM Z150-WRITE-TEMP-STORAGE                         CL**1
01798                                                                      CL**1
01799              MOVE +1 TO PV-BLOCK-NUMBER                              CL**1
01800                                                                      CL**1
01801              COMPUTE PV-PREV-BLOCK-IN-ARRAY =                        CL**1
01802                  PV-FIRST-BLOCK-IN-ARRAY - 1                         CL**1
01803                                                                      CL**1
01804              PERFORM                                                 CL**1
01805                  UNTIL PV-BLOCK-NUMBER > PV-PREV-BLOCK-IN-ARRAY      CL**1
01806                                                                      CL**1
01807                  PERFORM Z100-READ-TEMP-STORAGE                      CL**1
01808                                                                      CL**1
01809                  PERFORM F600-CLEAR-SELECTED-INDS                    CL**1
01810                      VARYING MB016-ITEM-SUB FROM 1 BY 1              CL**1
01811                      UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK       CL**1
01812                                                                      CL**1
01813                  PERFORM Z150-WRITE-TEMP-STORAGE                     CL**1
01814                                                                      CL**1
01815                  ADD +1 TO PV-BLOCK-NUMBER                           CL**1
01816                                                                      CL**1
01817              END-PERFORM                                             CL**1
01818                                                                      CL**1
01819              COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                        CL**1
01820                  PV-FIRST-BLOCK-IN-ARRAY + PC-MAX-BLOCKS-IN-ARRAY    CL**1
01821                                                                      CL**1
01822              PERFORM                                                 CL**1
01823                  UNTIL PV-NEXT-BLOCK-IN-ARRAY >                      CL**1
01824                        MB016-HIGHEST-BLOCK-WRITTEN                   CL**1
01825                                                                      CL**1
01826                  MOVE PV-NEXT-BLOCK-IN-ARRAY TO PV-BLOCK-NUMBER      CL**1
01827                                                                      CL**1
01828                  PERFORM Z100-READ-TEMP-STORAGE                      CL**1
01829                                                                      CL**1
01830                  PERFORM F600-CLEAR-SELECTED-INDS                    CL**1
01831                      VARYING MB016-ITEM-SUB FROM 1 BY 1              CL**1
01832                      UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK       CL**1
01833                                                                      CL**1
01834                  PERFORM Z150-WRITE-TEMP-STORAGE                     CL**1
01835                                                                      CL**1
01836                  ADD +1 TO PV-NEXT-BLOCK-IN-ARRAY                    CL**1
01837                                                                      CL**1
01838              END-PERFORM                                             CL**1
01839                                                                      CL**1
01840              MOVE PV-FIRST-BLOCK-IN-ARRAY TO PV-BLOCK-NUMBER         CL**1
01841                                                                      CL**1
01842              PERFORM Z100-READ-TEMP-STORAGE                          CL**1
01843          END-IF                                                      CL**1
01844                                                                      CL**1
01845      END-IF.                                                         CL**1
01846                                                                      CL**1
01847      IF DP020-FK-DESELECT(DP020-SRC-AID)                             CL**1
01848          MOVE +0 TO MB016-NUMBER-OF-ITEMS-SELECTED                   CL**1
01849      END-IF.                                                         CL**1
01850                                                                      CL**1
01851      MOVE +0 TO MB016-START-OF-SELECTED-RANGE.                       CL**1
01852      MOVE +0 TO MB016-END-OF-SELECTED-RANGE.                         CL**1
01853                                                                      CL**1
01854      SET PS-SAME-ITEMS-DISPLAYED TO TRUE.                            CL**1
01855                                                                      CL**1
01856      PERFORM G100-DISPLAY-PANEL.                                     CL**1
01857  EJECT                                                               CL**1
01858  E800-CHECK-FOR-JUMP-BROWSE.                                         CL**1
01859                                                                      CL**1
01860 ******************************************************************   CL**1
01861 *    THE USER CAN CHANGE THE CURRENT BEGINNING LIST NUMBER SO        CL**1
01862 *    THAT THE TRANSACTION WILL JUMP TO THAT POINT IN THE LIST.       CL**1
01863 *    THIS IS A FASTER WAY TO GET TO A CERTAIN POINT IN THE LIST      CL**1
01864 *    RATHER THAN HITTING PF8 TO PAGE FORWARD TO THAT POINT.          CL**1
01865 *    THE NEW LIST NUMBER ENTERED IS EDITED TO MAKE SURE THAT         CL**1
01866 *    IT IS NUMERIC AND FALLS BETWEEN A SPECIFIED RANGE.              CL**1
01867 *                                                                    CL**1
01868 ******************************************************************   CL**1
01869                                                                      CL**1
01870      SET PS-VALID-BEG-ITEM TO TRUE.                                  CL**1
01871                                                                      CL**1
01872      IF (ABEGITMA                      = PC-ERASE-EOF) OR            CL**1
01873         (MB016-NUMBER-OF-ITEMS-READ    = +0)                         CL**1
01874          SET PS-SAME-ITEMS-DISPLAYED TO TRUE                         CL**1
01875          PERFORM G100-DISPLAY-PANEL                                  CL**1
01876      ELSE                                                            CL**1
01877                                                                      CL**1
01878          MOVE ABEGITMI             TO DP010I-UNEDITED-FIELD          CL**1
01879          MOVE PC-FIELD-LENGTH      TO DP010I-MAXIMUM-DIGITS          CL**1
01880          MOVE +0                   TO DP010I-MAXIMUM-DECIMALS        CL**1
01881          SET DP010I-NEGATIVE-NOT-ALLOWED TO TRUE                     CL**1
262978         CALL DP010I-NUMERIC-EDIT-ROUTINE                                 
262978              USING DP010I-NUMERIC-EDIT-AREA                              
01883                                                                      CL**1
01884 ******************************************************************   CL**1
01885 *    WE MUST MAKE SURE THAT THE NEW ITEM NUMBER THAT THE USER        CL**1
01886 *    WANTS TO JUMP TO WILL NOT REQUIRE US TO READ THE DATABASE       CL**1
01887 *    TOO MANY TIMES.  WE CALCULATE THE MAXIMUM ITEM NUMBER THAT      CL**1
01888 *    CAN BE AT THE TOP OF THE LIST WITHOUT EXCEEDING THE MAXIMUM     CL**1
01889 *    NUMBER OF READS THAT WE HAVE SET.  IF THE NUMBER THAT THE       CL**1
01890 *    USER WANTS AT THE TOP OF THE LIST IS GREATER THAN THE MAXIMUM   CL**1
01891 *    ITEM NUMBER THAT WE HAVE CALCULATED, A MESSAGE IS DISPLAYED,    CL**1
01892 *    AND WE START THE LIST USING THE MAXIMUM ITEM NUMBER.            CL**1
01893 ******************************************************************   CL**1
01894                                                                      CL**1
01895          IF NOT DP010I-ERROR-DETECTED                                CL**1
01896              MOVE DP010I-NUMERIC-FIELD TO MB017I-ABEGITMI            CL**1
01897              MOVE MB017I-ABEGITMI      TO PV-BEGINNING-ITEM          CL**1
01898                                                                      CL**1
01899              IF (PV-BEGINNING-ITEM >  0)          AND                CL**1
01900                 (PV-BEGINNING-ITEM <  PC-MAX-ITEMS)                  CL**1
01901                  MOVE PV-BEGINNING-ITEM TO PV-TOP-ITEM               CL**1
01902                                                                      CL**1
01903                  COMPUTE PV-MAX-ITEMS-TO-BE-READ =                   CL**1
01904                     ((MB016-NUMBER-OF-ITEMS-READ +                   CL**1
01905                       PC-MAX-ITEMS-TO-BE-READ)   -                   CL**1
01906                       PC-ITEMS-PER-PANEL)        + 1                 CL**1
01907                                                                      CL**1
01908                  IF PV-TOP-ITEM > PV-MAX-ITEMS-TO-BE-READ            CL**1
01909                      MOVE PV-MAX-ITEMS-TO-BE-READ TO                 CL**1
01910                           PV-TOP-ITEM                                CL**1
01911                      MOVE -1                      TO ABEGITML        CL**1
01912                      IF MB016-NO-ITEMS-LEFT-ON-DB                    CL**1
01913                          MOVE PC-TSYMSG-00070  TO                    CL**1
01914                               DP020-MSG-NUMBER                       CL**1
01915                      ELSE                                            CL**1
01916                          MOVE PC-TSYMSG-00207  TO                    CL**1
01917                               DP020-MSG-NUMBER                       CL**1
01918                      END-IF                                          CL**1
01919                      SET PS-CURSOR-POSITIONED    TO TRUE             CL**1
01920                      SET DP020-MSG-INFORMATIONAL TO TRUE             CL**1
01921                  END-IF                                              CL**1
01922                                                                      CL**1
01923                  PERFORM F500-BROWSE                                 CL**1
01924              ELSE                                                    CL**1
01925                  MOVE PC-TSYMSG-00005       TO DP020-MSG-NUMBER      CL**1
01926                  MOVE -1                    TO ABEGITML              CL**1
01927                  MOVE DP015-REVERSE         TO ABEGITMH              CL**1
01928                  MOVE DP015-RED             TO ABEGITMC              CL**1
01929                  MOVE DP015-UNP-ALP-BRT-MDT TO ABEGITMA              CL**1
01930                  SET PS-INVALID-BEG-ITEM    TO TRUE                  CL**1
01931                  SET PS-CURSOR-POSITIONED   TO TRUE                  CL**1
01932                  SET DP020-MSG-FATAL        TO TRUE                  CL**1
01933              END-IF                                                  CL**1
01934                                                                      CL**1
01935          ELSE                                                        CL**1
01936              MOVE PC-TSYMSG-00008           TO DP020-MSG-NUMBER      CL**1
01937              MOVE -1                        TO ABEGITML              CL**1
01938              MOVE DP015-REVERSE             TO ABEGITMH              CL**1
01939              MOVE DP015-RED                 TO ABEGITMC              CL**1
01940              MOVE DP015-UNP-ALP-BRT-MDT     TO ABEGITMA              CL**1
01941              SET PS-INVALID-BEG-ITEM        TO TRUE                  CL**1
01942              SET PS-CURSOR-POSITIONED       TO TRUE                  CL**1
01943              SET DP020-MSG-FATAL            TO TRUE                  CL**1
01944          END-IF                                                      CL**1
01945                                                                      CL**1
01946      END-IF.                                                         CL**1
01947                                                                      CL**1
01948      IF PS-INVALID-BEG-ITEM                                          CL**1
01949          SET PS-SAME-ITEMS-DISPLAYED        TO TRUE                  CL**1
01950          PERFORM DP017-0000-GET-CURR-DATE-TIME                       CL**1
01951          PERFORM I200-FORMAT-LIST-LINES                              CL**1
01952          PERFORM I300-FORMAT-NR-SELECTED                             CL**1
01953          PERFORM DP005-0000-FORMAT-MSG-LINES                         CL**1
01954          PERFORM DP008-0000-WRITE-PANEL                              CL**1
01955      END-IF.                                                         CL**1
01956  EJECT                                                               CL**1
01957  F100-EDIT.                                                          CL**1
01958                                                                      CL**1
01959 ******************************************************************   CL**1
01960 *    EDIT THE SELECTION ENTRIES.                                     CL**1
01961 *                                                                    CL**1
01962 *    1) VALID ENTRIES ARE 'S' 'B' OR 'E'.                            CL**1
01963 *    2) THERE CAN ONLY BE 1 BEGINNING AND 1 ENDING RANGE.            CL**1
01964 *                                                                    CL**1
01965 *    PERFORMED BY E100-EDIT-SELECTIONS.                              CL**1
01966 ******************************************************************   CL**1
01967                                                                      CL**1
01968      PERFORM K100-SET-SUBSCRIPTS.                                    CL**1
01969                                                                      CL**1
01970      IF NOT (MB016-NO-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB)) AND    CL**1
01971         NOT (MB016-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB))           CL**1
01972                                                                      CL**1
01973 ******************************************************************   CL**1
01974 *   IF THE CURRENT ENTRY IS A 'B', WE MUST MAKE SURE THAT THIS       CL**1
01975 *   IS THE ONLY 'B' ENTERED ON THE SCREEN.  TO VERIFY THIS, THE      CL**1
01976 *   CURRENT ITEM WE ARE POINTING TO SHOULD EQUAL THE START OF        CL**1
01977 *   SELECTED RANGE FIELD.  IF THEY ARE NOT EQUAL, AND THE START OF   CL**1
01978 *   SELECTED RANGE FIELD DOES NOT EQUAL 0, WE KNOW THAT THIS FIELD   CL**1
01979 *   CONTAINS THE LIST ITEM NUMBER THAT CURRENTLY CONTAINS A 'B'.     CL**1
01980 *   IF THE START OF SELECTED RANGE FIELD EQUALS 0, THAN THIS IS      CL**1
01981 *   THE FIRST 'B' ENTERED ON THE SCREEN, AND WE SET THIS FIELD       CL**1
01982 *   EQUAL TO THE CURRENT ITEM WE ARE POINTING TO.                    CL**1
01983 *                                                                    CL**1
01984 *   THE SAME TYPE OF LOGIC IS DONE FOR THE ENDING RANGE 'E'.         CL**1
01985 ******************************************************************   CL**1
01986                                                                      CL**1
01987          IF MB016-BEGIN(MB016-BLOCK-SUB MB016-ITEM-SUB)              CL**1
01988                                                                      CL**1
01989              IF MB016-START-OF-SELECTED-RANGE NOT = PV-ITEM-IN-USE   CL**1
01990                                                                      CL**1
01991                  IF MB016-START-OF-SELECTED-RANGE = +0               CL**1
01992                      MOVE PV-ITEM-IN-USE TO                          CL**1
01993                          MB016-START-OF-SELECTED-RANGE               CL**1
01994                  ELSE                                                CL**1
01995                                                                      CL**1
01996                      IF PS-VALID-SELECTIONS                          CL**1
01997                          MOVE PC-TSYMSG-00054 TO                     CL**1
01998                               DP020-MSG-NUMBER                       CL**1
01999                          IF NOT DP020-NEXT-ACT-ERROR                 CL**1
02000                              MOVE -1      TO MB017I-ASELL(PS-SUB)    CL**1
02001                          END-IF                                      CL**1
02002                      END-IF                                          CL**1
02003                                                                      CL**1
02004                      SET DP020-MSG-FATAL       TO TRUE               CL**1
02005                      SET PS-INVALID-SELECTIONS TO TRUE               CL**1
02006                      SET PS-CURSOR-POSITIONED  TO TRUE               CL**1
02007                  END-IF                                              CL**1
02008              END-IF                                                  CL**1
02009          ELSE                                                        CL**1
02010              IF MB016-END(MB016-BLOCK-SUB MB016-ITEM-SUB)            CL**1
02011                                                                      CL**1
02012                  IF MB016-END-OF-SELECTED-RANGE NOT =                CL**1
02013                     PV-ITEM-IN-USE                                   CL**1
02014                                                                      CL**1
02015                      IF MB016-END-OF-SELECTED-RANGE = +0             CL**1
02016                          MOVE PV-ITEM-IN-USE TO                      CL**1
02017                               MB016-END-OF-SELECTED-RANGE            CL**1
02018                      ELSE                                            CL**1
02019                                                                      CL**1
02020                          IF PS-VALID-SELECTIONS                      CL**1
02021                              MOVE PC-TSYMSG-00055 TO                 CL**1
02022                                   DP020-MSG-NUMBER                   CL**1
02023                              IF NOT DP020-NEXT-ACT-ERROR             CL**1
02024                                 MOVE -1 TO MB017I-ASELL(PS-SUB)      CL**1
02025                              END-IF                                  CL**1
02026                          END-IF                                      CL**1
02027                          SET DP020-MSG-FATAL       TO TRUE           CL**1
02028                          SET PS-INVALID-SELECTIONS TO TRUE           CL**1
02029                          SET PS-CURSOR-POSITIONED  TO TRUE           CL**1
02030                      END-IF                                          CL**1
02031                  END-IF                                              CL**1
02032              ELSE                                                    CL**1
02033                  IF PS-VALID-SELECTIONS                              CL**1
02034                      MOVE PC-TSYMSG-00005 TO DP020-MSG-NUMBER        CL**1
02035                      IF NOT DP020-NEXT-ACT-ERROR                     CL**1
02036                         MOVE -1   TO MB017I-ASELL(PS-SUB)            CL**1
02037                      END-IF                                          CL**1
02038                  END-IF                                              CL**1
02039                  SET DP020-MSG-FATAL       TO TRUE                   CL**1
02040                  SET PS-INVALID-SELECTIONS TO TRUE                   CL**1
02041                  SET PS-CURSOR-POSITIONED  TO TRUE                   CL**1
02042                  MOVE DP015-RED            TO MB017O-ASELC(PS-SUB)   CL**1
02043                  MOVE DP015-REVERSE        TO MB017O-ASELH(PS-SUB)   CL**1
02044              END-IF                                                  CL**1
02045          END-IF                                                      CL**1
02046      END-IF.                                                         CL**1
02047                                                                      CL**1
02048      ADD +1 TO PV-ITEM-IN-USE.                                       CL**1
02049      ADD +1 TO PS-SUB.                                               CL**1
02050  EJECT                                                               CL**1
02051  F200-MARK-RANGE-AS-SELECTED.                                        CL**1
02052                                                                      CL**1
02053 ******************************************************************   CL**1
02054 *    WHENEVER THE USER SELECTS AN ITEM AS THE BEGINNING RANGE        CL**1
02055 *    AND ONE AS THE ENDING RANGE, MARK THESE ITEMS AS WELL AS        CL**1
02056 *    THOSE THAT FALL IN THE RANGE AS BEING SELECTED.                 CL**1
02057 *                                                                    CL**1
02058 *    PERFORMED BY E100-EDIT-SELECTIONS.                              CL**1
02059 ******************************************************************   CL**1
02060                                                                      CL**1
02061      MOVE +1 TO MB016-BLOCK-SUB.                                     CL**1
02062                                                                      CL**1
02063      PERFORM G200-MARK-SELECTED-INDS                                 CL**1
02064          VARYING MB016-ITEM-SUB FROM 1 BY 1                          CL**1
02065          UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK.                  CL**1
02066                                                                      CL**1
02067      ADD +1 TO MB016-BLOCK-SUB.                                      CL**1
02068                                                                      CL**1
02069      PERFORM G200-MARK-SELECTED-INDS                                 CL**1
02070          VARYING MB016-ITEM-SUB FROM 1 BY 1                          CL**1
02071          UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK.                  CL**1
02072                                                                      CL**1
02073 ******************************************************************   CL**1
02074 *    AFTER MARKING THE ENTRIES IN THE BLOCKS IN WORKING STORAGE,     CL**1
02075 *    WE MUST SEE IF ANY OF THE ENTRIES IN THE BLOCKS IN TEMPORARY    CL**1
02076 *    STORAGE SHOULD BE MARKED.  TO DETERMINE THIS, WE CALCULATE      CL**1
02077 *    THE BLOCK NUMBERS OF THE BLOCKS IN WORKING STORAGE AND THE      CL**1
02078 *    BLOCK NUMBERS OF THE BLOCKS IN TEMPORARY STORAGE THAT FALL      CL**1
02079 *    WITHIN THE STARTING AND ENDING RANGE SPECIFED BY THE USER.      CL**1
02080 *    IF THE BLOCK NUMBERS OF THE BLOCKS IN TEMPORARY STORAGE         CL**1
02081 *    ARE LESS THAN OR GREATER THAN THE BLOCK NUMBERS OF THE          CL**1
02082 *    BLOCKS IN WORKING STORAGE, WE MUST READ THOSE BLOCKS FROM       CL**1
02083 *    TEMPORARY STORAGE AND MARK THE APPROPRIATE ENTRIES AS BEING     CL**1
02084 *    SELECTED.                                                       CL**1
02085 ******************************************************************   CL**1
02086                                                                      CL**1
02087      MOVE MB016-LIST-ITEM-NUMBER(1 1)   TO                           CL**1
02088           PV-LIST-ITEM-NUMBER.                                       CL**1
02089                                                                      CL**1
02090      COMPUTE PV-FIRST-BLOCK-IN-ARRAY =                               CL**1
02091          1 + ((PV-LIST-ITEM-NUMBER - 1) /                            CL**1
02092                PC-ITEMS-PER-BLOCK).                                  CL**1
02093                                                                      CL**1
02094      MOVE MB016-START-OF-SELECTED-RANGE TO                           CL**1
02095           PV-START-OF-SELECTED-RANGE.                                CL**1
02096                                                                      CL**1
02097      COMPUTE PV-FIRST-BLOCK-IN-RANGE =                               CL**1
02098          1 + ((PV-START-OF-SELECTED-RANGE - 1) /                     CL**1
02099                PC-ITEMS-PER-BLOCK).                                  CL**1
02100                                                                      CL**1
02101      MOVE MB016-END-OF-SELECTED-RANGE   TO                           CL**1
02102           PV-END-OF-SELECTED-RANGE.                                  CL**1
02103                                                                      CL**1
02104      COMPUTE PV-LAST-BLOCK-IN-RANGE =                                CL**1
02105          1 + ((PV-END-OF-SELECTED-RANGE - 1) /                       CL**1
02106                PC-ITEMS-PER-BLOCK).                                  CL**1
02107                                                                      CL**1
02108      COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                                CL**1
02109          PV-FIRST-BLOCK-IN-ARRAY + 1.                                CL**1
02110                                                                      CL**1
02111      IF (PV-FIRST-BLOCK-IN-RANGE < PV-FIRST-BLOCK-IN-ARRAY) OR       CL**1
02112         (PV-LAST-BLOCK-IN-RANGE  > PV-NEXT-BLOCK-IN-ARRAY)           CL**1
02113          MOVE +1 TO MB016-BLOCK-SUB                                  CL**1
02114                                                                      CL**1
02115          PERFORM Z150-WRITE-TEMP-STORAGE                             CL**1
02116                                                                      CL**1
02117          COMPUTE PV-PREV-BLOCK-IN-ARRAY =                            CL**1
02118              PV-FIRST-BLOCK-IN-ARRAY - 1                             CL**1
02119                                                                      CL**1
02120          PERFORM                                                     CL**1
02121              UNTIL PV-FIRST-BLOCK-IN-RANGE >                         CL**1
02122                    PV-PREV-BLOCK-IN-ARRAY                            CL**1
02123                                                                      CL**1
02124              MOVE PV-FIRST-BLOCK-IN-RANGE TO PV-BLOCK-NUMBER         CL**1
02125                                                                      CL**1
02126              PERFORM Z100-READ-TEMP-STORAGE                          CL**1
02127                                                                      CL**1
02128              PERFORM G200-MARK-SELECTED-INDS                         CL**1
02129                  VARYING MB016-ITEM-SUB FROM 1 BY 1                  CL**1
02130                  UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK           CL**1
02131                                                                      CL**1
02132              PERFORM Z150-WRITE-TEMP-STORAGE                         CL**1
02133                                                                      CL**1
02134              ADD +1 TO PV-FIRST-BLOCK-IN-RANGE                       CL**1
02135                                                                      CL**1
02136          END-PERFORM                                                 CL**1
02137                                                                      CL**1
02138          COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                            CL**1
02139              PV-FIRST-BLOCK-IN-ARRAY + PC-MAX-BLOCKS-IN-ARRAY        CL**1
02140                                                                      CL**1
02141          PERFORM                                                     CL**1
02142              UNTIL PV-NEXT-BLOCK-IN-ARRAY >                          CL**1
02143                    PV-LAST-BLOCK-IN-RANGE                            CL**1
02144                                                                      CL**1
02145              MOVE PV-NEXT-BLOCK-IN-ARRAY TO PV-BLOCK-NUMBER          CL**1
02146                                                                      CL**1
02147              PERFORM Z100-READ-TEMP-STORAGE                          CL**1
02148                                                                      CL**1
02149              PERFORM G200-MARK-SELECTED-INDS                         CL**1
02150                  VARYING MB016-ITEM-SUB FROM 1 BY 1                  CL**1
02151                  UNTIL MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK           CL**1
02152                                                                      CL**1
02153              PERFORM Z150-WRITE-TEMP-STORAGE                         CL**1
02154                                                                      CL**1
02155              ADD +1 TO PV-NEXT-BLOCK-IN-ARRAY                        CL**1
02156                                                                      CL**1
02157          END-PERFORM                                                 CL**1
02158                                                                      CL**1
02159          MOVE PV-FIRST-BLOCK-IN-ARRAY TO PV-BLOCK-NUMBER             CL**1
02160                                                                      CL**1
02161          PERFORM Z100-READ-TEMP-STORAGE                              CL**1
02162      END-IF.                                                         CL**1
02163                                                                      CL**1
02164      MOVE +0 TO MB016-START-OF-SELECTED-RANGE.                       CL**1
02165      MOVE +0 TO MB016-END-OF-SELECTED-RANGE.                         CL**1
02166  EJECT                                                               CL**1
02167  F300-CHECK-SELECTIONS.                                              CL**1
02168                                                                      CL**1
02169 ******************************************************************   CL**1
02170 *    CHECK EACH ENTRY TO DETERMINE IF THE SELECTION CRITERIA IN      CL**1
02171 *    THE MAP DIFFERS FROM THAT IN THE ARRAY.  IF THEY DO DIFFER,     CL**1
02172 *    AND THE ARRAY ENTRY SHOWS THAT THE ITEM WAS PREVIOUSLY          CL**1
02173 *    SELECTED, SUBTRACT 1 FROM THE SELECTED COUNTER.  IF THEY DO     CL**1
02174 *    DIFFER, AND THE ARRAY ENTRY SHOWS THAT THIS ITEM WAS MARKED     CL**1
02175 *    AS EITHER THE BEGINNING OR ENDING SELECTION POINT, ZERO OUT     CL**1
02176 *    THE STARTING RANGE AND/OR ENDING RANGE.  IF THE ENTRY ON        CL**1
02177 *    THE MAP SHOWS THAT THIS ITEM WAS SELECTED, ADD 1 TO THE         CL**1
02178 *    SELECTED COUNTER.                                               CL**1
02179 *                                                                    CL**1
02180 *    PERFORMED BY E200-MOVE-SELECTIONS-TO-COMMAREA.                  CL**1
02181 ******************************************************************   CL**1
02182                                                                      CL**1
02183      IF (PV-ITEM-IN-USE < MB016-NUMBER-OF-ITEMS-READ) OR             CL**1
02184         (PV-ITEM-IN-USE = MB016-NUMBER-OF-ITEMS-READ)                CL**1
02185                                                                      CL**1
02186          PERFORM K100-SET-SUBSCRIPTS                                 CL**1
02187                                                                      CL**1
02188 ******************************************************************   CL**1
02189 *    IF THE ENTRY IN THE BLOCK DOES NOT EQUAL THE ENTRY ON THE       CL**1
02190 *    MAP, SET THE SWITCH SAYING THAT THIS BLOCK HAS BEEN MODIFIED.   CL**1
02191 *                                                                    CL**1
02192 *    IF THE ENTRY IN THE BLOCK EQUALS 'S', SUBTRACT 1 FROM THE       CL**1
02193 *    NUMBER OF SELECTED ITEMS.                                       CL**1
02194 *                                                                    CL**1
02195 *    IF THE ENTRY IN THE BLOCK EQUALS 'B' AND THIS ENTRY WAS EQUAL   CL**1
02196 *    TO THE START OF SELECTED RANGE, MOVE 0 TO THE START OF          CL**1
02197 *    SELECTED RANGE.  IF THERE WAS MORE THAN ONE 'B' ON THE          CL**1
02198 *    SCREEN (ERROR), THE START OF SELECTED RANGE WILL THAN BE        CL**1
02199 *    RESET LATER TO POINT TO ONE OF THE OTHER 'B' ENTRIES.           CL**1
02200 *                                                                    CL**1
02201 *    THE SAME LOGIC APPLIES TO AN 'E' ENTRY.                         CL**1
02202 *                                                                    CL**1
02203 ******************************************************************   CL**1
02204                                                                      CL**1
02205          IF MB016-SELECTED-SW(MB016-BLOCK-SUB                        CL**1
02206                               MB016-ITEM-SUB) NOT =                  CL**1
02207             MB017I-ASELI(PS-SUB)                                     CL**1
02208                                                                      CL**1
02209              SET MB016-BLOCK-MODIFIED(MB016-BLOCK-SUB) TO TRUE       CL**1
02210                                                                      CL**1
02211              IF MB016-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB)         CL**1
02212                  SUBTRACT +1 FROM MB016-NUMBER-OF-ITEMS-SELECTED     CL**1
02213              ELSE                                                    CL**1
02214                                                                      CL**1
02215                  IF MB016-BEGIN(MB016-BLOCK-SUB MB016-ITEM-SUB)      CL**1
02216                                                                      CL**1
02217                      IF MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB       CL**1
02218                                                MB016-ITEM-SUB) =     CL**1
02219                         MB016-START-OF-SELECTED-RANGE                CL**1
02220                                                                      CL**1
02221                          MOVE +0 TO MB016-START-OF-SELECTED-RANGE    CL**1
02222                      END-IF                                          CL**1
02223                                                                      CL**1
02224                  ELSE                                                CL**1
02225                                                                      CL**1
02226                      IF MB016-END(MB016-BLOCK-SUB MB016-ITEM-SUB)    CL**1
02227                                                                      CL**1
02228                          IF MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB   CL**1
02229                                                    MB016-ITEM-SUB)   CL**1
02230                          =  MB016-END-OF-SELECTED-RANGE              CL**1
02231                                                                      CL**1
02232                              MOVE +0 TO                              CL**1
02233                                   MB016-END-OF-SELECTED-RANGE        CL**1
02234                          END-IF                                      CL**1
02235                                                                      CL**1
02236                      END-IF                                          CL**1
02237                                                                      CL**1
02238                  END-IF                                              CL**1
02239                                                                      CL**1
02240              END-IF                                                  CL**1
02241                                                                      CL**1
02242 ******************************************************************   CL**1
02243 *    IF THE ENTRY IN THE MAP EQUALS 'S', ADD 1 TO THE NUMBER OF      CL**1
02244 *    SELECTED ITEMS.                                                 CL**1
02245 *                                                                    CL**1
02246 *    IF THE ENTRY IN THE MAP EQUALS SPACES OR ERASE EOF, MOVE        CL**1
02247 *    SPACES TO THE ENTRY IN THE BLOCK.                               CL**1
02248 *                                                                    CL**1
02249 *    IF THE ENTRY IN THE MAP DOES NOT EQUAL SPACES OR ERASE EOF,     CL**1
02250 *    MOVE WHATEVER WAS ENTERED ON THE MAP TO THE ENTRY IN THE        CL**1
02251 *    BLOCK.                                                          CL**1
02252 *                                                                    CL**1
02253 ******************************************************************   CL**1
02254                                                                      CL**1
02255              IF MB017I-ASELI(PS-SUB) = PC-SELECTED                   CL**1
02256                  ADD +1 TO MB016-NUMBER-OF-ITEMS-SELECTED            CL**1
02257              END-IF                                                  CL**1
02258                                                                      CL**1
02259              IF (MB017I-ASELA(PS-SUB) = PC-ERASE-EOF) OR             CL**1
02260                 (MB017I-ASELI(PS-SUB) = SPACES)       OR             CL**1
02261                 (MB017I-ASELI(PS-SUB) = LOW-VALUES)                  CL**1
02262                  MOVE SPACES                TO                       CL**1
02263                       MB016-SELECTED-SW(MB016-BLOCK-SUB              CL**1
02264                                         MB016-ITEM-SUB)              CL**1
02265              ELSE                                                    CL**1
02266                  MOVE MB017I-ASELI(PS-SUB) TO                        CL**1
02267                       MB016-SELECTED-SW(MB016-BLOCK-SUB              CL**1
02268                                         MB016-ITEM-SUB)              CL**1
02269              END-IF                                                  CL**1
02270                                                                      CL**1
02271          END-IF                                                      CL**1
02272                                                                      CL**1
02273      END-IF.                                                         CL**1
02274                                                                      CL**1
02275      ADD +1 TO PV-ITEM-IN-USE.                                       CL**1
02276      ADD +1 TO PS-SUB.                                               CL**1
02277  EJECT                                                               CL**1
02278  F400-SETUP-INTER-APPL.                                              CL**1
02279                                                                      CL**1
02280 ******************************************************************   CL**1
02281 *    PLACING THE 4 DIGIT CODE FOR THIS TRANSACTION IN THE            CL**1
02282 *    STANDARD COMMAREA WILL TELL THE TRANSACTION THAT WE ARE         CL**1
02283 *    GOING TO WHETHER OR NOT THAT THEY CAN USE THE INTER             CL**1
02284 *    APPLICATION COMMAREA.                                           CL**1
02285 *                                                                    CL**1
02286 *    IN THE INTER APPLICATION COMMAREA, WE MUST PUT THE TEMPORARY    CL**1
02287 *    STORAGE QUEUE NAME AND THE NUMBER OF SELECTED ITEMS.  THIS      CL**1
02288 *    WILL ALLOW THE TRANSACTION WE ARE GOING TO, TO READ THE         CL**1
02289 *    QUEUE AND PROCESS THE SELECTED ITEMS.                           CL**1
02290 *                                                                    CL**1
02291 *    PERFORMED BY E300-NAVIGATE.                                     CL**1
02292 ******************************************************************   CL**1
02293                                                                      CL**1
02294      SET DP020-MB-APPL-AVAIL-LIST TO TRUE                            CL**1
02295                                                                      CL**1
02296      MOVE MB016-NUMBER-OF-ITEMS-SELECTED TO                          CL**1
02297           MB005-NUMBER-OF-SELECTED-ITEMS.                            CL**1
02298      MOVE MB016-CO-NUMBER                TO                          CL**1
02299           MB005-CO-NUMBER.                                           CL**1
02300      MOVE MB016-GMA-NUMBER               TO                          CL**1
02301           MB005-GMA-NUMBER.                                          CL**1
02302      MOVE MB016-DMA-NUMBER               TO                          CL**1
02303           MB005-DMA-NUMBER.                                          CL**1
02304      MOVE MB016-DEPT-NUMBER              TO                          CL**1
02305           MB005-DEPT-NUMBER.                                         CL**1
02306      MOVE MB016-MCLASS-NUMBER            TO                          CL**1
02307           MB005-MCLASS-NUMBER.                                       CL**1
02308      MOVE MB016-SCLASS-NUMBER            TO                          CL**1
02309           MB005-SCLASS-NUMBER.                                       CL**1
02310  EJECT                                                               CL**1
02311  F500-BROWSE.                                                        CL**1
02312                                                                      CL**1
02313 ******************************************************************   CL**1
02314 *    CALCULATE THE NEW TOP AND BOTTOM ITEM NUMBERS BASED ON WHERE    CL**1
02315 *    THE USER SPECIFIED TO GO ON THE LIST AND DETERMINE WHERE        CL**1
02316 *    THESE ITEMS CAN BE FOUND (I.E. ARRAY, TEMPORARY STORAGE).       CL**1
02317 *                                                                    CL**1
02318 *    PERFORMED BY E400-DISPLAY-TOP-OF-LIST.                          CL**1
02319 *    PERFORMED BY E500-BROWSE-BACKWARD.                              CL**1
02320 *    PERFORMED BY E600-BROWSE-FORWARD.                               CL**1
02321 *    PERFORMED BY E800-CHECK-FOR-JUMP-BROWSE.                        CL**1
02322 ******************************************************************   CL**1
02323                                                                      CL**1
02324 ******************************************************************   CL**1
02325 *    USER HITS PAGE BACKWARD WHEN ALREADY AT THE TOP OF THE LIST.    CL**1
02326 ******************************************************************   CL**1
02327                                                                      CL**1
02328      IF PV-TOP-ITEM < +1                                             CL**1
02329          MOVE +1                         TO PV-TOP-ITEM              CL**1
02330                                                                      CL**1
02331          IF PS-CURSOR-NOT-POSITIONED                                 CL**1
02332              MOVE PC-TSYMSG-00069        TO DP020-MSG-NUMBER         CL**1
02333              SET PS-CURSOR-POSITIONED    TO TRUE                     CL**1
02334              SET PS-INFORMATIONAL        TO TRUE                     CL**1
02335              SET DP020-MSG-INFORMATIONAL TO TRUE                     CL**1
02336          END-IF                                                      CL**1
02337      END-IF.                                                         CL**1
02338                                                                      CL**1
02339      IF MB016-NO-ITEMS-LEFT-ON-DB                                    CL**1
02340                                                                      CL**1
02341 ******************************************************************   CL**1
02342 *    USER HITS PAGE FORWARD WHEN ALREADY AT THE END OF THE LIST.     CL**1
02343 ******************************************************************   CL**1
02344                                                                      CL**1
02345          IF PV-TOP-ITEM > MB016-NUMBER-OF-ITEMS-READ                 CL**1
02346              IF  DP020-SRC-AID EQUAL DP016-ENTER                     CL**1
02347                  MOVE MB016-NUMBER-OF-ITEMS-READ TO PV-TOP-ITEM      CL**1
02348              ELSE                                                    CL**1
02349                  MOVE MB016-ITEM-AT-TOP-OF-PANEL TO PV-TOP-ITEM      CL**1
02350              END-IF                                                  CL**1
02351                                                                      CL**1
02352              IF PS-CURSOR-NOT-POSITIONED                             CL**1
02353                  MOVE -1                     TO ANAVCMDL             CL**1
02354                  SET DP020-MSG-INFORMATIONAL TO TRUE                 CL**1
02355                  SET PS-CURSOR-POSITIONED    TO TRUE                 CL**1
02356                  SET PS-INFORMATIONAL        TO TRUE                 CL**1
02357                  MOVE PC-TSYMSG-00070        TO DP020-MSG-NUMBER     CL**1
02358                                                                      CL**1
02359              END-IF                                                  CL**1
02360                                                                      CL**1
02361          END-IF                                                      CL**1
02362                                                                      CL**1
02363      END-IF.                                                         CL**1
02364                                                                      CL**1
02365      COMPUTE PV-BOTTOM-ITEM =                                        CL**1
02366          (PV-TOP-ITEM + PC-ITEMS-PER-PANEL) - 1.                     CL**1
02367                                                                      CL**1
02368      IF MB016-NO-ITEMS-LEFT-ON-DB                                    CL**1
02369                                                                      CL**1
02370 ******************************************************************   CL**1
02371 *    USER HITS PAGE FORWARD, AND THE NEXT PAGE WILL CAUSE US         CL**1
02372 *    TO BE AT THE END OF THE LIST.  IF TOP ITEM EQUALS 1, THE        CL**1
02373 *    MESSAGE WOULD HAVE BEEN FLAGGED ALREADY ABOVE.                  CL**1
02374 ******************************************************************   CL**1
02375                                                                      CL**1
02376          IF PV-BOTTOM-ITEM > MB016-NUMBER-OF-ITEMS-READ              CL**1
02377              MOVE MB016-NUMBER-OF-ITEMS-READ TO PV-BOTTOM-ITEM       CL**1
02378                                                                      CL**1
02379              IF PS-CURSOR-NOT-POSITIONED                             CL**1
02380                                                                      CL**1
02381                  IF PV-TOP-ITEM NOT = +1                             CL**1
02382                      SET PS-INFORMATIONAL        TO TRUE             CL**1
02383                      SET PS-CURSOR-POSITIONED    TO TRUE             CL**1
02384                      SET DP020-MSG-INFORMATIONAL TO TRUE             CL**1
02385                      MOVE PC-TSYMSG-00070        TO                  CL**1
02386                           DP020-MSG-NUMBER                           CL**1
02387                  END-IF                                              CL**1
02388                                                                      CL**1
02389              END-IF                                                  CL**1
02390                                                                      CL**1
02391          END-IF                                                      CL**1
02392                                                                      CL**1
02393      END-IF.                                                         CL**1
02394                                                                      CL**1
02395 ******************************************************************   CL**1
02396 *    DETEMINE WHETHER THE ITEMS WE NEED ARE IN WORKING STORAGE,      CL**1
02397 *    TEMPORARY STORAGE, OR NEITHER.                                  CL**1
02398 ******************************************************************   CL**1
02399                                                                      CL**1
02400      PERFORM G300-DETERMINE-WHAT-IS-WHERE.                           CL**1
02401                                                                      CL**1
02402      IF PS-TOP-ITEM-IN-ARRAY                                         CL**1
02403                                                                      CL**1
02404          IF PS-BOTTOM-ITEM-NOT-IN-ARRAY                              CL**1
02405                                                                      CL**1
02406 ******************************************************************   CL**1
02407 *    TOP ITEM IS IN WORKING STORAGE AND BOTTOM ITEM IS IN            CL**1
02408 *    TEMPORARY STORAGE.                                              CL**1
02409 ******************************************************************   CL**1
02410                                                                      CL**1
02411              IF PS-BOTTOM-ITEM-IN-TEMP                               CL**1
02412                  PERFORM G500-SCROLL-FORWARD                         CL**1
02413              ELSE                                                    CL**1
02414                                                                      CL**1
02415 ******************************************************************   CL**1
02416 *    TOP ITEM IS IN WORKING STORAGE BUT BOTTOM ITEM HAS NOT          CL**1
02417 *    BEEN READ YET.  IF THE LAST LOGICAL BLOCK IS NOT IN WORKING     CL**1
02418 *    STORAGE, READ IT INTO WORKING STORAGE SO WE CAN START FILLING   CL**1
02419 *    IT UP WITH THE NEW ITEMS READ.                                  CL**1
02420 ******************************************************************   CL**1
02421                                                                      CL**1
02422                  IF PS-LAST-BLOCK-NOT-IN-ARRAY                       CL**1
02423                      PERFORM G500-SCROLL-FORWARD                     CL**1
02424                  END-IF                                              CL**1
02425                                                                      CL**1
02426                  PERFORM G400-READ-ITEMS-INTO-ARRAY                  CL**1
02427                                                                      CL**1
02428              END-IF                                                  CL**1
02429                                                                      CL**1
02430          END-IF                                                      CL**1
02431                                                                      CL**1
02432      ELSE                                                            CL**1
02433                                                                      CL**1
02434 ******************************************************************   CL**1
02435 *    BOTTOM ITEM IS IN WORKING STORAGE AND TOP ITEM IS IN            CL**1
02436 *    TEMPORARY STORAGE.                                              CL**1
02437 ******************************************************************   CL**1
02438                                                                      CL**1
02439          IF PS-BOTTOM-ITEM-IN-ARRAY                                  CL**1
02440              PERFORM G600-SCROLL-BACKWARD                            CL**1
02441          ELSE                                                        CL**1
02442                                                                      CL**1
02443 ******************************************************************   CL**1
02444 *    TOP ITEM AND BOTTOM ITEM ARE NOT IN WORKING STORAGE.            CL**1
02445 ******************************************************************   CL**1
02446                                                                      CL**1
02447              IF PS-TOP-ITEM-IN-TEMP                                  CL**1
02448                  PERFORM G700-GET-TOP-ITEMS-BLOCK                    CL**1
02449                  PERFORM G300-DETERMINE-WHAT-IS-WHERE                CL**1
02450                                                                      CL**1
02451 ******************************************************************   CL**1
02452 *    TOP ITEM IS IN TEMPORARY STORAGE AND BOTTOM ITEM HAS NOT        CL**1
02453 *    BEEN READ YET.                                                  CL**1
02454 ******************************************************************   CL**1
02455                                                                      CL**1
02456                  IF PS-BOTTOM-ITEM-NOT-IN-ARRAY                      CL**1
02457                      PERFORM G400-READ-ITEMS-INTO-ARRAY              CL**1
02458                  END-IF                                              CL**1
02459                                                                      CL**1
02460              ELSE                                                    CL**1
02461                                                                      CL**1
02462 ******************************************************************   CL**1
02463 *    TOP AND BOTTOM ITEM HAVE NOT BEEN READ YET.  IF THE LAST        CL**1
02464 *    LOGICAL BLOCK IS NOT IN WORKING STORAGE, READ IT INTO           CL**1
02465 *    WORKING STORAGE SO WE CAN START FILLING IT UP WITH THE          CL**1
02466 *    NEW ITEMS READ.                                                 CL**1
02467 ******************************************************************   CL**1
02468                                                                      CL**1
02469                  IF PS-LAST-BLOCK-NOT-IN-ARRAY                       CL**1
02470                      PERFORM G800-GET-LAST-BLOCK-IN-TEMP             CL**1
02471                  END-IF                                              CL**1
02472                                                                      CL**1
02473                  PERFORM G400-READ-ITEMS-INTO-ARRAY                  CL**1
02474              END-IF                                                  CL**1
02475                                                                      CL**1
02476          END-IF                                                      CL**1
02477                                                                      CL**1
02478      END-IF.                                                         CL**1
02479                                                                      CL**1
02480      IF PV-TOP-ITEM = MB016-ITEM-AT-TOP-OF-PANEL                     CL**1
02481          SET PS-SAME-ITEMS-DISPLAYED      TO TRUE                    CL**1
02482      ELSE                                                            CL**1
02483          SET PS-DIFFERENT-ITEMS-DISPLAYED TO TRUE                    CL**1
02484          MOVE PV-TOP-ITEM TO MB016-ITEM-AT-TOP-OF-PANEL              CL**1
02485      END-IF.                                                         CL**1
02486                                                                      CL**1
02487      PERFORM G100-DISPLAY-PANEL.                                     CL**1
02488  EJECT                                                               CL**1
02489  F600-CLEAR-SELECTED-INDS.                                           CL**1
02490                                                                      CL**1
02491 ******************************************************************   CL**1
02492 *    MARK EACH ITEM AS BEING NOT SELECTED OR SELECTED BASED ON       CL**1
02493 *    WHICH FUNCTION KEY THAT WAS HIT (DESELECT ALL OR SELECT ALL)    CL**1
02494 *                                                                    CL**1
02495 *    PERFORMED BY E700-SELECT-DESELECT-ALL.                          CL**1
02496 ******************************************************************   CL**1
02497                                                                      CL**1
02498      IF MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB                       CL**1
02499                                MB016-ITEM-SUB) NOT = +0              CL**1
02500                                                                      CL**1
02501          IF DP020-FK-DESELECT(DP020-SRC-AID)                         CL**1
02502                                                                      CL**1
02503              IF NOT MB016-NO-SELECT(MB016-BLOCK-SUB                  CL**1
02504                                     MB016-ITEM-SUB)                  CL**1
02505                  SET MB016-NO-SELECT(MB016-BLOCK-SUB                 CL**1
02506                                      MB016-ITEM-SUB)   TO TRUE       CL**1
02507                                                                      CL**1
02508                  SET MB016-BLOCK-MODIFIED(MB016-BLOCK-SUB)           CL**1
02509                                                        TO TRUE       CL**1
02510              END-IF                                                  CL**1
02511          ELSE                                                        CL**1
02512              IF NOT MB016-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB)     CL**1
02513                  SET MB016-SELECT(MB016-BLOCK-SUB                    CL**1
02514                                   MB016-ITEM-SUB)      TO TRUE       CL**1
02515                  ADD +1 TO MB016-NUMBER-OF-ITEMS-SELECTED            CL**1
02516                  SET MB016-BLOCK-MODIFIED(MB016-BLOCK-SUB)           CL**1
02517                                                        TO TRUE       CL**1
02518              END-IF                                                  CL**1
02519                                                                      CL**1
02520          END-IF                                                      CL**1
02521                                                                      CL**1
02522      END-IF.                                                         CL**1
02523  EJECT                                                               CL**1
02524  G100-DISPLAY-PANEL.                                                 CL**1
02525                                                                      CL**1
02526 ******************************************************************   CL**1
02527 *    FILL THE MAP WITH THE NECESSARY DATA AND WRITE IT OUT.          CL**1
02528 *                                                                    CL**1
02529 ******************************************************************   CL**1
02530                                                                      CL**1
02531      PERFORM DP017-0000-GET-CURR-DATE-TIME.                          CL**1
02532      MOVE DP017-EDITED-TIME-HMS                                      CL**1
02533                                TO  ATIMEO.                           CL**1
02534                                                                      CL**1
02535      IF PS-SEND-MAP-N-DATA-FRSET                                     CL**1
02536          PERFORM DP002-0000-FORMAT-TITLE-LINES                       CL**1
02537      END-IF.                                                         CL**1
02538                                                                      CL**1
02539      PERFORM H200-FORMAT-PANEL-BODY.                                 CL**1
02540                                                                      CL**1
02541      PERFORM DP005-0000-FORMAT-MSG-LINES.                            CL**1
02542                                                                      CL**1
02543      IF PS-SEND-MAP-N-DATA-FRSET                                     CL**1
02544          PERFORM DP009-0000-LOAD-FK-LINES                            CL**1
02545      END-IF.                                                         CL**1
02546                                                                      CL**1
02547      PERFORM DP008-0000-WRITE-PANEL.                                 CL**1
02548  EJECT                                                               CL**1
02549  G200-MARK-SELECTED-INDS.                                            CL**1
02550                                                                      CL**1
02551 ******************************************************************   CL**1
02552 *    MARK EACH ITEM THAT FALLS WITHIN THE BEGINNING AND ENDING       CL**1
02553 *    RANGE AS BEING SELECTED.                                        CL**1
02554 *                                                                    CL**1
02555 *    PERFORMED BY F200-MARK-RANGE-AS-SELECTED.                       CL**1
02556 ******************************************************************   CL**1
02557                                                                      CL**1
02558      IF (MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB                      CL**1
02559                                 MB016-ITEM-SUB) >                    CL**1
02560          MB016-START-OF-SELECTED-RANGE) OR                           CL**1
02561                                                                      CL**1
02562         (MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB                      CL**1
02563                                 MB016-ITEM-SUB) =                    CL**1
02564          MB016-START-OF-SELECTED-RANGE)                              CL**1
02565                                                                      CL**1
02566          IF (MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB                  CL**1
02567                                     MB016-ITEM-SUB) <                CL**1
02568              MB016-END-OF-SELECTED-RANGE) OR                         CL**1
02569                                                                      CL**1
02570             (MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB                  CL**1
02571                                     MB016-ITEM-SUB) =                CL**1
02572              MB016-END-OF-SELECTED-RANGE)                            CL**1
02573                                                                      CL**1
02574              IF NOT MB016-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB)     CL**1
02575                                                                      CL**1
02576                  SET MB016-SELECT(MB016-BLOCK-SUB                    CL**1
02577                                   MB016-ITEM-SUB)          TO TRUE   CL**1
02578                                                                      CL**1
02579                  SET MB016-BLOCK-MODIFIED(MB016-BLOCK-SUB) TO TRUE   CL**1
02580                                                                      CL**1
02581                  ADD +1 TO MB016-NUMBER-OF-ITEMS-SELECTED            CL**1
02582              END-IF                                                  CL**1
02583                                                                      CL**1
02584          END-IF                                                      CL**1
02585                                                                      CL**1
02586      END-IF.                                                         CL**1
02587  EJECT                                                               CL**1
02588  G300-DETERMINE-WHAT-IS-WHERE.                                       CL**1
02589                                                                      CL**1
02590 ******************************************************************   CL**1
02591 *    DETERMINE WHETHER THE TOP ITEM AND BOTTOM ITEM CAN BE FOUND     CL**1
02592 *    IN THE ARRAY, IN TEMPORARY STORAGE, OR NEITHER.                 CL**1
02593 *                                                                    CL**1
02594 *    PERFORMED BY F500-BROWSE.                                       CL**1
02595 ******************************************************************   CL**1
02596                                                                      CL**1
02597 ******************************************************************   CL**1
02598 *    CALCULATE THE FIRST-ITEM-IN-ARRAY (WORKING   STORAGE)           CL**1
02599 *                  LAST-ITEM-IN-ARRAY  (WORKING   STORAGE)           CL**1
02600 *                  LAST-ITEM-IN-TEMP   (TEMPORARY STORAGE)           CL**1
02601 *                                                                    CL**1
02602 *    BY COMPARING THE TOP AND BOTTOM ITEMS TO THESE, WE CAN          CL**1
02603 *    FIGURE OUT WHERE THE ITEMS ARE STORED.                          CL**1
02604 ******************************************************************   CL**1
02605                                                                      CL**1
02606      MOVE MB016-LIST-ITEM-NUMBER(1 1) TO PV-FIRST-ITEM-IN-ARRAY.     CL**1
02607                                                                      CL**1
02608                                                                      CL**1
02609      COMPUTE PV-LAST-ITEM-IN-ARRAY =                                 CL**1
02610          (PV-FIRST-ITEM-IN-ARRAY +                                   CL**1
02611          (PC-MAX-BLOCKS-IN-ARRAY * PC-ITEMS-PER-BLOCK)) - 1.         CL**1
02612                                                                      CL**1
02613      IF PV-LAST-ITEM-IN-ARRAY > MB016-NUMBER-OF-ITEMS-READ           CL**1
02614          MOVE MB016-NUMBER-OF-ITEMS-READ TO PV-LAST-ITEM-IN-ARRAY    CL**1
02615      END-IF.                                                         CL**1
02616                                                                      CL**1
02617      COMPUTE PV-LAST-ITEM-IN-TEMP =                                  CL**1
02618          MB016-HIGHEST-BLOCK-WRITTEN * PC-ITEMS-PER-BLOCK.           CL**1
02619                                                                      CL**1
02620      IF PV-LAST-ITEM-IN-TEMP > MB016-NUMBER-OF-ITEMS-READ            CL**1
02621          MOVE MB016-NUMBER-OF-ITEMS-READ TO PV-LAST-ITEM-IN-TEMP     CL**1
02622      END-IF.                                                         CL**1
02623                                                                      CL**1
02624      IF (PV-TOP-ITEM > PV-FIRST-ITEM-IN-ARRAY) OR                    CL**1
02625         (PV-TOP-ITEM = PV-FIRST-ITEM-IN-ARRAY)                       CL**1
02626                                                                      CL**1
02627          IF (PV-TOP-ITEM < PV-LAST-ITEM-IN-ARRAY) OR                 CL**1
02628             (PV-TOP-ITEM = PV-LAST-ITEM-IN-ARRAY)                    CL**1
02629              SET PS-TOP-ITEM-IN-ARRAY     TO TRUE                    CL**1
02630          ELSE                                                        CL**1
02631              SET PS-TOP-ITEM-NOT-IN-ARRAY TO TRUE                    CL**1
02632          END-IF                                                      CL**1
02633                                                                      CL**1
02634      ELSE                                                            CL**1
02635          SET PS-TOP-ITEM-NOT-IN-ARRAY TO TRUE                        CL**1
02636      END-IF.                                                         CL**1
02637                                                                      CL**1
02638      IF (PV-BOTTOM-ITEM > PV-FIRST-ITEM-IN-ARRAY) OR                 CL**1
02639         (PV-BOTTOM-ITEM = PV-FIRST-ITEM-IN-ARRAY)                    CL**1
02640                                                                      CL**1
02641          IF (PV-BOTTOM-ITEM < PV-LAST-ITEM-IN-ARRAY) OR              CL**1
02642             (PV-BOTTOM-ITEM = PV-LAST-ITEM-IN-ARRAY)                 CL**1
02643              SET PS-BOTTOM-ITEM-IN-ARRAY     TO TRUE                 CL**1
02644          ELSE                                                        CL**1
02645              SET PS-BOTTOM-ITEM-NOT-IN-ARRAY TO TRUE                 CL**1
02646          END-IF                                                      CL**1
02647                                                                      CL**1
02648      ELSE                                                            CL**1
02649          SET PS-BOTTOM-ITEM-NOT-IN-ARRAY TO TRUE                     CL**1
02650      END-IF.                                                         CL**1
02651                                                                      CL**1
02652      IF (PV-TOP-ITEM < PV-LAST-ITEM-IN-TEMP) OR                      CL**1
02653         (PV-TOP-ITEM = PV-LAST-ITEM-IN-TEMP)                         CL**1
02654          SET PS-TOP-ITEM-IN-TEMP     TO TRUE                         CL**1
02655      ELSE                                                            CL**1
02656          SET PS-TOP-ITEM-NOT-IN-TEMP TO TRUE                         CL**1
02657      END-IF.                                                         CL**1
02658                                                                      CL**1
02659      IF (PV-BOTTOM-ITEM < PV-LAST-ITEM-IN-TEMP) OR                   CL**1
02660         (PV-BOTTOM-ITEM = PV-LAST-ITEM-IN-TEMP)                      CL**1
02661          SET PS-BOTTOM-ITEM-IN-TEMP     TO TRUE                      CL**1
02662      ELSE                                                            CL**1
02663          SET PS-BOTTOM-ITEM-NOT-IN-TEMP TO TRUE                      CL**1
02664      END-IF.                                                         CL**1
02665                                                                      CL**1
02666      IF PV-LAST-ITEM-IN-TEMP > PV-LAST-ITEM-IN-ARRAY                 CL**1
02667          SET PS-LAST-BLOCK-NOT-IN-ARRAY TO TRUE                      CL**1
02668      ELSE                                                            CL**1
02669          SET PS-LAST-BLOCK-IN-ARRAY     TO TRUE                      CL**1
02670      END-IF.                                                         CL**1
02671  EJECT                                                               CL**1
02672  G400-READ-ITEMS-INTO-ARRAY.                                         CL**1
02673                                                                      CL**1
02674 ******************************************************************   CL**1
02675 *    DETERMINE THE SPOT IN THE ARRAY WHERE THE LAST ITEM FROM        CL**1
02676 *    THE DATA BASE WAS ADDED SO WE KNOW WHERE TO ADD THE NEW         CL**1
02677 *    ITEMS.                                                          CL**1
02678 *                                                                    CL**1
02679 *    PERFORMED BY F500-BROWSE.                                       CL**1
02680 ******************************************************************   CL**1
02681                                                                      CL**1
02682      COMPUTE PS-ITEM-SUB =                                           CL**1
02683          (MB016-NUMBER-OF-ITEMS-READ -                               CL**1
02684           MB016-LIST-ITEM-NUMBER(1 1)) + 1.                          CL**1
02685                                                                      CL**1
02686      MOVE PS-ITEM-SUB TO MB016-ITEM-SUB.                             CL**1
02687                                                                      CL**1
02688      IF MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK                          CL**1
02689          SUBTRACT PC-ITEMS-PER-BLOCK FROM MB016-ITEM-SUB             CL**1
02690                                                                      CL**1
02691          MOVE PC-MAX-BLOCKS-IN-ARRAY TO MB016-BLOCK-SUB              CL**1
02692      ELSE                                                            CL**1
02693          MOVE +1                     TO MB016-BLOCK-SUB              CL**1
02694      END-IF.                                                         CL**1
02695                                                                      CL**1
02696      MOVE PV-BOTTOM-ITEM TO PV-HIGHEST-ITEM-TO-BE-READ.              CL**1
02697                                                                      CL**1
02698      PERFORM D500-OPEN-CURSOR.                                       CL**1
02699                                                                      CL**1
02700      PERFORM H100-READ-ITEMS-FROM-DB.                                CL**1
02701      IF  PV-ROW-COUNT EQUAL ZERO                                     CL**2
02702          MOVE MB016-ITEM-AT-TOP-OF-PANEL                             CL**2
02703                          TO  PV-TOP-ITEM                             CL**2
02704      END-IF.                                                         CL**2
02705                                                                      CL**1
02706      IF MB016-NO-ITEMS-LEFT-ON-DB                                    CL**1
02707                                                                      CL**1
02708          IF PV-TOP-ITEM > MB016-NUMBER-OF-ITEMS-READ                 CL**1
02709              MOVE MB016-NUMBER-OF-ITEMS-READ TO PV-TOP-ITEM          CL**1
02710          END-IF                                                      CL**1
02711                                                                      CL**1
02712          MOVE PC-TSYMSG-00070        TO DP020-MSG-NUMBER             CL**1
02713          SET DP020-MSG-INFORMATIONAL TO TRUE                         CL**1
02714          SET PS-INFORMATIONAL        TO TRUE                         CL**1
02715      END-IF.                                                         CL**1
02716  EJECT                                                               CL**1
02717  G500-SCROLL-FORWARD.                                                CL**1
02718                                                                      CL**1
02719 ******************************************************************   CL**1
02720 *    IF THE TOP ITEM WE NEED IS IN THE ARRAY, BUT THE BOTTOM         CL**1
02721 *    ITEM WE NEED IS IN TEMPORARY STORAGE OR HAS NOT BEEN READ       CL**1
02722 *    YET, WRITE OUT THE 1ST BLOCK IN THE ARRAY TO TEMPORARY          CL**1
02723 *    STORAGE.  MOVE THE 2ND BLOCK IN THE ARRAY TO THE 1ST BLOCK      CL**1
02724 *    AND READ THE BLOCK NEEDED INTO THE 2ND BLOCK OF THE ARRAY.      CL**1
02725 *    THE TOP ITEM WILL BE LOCATED IN THE 1ST BLOCK, AND THE          CL**1
02726 *    BOTTOM ITEM WILL EITHER BE LOCATED IN THE 2ND BLOCK OR          CL**1
02727 *    WILL BE PLACED IN THE 2ND BLOCK.                                CL**1
02728 *                                                                    CL**1
02729 *    PERFORMED BY F500-BROWSE.                                       CL**1
02730 ******************************************************************   CL**1
02731                                                                      CL**1
02732      MOVE +1 TO MB016-BLOCK-SUB.                                     CL**1
02733                                                                      CL**1
02734      PERFORM Z150-WRITE-TEMP-STORAGE.                                CL**1
02735                                                                      CL**1
02736      MOVE MB016-BLOCK-ENTRIES(PC-MAX-BLOCKS-IN-ARRAY) TO             CL**1
02737           MB016-BLOCK-ENTRIES(MB016-BLOCK-SUB).                      CL**1
02738                                                                      CL**1
02739      COMPUTE PV-TEMP-BLOCK-NUMBER =                                  CL**1
02740          1 + ((PV-BOTTOM-ITEM - 1) / PC-ITEMS-PER-BLOCK).            CL**1
02741                                                                      CL**1
02742      MOVE PV-TEMP-BLOCK-NUMBER TO PV-BLOCK-NUMBER.                   CL**1
02743                                                                      CL**1
02744      ADD +1 TO MB016-BLOCK-SUB.                                      CL**1
02745                                                                      CL**1
02746      PERFORM Z100-READ-TEMP-STORAGE.                                 CL**1
02747  EJECT                                                               CL**1
02748  G600-SCROLL-BACKWARD.                                               CL**1
02749                                                                      CL**1
02750 ******************************************************************   CL**1
02751 *    IF TOP ITEM WE NEED IS NOT IN THE ARRAY, BUT THE BOTTOM         CL**1
02752 *    ITEM IS, WRITE BOTH BLOCKS TO TEMPORARY STORAGE.  MOVE          CL**1
02753 *    THE 1ST BLOCK IN THE ARRAY TO THE 2ND BLOCK OF THE ARRAY.       CL**1
02754 *    READ THE BLOCK THAT CONTAINS THE TOP ITEM INTO THE 1ST BLOCK    CL**1
02755 *    OF THE ARRAY.                                                   CL**1
02756 *                                                                    CL**1
02757 *    PERFORMED BY F500-BROWSE.                                       CL**1
02758 ******************************************************************   CL**1
02759                                                                      CL**1
02760      PERFORM H400-WRITE-OUT-LAST-BLOCKS.                             CL**1
02761                                                                      CL**1
02762      MOVE +1                                   TO                    CL**1
02763           MB016-BLOCK-SUB.                                           CL**1
02764                                                                      CL**1
02765      MOVE MB016-BLOCK-ENTRIES(MB016-BLOCK-SUB) TO                    CL**1
02766           MB016-BLOCK-ENTRIES(PC-MAX-BLOCKS-IN-ARRAY).               CL**1
02767                                                                      CL**1
02768      COMPUTE PV-TEMP-BLOCK-NUMBER =                                  CL**1
02769          1 + ((PV-TOP-ITEM - 1) / PC-ITEMS-PER-BLOCK).               CL**1
02770                                                                      CL**1
02771      MOVE PV-TEMP-BLOCK-NUMBER TO PV-BLOCK-NUMBER.                   CL**1
02772                                                                      CL**1
02773      PERFORM Z100-READ-TEMP-STORAGE.                                 CL**1
02774  EJECT                                                               CL**1
02775  G700-GET-TOP-ITEMS-BLOCK.                                           CL**1
02776                                                                      CL**1
02777 ******************************************************************   CL**1
02778 *    IF BOTH THE TOP AND BOTTOM ITEMS WE NEED ARE NOT IN THE         CL**1
02779 *    ARRAY, BUT THE TOP ITEM IS IN TEMPORARY STORAGE, WRITE BOTH     CL**1
02780 *    BLOCKS IN THE ARRAY TO TEMPORARY STORAGE.  READ THE BLOCK       CL**1
02781 *    THAT CONTAINS THE TOP ITEM INTO THE 1ST BLOCK OF THE ARRAY.     CL**1
02782 *    IF THERE IS ANOTHER BLOCK IN TEMPORARY STORAGE FOLLOWING        CL**1
02783 *    THE ONE JUST READ, READ THAT ONE INTO THE 2ND BLOCK OF THE      CL**1
02784 *    ARRAY, OTHERWISE INITIALIZE THE 2ND BLOCK OF THE ARRAY.         CL**1
02785 *                                                                    CL**1
02786 *    PERFORMED BY F500-BROWSE.                                       CL**1
02787 ******************************************************************   CL**1
02788                                                                      CL**1
02789      PERFORM H400-WRITE-OUT-LAST-BLOCKS.                             CL**1
02790                                                                      CL**1
02791      COMPUTE PV-TEMP-BLOCK-NUMBER =                                  CL**1
02792          1 + ((PV-TOP-ITEM - 1) / PC-ITEMS-PER-BLOCK).               CL**1
02793                                                                      CL**1
02794      MOVE PV-TEMP-BLOCK-NUMBER TO PV-BLOCK-NUMBER.                   CL**1
02795      MOVE +1                   TO MB016-BLOCK-SUB.                   CL**1
02796                                                                      CL**1
02797      PERFORM Z100-READ-TEMP-STORAGE.                                 CL**1
02798                                                                      CL**1
02799      ADD +1 TO PV-BLOCK-NUMBER.                                      CL**1
02800      ADD +1 TO MB016-BLOCK-SUB.                                      CL**1
02801                                                                      CL**1
02802      IF (PV-BLOCK-NUMBER < MB016-HIGHEST-BLOCK-WRITTEN) OR           CL**1
02803         (PV-BLOCK-NUMBER = MB016-HIGHEST-BLOCK-WRITTEN)              CL**1
02804          PERFORM Z100-READ-TEMP-STORAGE                              CL**1
02805      ELSE                                                            CL**1
02806          PERFORM I100-INITIALIZE-BLOCK                               CL**1
02807      END-IF.                                                         CL**1
02808  EJECT                                                               CL**1
02809  G800-GET-LAST-BLOCK-IN-TEMP.                                        CL**1
02810                                                                      CL**1
02811 ******************************************************************   CL**1
02812 *    IF BOTH THE TOP AND BOTTOM ITEMS WE NEED ARE NOT IN THE         CL**1
02813 *    ARRAY AND BOTH ITEMS ARE NOT IN TEMPORARY STORAGE (THE          CL**1
02814 *    ITEMS HAVE NOT BEEN READ FROM THE DATA BASE YET), AND THE       CL**1
02815 *    LAST ITEM READ FROM THE DATA BASE IS IN TEMPORARY STORAGE,      CL**1
02816 *    WRITE BOTH BLOCKS IN THE ARRAY TO TEMPORARY STORAGE.  READ      CL**1
02817 *    THE HIGHEST BLOCK IN TEMPORARY STORAGE INTO THE 1ST BLOCK       CL**1
02818 *    OF THE ARRAY, AND INITIALIZE THE 2ND BLOCK IN THE ARRAY.        CL**1
02819 *    THE 2ND BLOCK WILL BE USED FOR THE NEW ITEMS TO BE READ.        CL**1
02820 *    THE 1ST BLOCK WILL NOW CONTAIN THE ITEMS THAT WERE LAST         CL**1
02821 *    READ FROM THE DATA BASE.                                        CL**1
02822 *                                                                    CL**1
02823 *    PERFORMED BY F500-BROWSE.                                       CL**1
02824 ******************************************************************   CL**1
02825                                                                      CL**1
02826      PERFORM H400-WRITE-OUT-LAST-BLOCKS.                             CL**1
02827                                                                      CL**1
02828      MOVE MB016-HIGHEST-BLOCK-WRITTEN TO PV-BLOCK-NUMBER.            CL**1
02829      MOVE +1                          TO MB016-BLOCK-SUB.            CL**1
02830                                                                      CL**1
02831      PERFORM Z100-READ-TEMP-STORAGE.                                 CL**1
02832                                                                      CL**1
02833      ADD +1 TO MB016-BLOCK-SUB.                                      CL**1
02834                                                                      CL**1
02835      PERFORM I100-INITIALIZE-BLOCK.                                  CL**1
02836  EJECT                                                               CL**1
02837  H100-READ-ITEMS-FROM-DB.                                            CL**1
02838                                                                      CL**1
02839 ******************************************************************   CL**1
02840 *    READ THE ITEMS FROM THE DATA BASE AND MOVE THEM INTO THE        CL**1
02841 *    BLOCKS IN THE ARRAY.  WHENEVER BOTH BLOCKS BECOME FULL,         CL**1
02842 *    WRITE OUT THE 1ST BLOCK TO TEMPORARY STORAGE, MOVE THE 2ND      CL**1
02843 *    BLOCK IN THE ARRAY TO THE 1ST BLOCK, AND INITIALIZE THE         CL**1
02844 *    2ND BLOCK MAKING IT AVAILABLE TO BE USED.                       CL**1
02845 *                                                                    CL**1
02846 ******************************************************************   CL**1
02847                                                                      CL**1
02848      PERFORM                                                         CL**1
02849          UNTIL (MB016-NO-ITEMS-LEFT-ON-DB)   OR                      CL**1
02850                (MB016-NUMBER-OF-ITEMS-READ =                         CL**1
02851                 PV-HIGHEST-ITEM-TO-BE-READ)                          CL**1
02852                                                                      CL**1
02853          IF MB016-ITEM-SUB < PC-ITEMS-PER-BLOCK                      CL**1
02854              ADD +1 TO MB016-ITEM-SUB                                CL**1
02855          ELSE                                                        CL**1
02856              ADD +1 TO MB016-BLOCK-SUB                               CL**1
02857                                                                      CL**1
02858              MOVE +1 TO MB016-ITEM-SUB                               CL**1
02859                                                                      CL**1
02860              IF MB016-BLOCK-SUB > PC-MAX-BLOCKS-IN-ARRAY             CL**1
02861                  MOVE +1 TO MB016-BLOCK-SUB                          CL**1
02862                                                                      CL**1
02863                  PERFORM Z150-WRITE-TEMP-STORAGE                     CL**1
02864                                                                      CL**1
02865                  MOVE MB016-BLOCK-ENTRIES(PC-MAX-BLOCKS-IN-ARRAY)    CL**1
02866                  TO   MB016-BLOCK-ENTRIES(MB016-BLOCK-SUB)           CL**1
02867                                                                      CL**1
02868                  ADD +1 TO MB016-BLOCK-SUB                           CL**1
02869                                                                      CL**1
02870                  PERFORM I100-INITIALIZE-BLOCK                       CL**1
02871              END-IF                                                  CL**1
02872                                                                      CL**1
02873          END-IF                                                      CL**1
02874                                                                      CL**1
02875          PERFORM H300-READ-ITEMS-FROM-DATABASE                       CL**1
02876                                                                      CL**1
02877          IF MB016-ITEMS-LEFT-ON-DB                                   CL**1
02878              ADD +1 TO MB016-NUMBER-OF-ITEMS-READ                    CL**1
02879                        PV-ROW-COUNT                                  CL**1
02880                                                                      CL**1
02881              MOVE MB016-NUMBER-OF-ITEMS-READ TO                      CL**1
02882                   MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB             CL**1
02883                                          MB016-ITEM-SUB)             CL**1
02884                                                                      CL**1
02885              MOVE MDSEAR-GMA-NBR             TO                      CL**1
02886                   MB016-ITEM-GMA(MB016-BLOCK-SUB                     CL**1
02887                                  MB016-ITEM-SUB)                     CL**1
02888              MOVE MDSEAR-DMA-NBR             TO                      CL**1
02889                   MB016-ITEM-DMA(MB016-BLOCK-SUB                     CL**1
02890                                  MB016-ITEM-SUB)                     CL**1
02891              MOVE MDSEAR-DEPT-NBR            TO                      CL**1
02892                   MB016-ITEM-DEPT(MB016-BLOCK-SUB                    CL**1
02893                                   MB016-ITEM-SUB)                    CL**1
02894              MOVE MDSEAR-MAJ-CL-NBR          TO                      CL**1
02895                   MB016-ITEM-MCLASS(MB016-BLOCK-SUB                  CL**1
02896                                     MB016-ITEM-SUB)                  CL**1
02897              MOVE MDSEAR-SUB-CL-NBR          TO                      CL**1
02898                   MB016-ITEM-SCLASS(MB016-BLOCK-SUB                  CL**1
02899                                     MB016-ITEM-SUB)                  CL**1
02900              MOVE MDSEAR-MDSELV-CDE          TO                      CL**1
02901                   MB016-ITEM-LEVEL(MB016-BLOCK-SUB                   CL**1
02902                                    MB016-ITEM-SUB)                   CL**1
02903              MOVE APLAVL-APLSYS-CDE          TO                      CL**1
02904                   MB016-ITEM-APLS-CDE(MB016-BLOCK-SUB                CL**1
02905                                    MB016-ITEM-SUB)                   CL**1
02906              MOVE APLAVL-MDSEAR-STRT-DTE     TO                      CL**1
02907                   PV-DB2-DATE                                        CL**1
02908              MOVE PV-DB2-YEAR                TO                      CL**1
02909                   PV-PANEL-YEAR                                      CL**1
02910              MOVE PV-DB2-MONTH               TO                      CL**1
02911                   PV-PANEL-MONTH                                     CL**1
02912              MOVE PV-DB2-DAY                 TO                      CL**1
02913                   PV-PANEL-DAY                                       CL**1
02914              MOVE PV-PANEL-DATE              TO                      CL**1
02915                   MB016-ITEM-STR-DATE(MB016-BLOCK-SUB                CL**1
02916                                       MB016-ITEM-SUB)                CL**1
02917              IF  APLAVL-MDSEAR-END-DTE EQUAL PC-NO-DISPLAY-DATE      CL**1
02918                  MOVE SPACES                 TO                      CL**1
02919                   MB016-ITEM-END-DATE(MB016-BLOCK-SUB                CL**1
02920                                       MB016-ITEM-SUB)                CL**1
02921              ELSE                                                    CL**1
02922                  MOVE APLAVL-MDSEAR-END-DTE  TO                      CL**1
02923                       PV-DB2-DATE                                    CL**1
02924                  MOVE PV-DB2-YEAR            TO                      CL**1
02925                       PV-PANEL-YEAR                                  CL**1
02926                  MOVE PV-DB2-MONTH           TO                      CL**1
02927                       PV-PANEL-MONTH                                 CL**1
02928                  MOVE PV-DB2-DAY             TO                      CL**1
02929                       PV-PANEL-DAY                                   CL**1
02930                  MOVE PV-PANEL-DATE          TO                      CL**1
02931                       MB016-ITEM-END-DATE(MB016-BLOCK-SUB            CL**1
02932                                           MB016-ITEM-SUB)            CL**1
02933              END-IF                                                  CL**1
02934 *                                                                    CL**1
02935              MOVE MDSEAR-DESC                TO                      CL**1
02936                   MB016-ITEM-DESC(MB016-BLOCK-SUB                    CL**1
02937                                   MB016-ITEM-SUB)                    CL**1
02938                                                                      CL**1
02939              IF  APLAVL-MDSEAR-END-DTE LESS MB016-SAVE-CUR-DATE      CL**1
02940                  MOVE DP015-TURQUOISE        TO                      CL**1
02941                  MB016-COLOR(MB016-BLOCK-SUB MB016-ITEM-SUB)         CL**1
02942              ELSE                                                    CL**1
02943                  MOVE DP015-BLUE             TO                      CL**1
02944                  MB016-COLOR(MB016-BLOCK-SUB MB016-ITEM-SUB)         CL**1
02945              END-IF                                                  CL**1
02946                                                                      CL**1
02947              SET MB016-BLOCK-MODIFIED(MB016-BLOCK-SUB) TO TRUE       CL**1
02948          END-IF                                                      CL**1
02949                                                                      CL**1
02950      END-PERFORM.                                                    CL**1
02951 *                                                                    CL**1
02952      IF  PV-ROW-COUNT GREATER THAN ZERO                              CL**1
02953          MOVE MDSEAR-GMA-NBR      TO MB016-SAVE-GMA-NBR              CL**1
02954          MOVE MDSEAR-DMA-NBR      TO MB016-SAVE-DMA-NBR              CL**1
02955          MOVE MDSEAR-DEPT-NBR     TO MB016-SAVE-DPT-NBR              CL**1
02956          MOVE MDSEAR-MAJ-CL-NBR   TO MB016-SAVE-MCL-NBR              CL**1
02957          MOVE MDSEAR-SUB-CL-NBR   TO MB016-SAVE-SCL-NBR              CL**1
02958          MOVE MDSEAR-LIST-SEQ-NBR TO MB016-SAVE-SEQ-NBR              CL**1
02959          MOVE APLAVL-APLSYS-CDE   TO MB016-HOLD-APLSYS-CDE           CL**1
02960          SET PS-SELECTIONS-FOUND  TO TRUE                            CL**1
02961      END-IF.                                                         CL**1
02962                                                                      CL**1
02963      IF MB016-NO-ITEMS-LEFT-ON-DB                                    CL**1
02964                                                                      CL**1
02965          EVALUATE TRUE                                               CL**1
02966                                                                      CL**1
02967               WHEN MB016-OPEN-MERCH-CURSOR                           CL**1
02968                    PERFORM Z220-CLOSE-MERCH-CURSOR                   CL**1
02969                                                                      CL**1
02970               WHEN MB016-OPEN-GMA-CURSOR                             CL**1
02971                    PERFORM Z320-CLOSE-GMA-CURSOR                     CL**1
02972                                                                      CL**1
02973               WHEN MB016-OPEN-DMA-CURSOR                             CL**1
02974                    PERFORM Z420-CLOSE-DMA-CURSOR                     CL**1
02975                                                                      CL**1
02976               WHEN MB016-OPEN-DPT-CURSOR                             CL**1
02977                    PERFORM Z520-CLOSE-DPT-CURSOR                     CL**1
02978                                                                      CL**1
02979               WHEN MB016-OPEN-MCL-CURSOR                             CL**1
02980                    PERFORM Z620-CLOSE-MCL-CURSOR                     CL**1
02981                                                                      CL**1
02982               WHEN MB016-OPEN-SCL-CURSOR                             CL**1
02983                    PERFORM Z720-CLOSE-SCL-CURSOR                     CL**1
02984                                                                      CL**1
02985               WHEN MB016-OPEN-ALL-APLAVL                             CL**1
02986                    PERFORM Z820-CLOSE-ALL-APLAVL                     CL**1
02987                                                                      CL**1
02988          END-EVALUATE                                                CL**1
02989                                                                      CL**1
02990          IF MB016-NUMBER-OF-ITEMS-READ = +0                          CL**1
02991              SET PS-NO-SELECTIONS-FOUND TO TRUE                      CL**1
02992          ELSE                                                        CL**1
02993              SET PS-SELECTIONS-FOUND    TO TRUE                      CL**1
02994          END-IF                                                      CL**1
02995      END-IF.                                                         CL**1
02996  EJECT                                                               CL**1
02997  H200-FORMAT-PANEL-BODY.                                             CL**1
02998                                                                      CL**1
02999 ******************************************************************   CL**1
03000 *    FORMAT THE MAP AND DETERMINE THE CURSOR POSITION.               CL**1
03001 *                                                                    CL**1
03002 ******************************************************************   CL**1
03003                                                                      CL**1
03004      PERFORM I700-FORMAT-FROM-TO-LINE.                               CL**1
03005      PERFORM I200-FORMAT-LIST-LINES.                                 CL**1
03006      PERFORM I300-FORMAT-NR-SELECTED.                                CL**1
03007      PERFORM I800-SET-CURSOR-POSITION.                               CL**1
03008  EJECT                                                               CL**1
03009  H300-READ-ITEMS-FROM-DATABASE.                                      CL**1
03010                                                                      CL**1
03011 ******************************************************************   CL**1
03012 *    READ ITEMS FROM DATABASE.                                       CL**1
03013 *         PERFORMS THE READ BASES ON THE CURSOR THAT IS OPEN         CL**1
03014 ******************************************************************   CL**1
03015                                                                      CL**1
03016      SET PS-DB2-RETRY TO TRUE.                                       CL**1
03017                                                                      CL**1
03018      SET PS-DO-NOT-HAVE-GMA-ITEM TO TRUE.                            CL**1
03019      SET PS-DO-NOT-HAVE-DMA-ITEM TO TRUE.                            CL**1
03020      SET PS-DO-NOT-HAVE-DPT-ITEM TO TRUE.                            CL**1
03021      SET PS-DO-NOT-HAVE-MCL-ITEM TO TRUE.                            CL**1
03022      SET PS-DO-NOT-HAVE-SCL-ITEM TO TRUE.                            CL**1
03023                                                                      CL**1
03024      EVALUATE TRUE                                                   CL**1
03025                                                                      CL**1
03026           WHEN MB016-OPEN-MERCH-CURSOR                               CL**1
03027                PERFORM Z210-READ-MERCH-AREA                          CL**1
03028                    UNTIL PS-DB2-OK                                   CL**1
03029                                                                      CL**1
03030           WHEN MB016-OPEN-GMA-CURSOR                                 CL**1
03031                PERFORM H305-PROCESS-GMA-CURSOR                       CL**1
03032                    UNTIL PS-HAVE-GMA-ITEM                            CL**1
03033                    OR MB016-NO-ITEMS-LEFT-ON-DB                      CL**1
03034                                                                      CL**1
03035           WHEN MB016-OPEN-DMA-CURSOR                                 CL**1
03036                PERFORM H310-PROCESS-DMA-CURSOR                       CL**1
03037                    UNTIL PS-HAVE-DMA-ITEM                            CL**1
03038                    OR MB016-NO-ITEMS-LEFT-ON-DB                      CL**1
03039                                                                      CL**1
03040           WHEN MB016-OPEN-DPT-CURSOR                                 CL**1
03041                PERFORM H320-PROCESS-DPT-CURSOR                       CL**1
03042                    UNTIL PS-HAVE-DPT-ITEM                            CL**1
03043                    OR MB016-NO-ITEMS-LEFT-ON-DB                      CL**1
03044                                                                      CL**1
03045           WHEN MB016-OPEN-MCL-CURSOR                                 CL**1
03046                PERFORM H330-PROCESS-MCL-CURSOR                       CL**1
03047                    UNTIL PS-HAVE-MCL-ITEM                            CL**1
03048                    OR MB016-NO-ITEMS-LEFT-ON-DB                      CL**1
03049                                                                      CL**1
03050           WHEN MB016-OPEN-SCL-CURSOR                                 CL**1
03051                PERFORM H340-PROCESS-SCL-CURSOR                       CL**1
03052                    UNTIL PS-HAVE-SCL-ITEM                            CL**1
03053                    OR MB016-NO-ITEMS-LEFT-ON-DB                      CL**1
03054                                                                      CL**1
03055           WHEN MB016-OPEN-ALL-APLAVL                                 CL**1
03056                PERFORM Z810-READ-ALL-APLAVL                          CL**1
03057                    UNTIL PS-DB2-OK                                   CL**1
03058                                                                      CL**1
03059      END-EVALUATE.                                                   CL**1
03060  EJECT                                                               CL**1
03061  H305-PROCESS-GMA-CURSOR.                                            CL**1
03062                                                                      CL**1
03063 ******************************************************************   CL**1
03064 *    READ ITEMS FROM DATABASE USING THE GMA CURSOR                   CL**1
03065 *       CHECK THE GMA NUMBER AFTER THE FETCH TO SEE IF IT IS         CL**1
03066 *       WITHIN THE REQUESTED RANGE                                   CL**1
03067 ******************************************************************   CL**1
03068                                                                      CL**1
03069      SET PS-DB2-RETRY TO TRUE.                                       CL**1
03070                                                                      CL**1
03071      PERFORM Z310-READ-GMA-AREA                                      CL**1
03072          UNTIL PS-DB2-OK                                             CL**1
03073                                                                      CL**1
03074      IF PS-DB2-OK                                                    CL**1
03075          IF MB016-ITEMS-LEFT-ON-DB                                   CL**1
03076                                                                      CL**1
03077              EVALUATE TRUE                                           CL**1
03078                                                                      CL**1
03079                  WHEN MB016-ALL-GMAS                                 CL**1
03080                       SET PS-HAVE-GMA-ITEM TO TRUE                   CL**1
03081                                                                      CL**1
03082                  WHEN MB016-GMA-NUMBER = MDSEAR-GMA-NBR              CL**1
03083                       SET PS-HAVE-DMA-ITEM TO TRUE                   CL**1
03084                                                                      CL**1
03085              END-EVALUATE                                            CL**1
03086                                                                      CL**1
03087          END-IF                                                      CL**1
03088      ELSE                                                            CL**1
03089          SET PS-HAVE-GMA-ITEM TO TRUE                                CL**1
03090      END-IF.                                                         CL**1
03091  EJECT                                                               CL**1
03092  H310-PROCESS-DMA-CURSOR.                                            CL**1
03093                                                                      CL**1
03094 ******************************************************************   CL**1
03095 *    READ ITEMS FROM DATABASE USING THE DMA CURSOR                   CL**1
03096 *       CHECK THE GMA NUMBER AFTER THE FETCH TO SEE IF IT IS         CL**1
03097 *       WITHIN THE REQUESTED RANGE                                   CL**1
03098 ******************************************************************   CL**1
03099                                                                      CL**1
03100      SET PS-DB2-RETRY TO TRUE.                                       CL**1
03101                                                                      CL**1
03102      PERFORM Z410-READ-DMA-AREA                                      CL**1
03103          UNTIL PS-DB2-OK.                                            CL**1
03104                                                                      CL**1
03105      IF PS-DB2-OK                                                    CL**1
03106          IF MB016-ITEMS-LEFT-ON-DB                                   CL**1
03107                                                                      CL**1
03108              EVALUATE TRUE                                           CL**1
03109                                                                      CL**1
03110                  WHEN MB016-ALL-GMAS                                 CL**1
03111                       SET PS-HAVE-DMA-ITEM TO TRUE                   CL**1
03112                                                                      CL**1
03113                  WHEN MB016-GMA-NUMBER = MDSEAR-GMA-NBR              CL**1
03114                       SET PS-HAVE-DMA-ITEM TO TRUE                   CL**1
03115                                                                      CL**1
03116              END-EVALUATE                                            CL**1
03117                                                                      CL**1
03118          END-IF                                                      CL**1
03119      ELSE                                                            CL**1
03120          SET PS-HAVE-DMA-ITEM TO TRUE                                CL**1
03121      END-IF.                                                         CL**1
03122  EJECT                                                               CL**1
03123  H320-PROCESS-DPT-CURSOR.                                            CL**1
03124                                                                      CL**1
03125 ******************************************************************   CL**1
03126 *    READ ITEMS FROM DATABASE USING THE DPT CURSOR                   CL**1
03127 *       CHECK THE GMA AND DMA NUMBERS AFTER THE FETCH TO SEE         CL**1
03128 *       IF IT IS WITHIN  THE REQUESTED RANGE                         CL**1
03129 *                                                                    CL**1
03130 ******************************************************************   CL**1
03131                                                                      CL**1
03132      SET PS-DB2-RETRY TO TRUE.                                       CL**1
03133                                                                      CL**1
03134      PERFORM Z510-READ-DPT-AREA                                      CL**1
03135          UNTIL PS-DB2-OK.                                            CL**1
03136                                                                      CL**1
03137      IF PS-DB2-OK                                                    CL**1
03138          IF MB016-ITEMS-LEFT-ON-DB                                   CL**1
03139                                                                      CL**1
03140              EVALUATE TRUE                                           CL**1
03141                                                                      CL**1
03142                  WHEN (MB016-ALL-GMAS AND                            CL**1
03143                        MB016-ALL-DMAS)                               CL**1
03144                       SET PS-HAVE-DPT-ITEM TO TRUE                   CL**1
03145                                                                      CL**1
03146                  WHEN (MB016-ALL-GMAS AND                            CL**1
03147                        MB016-DMA-NUMBER = MDSEAR-DMA-NBR)            CL**1
03148                       SET PS-HAVE-DPT-ITEM TO TRUE                   CL**1
03149                                                                      CL**1
03150                  WHEN (MB016-GMA-NUMBER = MDSEAR-GMA-NBR AND         CL**1
03151                        MB016-ALL-DMAS)                               CL**1
03152                       SET PS-HAVE-DPT-ITEM TO TRUE                   CL**1
03153                                                                      CL**1
03154                  WHEN (MB016-GMA-NUMBER = MDSEAR-GMA-NBR AND         CL**1
03155                        MB016-DMA-NUMBER = MDSEAR-DMA-NBR)            CL**1
03156                       SET PS-HAVE-DPT-ITEM TO TRUE                   CL**1
03157                                                                      CL**1
03158              END-EVALUATE                                            CL**1
03159                                                                      CL**1
03160          END-IF                                                      CL**1
03161      END-IF.                                                         CL**1
03162  EJECT                                                               CL**1
03163  H330-PROCESS-MCL-CURSOR.                                            CL**1
03164                                                                      CL**1
03165 ******************************************************************   CL**1
03166 *    READ ITEMS FROM DATABASE USING THE MCL CURSOR                   CL**1
03167 *       CHECK THE GMA AND DMA NUMBERS AFTER THE FETCH TO SEE         CL**1
03168 *       IF IT IS WITHIN  THE REQUESTED RANGE                         CL**1
03169 *                                                                    CL**1
03170 ******************************************************************   CL**1
03171                                                                      CL**1
03172      SET PS-DB2-RETRY TO TRUE.                                       CL**1
03173                                                                      CL**1
03174      PERFORM Z610-READ-MCL-AREA                                      CL**1
03175          UNTIL PS-DB2-OK.                                            CL**1
03176                                                                      CL**1
03177      IF PS-DB2-OK                                                    CL**1
03178          IF MB016-ITEMS-LEFT-ON-DB                                   CL**1
03179                                                                      CL**1
03180              EVALUATE TRUE                                           CL**1
03181                                                                      CL**1
03182                  WHEN MB016-ALL-GMAS AND                             CL**1
03183                       MB016-ALL-DMAS                                 CL**1
03184                       SET PS-HAVE-MCL-ITEM TO TRUE                   CL**1
03185                                                                      CL**1
03186                  WHEN MB016-ALL-GMAS AND                             CL**1
03187                       MB016-DMA-NUMBER = MDSEAR-DMA-NBR              CL**1
03188                       SET PS-HAVE-MCL-ITEM TO TRUE                   CL**1
03189                                                                      CL**1
03190                  WHEN MB016-GMA-NUMBER = MDSEAR-GMA-NBR AND          CL**1
03191                       MB016-ALL-DMAS                                 CL**1
03192                       SET PS-HAVE-MCL-ITEM TO TRUE                   CL**1
03193                                                                      CL**1
03194                  WHEN MB016-GMA-NUMBER = MDSEAR-GMA-NBR AND          CL**1
03195                       MB016-DMA-NUMBER = MDSEAR-DMA-NBR              CL**1
03196                       SET PS-HAVE-MCL-ITEM TO TRUE                   CL**1
03197                                                                      CL**1
03198              END-EVALUATE                                            CL**1
03199                                                                      CL**1
03200          END-IF                                                      CL**1
03201      END-IF.                                                         CL**1
03202  EJECT                                                               CL**1
03203  H340-PROCESS-SCL-CURSOR.                                            CL**1
03204                                                                      CL**1
03205 ******************************************************************   CL**1
03206 *    READ ITEMS FROM DATABASE USING THE SCL CURSOR                   CL**1
03207 *       CHECK THE GMA AND DMA NUMBERS AFTER THE FETCH TO SEE         CL**1
03208 *       IF IT IS WITHIN  THE REQUESTED RANGE                         CL**1
03209 *                                                                    CL**1
03210 ******************************************************************   CL**1
03211                                                                      CL**1
03212      SET PS-DB2-RETRY TO TRUE.                                       CL**1
03213                                                                      CL**1
03214      PERFORM Z710-READ-SCL-AREA                                      CL**1
03215          UNTIL PS-DB2-OK.                                            CL**1
03216                                                                      CL**1
03217      IF PS-DB2-OK                                                    CL**1
03218          IF MB016-ITEMS-LEFT-ON-DB                                   CL**1
03219                                                                      CL**1
03220              EVALUATE TRUE                                           CL**1
03221                                                                      CL**1
03222                  WHEN MB016-ALL-GMAS AND                             CL**1
03223                       MB016-ALL-DMAS                                 CL**1
03224                       SET PS-HAVE-SCL-ITEM TO TRUE                   CL**1
03225                                                                      CL**1
03226                  WHEN MB016-ALL-GMAS AND                             CL**1
03227                       MB016-DMA-NUMBER = MDSEAR-DMA-NBR              CL**1
03228                       SET PS-HAVE-SCL-ITEM TO TRUE                   CL**1
03229                                                                      CL**1
03230                  WHEN MB016-GMA-NUMBER = MDSEAR-GMA-NBR AND          CL**1
03231                       MB016-ALL-DMAS                                 CL**1
03232                       SET PS-HAVE-SCL-ITEM TO TRUE                   CL**1
03233                                                                      CL**1
03234                  WHEN MB016-GMA-NUMBER = MDSEAR-GMA-NBR AND          CL**1
03235                       MB016-DMA-NUMBER = MDSEAR-DMA-NBR              CL**1
03236                       SET PS-HAVE-SCL-ITEM TO TRUE                   CL**1
03237                                                                      CL**1
03238              END-EVALUATE                                            CL**1
03239                                                                      CL**1
03240          END-IF                                                      CL**1
03241      END-IF.                                                         CL**1
03242  EJECT                                                               CL**1
03243  H400-WRITE-OUT-LAST-BLOCKS.                                         CL**1
03244                                                                      CL**1
03245 ******************************************************************   CL**1
03246 *    WRITE OUT THE 2 BLOCKS CURRENTLY IN WORKING STORAGE TO          CL**1
03247 *    TEMPORARY STORAGE.                                              CL**1
03248 *                                                                    CL**1
03249 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
03250 ******************************************************************   CL**1
03251                                                                      CL**1
03252      MOVE +1 TO MB016-BLOCK-SUB.                                     CL**1
03253                                                                      CL**1
03254      PERFORM Z150-WRITE-TEMP-STORAGE.                                CL**1
03255                                                                      CL**1
03256      ADD +1  TO MB016-BLOCK-SUB.                                     CL**1
03257                                                                      CL**1
03258      PERFORM Z150-WRITE-TEMP-STORAGE.                                CL**1
03259                                                                      CL**1
03260  EJECT                                                               CL**1
03261  I100-INITIALIZE-BLOCK.                                              CL**1
03262                                                                      CL**1
03263 ******************************************************************   CL**1
03264 *    INITIALIZE A BLOCK IN THE ARRAY.                                CL**1
03265 *                                                                    CL**1
03266 ******************************************************************   CL**1
03267                                                                      CL**1
03268      PERFORM                                                         CL**1
03269          VARYING PS-SUB FROM 1 BY 1                                  CL**1
03270          UNTIL PS-SUB > PC-ITEMS-PER-BLOCK                           CL**1
03271                                                                      CL**1
03272          MOVE +0 TO MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB PS-SUB)   CL**1
03273                                                                      CL**1
03274          MOVE SPACES TO MB016-ITEM-GMA(MB016-BLOCK-SUB PS-SUB)       CL**1
03275          MOVE SPACES TO MB016-ITEM-DMA(MB016-BLOCK-SUB PS-SUB)       CL**1
03276          MOVE SPACES TO MB016-ITEM-DEPT(MB016-BLOCK-SUB PS-SUB)      CL**1
03277          MOVE SPACES TO MB016-ITEM-MCLASS(MB016-BLOCK-SUB PS-SUB)    CL**1
03278          MOVE SPACES TO MB016-ITEM-SCLASS(MB016-BLOCK-SUB PS-SUB)    CL**1
03279          MOVE SPACES TO MB016-ITEM-LEVEL(MB016-BLOCK-SUB PS-SUB)     CL**1
03280          MOVE SPACES TO MB016-ITEM-DESC(MB016-BLOCK-SUB PS-SUB)      CL**1
03281          MOVE SPACES TO                                              CL**1
03282               MB016-ITEM-STR-DATE(MB016-BLOCK-SUB PS-SUB)            CL**1
03283          MOVE SPACES TO                                              CL**1
03284               MB016-ITEM-END-DATE(MB016-BLOCK-SUB PS-SUB)            CL**1
03285          MOVE SPACES TO                                              CL**1
03286               MB016-ITEM-ACTION(MB016-BLOCK-SUB PS-SUB)              CL**1
03287                                                                      CL**1
03288          SET MB016-NO-SELECT(MB016-BLOCK-SUB PS-SUB) TO TRUE         CL**1
03289      END-PERFORM.                                                    CL**1
03290                                                                      CL**1
03291      SET MB016-BLOCK-NOT-MODIFIED(MB016-BLOCK-SUB) TO TRUE.          CL**1
03292  EJECT                                                               CL**1
03293  I200-FORMAT-LIST-LINES.                                             CL**1
03294                                                                      CL**1
03295 ******************************************************************   CL**1
03296 *    PROCESS THE ITEMS IN THE ARRAY AND MOVE THEM TO THE MAP.        CL**1
03297 *                                                                    CL**1
03298 *    PERFORMED FROM H200-FORMAT-PANEL-BODY.                          CL**1
03299 ******************************************************************   CL**1
03300                                                                      CL**1
03301      COMPUTE PV-ENDING-ITEM-ON-PANEL =                               CL**1
03302          (MB016-ITEM-AT-TOP-OF-PANEL + PC-ITEMS-PER-PANEL) - 1.      CL**1
03303                                                                      CL**1
03304      MOVE MB016-ITEM-AT-TOP-OF-PANEL TO PV-ITEM-IN-USE.              CL**1
03305      MOVE +1                         TO PS-SUB.                      CL**1
03306                                                                      CL**1
03307      PERFORM J100-PROCESS-ITEMS                                      CL**1
03308          UNTIL PV-ITEM-IN-USE > PV-ENDING-ITEM-ON-PANEL.             CL**1
03309  EJECT                                                               CL**1
03310  I300-FORMAT-NR-SELECTED.                                            CL**1
03311                                                                      CL**1
03312 ******************************************************************   CL**1
03313 *    FORMAT THE FIELD WHICH WILL SHOW THE NUMBER OF ITEMS THAT       CL**1
03314 *    WERE SELECTED BY THE USER.                                      CL**1
03315 *                                                                    CL**1
03316 *    PERFORMED FROM H200-FORMAT-PANEL-BODY.                          CL**1
03317 ******************************************************************   CL**1
03318                                                                      CL**1
03319      MOVE MB016-NUMBER-OF-ITEMS-SELECTED TO PV-DISPLAY-7.            CL**1
03320      MOVE PV-DISPLAY-7                   TO ATOTSELO.                CL**1
03321  EJECT                                                               CL**1
03322  I700-FORMAT-FROM-TO-LINE.                                           CL**1
03323                                                                      CL**1
03324 ******************************************************************   CL**1
03325 *    FORMAT THE LINE THAT WILL SHOW THE TOTAL NUMBER OF ITEMS WE     CL**1
03326 *    HAVE ON OUR LIST AND SHOW THE NUMBERS ASSOCIATED WITH THE       CL**1
03327 *    FIRST AND LAST ITEMS ON CURRENT PAGE.  THIS WILL HELP THE       CL**1
03328 *    USER DETERMINE HOW FAR THEY ARE INTO THE LIST.                  CL**1
03329 *                                                                    CL**1
03330 *    PERFORMED FROM H200-FORMAT-PANEL-BODY.                          CL**1
03331 ******************************************************************   CL**1
03332                                                                      CL**1
03333      MOVE MB016-CO-NUMBER                TO MB017O-AOPERCOO.         CL**1
03334                                                                      CL**1
03335      IF MB016-NUMBER-OF-ITEMS-READ > +0                              CL**1
03336          MOVE MB016-ITEM-AT-TOP-OF-PANEL TO MB017O-ABEGITMO          CL**1
03337      ELSE                                                            CL**1
03338          MOVE 0                          TO MB017O-ABEGITMO          CL**1
03339      END-IF.                                                         CL**1
03340                                                                      CL**1
03341      MOVE DP015-GREEN                    TO ABEGITMC.                CL**1
03342      MOVE DP015-UNDERLINE                TO ABEGITMH.                CL**1
03343      MOVE DP015-UNP-NUM-BRT-MDT          TO ABEGITMA.                CL**1
03344                                                                      CL**1
03345      COMPUTE PV-ENDING-ITEM-ON-PANEL =                               CL**1
03346          (MB016-ITEM-AT-TOP-OF-PANEL + PC-ITEMS-PER-PANEL) - 1.      CL**1
03347                                                                      CL**1
03348      IF PV-ENDING-ITEM-ON-PANEL < MB016-NUMBER-OF-ITEMS-READ         CL**1
03349          MOVE PV-ENDING-ITEM-ON-PANEL    TO MB017O-AENDITMO          CL**1
03350      ELSE                                                            CL**1
03351          MOVE MB016-NUMBER-OF-ITEMS-READ TO MB017O-AENDITMO          CL**1
03352      END-IF.                                                         CL**1
03353                                                                      CL**1
03354      MOVE SPACES TO MB017O-AOFO.                                     CL**1
03355      MOVE ZEROES TO MB017O-ATOTITMO.                                 CL**1
03356                                                                      CL**1
03357      IF (MB016-NUMBER-OF-ITEMS-READ > +0) AND                        CL**1
03358         (MB016-NO-ITEMS-LEFT-ON-DB)                                  CL**1
03359          MOVE 'OF'                       TO MB017O-AOFO              CL**1
03360                                                                      CL**1
03361          MOVE MB016-NUMBER-OF-ITEMS-READ TO MB017O-ATOTITMO          CL**1
03362      END-IF.                                                         CL**1
03363  EJECT                                                               CL**1
03364  I800-SET-CURSOR-POSITION.                                           CL**1
03365                                                                      CL**1
03366 ******************************************************************   CL**1
03367 *    IF NO ITEMS WERE READ FROM THE DATA BASE, POINT THE CURSOR      CL**1
03368 *    TO THE COMMAND LINE, OTHERWISE POINT THE CURSOR TO ONE OF       CL**1
03369 *    THE SELECTION ENTRIES.                                          CL**1
03370 *                                                                    CL**1
03371 *    PERFORMED FROM H200-FORMAT-PANEL-BODY.                          CL**1
03372 ******************************************************************   CL**1
03373                                                                      CL**1
03374      IF (PS-CURSOR-NOT-POSITIONED) OR                                CL**1
03375         (PS-INFORMATIONAL)         OR                                CL**1
03376         (PS-WARNING)                                                 CL**1
03377          PERFORM J200-FIND-LAST-SELECTION                            CL**1
03378      END-IF.                                                         CL**1
03379  EJECT                                                               CL**1
03380  J100-PROCESS-ITEMS.                                                 CL**1
03381                                                                      CL**1
03382 ******************************************************************   CL**1
03383 *    PROCESS EACH ITEM IN THE ARRAY AND MOVE IT TO THE MAP.          CL**1
03384 *    FILL THE MAP UNTIL WE HAVE REACHED THE MAXIMUM NUMBER OF        CL**1
03385 *    MAP ENTRIES.                                                    CL**1
03386 *                                                                    CL**1
03387 *    PERFORMED BY I200-FORMAT-LIST-LINES.                            CL**1
03388 ******************************************************************   CL**1
03389                                                                      CL**1
03390      IF (PV-ITEM-IN-USE < MB016-NUMBER-OF-ITEMS-READ) OR             CL**1
03391         (PV-ITEM-IN-USE = MB016-NUMBER-OF-ITEMS-READ)                CL**1
03392          PERFORM K100-SET-SUBSCRIPTS                                 CL**1
03393                                                                      CL**1
03394          MOVE DP015-UNP-ALP-BRT-MDT TO MB017I-ASELA(PS-SUB)          CL**1
03395                                                                      CL**1
03396          IF (MB016-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB))    OR     CL**1
03397             (MB016-NO-SELECT(MB016-BLOCK-SUB MB016-ITEM-SUB))        CL**1
03398              MOVE DP015-UNDERLINE TO MB017O-ASELH(PS-SUB)            CL**1
03399              MOVE DP015-GREEN     TO MB017O-ASELC(PS-SUB)            CL**1
03400          ELSE                                                        CL**1
03401              IF (MB016-BEGIN(MB016-BLOCK-SUB MB016-ITEM-SUB)) OR     CL**1
03402                 (MB016-END(MB016-BLOCK-SUB MB016-ITEM-SUB))          CL**1
03403                                                                      CL**1
03404                  IF (DP020-MSG-NUMBER = PC-NO-START-OF-RANGE) OR     CL**1
03405                     (DP020-MSG-NUMBER = PC-NO-END-OF-RANGE)          CL**1
03406                      MOVE DP015-REVERSE TO MB017O-ASELH(PS-SUB)      CL**1
03407                      MOVE DP015-YELLOW  TO MB017O-ASELC(PS-SUB)      CL**1
03408                  END-IF                                              CL**1
03409                                                                      CL**1
03410                  IF (DP020-MSG-NUMBER = PC-MULTIPLE-START-RANGES)    CL**1
03411                 AND (MB016-BEGIN(MB016-BLOCK-SUB MB016-ITEM-SUB))    CL**1
03412                      MOVE DP015-REVERSE TO MB017O-ASELH(PS-SUB)      CL**1
03413                      MOVE DP015-RED     TO MB017O-ASELC(PS-SUB)      CL**1
03414                  END-IF                                              CL**1
03415                  IF (DP020-MSG-NUMBER = PC-MULTIPLE-END-RANGES)      CL**1
03416                 AND (MB016-END(MB016-BLOCK-SUB MB016-ITEM-SUB))      CL**1
03417                      MOVE DP015-REVERSE TO MB017O-ASELH(PS-SUB)      CL**1
03418                      MOVE DP015-RED     TO MB017O-ASELC(PS-SUB)      CL**1
03419                  END-IF                                              CL**1
03420                  IF DP020-MSG-NUMBER = PC-END-BEFORE-START           CL**1
03421                      MOVE DP015-REVERSE TO MB017O-ASELH(PS-SUB)      CL**1
03422                      MOVE DP015-RED     TO MB017O-ASELC(PS-SUB)      CL**1
03423                  END-IF                                              CL**1
03424              END-IF                                                  CL**1
03425          END-IF                                                      CL**1
03426                                                                      CL**1
03427          MOVE MB016-SELECTED-SW(MB016-BLOCK-SUB MB016-ITEM-SUB) TO   CL**1
03428               MB017O-ASELO(PS-SUB)                                   CL**1
03429                                                                      CL**1
03430          IF (PS-SEND-MAP-N-DATA-FRSET)     OR                        CL**1
03431             (PS-DIFFERENT-ITEMS-DISPLAYED)                           CL**1
03432             MOVE MB016-ITEM-APLS-CDE (MB016-BLOCK-SUB                CL**1
03433                                  MB016-ITEM-SUB)           TO        CL**1
03434                  MB017O-AAPLSO(PS-SUB)                               CL**1
03435             MOVE MB016-ITEM-GMA (MB016-BLOCK-SUB                     CL**1
03436                                  MB016-ITEM-SUB)           TO        CL**1
03437                  MB017O-AGMAO(PS-SUB)                                CL**1
03438             IF  MB017O-AGMAO (PS-SUB) EQUAL ZERO                     CL**1
03439                 MOVE SPACES    TO  MB017O-AGMAO (PS-SUB)             CL**1
03440             END-IF                                                   CL**1
03441 *                                                                    CL**1
03442             MOVE MB016-ITEM-DMA (MB016-BLOCK-SUB                     CL**1
03443                                  MB016-ITEM-SUB)           TO        CL**1
03444                  MB017O-ADMAO(PS-SUB)                                CL**1
03445             IF  MB017O-ADMAO (PS-SUB) EQUAL ZERO                     CL**1
03446                 MOVE SPACES    TO  MB017O-ADMAO (PS-SUB)             CL**1
03447             END-IF                                                   CL**1
03448 *                                                                    CL**1
03449             MOVE MB016-ITEM-DEPT (MB016-BLOCK-SUB                    CL**1
03450                                  MB016-ITEM-SUB)           TO        CL**1
03451                  MB017O-ADEPTO(PS-SUB)                               CL**1
03452             IF  MB017O-ADEPTO (PS-SUB) EQUAL ZERO                    CL**1
03453                 MOVE SPACES    TO  MB017O-ADEPTO (PS-SUB)            CL**1
03454             END-IF                                                   CL**1
03455 *                                                                    CL**1
03456             MOVE MB016-ITEM-MCLASS(MB016-BLOCK-SUB                   CL**1
03457                                    MB016-ITEM-SUB)         TO        CL**1
03458                  MB017O-AMCLSO(PS-SUB)                               CL**1
03459             IF  MB017O-AMCLSO (PS-SUB) EQUAL ZERO                    CL**1
03460                 MOVE SPACES    TO  MB017O-AMCLSO (PS-SUB)            CL**1
03461             END-IF                                                   CL**1
03462 *                                                                    CL**1
03463             MOVE MB016-ITEM-SCLASS(MB016-BLOCK-SUB                   CL**1
03464                                    MB016-ITEM-SUB)         TO        CL**1
03465                  MB017O-ASCLSO(PS-SUB)                               CL**1
03466             IF  MB017O-ASCLSO (PS-SUB) EQUAL ZERO                    CL**1
03467                 MOVE SPACES    TO  MB017O-ASCLSO (PS-SUB)            CL**1
03468             END-IF                                                   CL**1
03469 *                                                                    CL**1
03470             MOVE MB016-ITEM-LEVEL(MB016-BLOCK-SUB                    CL**1
03471                                   MB016-ITEM-SUB)          TO        CL**1
03472                  MB017O-ALVLCO(PS-SUB)                               CL**1
03473             MOVE MB016-ITEM-DESC (MB016-BLOCK-SUB                    CL**1
03474                                   MB016-ITEM-SUB)          TO        CL**1
03475                  MB017O-ADESCO(PS-SUB)                               CL**1
03476             MOVE MB016-ITEM-STR-DATE(MB016-BLOCK-SUB                 CL**1
03477                                      MB016-ITEM-SUB)       TO        CL**1
03478                  MB017O-ASDATO(PS-SUB)                               CL**1
03479             MOVE MB016-ITEM-END-DATE(MB016-BLOCK-SUB                 CL**1
03480                                      MB016-ITEM-SUB)       TO        CL**1
03481                  MB017O-AEDATO(PS-SUB)                               CL**1
03482             MOVE MB016-ITEM-ACTION(MB016-BLOCK-SUB                   CL**1
03483                                      MB016-ITEM-SUB)       TO        CL**1
03484                  MB017O-AACTNO(PS-SUB)                               CL**1
03485 *                                                                    CL**1
03486             MOVE MB016-COLOR(MB016-BLOCK-SUB MB016-ITEM-SUB)         CL**1
03487                                TO  MB017O-AAPLSC(PS-SUB)             CL**1
03488                                    MB017O-AGMAC(PS-SUB)              CL**1
03489                                    MB017O-ADAMC(PS-SUB)              CL**1
03490                                    MB017O-ADEPTC(PS-SUB)             CL**1
03491                                    MB017O-AMCLSC(PS-SUB)             CL**1
03492                                    MB017O-ASCLSC(PS-SUB)             CL**1
03493                                    MB017O-ALVLCC(PS-SUB)             CL**1
03494                                    MB017O-ADESCC(PS-SUB)             CL**1
03495                                    MB017O-ASDATC(PS-SUB)             CL**1
03496                                    MB017O-AEDATC(PS-SUB)             CL**1
03497 *                                                                    CL**1
03498             MOVE DP015-HL-OFF                              TO        CL**1
03499                  MB017O-AGMAH(PS-SUB)                                CL**1
03500             MOVE DP015-HL-OFF                              TO        CL**1
03501                  MB017O-ADMAH(PS-SUB)                                CL**1
03502             MOVE DP015-HL-OFF                              TO        CL**1
03503                  MB017O-ADEPTH(PS-SUB)                               CL**1
03504             MOVE DP015-HL-OFF                              TO        CL**1
03505                  MB017O-AMCLSH(PS-SUB)                               CL**1
03506             MOVE DP015-HL-OFF                              TO        CL**1
03507                  MB017O-ASCLSH(PS-SUB)                               CL**1
03508             MOVE DP015-HL-OFF                              TO        CL**1
03509                  MB017O-ALVLCH(PS-SUB)                               CL**1
03510             MOVE DP015-HL-OFF                              TO        CL**1
03511                  MB017O-ADESCH(PS-SUB)                               CL**1
03512             MOVE DP015-HL-OFF                              TO        CL**1
03513                  MB017O-ASDATH(PS-SUB)                               CL**1
03514             MOVE DP015-HL-OFF                              TO        CL**1
03515                  MB017O-AEDATH(PS-SUB)                               CL**1
03516             MOVE DP015-HL-OFF                              TO        CL**1
03517                  MB017O-AACTNH(PS-SUB)                               CL**1
03518          END-IF                                                      CL**1
03519      ELSE                                                            CL**1
03520          MOVE DP015-ASK-DRK-OFF                            TO        CL**1
03521               MB017I-ASELA(PS-SUB)                                   CL**1
03522          MOVE SPACES                                       TO        CL**1
03523               MB017O-ASELO(PS-SUB)                                   CL**1
03524          MOVE SPACES                                       TO        CL**1
03525               MB017O-AAPLSO(PS-SUB)                                  CL**1
03526          MOVE SPACES                                       TO        CL**1
03527               MB017O-AGMAO(PS-SUB)                                   CL**1
03528          MOVE SPACES                                       TO        CL**1
03529               MB017O-ADMAO(PS-SUB)                                   CL**1
03530          MOVE SPACES                                       TO        CL**1
03531               MB017O-ADEPTO(PS-SUB)                                  CL**1
03532          MOVE SPACES                                       TO        CL**1
03533               MB017O-AMCLSO(PS-SUB)                                  CL**1
03534          MOVE SPACES                                       TO        CL**1
03535               MB017O-ASCLSO(PS-SUB)                                  CL**1
03536          MOVE SPACES                                       TO        CL**1
03537               MB017O-ALVLCO(PS-SUB)                                  CL**1
03538          MOVE SPACES                                       TO        CL**1
03539               MB017O-ADESCO(PS-SUB)                                  CL**1
03540          MOVE SPACES                                       TO        CL**1
03541               MB017O-ASDATO(PS-SUB)                                  CL**1
03542          MOVE SPACES                                       TO        CL**1
03543               MB017O-AEDATO(PS-SUB)                                  CL**1
03544         MOVE SPACES                                        TO        CL**1
03545              MB017O-AACTNO(PS-SUB)                                   CL**1
03546      END-IF.                                                         CL**1
03547                                                                      CL**1
03548      ADD +1 TO PV-ITEM-IN-USE.                                       CL**1
03549      ADD +1 TO PS-SUB.                                               CL**1
03550  EJECT                                                               CL**1
03551  J200-FIND-LAST-SELECTION.                                           CL**1
03552                                                                      CL**1
03553 ******************************************************************   CL**1
03554 *    FIND THE LAST SELECTION ENTRY IN THE MAP THAT IS NOT            CL**1
03555 *    SPACES OR LOW VALUES AND POINT THE CURSOR TO THIS ENTRY.        CL**1
03556 *    IF ALL ENTRIES ARE SPACES OR LOW VALUES, POINT THE CURSOR       CL**1
03557 *    TO THE 1ST SELECTION ENTRY IN THE MAP.                          CL**1
03558 *                                                                    CL**1
03559 *    PERFORMED BY I800-SET-CURSOR-POSITION.                          CL**1
03560 ******************************************************************   CL**1
03561                                                                      CL**1
03562      MOVE PC-ITEMS-PER-PANEL TO PS-SUB.                              CL**1
03563                                                                      CL**1
03564      SET PS-NO-SELECTION-FOUND TO TRUE.                              CL**1
03565                                                                      CL**1
03566      PERFORM                                                         CL**1
03567          UNTIL (PS-SUB = +0)        OR                               CL**1
03568                (PS-SELECTION-FOUND)                                  CL**1
03569                                                                      CL**1
03570          IF (MB017O-ASELO(PS-SUB) NOT = SPACES)     AND              CL**1
03571             (MB017O-ASELO(PS-SUB) NOT = LOW-VALUES)                  CL**1
03572              SET PS-SELECTION-FOUND TO TRUE                          CL**1
03573          ELSE                                                        CL**1
03574              SUBTRACT +1 FROM PS-SUB                                 CL**1
03575          END-IF                                                      CL**1
03576                                                                      CL**1
03577      END-PERFORM.                                                    CL**1
03578                                                                      CL**1
03579      IF PS-SELECTION-FOUND                                           CL**1
03580          MOVE -1 TO MB017I-ASELL(PS-SUB)                             CL**1
03581      ELSE                                                            CL**1
03582          MOVE -1 TO MB017I-ASELL(1)                                  CL**1
03583      END-IF.                                                         CL**1
03584  EJECT                                                               CL**1
03585  K100-SET-SUBSCRIPTS.                                                CL**1
03586                                                                      CL**1
03587 ******************************************************************   CL**1
03588 *    DETERMINE THE VALUE OF THE ITEM SUBSCRIPT BASED ON THE ITEM     CL**1
03589 *    CURRENTLY IN USE AND THE FIRST ITEM IN THE ARRAY.  THIS WILL    CL**1
03590 *    POSITION US IN THE 1ST BLOCK OF THE ARRAY.                      CL**1
03591 *                                                                    CL**1
03592 *    IF THE ITEM SUBSCRIPT EXCEEDS THE MAXIMUM NUMBER OF ITEMS       CL**1
03593 *    IN A BLOCK, RECALCULATE THE SUBSCRIPT BY SUBTRACTING OUT        CL**1
03594 *    THE MAXIMUM NUMBER OF ITEMS.  THIS WILL CORRECTLY POSITION      CL**1
03595 *    US IN THE 2ND BLOCK OF THE ARRAY.                               CL**1
03596 *                                                                    CL**1
03597 *    PERFORMED BY F300-CHECK-SELECTIONS                              CL**1
03598 ******************************************************************   CL**1
03599                                                                      CL**1
03600      COMPUTE PS-ITEM-SUB =                                           CL**1
03601          (PV-ITEM-IN-USE - MB016-LIST-ITEM-NUMBER(1 1)) + 1.         CL**1
03602                                                                      CL**1
03603      MOVE PS-ITEM-SUB TO MB016-ITEM-SUB.                             CL**1
03604                                                                      CL**1
03605      IF MB016-ITEM-SUB > PC-ITEMS-PER-BLOCK                          CL**1
03606          SUBTRACT PC-ITEMS-PER-BLOCK FROM MB016-ITEM-SUB             CL**1
03607                                                                      CL**1
03608          MOVE PC-MAX-BLOCKS-IN-ARRAY TO MB016-BLOCK-SUB              CL**1
03609      ELSE                                                            CL**1
03610          MOVE +1                     TO MB016-BLOCK-SUB              CL**1
03611      END-IF.                                                         CL**1
03612 *                                                                    CL**1
03613  EJECT                                                               CL**1
03614 ******************************************************************   CL**1
03615 *    PREPARE THE TEMPORARY STORAGE QUEUE.  MOVE ALL SELECTED         CL**1
03616 *    GROUPS FROM EITHER TEMP STORAGE OR THE ARRAY IN THE COMM        CL**1
03617 *    AREA TO THE LIST TS QUEUE RECORD(S).                            CL**1
03618 *                                                                    CL**1
03619 *    PERFORMED BY D300                                               CL**1
03620 ******************************************************************   CL**1
03621 *                                                                    CL**1
03622  X100-PREPARE-LIST-QUEUE.                                            CL**1
03623 *                                                                    CL**1
03624      SET MB016-UPDATE-TSQ      TO  TRUE.                             CL**1
03625      MOVE +1                   TO  MB016-BLOCK-SUB.                  CL**1
03626      PERFORM Z150-WRITE-TEMP-STORAGE.                                CL**1
03627      ADD +1                    TO  MB016-BLOCK-SUB.                  CL**1
03628      PERFORM Z150-WRITE-TEMP-STORAGE.                                CL**1
03629 *                                                                    CL**1
03630      IF  MB016-HIGHEST-BLOCK-WRITTEN = ZERO                          CL**1
03631          MOVE EIBTRMID         TO  PV-TERM-ID                        CL**1
03632          MOVE EIBTASKN         TO  PV-TASK-NUMBER                    CL**1
03633      ELSE                                                            CL**1
03634          MOVE MB016-TERM-ID    TO  PV-TERM-ID                        CL**1
03635          MOVE MB016-TASK-NUMBER                                      CL**1
03636                                TO  PV-TASK-NUMBER                    CL**1
03637      END-IF.                                                         CL**1
03638      SUBTRACT 1              FROM  PV-TASK-NUMBER.                   CL**1
03639 *                                                                    CL**1
03640      MOVE PV-QUEUE-NAME        TO  MB005-LIST-QUEUE-NAME.            CL**1
03641      MOVE LENGTH OF SELECTED-LIST-RECORD                             CL**1
03642                                TO  MB005-LIST-QUEUE-LENGTH.          CL**1
03643      PERFORM X900-DELETE-LIST-QUEUE.                                 CL**1
03644 *                                                                    CL**1
03645      SET MB023-IDX             TO  1.                                CL**1
03646      INITIALIZE SELECTED-LIST-RECORD.                                CL**1
03647      PERFORM X200-PROCESS-TS-QUEUE                                   CL**1
03648              VARYING PV-ITEM                                         CL**1
03649              FROM 1 BY 1                                             CL**1
03650              UNTIL PV-ITEM GREATER MB016-HIGHEST-BLOCK-WRITTEN.      CL**1
03651 *                                                                    CL**1
03652      PERFORM X500-WRITE-LIST-QUEUE.                                  CL**1
03653 *                                                                    CL**1
03654  EJECT                                                               CL**1
03655 ******************************************************************   CL**1
03656 *    OBTAIN A TS QUEUE RECORD, MOVE SELECTED RECORDS TO THE          CL**1
03657 *    LIST QUEUE RECORD.                                              CL**1
03658 *                                                                    CL**1
03659 *    PERFORMED BY X100                                               CL**1
03660 ******************************************************************   CL**1
03661 *                                                                    CL**1
03662  X200-PROCESS-TS-QUEUE.                                              CL**1
03663 *                                                                    CL**1
03664      PERFORM X250-READ-TS-QUEUE.                                     CL**1
03665      IF  PV-RESP EQUAL DFHRESP(NORMAL)                               CL**1
03666          PERFORM                                                     CL**1
03667          VARYING PV-TW-IDX                                           CL**1
03668          FROM 1 BY 1                                                 CL**1
03669          UNTIL PV-TW-IDX GREATER THAN PC-ITEMS-PER-BLOCK             CL**1
03670            OR  PV-TW-LIST-ITEM-NUMBER (PV-TW-IDX) EQUAL ZERO         CL**1
03671 *                                                                    CL**1
03672              IF  PV-TW-SELECT (PV-TW-IDX)                            CL**1
03673                  MOVE PV-TW-KEY-DATA (PV-TW-IDX)                     CL**1
03674                                TO  MB023-KEY-DATA (MB023-IDX)        CL**1
03675                  MOVE PV-TW-LIST-ITEM-NUMBER (PV-TW-IDX)             CL**1
03676                                TO  MB023-ITEM       (MB023-IDX)      CL**1
03677                  MOVE PV-TW-ITEM-APLSYS-CDE  (PV-TW-IDX)             CL**1
03678                                TO  MB023-APPL-SYS-CDE (MB023-IDX)    CL**1
03679                  SET MB023-IDX UP BY 1                               CL**1
03680                  IF PV-TW-COLOR(PV-TW-IDX) = DP015-TURQUOISE         CL**1
03681                     SET PS-SELECTED-HISTORY TO TRUE                  CL**1
03682                  END-IF                                              CL**1
03683                  IF  MB023-IDX GREATER PC-MAX-QUEUE-ITEMS            CL**1
03684                      PERFORM X500-WRITE-LIST-QUEUE                   CL**1
03685                  END-IF                                              CL**1
03686              END-IF                                                  CL**1
03687 *                                                                    CL**1
03688          END-PERFORM                                                 CL**1
03689      END-IF.                                                         CL**1
03690 *                                                                    CL**1
03691  EJECT                                                               CL**1
03692 ******************************************************************   CL**1
03693 *    READ A TS QUEUE RECORD.                                         CL**1
03694 *                                                                    CL**1
03695 *    PERFORMED BY X200                                               CL**1
03696 ******************************************************************   CL**1
03697 *                                                                    CL**1
03698  X250-READ-TS-QUEUE.                                                 CL**1
03699 *                                                                    CL**1
03700      EXEC CICS                                                       CL**1
03701          READQ TS                                                    CL**1
03702          QUEUE(MB016-TEMP-QUEUE-NAME)                                CL**1
03703          INTO(PV-TEMP-WORK-AREA)                                     CL**1
03704          LENGTH(PC-BLOCK-LENGTH)                                     CL**1
03705          ITEM(PV-ITEM)                                               CL**1
03706          RESP(PV-RESP)                                               CL**1
03707      END-EXEC.                                                       CL**1
03708 *                                                                    CL**1
03709  EJECT                                                               CL**1
03710 ******************************************************************   CL**1
03711 *    WRITE THE LIST QUEUE RECORD.                                    CL**1
03712 *                                                                    CL**1
03713 *    PERFORMED BY X100, X300                                         CL**1
03714 ******************************************************************   CL**1
03715 *                                                                    CL**1
03716  X500-WRITE-LIST-QUEUE.                                              CL**1
03717 *                                                                    CL**1
03718      IF  MB023-IDX GREATER THAN 1                                    CL**1
03719          MOVE PC-MAX-QUEUE-ITEMS                                     CL**1
03720                                TO  MB023-MAX-ITEMS                   CL**1
03721 *        MOVE MB016-NUMBER-OF-ITEMS-SELECTED                         CL**1
03722 *                              TO  MB023-ITEMS-SELECTED              CL**1
03723 *                                                                    CL**1
03724          IF  DP020-SRC-AID EQUAL DP016-PF14                          CL**1
03725          OR  DP020-SRC-AID EQUAL DP016-PF18                          CL**1
03726              SET MB023-INQUIRY TO    TRUE                            CL**1
03727          END-IF                                                      CL**1
03728          IF  DP020-SRC-AID EQUAL DP016-PF15                          CL**1
03729          OR  DP020-SRC-AID EQUAL DP016-PF19                          CL**1
03730              SET MB023-UPDATE    TO  TRUE                            CL**1
03731          END-IF                                                      CL**1
03732 *                                                                    CL**1
03733          EXEC CICS                                                   CL**1
03734               WRITEQ TS                                              CL**1
03735               QUEUE(MB005-LIST-QUEUE-NAME)                           CL**1
03736               FROM(SELECTED-LIST-RECORD)                             CL**1
03737               LENGTH(MB005-LIST-QUEUE-LENGTH)                        CL**1
03738               ITEM(PV-MA-ITEM)                                       CL**1
03739               RESP(PV-RESP)                                          CL**1
03740          END-EXEC                                                    CL**1
03741 *                                                                    CL**1
03742          IF  PV-RESP NOT EQUAL DFHRESP(NORMAL)                       CL**1
03743              SET DP013-LOGIC-ABEND TO TRUE                           CL**1
03744              SET DP013-NO-ROLLBACK TO TRUE                           CL**1
03745              MOVE 'X500-WRITE-LIST-QUEUE'   TO                       CL**1
03746                   DP013-PARAGRAPH                                    CL**1
03747              MOVE PV-BLOCK-NUMBER           TO                       CL**1
03748                   AM-BLOCK-NUMBER-11                                 CL**1
03749              MOVE AM-ABEND-MESSAGE-11       TO                       CL**1
03750                   DP013-MESSAGE-TEXT(1)                              CL**1
03751              PERFORM DP013-0000-PROCESS-ABEND                        CL**1
03752          END-IF                                                      CL**1
03753 *                                                                    CL**1
03754          INITIALIZE SELECTED-LIST-RECORD                             CL**1
03755          SET MB023-IDX         TO  1                                 CL**1
03756      END-IF.                                                         CL**1
03757 *                                                                    CL**1
03758  EJECT                                                               CL**1
03759 ******************************************************************   CL**1
03760 *    WRITE THE TS QUEUE RECORD JUST UPDATED IN C700.                 CL**1
03761 *                                                                    CL**1
03762 *    PERFORMED BY C600, C700                                         CL**1
03763 ******************************************************************   CL**1
03764 *                                                                    CL**1
03765  X550-WRITE-TS-QUEUE.                                                CL**1
03766 *                                                                    CL**1
03767      EXEC CICS                                                       CL**1
03768          WRITEQ TS                                                   CL**1
03769          REWRITE                                                     CL**1
03770          QUEUE(MB016-TEMP-QUEUE-NAME)                                CL**1
03771          FROM(PV-TEMP-WORK-AREA)                                     CL**1
03772          LENGTH(PC-BLOCK-LENGTH)                                     CL**1
03773          ITEM(PV-SAVE-ITEM)                                          CL**1
03774          RESP(PV-RESP)                                               CL**1
03775      END-EXEC.                                                       CL**1
03776 *                                                                    CL**1
03777  EJECT                                                               CL**1
03778 ******************************************************************   CL**1
03779 *    READ THE LIST QUEUE RECORD.                                     CL**1
03780 *                                                                    CL**1
03781 *    PERFORMED BY C600                                               CL**1
03782 ******************************************************************   CL**1
03783 *                                                                    CL**1
03784  X600-READ-LIST-QUEUE.                                               CL**1
03785 *                                                                    CL**1
03786      EXEC CICS                                                       CL**1
03787           READQ TS                                                   CL**1
03788           QUEUE(MB005-LIST-QUEUE-NAME)                               CL**1
03789           INTO(SELECTED-LIST-RECORD)                                 CL**1
03790           LENGTH(MB005-LIST-QUEUE-LENGTH)                            CL**1
03791           ITEM(PV-MA-ITEM)                                           CL**1
03792           RESP(PV-RESP)                                              CL**1
03793      END-EXEC.                                                       CL**1
03794 *                                                                    CL**1
03795  EJECT                                                               CL**1
03796 ******************************************************************   CL**1
03797 *    DELETE THE SKU LIST TEMP STORAGE QUEUE.                         CL**1
03798 *                                                                    CL**1
03799 *    PERFORMED BY X100                                               CL**1
03800 ******************************************************************   CL**1
03801 *                                                                    CL**1
03802  X900-DELETE-LIST-QUEUE.                                             CL**1
03803 *                                                                    CL**1
03804      EXEC CICS                                                       CL**1
03805          DELETEQ TS                                                  CL**1
03806          QUEUE(MB005-LIST-QUEUE-NAME)                                CL**1
03807          RESP(PV-RESP)                                               CL**1
03808      END-EXEC.                                                       CL**1
03809 *                                                                    CL**1
03810  EJECT                                                               CL**1
03811  Z050-DELETE-TEMP-STORAGE.                                           CL**1
03812                                                                      CL**1
03813 ******************************************************************   CL**1
03814 *    DELETE THE TEMPORARY STORAGE QUEUE.                             CL**1
03815 *                                                                    CL**1
03816 *    PERFORMED BY D300-CHECK-FUNCTION-KEY.                           CL**1
03817 ******************************************************************   CL**1
03818                                                                      CL**1
03819      EXEC CICS                                                       CL**1
03820          DELETEQ TS                                                  CL**1
03821          QUEUE(MB016-TEMP-QUEUE-NAME)                                CL**1
03822          RESP(PV-CICS-RESPONSE)                                      CL**1
03823      END-EXEC.                                                       CL**1
03824                                                                      CL**1
03825      IF (PV-CICS-RESPONSE NOT = DFHRESP(NORMAL)) AND                 CL**1
03826         (PV-CICS-RESPONSE NOT = DFHRESP(QIDERR))                     CL**1
03827          SET DP013-LOGIC-ABEND           TO TRUE                     CL**1
03828          SET DP013-NO-ROLLBACK           TO TRUE                     CL**1
03829          MOVE 'Z050-DELETE-TEMP-STORAGE' TO DP013-PARAGRAPH          CL**1
03830          MOVE AM-ABEND-MESSAGE-8         TO DP013-MESSAGE-TEXT(1)    CL**1
03831      END-IF.                                                         CL**1
03832                                                                      CL**1
03833      MOVE +0 TO MB016-HIGHEST-BLOCK-WRITTEN.                         CL**1
03834  EJECT                                                               CL**1
03835  Z100-READ-TEMP-STORAGE.                                             CL**1
03836                                                                      CL**1
03837 ******************************************************************   CL**1
03838 *    READ A BLOCK FROM TEMPORARY STORAGE INTO THE ARRAY.             CL**1
03839 *                                                                    CL**1
03840 *    PERFORMED BY F200-MARK-RANGE-AS-SELECTED.                       CL**1
03841 ******************************************************************   CL**1
03842                                                                      CL**1
03843      EXEC CICS                                                       CL**1
03844          READQ TS                                                    CL**1
03845          QUEUE(MB016-TEMP-QUEUE-NAME)                                CL**1
03846          INTO(MB016-BLOCK-ENTRIES(MB016-BLOCK-SUB))                  CL**1
03847          LENGTH(PC-BLOCK-LENGTH)                                     CL**1
03848          ITEM(PV-BLOCK-NUMBER)                                       CL**1
03849          RESP(PV-CICS-RESPONSE)                                      CL**1
03850      END-EXEC.                                                       CL**1
03851                                                                      CL**1
03852      IF (PV-CICS-RESPONSE NOT = DFHRESP(NORMAL)) AND                 CL**1
03853         (PV-CICS-RESPONSE NOT = DFHRESP(ITEMERR))                    CL**1
03854                                                                      CL**1
03855          EXEC CICS                                                   CL**1
03856               DELETEQ TS                                             CL**1
03857               QUEUE(MB016-TEMP-QUEUE-NAME)                           CL**1
03858               RESP(PV-CICS-RESPONSE)                                 CL**1
03859          END-EXEC                                                    CL**1
03860                                                                      CL**1
03861          SET DP013-LOGIC-ABEND         TO TRUE                       CL**1
03862          SET DP013-NO-ROLLBACK         TO TRUE                       CL**1
03863          MOVE 'Z100-READ-TEMP-STORAGE' TO DP013-PARAGRAPH            CL**1
03864          MOVE AM-ABEND-MESSAGE-12      TO DP013-MESSAGE-TEXT(1)      CL**1
03865          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
03866                                                                      CL**1
03867      END-IF.                                                         CL**1
03868                                                                      CL**1
03869      SET MB016-BLOCK-NOT-MODIFIED(MB016-BLOCK-SUB) TO TRUE.          CL**1
03870  EJECT                                                               CL**1
03871  Z150-WRITE-TEMP-STORAGE.                                            CL**1
03872                                                                      CL**1
03873 ******************************************************************   CL**1
03874 *    WRITE A NEW BLOCK FROM THE ARRAY TO TEMPORARY STORAGE.          CL**1
03875 *    REWRITE AN EXISITING BLOCK ONLY IF IT HAS BEEN MODIFIED.        CL**1
03876 *                                                                    CL**1
03877 *    PERFORMED BY F200-MARK-RANGE-AS-SELECTED                        CL**1
03878 ******************************************************************   CL**1
03879                                                                      CL**1
03880      IF MB016-HIGHEST-BLOCK-WRITTEN = +0                             CL**1
03881          MOVE EIBTASKN TO DP020-SRC-TASK-NUMBER                      CL**1
03882          MOVE EIBTASKN TO MB016-TASK-NUMBER                          CL**1
03883          MOVE EIBTRMID TO MB016-TERM-ID                              CL**1
03884      END-IF.                                                         CL**1
03885                                                                      CL**1
03886      MOVE MB016-LIST-ITEM-NUMBER(MB016-BLOCK-SUB 1) TO               CL**1
03887           PV-LIST-ITEM-NUMBER.                                       CL**1
03888                                                                      CL**1
03889      COMPUTE PV-BLOCK-NUMBER =                                       CL**1
03890          1 + ((PV-LIST-ITEM-NUMBER - 1) / PC-ITEMS-PER-BLOCK).       CL**1
03891                                                                      CL**1
03892      IF (PV-BLOCK-NUMBER < MB016-HIGHEST-BLOCK-WRITTEN) OR           CL**1
03893         (PV-BLOCK-NUMBER = MB016-HIGHEST-BLOCK-WRITTEN)              CL**1
03894                                                                      CL**1
03895          IF MB016-BLOCK-MODIFIED(MB016-BLOCK-SUB)                    CL**1
03896                                                                      CL**1
03897              EXEC CICS                                               CL**1
03898                  WRITEQ TS                                           CL**1
03899                  QUEUE(MB016-TEMP-QUEUE-NAME)                        CL**1
03900                  FROM(MB016-BLOCK-ENTRIES(MB016-BLOCK-SUB))          CL**1
03901                  LENGTH(PC-BLOCK-LENGTH)                             CL**1
03902                  ITEM(PV-BLOCK-NUMBER)                               CL**1
03903                  REWRITE                                             CL**1
03904                  RESP(PV-CICS-RESPONSE)                              CL**1
03905              END-EXEC                                                CL**1
03906                                                                      CL**1
03907              IF PV-CICS-RESPONSE NOT = DFHRESP(NORMAL)               CL**1
03908                  EXEC CICS                                           CL**1
03909                      DELETEQ TS                                      CL**1
03910                      QUEUE(MB016-TEMP-QUEUE-NAME)                    CL**1
03911                      RESP(PV-CICS-RESPONSE)                          CL**1
03912                  END-EXEC                                            CL**1
03913                                                                      CL**1
03914                  SET DP013-LOGIC-ABEND TO TRUE                       CL**1
03915                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
03916                  MOVE 'Z150-WRITE-TEMP-STORAGE' TO                   CL**1
03917                       DP013-PARAGRAPH                                CL**1
03918                  MOVE AM-ABEND-MESSAGE-9        TO                   CL**1
03919                       DP013-MESSAGE-TEXT(1)                          CL**1
03920                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
03921              END-IF                                                  CL**1
03922                                                                      CL**1
03923          END-IF                                                      CL**1
03924                                                                      CL**1
03925      ELSE                                                            CL**1
03926                                                                      CL**1
03927          COMPUTE PV-HIGHEST-BLOCK-WRITTEN =                          CL**1
03928              MB016-HIGHEST-BLOCK-WRITTEN + 1                         CL**1
03929                                                                      CL**1
03930          IF PV-BLOCK-NUMBER = PV-HIGHEST-BLOCK-WRITTEN               CL**1
03931                                                                      CL**1
03932              EXEC CICS                                               CL**1
03933                  WRITEQ TS                                           CL**1
03934                  QUEUE(MB016-TEMP-QUEUE-NAME)                        CL**1
03935                  FROM(MB016-BLOCK-ENTRIES(MB016-BLOCK-SUB))          CL**1
03936                  LENGTH(PC-BLOCK-LENGTH)                             CL**1
03937                  ITEM(PV-BLOCK-NUMBER)                               CL**1
03938                  RESP(PV-CICS-RESPONSE)                              CL**1
03939              END-EXEC                                                CL**1
03940                                                                      CL**1
03941              IF PV-CICS-RESPONSE NOT = DFHRESP(NORMAL)               CL**1
03942                                                                      CL**1
03943                  EXEC CICS                                           CL**1
03944                      DELETEQ TS                                      CL**1
03945                      QUEUE(MB016-TEMP-QUEUE-NAME)                    CL**1
03946                      RESP(PV-CICS-RESPONSE)                          CL**1
03947                  END-EXEC                                            CL**1
03948                                                                      CL**1
03949                  SET DP013-LOGIC-ABEND TO TRUE                       CL**1
03950                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
03951                  MOVE 'Z150-WRITE-TEMP-STORAGE' TO                   CL**1
03952                       DP013-PARAGRAPH                                CL**1
03953                  MOVE AM-ABEND-MESSAGE-10       TO                   CL**1
03954                       DP013-MESSAGE-TEXT(1)                          CL**1
03955                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
03956              END-IF                                                  CL**1
03957                                                                      CL**1
03958              ADD +1 TO MB016-HIGHEST-BLOCK-WRITTEN                   CL**1
03959          ELSE                                                        CL**1
03960              SET DP013-LOGIC-ABEND TO TRUE                           CL**1
03961              SET DP013-NO-ROLLBACK TO TRUE                           CL**1
03962              MOVE 'Z150-WRITE-TEMP-STORAGE' TO                       CL**1
03963                   DP013-PARAGRAPH                                    CL**1
03964              MOVE PV-BLOCK-NUMBER           TO                       CL**1
03965                   AM-BLOCK-NUMBER-11                                 CL**1
03966              MOVE AM-ABEND-MESSAGE-11       TO                       CL**1
03967                   DP013-MESSAGE-TEXT(1)                              CL**1
03968              PERFORM DP013-0000-PROCESS-ABEND                        CL**1
03969          END-IF                                                      CL**1
03970                                                                      CL**1
03971      END-IF.                                                         CL**1
03972                                                                      CL**1
03973      SET MB016-BLOCK-NOT-MODIFIED(MB016-BLOCK-SUB) TO TRUE.          CL**1
03974  EJECT                                                               CL**1
03975  Z200-OPEN-MERCH-CURSOR.                                             CL**1
03976                                                                      CL**1
03977 ******************************************************************   CL**1
03978 *    OPEN MERCHANDISE AREA CURSOR                                    CL**1
03979 ******************************************************************   CL**1
03980                                                                      CL**1
03981      EXEC SQL                                                        CL**1
03982          OPEN MERCH-CURSOR                                           CL**1
03983      END-EXEC.                                                       CL**1
03984                                                                      CL**1
03985      IF (SQLCODE = +0)   OR                                          CL**1
03986         (SQLCODE = +100)                                             CL**1
03987          SET PS-MERCH-CURSOR-OPENED     TO TRUE                      CL**1
03988      ELSE                                                            CL**1
03989          SET DP013-DB2-ABEND            TO TRUE                      CL**1
03990          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
03991          MOVE 'Z200-OPEN-MERCH-CURSOR'  TO                           CL**1
03992               DP013-PARAGRAPH                                        CL**1
03993          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
03994               DP013-MESSAGE-TEXT(1)                                  CL**1
03995          MOVE SQLCA                     TO                           CL**1
03996               DP013-SQLCA                                            CL**1
03997          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
03998      END-IF.                                                         CL**1
03999  EJECT                                                               CL**1
04000  Z210-READ-MERCH-AREA.                                               CL**1
04001                                                                      CL**1
04002 ******************************************************************   CL**1
04003 *    READ MERCHANDISE AREA CURSOR                                    CL**1
04004 ******************************************************************   CL**1
04005                                                                      CL**1
04006      EXEC SQL                                                        CL**1
04007          FETCH MERCH-CURSOR                                          CL**1
04008           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04009                :MDSEAR-GMA-NBR,                                      CL**1
04010                :MDSEAR-DMA-NBR,                                      CL**1
04011                :MDSEAR-DEPT-NBR,                                     CL**1
04012                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04013                :MDSEAR-SUB-CL-NBR,                                   CL**1
04014                :MDSEAR-MDSELV-CDE,                                   CL**1
04015                :MDSEAR-DESC,                                         CL**1
04016                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04017                :APLAVL-APLSYS-CDE,                                   CL**1
04018                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04019                :APLAVL-MDSEAR-END-DTE                                CL**1
04020      END-EXEC.                                                       CL**1
04021                                                                      CL**1
04022      SET PS-DB2-OK TO TRUE                                           CL**1
04023                                                                      CL**1
04024      IF (SQLCODE = -904) OR                                          CL**1
04025         (SQLCODE = -913)                                             CL**1
04026          SET PS-DB2-RETRY TO TRUE                                    CL**1
04027          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04028          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04029              SET PS-DB2-OK TO TRUE                                   CL**1
04030          END-IF                                                      CL**1
04031      END-IF.                                                         CL**1
04032                                                                      CL**1
04033      IF PS-DB2-OK                                                    CL**1
04034          IF SQLCODE = +0                                             CL**1
04035              CONTINUE                                                CL**1
04036          ELSE                                                        CL**1
04037              IF SQLCODE = +100                                       CL**1
04038                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04039              ELSE                                                    CL**1
04040                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04041                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04042                  MOVE 'Z210-READ-MERCH-CURSOR' TO                    CL**1
04043                       DP013-PARAGRAPH                                CL**1
04044                  MOVE PC-OPERCO-NBR            TO                    CL**1
04045                       AM-OPERCO-NBR-13                               CL**1
04046                  MOVE MB016-SAVE-GMA           TO                    CL**1
04047                       AM-GMA-NBR-13                                  CL**1
04048                  MOVE MB016-SAVE-DMA           TO                    CL**1
04049                       AM-DMA-NBR-13                                  CL**1
04050                  MOVE MB016-SAVE-DPT           TO                    CL**1
04051                       AM-DEPT-NBR-13                                 CL**1
04052                  MOVE MB016-SAVE-MCL           TO                    CL**1
04053                       AM-MCL-NBR-13                                  CL**1
04054                  MOVE MB016-SAVE-SCL           TO                    CL**1
04055                       AM-SCL-NBR-13                                  CL**1
04056                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04057                       DP013-MESSAGE-TEXT(1)                          CL**1
04058                  MOVE SQLCA                    TO                    CL**1
04059                       DP013-SQLCA                                    CL**1
04060                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04061              END-IF                                                  CL**1
04062          END-IF                                                      CL**1
04063      END-IF.                                                         CL**1
04064  EJECT                                                               CL**1
04065  Z220-CLOSE-MERCH-CURSOR.                                            CL**1
04066                                                                      CL**1
04067 ******************************************************************   CL**1
04068 *    CLOSE THE MERCH-CURSOR                                          CL**1
04069 ******************************************************************   CL**1
04070                                                                      CL**1
04071      EXEC SQL                                                        CL**1
04072          CLOSE MERCH-CURSOR                                          CL**1
04073      END-EXEC.                                                       CL**1
04074                                                                      CL**1
04075      IF (SQLCODE = +0)   OR                                          CL**1
04076         (SQLCODE = +100)                                             CL**1
04077          SET PS-MERCH-CURSOR-NOT-OPENED TO TRUE                      CL**1
04078      ELSE                                                            CL**1
04079          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04080          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04081          MOVE 'Z220-CLOSE-MERCH-CURSOR' TO                           CL**1
04082               DP013-PARAGRAPH                                        CL**1
04083          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04084               DP013-MESSAGE-TEXT(1)                                  CL**1
04085          MOVE SQLCA                     TO                           CL**1
04086               DP013-SQLCA                                            CL**1
04087          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04088      END-IF.                                                         CL**1
04089  EJECT                                                               CL**1
04090  Z300-OPEN-GMA-CURSOR.                                               CL**1
04091                                                                      CL**1
04092 ******************************************************************   CL**1
04093 *    OPEN MERCHANDISE AREA CURSOR -- GMA ONLY                        CL**1
04094 ******************************************************************   CL**1
04095                                                                      CL**1
04096      EXEC SQL                                                        CL**1
04097          OPEN GMA-CURSOR                                             CL**1
04098      END-EXEC.                                                       CL**1
04099                                                                      CL**1
04100      IF (SQLCODE = +0)   OR                                          CL**1
04101         (SQLCODE = +100)                                             CL**1
04102          SET PS-GMA-CURSOR-OPENED       TO TRUE                      CL**1
04103      ELSE                                                            CL**1
04104          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04105          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04106          MOVE 'Z300-OPEN-GMA-CURSOR'    TO                           CL**1
04107               DP013-PARAGRAPH                                        CL**1
04108          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
04109               DP013-MESSAGE-TEXT(1)                                  CL**1
04110          MOVE SQLCA                     TO                           CL**1
04111               DP013-SQLCA                                            CL**1
04112          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04113      END-IF.                                                         CL**1
04114  EJECT                                                               CL**1
04115  Z310-READ-GMA-AREA.                                                 CL**1
04116                                                                      CL**1
04117 ******************************************************************   CL**1
04118 *    READ MERCHANDISE AREA CURSOR -- GMA ONLY                        CL**1
04119 ******************************************************************   CL**1
04120                                                                      CL**1
04121      EXEC SQL                                                        CL**1
04122          FETCH GMA-CURSOR                                            CL**1
04123           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04124                :MDSEAR-GMA-NBR,                                      CL**1
04125                :MDSEAR-DMA-NBR,                                      CL**1
04126                :MDSEAR-DEPT-NBR,                                     CL**1
04127                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04128                :MDSEAR-SUB-CL-NBR,                                   CL**1
04129                :MDSEAR-MDSELV-CDE,                                   CL**1
04130                :MDSEAR-DESC,                                         CL**1
04131                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04132                :APLAVL-APLSYS-CDE,                                   CL**1
04133                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04134                :APLAVL-MDSEAR-END-DTE                                CL**1
04135      END-EXEC.                                                       CL**1
04136                                                                      CL**1
04137      SET PS-DB2-OK TO TRUE                                           CL**1
04138                                                                      CL**1
04139      IF (SQLCODE = -904) OR                                          CL**1
04140         (SQLCODE = -913)                                             CL**1
04141          SET PS-DB2-RETRY TO TRUE                                    CL**1
04142          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04143          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04144              SET PS-DB2-OK TO TRUE                                   CL**1
04145          END-IF                                                      CL**1
04146      END-IF.                                                         CL**1
04147                                                                      CL**1
04148      IF PS-DB2-OK                                                    CL**1
04149          IF SQLCODE = +0                                             CL**1
04150              CONTINUE                                                CL**1
04151          ELSE                                                        CL**1
04152              IF SQLCODE = +100                                       CL**1
04153                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04154              ELSE                                                    CL**1
04155                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04156                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04157                  MOVE 'Z310-READ-GMA-CURSOR'   TO                    CL**1
04158                       DP013-PARAGRAPH                                CL**1
04159                  MOVE PC-OPERCO-NBR            TO                    CL**1
04160                       AM-OPERCO-NBR-13                               CL**1
04161                  MOVE MB016-SAVE-GMA           TO                    CL**1
04162                       AM-GMA-NBR-13                                  CL**1
04163                  MOVE MB016-SAVE-DMA           TO                    CL**1
04164                       AM-DMA-NBR-13                                  CL**1
04165                  MOVE MB016-SAVE-DPT           TO                    CL**1
04166                       AM-DEPT-NBR-13                                 CL**1
04167                  MOVE MB016-SAVE-MCL           TO                    CL**1
04168                       AM-MCL-NBR-13                                  CL**1
04169                  MOVE MB016-SAVE-SCL           TO                    CL**1
04170                       AM-SCL-NBR-13                                  CL**1
04171                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04172                       DP013-MESSAGE-TEXT(1)                          CL**1
04173                  MOVE SQLCA                    TO                    CL**1
04174                       DP013-SQLCA                                    CL**1
04175                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04176              END-IF                                                  CL**1
04177          END-IF                                                      CL**1
04178      END-IF.                                                         CL**1
04179  EJECT                                                               CL**1
04180  Z320-CLOSE-GMA-CURSOR.                                              CL**1
04181                                                                      CL**1
04182 ******************************************************************   CL**1
04183 *    CLOSE THE GMA-CURSOR                                            CL**1
04184 ******************************************************************   CL**1
04185                                                                      CL**1
04186      EXEC SQL                                                        CL**1
04187          CLOSE GMA-CURSOR                                            CL**1
04188      END-EXEC.                                                       CL**1
04189                                                                      CL**1
04190      IF (SQLCODE = +0)   OR                                          CL**1
04191         (SQLCODE = +100)                                             CL**1
04192          SET PS-GMA-CURSOR-NOT-OPENED TO TRUE                        CL**1
04193      ELSE                                                            CL**1
04194          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04195          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04196          MOVE 'Z310-CLOSE-GMA-CURSOR'   TO                           CL**1
04197               DP013-PARAGRAPH                                        CL**1
04198          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04199               DP013-MESSAGE-TEXT(1)                                  CL**1
04200          MOVE SQLCA                     TO                           CL**1
04201               DP013-SQLCA                                            CL**1
04202          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04203      END-IF.                                                         CL**1
04204  EJECT                                                               CL**1
04205  Z400-OPEN-DMA-CURSOR.                                               CL**1
04206                                                                      CL**1
04207 ******************************************************************   CL**1
04208 *    OPEN MERCHANDISE AREA CURSOR -- DMA ONLY                        CL**1
04209 ******************************************************************   CL**1
04210                                                                      CL**1
04211      EXEC SQL                                                        CL**1
04212          OPEN DMA-CURSOR                                             CL**1
04213      END-EXEC.                                                       CL**1
04214                                                                      CL**1
04215      IF (SQLCODE = +0)   OR                                          CL**1
04216         (SQLCODE = +100)                                             CL**1
04217          SET PS-DMA-CURSOR-OPENED       TO TRUE                      CL**1
04218      ELSE                                                            CL**1
04219          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04220          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04221          MOVE 'Z400-OPEN-DMA-CURSOR'    TO                           CL**1
04222               DP013-PARAGRAPH                                        CL**1
04223          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
04224               DP013-MESSAGE-TEXT(1)                                  CL**1
04225          MOVE SQLCA                     TO                           CL**1
04226               DP013-SQLCA                                            CL**1
04227          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04228      END-IF.                                                         CL**1
04229  EJECT                                                               CL**1
04230  Z410-READ-DMA-AREA.                                                 CL**1
04231                                                                      CL**1
04232 ******************************************************************   CL**1
04233 *    READ MERCHANDISE AREA CURSOR -- DMA ONLY                        CL**1
04234 ******************************************************************   CL**1
04235                                                                      CL**1
04236      EXEC SQL                                                        CL**1
04237          FETCH DMA-CURSOR                                            CL**1
04238           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04239                :MDSEAR-GMA-NBR,                                      CL**1
04240                :MDSEAR-DMA-NBR,                                      CL**1
04241                :MDSEAR-DEPT-NBR,                                     CL**1
04242                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04243                :MDSEAR-SUB-CL-NBR,                                   CL**1
04244                :MDSEAR-MDSELV-CDE,                                   CL**1
04245                :MDSEAR-DESC,                                         CL**1
04246                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04247                :APLAVL-APLSYS-CDE,                                   CL**1
04248                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04249                :APLAVL-MDSEAR-END-DTE                                CL**1
04250      END-EXEC.                                                       CL**1
04251                                                                      CL**1
04252      SET PS-DB2-OK TO TRUE                                           CL**1
04253                                                                      CL**1
04254      IF (SQLCODE = -904) OR                                          CL**1
04255         (SQLCODE = -913)                                             CL**1
04256          SET PS-DB2-RETRY TO TRUE                                    CL**1
04257          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04258          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04259              SET PS-DB2-OK TO TRUE                                   CL**1
04260          END-IF                                                      CL**1
04261      END-IF.                                                         CL**1
04262                                                                      CL**1
04263      IF PS-DB2-OK                                                    CL**1
04264          IF SQLCODE = +0                                             CL**1
04265              CONTINUE                                                CL**1
04266          ELSE                                                        CL**1
04267              IF SQLCODE = +100                                       CL**1
04268                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04269              ELSE                                                    CL**1
04270                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04271                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04272                  MOVE 'Z410-READ-DMA-CURSOR'   TO                    CL**1
04273                       DP013-PARAGRAPH                                CL**1
04274                  MOVE PC-OPERCO-NBR            TO                    CL**1
04275                       AM-OPERCO-NBR-13                               CL**1
04276                  MOVE MB016-SAVE-GMA           TO                    CL**1
04277                       AM-GMA-NBR-13                                  CL**1
04278                  MOVE MB016-SAVE-DMA           TO                    CL**1
04279                       AM-DMA-NBR-13                                  CL**1
04280                  MOVE MB016-SAVE-DPT           TO                    CL**1
04281                       AM-DEPT-NBR-13                                 CL**1
04282                  MOVE MB016-SAVE-MCL           TO                    CL**1
04283                       AM-MCL-NBR-13                                  CL**1
04284                  MOVE MB016-SAVE-SCL           TO                    CL**1
04285                       AM-SCL-NBR-13                                  CL**1
04286                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04287                       DP013-MESSAGE-TEXT(1)                          CL**1
04288                  MOVE SQLCA                    TO                    CL**1
04289                       DP013-SQLCA                                    CL**1
04290                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04291              END-IF                                                  CL**1
04292          END-IF                                                      CL**1
04293      END-IF.                                                         CL**1
04294  EJECT                                                               CL**1
04295  Z420-CLOSE-DMA-CURSOR.                                              CL**1
04296                                                                      CL**1
04297 ******************************************************************   CL**1
04298 *    CLOSE THE DMA-CURSOR                                            CL**1
04299 ******************************************************************   CL**1
04300                                                                      CL**1
04301      EXEC SQL                                                        CL**1
04302          CLOSE DMA-CURSOR                                            CL**1
04303      END-EXEC.                                                       CL**1
04304                                                                      CL**1
04305      IF (SQLCODE = +0)   OR                                          CL**1
04306         (SQLCODE = +100)                                             CL**1
04307          SET PS-DMA-CURSOR-NOT-OPENED TO TRUE                        CL**1
04308      ELSE                                                            CL**1
04309          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04310          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04311          MOVE 'Z410-CLOSE-DMA-CURSOR'   TO                           CL**1
04312               DP013-PARAGRAPH                                        CL**1
04313          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04314               DP013-MESSAGE-TEXT(1)                                  CL**1
04315          MOVE SQLCA                     TO                           CL**1
04316               DP013-SQLCA                                            CL**1
04317          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04318      END-IF.                                                         CL**1
04319  EJECT                                                               CL**1
04320  Z500-OPEN-DPT-CURSOR.                                               CL**1
04321                                                                      CL**1
04322 ******************************************************************   CL**1
04323 *    OPEN MERCHANDISE AREA CURSOR -- DPT ONLY                        CL**1
04324 ******************************************************************   CL**1
04325                                                                      CL**1
04326      EXEC SQL                                                        CL**1
04327          OPEN DPT-CURSOR                                             CL**1
04328      END-EXEC.                                                       CL**1
04329                                                                      CL**1
04330      IF (SQLCODE = +0)   OR                                          CL**1
04331         (SQLCODE = +100)                                             CL**1
04332          SET PS-DPT-CURSOR-OPENED       TO TRUE                      CL**1
04333      ELSE                                                            CL**1
04334          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04335          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04336          MOVE 'Z500-OPEN-DPT-CURSOR'    TO                           CL**1
04337               DP013-PARAGRAPH                                        CL**1
04338          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
04339               DP013-MESSAGE-TEXT(1)                                  CL**1
04340          MOVE SQLCA                     TO                           CL**1
04341               DP013-SQLCA                                            CL**1
04342          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04343      END-IF.                                                         CL**1
04344  EJECT                                                               CL**1
04345  Z510-READ-DPT-AREA.                                                 CL**1
04346                                                                      CL**1
04347 ******************************************************************   CL**1
04348 *    READ MERCHANDISE AREA CURSOR -- DPT ONLY                        CL**1
04349 ******************************************************************   CL**1
04350                                                                      CL**1
04351      EXEC SQL                                                        CL**1
04352          FETCH DPT-CURSOR                                            CL**1
04353           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04354                :MDSEAR-GMA-NBR,                                      CL**1
04355                :MDSEAR-DMA-NBR,                                      CL**1
04356                :MDSEAR-DEPT-NBR,                                     CL**1
04357                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04358                :MDSEAR-SUB-CL-NBR,                                   CL**1
04359                :MDSEAR-MDSELV-CDE,                                   CL**1
04360                :MDSEAR-DESC,                                         CL**1
04361                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04362                :APLAVL-APLSYS-CDE,                                   CL**1
04363                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04364                :APLAVL-MDSEAR-END-DTE                                CL**1
04365      END-EXEC.                                                       CL**1
04366                                                                      CL**1
04367      SET PS-DB2-OK TO TRUE                                           CL**1
04368                                                                      CL**1
04369      IF (SQLCODE = -904) OR                                          CL**1
04370         (SQLCODE = -913)                                             CL**1
04371          SET PS-DB2-RETRY TO TRUE                                    CL**1
04372          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04373          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04374              SET PS-DB2-OK TO TRUE                                   CL**1
04375          END-IF                                                      CL**1
04376      END-IF.                                                         CL**1
04377                                                                      CL**1
04378      IF PS-DB2-OK                                                    CL**1
04379          IF SQLCODE = +0                                             CL**1
04380              CONTINUE                                                CL**1
04381          ELSE                                                        CL**1
04382              IF SQLCODE = +100                                       CL**1
04383                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04384              ELSE                                                    CL**1
04385                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04386                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04387                  MOVE 'Z510-READ-DPT-CURSOR'   TO                    CL**1
04388                       DP013-PARAGRAPH                                CL**1
04389                  MOVE PC-OPERCO-NBR            TO                    CL**1
04390                       AM-OPERCO-NBR-13                               CL**1
04391                  MOVE MB016-SAVE-GMA           TO                    CL**1
04392                       AM-GMA-NBR-13                                  CL**1
04393                  MOVE MB016-SAVE-DMA           TO                    CL**1
04394                       AM-DMA-NBR-13                                  CL**1
04395                  MOVE MB016-SAVE-DPT           TO                    CL**1
04396                       AM-DEPT-NBR-13                                 CL**1
04397                  MOVE MB016-SAVE-MCL           TO                    CL**1
04398                       AM-MCL-NBR-13                                  CL**1
04399                  MOVE MB016-SAVE-SCL           TO                    CL**1
04400                       AM-SCL-NBR-13                                  CL**1
04401                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04402                       DP013-MESSAGE-TEXT(1)                          CL**1
04403                  MOVE SQLCA                    TO                    CL**1
04404                       DP013-SQLCA                                    CL**1
04405                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04406              END-IF                                                  CL**1
04407          END-IF                                                      CL**1
04408      END-IF.                                                         CL**1
04409  EJECT                                                               CL**1
04410  Z520-CLOSE-DPT-CURSOR.                                              CL**1
04411                                                                      CL**1
04412 ******************************************************************   CL**1
04413 *    CLOSE THE DPT-CURSOR                                            CL**1
04414 ******************************************************************   CL**1
04415                                                                      CL**1
04416      EXEC SQL                                                        CL**1
04417          CLOSE DPT-CURSOR                                            CL**1
04418      END-EXEC.                                                       CL**1
04419                                                                      CL**1
04420      IF (SQLCODE = +0)   OR                                          CL**1
04421         (SQLCODE = +100)                                             CL**1
04422          SET PS-DPT-CURSOR-NOT-OPENED TO TRUE                        CL**1
04423      ELSE                                                            CL**1
04424          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04425          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04426          MOVE 'Z520-CLOSE-DPT-CURSOR'   TO                           CL**1
04427               DP013-PARAGRAPH                                        CL**1
04428          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04429               DP013-MESSAGE-TEXT(1)                                  CL**1
04430          MOVE SQLCA                     TO                           CL**1
04431               DP013-SQLCA                                            CL**1
04432          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04433      END-IF.                                                         CL**1
04434  EJECT                                                               CL**1
04435  Z600-OPEN-MCL-CURSOR.                                               CL**1
04436                                                                      CL**1
04437 ******************************************************************   CL**1
04438 *    OPEN MERCHANDISE AREA CURSOR -- MCL ONLY                        CL**1
04439 ******************************************************************   CL**1
04440                                                                      CL**1
04441      EXEC SQL                                                        CL**1
04442          OPEN MCL-CURSOR                                             CL**1
04443      END-EXEC.                                                       CL**1
04444                                                                      CL**1
04445      IF (SQLCODE = +0)   OR                                          CL**1
04446         (SQLCODE = +100)                                             CL**1
04447          SET PS-MCL-CURSOR-OPENED       TO TRUE                      CL**1
04448      ELSE                                                            CL**1
04449          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04450          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04451          MOVE 'Z600-OPEN-MCL-CURSOR'    TO                           CL**1
04452               DP013-PARAGRAPH                                        CL**1
04453          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
04454               DP013-MESSAGE-TEXT(1)                                  CL**1
04455          MOVE SQLCA                     TO                           CL**1
04456               DP013-SQLCA                                            CL**1
04457          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04458      END-IF.                                                         CL**1
04459  EJECT                                                               CL**1
04460  Z610-READ-MCL-AREA.                                                 CL**1
04461                                                                      CL**1
04462 ******************************************************************   CL**1
04463 *    READ MERCHANDISE AREA CURSOR -- MCL ONLY                        CL**1
04464 ******************************************************************   CL**1
04465                                                                      CL**1
04466      EXEC SQL                                                        CL**1
04467          FETCH MCL-CURSOR                                            CL**1
04468           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04469                :MDSEAR-GMA-NBR,                                      CL**1
04470                :MDSEAR-DMA-NBR,                                      CL**1
04471                :MDSEAR-DEPT-NBR,                                     CL**1
04472                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04473                :MDSEAR-SUB-CL-NBR,                                   CL**1
04474                :MDSEAR-MDSELV-CDE,                                   CL**1
04475                :MDSEAR-DESC,                                         CL**1
04476                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04477                :APLAVL-APLSYS-CDE,                                   CL**1
04478                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04479                :APLAVL-MDSEAR-END-DTE                                CL**1
04480      END-EXEC.                                                       CL**1
04481                                                                      CL**1
04482      SET PS-DB2-OK TO TRUE                                           CL**1
04483                                                                      CL**1
04484      IF (SQLCODE = -904) OR                                          CL**1
04485         (SQLCODE = -913)                                             CL**1
04486          SET PS-DB2-RETRY TO TRUE                                    CL**1
04487          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04488          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04489              SET PS-DB2-OK TO TRUE                                   CL**1
04490          END-IF                                                      CL**1
04491      END-IF.                                                         CL**1
04492                                                                      CL**1
04493      IF PS-DB2-OK                                                    CL**1
04494          IF SQLCODE = +0                                             CL**1
04495              CONTINUE                                                CL**1
04496          ELSE                                                        CL**1
04497              IF SQLCODE = +100                                       CL**1
04498                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04499              ELSE                                                    CL**1
04500                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04501                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04502                  MOVE 'Z610-READ-MCL-CURSOR'   TO                    CL**1
04503                       DP013-PARAGRAPH                                CL**1
04504                  MOVE PC-OPERCO-NBR            TO                    CL**1
04505                       AM-OPERCO-NBR-13                               CL**1
04506                  MOVE MB016-SAVE-GMA           TO                    CL**1
04507                       AM-GMA-NBR-13                                  CL**1
04508                  MOVE MB016-SAVE-DMA           TO                    CL**1
04509                       AM-DMA-NBR-13                                  CL**1
04510                  MOVE MB016-SAVE-DPT           TO                    CL**1
04511                       AM-DEPT-NBR-13                                 CL**1
04512                  MOVE MB016-SAVE-MCL           TO                    CL**1
04513                       AM-MCL-NBR-13                                  CL**1
04514                  MOVE MB016-SAVE-SCL           TO                    CL**1
04515                       AM-SCL-NBR-13                                  CL**1
04516                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04517                       DP013-MESSAGE-TEXT(1)                          CL**1
04518                  MOVE SQLCA                    TO                    CL**1
04519                       DP013-SQLCA                                    CL**1
04520                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04521              END-IF                                                  CL**1
04522          END-IF                                                      CL**1
04523      END-IF.                                                         CL**1
04524  EJECT                                                               CL**1
04525  Z620-CLOSE-MCL-CURSOR.                                              CL**1
04526                                                                      CL**1
04527 ******************************************************************   CL**1
04528 *    CLOSE THE MCL-CURSOR                                            CL**1
04529 ******************************************************************   CL**1
04530                                                                      CL**1
04531      EXEC SQL                                                        CL**1
04532          CLOSE MCL-CURSOR                                            CL**1
04533      END-EXEC.                                                       CL**1
04534                                                                      CL**1
04535      IF (SQLCODE = +0)   OR                                          CL**1
04536         (SQLCODE = +100)                                             CL**1
04537          SET PS-MCL-CURSOR-NOT-OPENED TO TRUE                        CL**1
04538      ELSE                                                            CL**1
04539          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04540          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04541          MOVE 'Z620-CLOSE-MCL-CURSOR'   TO                           CL**1
04542               DP013-PARAGRAPH                                        CL**1
04543          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04544               DP013-MESSAGE-TEXT(1)                                  CL**1
04545          MOVE SQLCA                     TO                           CL**1
04546               DP013-SQLCA                                            CL**1
04547          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04548      END-IF.                                                         CL**1
04549  EJECT                                                               CL**1
04550  Z700-OPEN-SCL-CURSOR.                                               CL**1
04551                                                                      CL**1
04552 ******************************************************************   CL**1
04553 *    OPEN MERCHANDISE AREA CURSOR -- SCL ONLY                        CL**1
04554 ******************************************************************   CL**1
04555                                                                      CL**1
04556      EXEC SQL                                                        CL**1
04557          OPEN SCL-CURSOR                                             CL**1
04558      END-EXEC.                                                       CL**1
04559                                                                      CL**1
04560      IF (SQLCODE = +0)   OR                                          CL**1
04561         (SQLCODE = +100)                                             CL**1
04562          SET PS-SCL-CURSOR-OPENED       TO TRUE                      CL**1
04563      ELSE                                                            CL**1
04564          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04565          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04566          MOVE 'Z700-OPEN-SCL-CURSOR'    TO                           CL**1
04567               DP013-PARAGRAPH                                        CL**1
04568          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
04569               DP013-MESSAGE-TEXT(1)                                  CL**1
04570          MOVE SQLCA                     TO                           CL**1
04571               DP013-SQLCA                                            CL**1
04572          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04573      END-IF.                                                         CL**1
04574  EJECT                                                               CL**1
04575  Z710-READ-SCL-AREA.                                                 CL**1
04576                                                                      CL**1
04577 ******************************************************************   CL**1
04578 *    READ MERCHANDISE AREA CURSOR -- SCL ONLY                        CL**1
04579 ******************************************************************   CL**1
04580                                                                      CL**1
04581      EXEC SQL                                                        CL**1
04582          FETCH SCL-CURSOR                                            CL**1
04583           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04584                :MDSEAR-GMA-NBR,                                      CL**1
04585                :MDSEAR-DMA-NBR,                                      CL**1
04586                :MDSEAR-DEPT-NBR,                                     CL**1
04587                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04588                :MDSEAR-SUB-CL-NBR,                                   CL**1
04589                :MDSEAR-MDSELV-CDE,                                   CL**1
04590                :MDSEAR-DESC,                                         CL**1
04591                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04592                :APLAVL-APLSYS-CDE,                                   CL**1
04593                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04594                :APLAVL-MDSEAR-END-DTE                                CL**1
04595      END-EXEC.                                                       CL**1
04596                                                                      CL**1
04597      SET PS-DB2-OK TO TRUE                                           CL**1
04598                                                                      CL**1
04599      IF (SQLCODE = -904) OR                                          CL**1
04600         (SQLCODE = -913)                                             CL**1
04601          SET PS-DB2-RETRY TO TRUE                                    CL**1
04602          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04603          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04604              SET PS-DB2-OK TO TRUE                                   CL**1
04605          END-IF                                                      CL**1
04606      END-IF.                                                         CL**1
04607                                                                      CL**1
04608      IF PS-DB2-OK                                                    CL**1
04609          IF SQLCODE = +0                                             CL**1
04610              CONTINUE                                                CL**1
04611          ELSE                                                        CL**1
04612              IF SQLCODE = +100                                       CL**1
04613                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04614              ELSE                                                    CL**1
04615                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04616                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04617                  MOVE 'Z710-READ-SCL-CURSOR'   TO                    CL**1
04618                       DP013-PARAGRAPH                                CL**1
04619                  MOVE PC-OPERCO-NBR            TO                    CL**1
04620                       AM-OPERCO-NBR-13                               CL**1
04621                  MOVE MB016-SAVE-GMA           TO                    CL**1
04622                       AM-GMA-NBR-13                                  CL**1
04623                  MOVE MB016-SAVE-DMA           TO                    CL**1
04624                       AM-DMA-NBR-13                                  CL**1
04625                  MOVE MB016-SAVE-DPT           TO                    CL**1
04626                       AM-DEPT-NBR-13                                 CL**1
04627                  MOVE MB016-SAVE-MCL           TO                    CL**1
04628                       AM-MCL-NBR-13                                  CL**1
04629                  MOVE MB016-SAVE-SCL           TO                    CL**1
04630                       AM-SCL-NBR-13                                  CL**1
04631                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04632                       DP013-MESSAGE-TEXT(1)                          CL**1
04633                  MOVE SQLCA                    TO                    CL**1
04634                       DP013-SQLCA                                    CL**1
04635                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04636              END-IF                                                  CL**1
04637          END-IF                                                      CL**1
04638      END-IF.                                                         CL**1
04639  EJECT                                                               CL**1
04640  Z720-CLOSE-SCL-CURSOR.                                              CL**1
04641                                                                      CL**1
04642 ******************************************************************   CL**1
04643 *    CLOSE THE SCL-CURSOR                                            CL**1
04644 ******************************************************************   CL**1
04645                                                                      CL**1
04646      EXEC SQL                                                        CL**1
04647          CLOSE SCL-CURSOR                                            CL**1
04648      END-EXEC.                                                       CL**1
04649                                                                      CL**1
04650      IF (SQLCODE = +0)   OR                                          CL**1
04651         (SQLCODE = +100)                                             CL**1
04652          SET PS-SCL-CURSOR-NOT-OPENED TO TRUE                        CL**1
04653      ELSE                                                            CL**1
04654          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04655          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04656          MOVE 'Z720-CLOSE-SCL-CURSOR'   TO                           CL**1
04657               DP013-PARAGRAPH                                        CL**1
04658          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04659               DP013-MESSAGE-TEXT(1)                                  CL**1
04660          MOVE SQLCA                     TO                           CL**1
04661               DP013-SQLCA                                            CL**1
04662          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04663      END-IF.                                                         CL**1
04664  EJECT                                                               CL**1
04665  Z800-OPEN-ALL-APLAVL.                                               CL**1
04666                                                                      CL**1
04667 ******************************************************************   CL**1
04668 *    OPEN ALL-APLAVL CURSOR                                          CL**1
04669 ******************************************************************   CL**1
04670                                                                      CL**1
04671      EXEC SQL                                                        CL**1
04672          OPEN ALL-APLAVL                                             CL**1
04673      END-EXEC.                                                       CL**1
04674                                                                      CL**1
04675      IF (SQLCODE = +0)   OR                                          CL**1
04676         (SQLCODE = +100)                                             CL**1
04677          CONTINUE                                                    CL**1
04678      ELSE                                                            CL**1
04679          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04680          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04681          MOVE 'Z800-OPEN-ALL-APLAVL'    TO                           CL**1
04682               DP013-PARAGRAPH                                        CL**1
04683          MOVE AM-ABEND-MESSAGE-21       TO                           CL**1
04684               DP013-MESSAGE-TEXT(1)                                  CL**1
04685          MOVE SQLCA                     TO                           CL**1
04686               DP013-SQLCA                                            CL**1
04687          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04688      END-IF.                                                         CL**1
04689  EJECT                                                               CL**1
04690  Z810-READ-ALL-APLAVL.                                               CL**1
04691                                                                      CL**1
04692 ******************************************************************   CL**1
04693 *    READ ALL-APLAVL CURSOR                                          CL**1
04694 ******************************************************************   CL**1
04695                                                                      CL**1
04696      EXEC SQL                                                        CL**1
04697          FETCH ALL-APLAVL                                            CL**1
04698           INTO :MDSEAR-OPERCO-NBR,                                   CL**1
04699                :MDSEAR-GMA-NBR,                                      CL**1
04700                :MDSEAR-DMA-NBR,                                      CL**1
04701                :MDSEAR-DEPT-NBR,                                     CL**1
04702                :MDSEAR-MAJ-CL-NBR,                                   CL**1
04703                :MDSEAR-SUB-CL-NBR,                                   CL**1
04704                :MDSEAR-MDSELV-CDE,                                   CL**1
04705                :MDSEAR-DESC,                                         CL**1
04706                :MDSEAR-LIST-SEQ-NBR,                                 CL**1
04707                :APLAVL-APLSYS-CDE,                                   CL**1
04708                :APLAVL-MDSEAR-STRT-DTE,                              CL**1
04709                :APLAVL-MDSEAR-END-DTE                                CL**1
04710      END-EXEC.                                                       CL**1
04711                                                                      CL**1
04712      SET PS-DB2-OK TO TRUE                                           CL**1
04713                                                                      CL**1
04714      IF (SQLCODE = -904) OR                                          CL**1
04715         (SQLCODE = -913)                                             CL**1
04716          SET PS-DB2-RETRY TO TRUE                                    CL**1
04717          ADD 1 TO PC-RETRY-CNTR                                      CL**1
04718          IF PC-RETRY-CNTR > PC-MAX-RETRYS                            CL**1
04719              SET PS-DB2-OK TO TRUE                                   CL**1
04720          END-IF                                                      CL**1
04721      END-IF.                                                         CL**1
04722                                                                      CL**1
04723      IF PS-DB2-OK                                                    CL**1
04724          IF SQLCODE = +0                                             CL**1
04725              CONTINUE                                                CL**1
04726          ELSE                                                        CL**1
04727              IF SQLCODE = +100                                       CL**1
04728                  SET MB016-NO-ITEMS-LEFT-ON-DB TO TRUE               CL**1
04729              ELSE                                                    CL**1
04730                  SET DP013-DB2-ABEND   TO TRUE                       CL**1
04731                  SET DP013-NO-ROLLBACK TO TRUE                       CL**1
04732                  MOVE 'Z810-READ-ALL-APLAVL'   TO                    CL**1
04733                       DP013-PARAGRAPH                                CL**1
04734                  MOVE PC-OPERCO-NBR            TO                    CL**1
04735                       AM-OPERCO-NBR-13                               CL**1
04736                  MOVE MB016-SAVE-GMA           TO                    CL**1
04737                       AM-GMA-NBR-13                                  CL**1
04738                  MOVE MB016-SAVE-DMA           TO                    CL**1
04739                       AM-DMA-NBR-13                                  CL**1
04740                  MOVE MB016-SAVE-DPT           TO                    CL**1
04741                       AM-DEPT-NBR-13                                 CL**1
04742                  MOVE MB016-SAVE-MCL           TO                    CL**1
04743                       AM-MCL-NBR-13                                  CL**1
04744                  MOVE MB016-SAVE-SCL           TO                    CL**1
04745                       AM-SCL-NBR-13                                  CL**1
04746                  MOVE AM-ABEND-MESSAGE-13      TO                    CL**1
04747                       DP013-MESSAGE-TEXT(1)                          CL**1
04748                  MOVE SQLCA                    TO                    CL**1
04749                       DP013-SQLCA                                    CL**1
04750                  PERFORM DP013-0000-PROCESS-ABEND                    CL**1
04751              END-IF                                                  CL**1
04752          END-IF                                                      CL**1
04753      END-IF.                                                         CL**1
04754  EJECT                                                               CL**1
04755  Z820-CLOSE-ALL-APLAVL.                                              CL**1
04756                                                                      CL**1
04757 ******************************************************************   CL**1
04758 *    CLOSE THE ALL-APLAVL                                            CL**1
04759 ******************************************************************   CL**1
04760                                                                      CL**1
04761      EXEC SQL                                                        CL**1
04762          CLOSE ALL-APLAVL                                            CL**1
04763      END-EXEC.                                                       CL**1
04764                                                                      CL**1
04765      IF (SQLCODE = +0)   OR                                          CL**1
04766         (SQLCODE = +100)                                             CL**1
04767          CONTINUE                                                    CL**1
04768      ELSE                                                            CL**1
04769          SET DP013-DB2-ABEND            TO TRUE                      CL**1
04770          SET DP013-NO-ROLLBACK          TO TRUE                      CL**1
04771          MOVE 'Z820-CLOSE-ALL-APLAVL'   TO                           CL**1
04772               DP013-PARAGRAPH                                        CL**1
04773          MOVE AM-ABEND-MESSAGE-22       TO                           CL**1
04774               DP013-MESSAGE-TEXT(1)                                  CL**1
04775          MOVE SQLCA                     TO                           CL**1
04776               DP013-SQLCA                                            CL**1
04777          PERFORM DP013-0000-PROCESS-ABEND                            CL**1
04778      END-IF.                                                         CL**1
04779  EJECT                                                               CL**1
04780 ******************************************************************   CL**1
04781 *    FILL IN SCREEN HEADER MODULE                                    CL**1
04782 ******************************************************************   CL**1
04783                                                                      CL**1
04784      COPY DPPD002.                                                   CL**1
04785  EJECT                                                               CL**1
04786 ******************************************************************   CL**1
04787 *    RETURN TO CICS MODULE                                           CL**1
04788 ******************************************************************   CL**1
04789                                                                      CL**1
04790      COPY DPPD003.                                                   CL**1
04791  EJECT                                                               CL**1
04792 ******************************************************************   CL**1
04793 *    FORMAT MESSAGE LINES MODULE                                     CL**1
04794 ******************************************************************   CL**1
04795                                                                      CL**1
04796      COPY DPPD005.                                                   CL**1
04797  EJECT                                                               CL**1
04798 ******************************************************************   CL**1
04799 *    GET PANEL MODULE                                                CL**1
04800 ******************************************************************   CL**1
04801                                                                      CL**1
04802      COPY DPPD007.                                                   CL**1
04803  EJECT                                                               CL**1
04804 ******************************************************************   CL**1
04805 *    WRITE PANEL MODULE                                              CL**1
04806 ******************************************************************   CL**1
04807                                                                      CL**1
04808      COPY DPPD008.                                                   CL**1
04809  EJECT                                                               CL**1
04810 ******************************************************************   CL**1
04811 *    TOGGLE THE FUNCTION KEY LINE MODULE                             CL**1
04812 ******************************************************************   CL**1
04813                                                                      CL**1
04814      COPY DPPD009.                                                   CL**1
04815  EJECT                                                               CL**1
04816 ******************************************************************   CL**1
04817 *    ABEND PROCESSOR MODULE                                          CL**1
04818 ******************************************************************   CL**1
04819                                                                      CL**1
04820      COPY DPPD013.                                                   CL**1
04821  EJECT                                                               CL**1
04822 ******************************************************************   CL**1
04823 *    CHECK COMMUNICATION AREA MODULE                                 CL**1
04824 ******************************************************************   CL**1
04825                                                                      CL**1
04826      COPY DPPD015.                                                   CL**1
04827  EJECT                                                               CL**1
04828 ******************************************************************   CL**1
04829 *    UPDATE TIME AND DATE MODULE                                     CL**1
04830 ******************************************************************   CL**1
04831                                                                      CL**1
04832      COPY DPPD017.                                                   CL**1
04833  EJECT                                                               CL**1
