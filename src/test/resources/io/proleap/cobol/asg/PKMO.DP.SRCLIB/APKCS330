000100 IDENTIFICATION DIVISION.                                         00010000
000200 PROGRAM-ID.    APKCS330.                                         00020000
000300 AUTHOR.        MARC BLAZICH.                                     00030000
000400 INSTALLATION.  KOHLS DEPARTMENT STORES.                          00040000
000500 DATE-WRITTEN.  06-29-94.                                         00050000
000600 DATE-COMPILED.                                                   00060000
000700                                                                  00070000
000800*---------------------------------------------------------------* 00080000
000900*    E330 - PO ITEM RECONCILIATION                              * 00090000
001000*                                                               * 00100000
001100*    TO DISPLAY THE RECONCILIATION RESULTS BETWEEN THE          * 00110000
001200*    INVOICED AND RECEIPT AMOUNTS FOR EACH PURCHASE             * 00120000
001300*    ORDER LINE FOR A SPECIFIC PURCHASE ORDER/STORE.            * 00130000
001400*                                                               * 00140000
001500*---------------------------------------------------------------* 00150000
001600*    THIS IS APKCS330 & 332 COMBINED INTO ONE PROGRAM. MB 8/31  * 00160000
001700*---------------------------------------------------------------* 00170000
001800* CHANGE LOG:                                                   * 00180000
001900*                                                               * 00190000
002000* 09/07/94    BMW  REVISED PREQIT_CSR TO REMOVE USE OF THE      * 00200000
002100*                  'VALUE' STATEMENT IN THE WHERE CLAUSE..IT    * 00210000
002200*                  WAS THOUGHT THAT IT WAS CAUSING A TABLE SCAN.* 00220000
002300*                                                               * 00230000
002400* 09/13/94    BMW  REVISED CODE TO MOVE STORE INTO REMAINDER    * 00240000
002500*                  INVOICE AND NON-INVOICED RECEIPT ROWS WHEN   * 00250000
002600*                  INSERTED.  ALSO ADDED CODE TO EXCLUDE        * 00260000
002700*                  DELETED RECDIS AND NINREC ROWS WHERE         * 00270000
002800*                  AP_PRC_CDE = 'D'.  ALSO MOVED STORE INTO     * 00280000
002900*                  TPOSTRR ROW.                                 * 00290000
003000*                                                               * 00300000
003100* 09/26/94    CMK  INCREASE TRECDIS-TABLE SIZE                  * 00310000
003200*                  MODIFY ERROR MESSAGE 946 DISPLAY             * 00320000
003300*                                                               * 00330000
003400* 10/01/94    BMW  CHANGED WHERE CLAUSE FOR RECEIPT CSR SO THAT * 00340000
003500*                  IT LOOKS FOR AP_PRC_CDE = ' ', INSTEAD OF    * 00350000
003600*                  AP_PRC_CDE NOT IN ('M', 'J', 'D')            * 00360000
003700*                                                               * 00370000
003800* 10/04/94    BMW  CHANGED CODE SO THAT WHEN RECONCILING BY     * 00380000
003900*                  STORE, THE WHOLE RECEIVER IS NOT MARKED AS   * 00390000
004000*                  MATCHED, JUST THE RECDIS FOR THAT PO/STORE.  * 00400000
004100*                                                               * 00410000
004200* 10/13/94    BMW  MOVE INSERT OF TALCHRG ROW SO THAT IT IS     * 00420000
004300*                  INSERTED ONLY ONCE FOR A REMAINDER INVOICE.  * 00430000
004400*                                                               * 00440000
004500* 10/25/94    BMW  RESOLVE POSTRR ROWS WITH BOTH STORE AND BULK * 00450000
004600*                                                               * 00460000
004700* 11/21/94    BMW  CHG'D CODE TO RESOLVE PROBLEMS RECONCILING   * 00470000
004800*                  INVOICES WITH "UNMATCHED" LINE ITEMS.        * 00480000
004900*                                                               * 00490000
005000* 12/01/94    BMW  CHG'D CODE TO RESOLVE PROBLEMS WHEN CREATING * 00500000
005100*                  REMAINDER INVOICE LINE ITEMS; AND MISSING    * 00510000
005200*                  PRICE CLAIMS WHEN PROCESSING INVC(S) WITH    * 00520000
005300*                  MULTIPLE UNIT COSTS.                         * 00530000
005400*                                                               * 00540000
005500* 12/06/94    BMW  ADDED AN ORDER BY ON TPREQIT.PAY_REQ_LNE_QTY * 00550000
005600*                  IN THE PREQIT_NULL_PO_CSR TO FORCE DB2 TO    * 00560000
005700*                  CREATE THE RESULT TABLE WHEN OPENNING THE    * 00570000
005800*                  CURSOR RATHER THAN AT FETCH TIME.  DO NOT    * 00580000
005900*                  REMOVE THIS ORDER, AS THE PROGRAM WILL GO    * 00590000
006000*                  INTO A LOOP!!!!!!!!!!!!!                     * 00600000
006100*                                                               * 00610000
006200* 12/07/94    BMW  WHEN CHECKING WHETHER THE PO/STR IS PENDING  * 00620000
006300*                  RECONCILIATION, THE STATUS OF 'I' IS ALSO    * 00630000
006400*                  NOW CHECKED.  (STATUS = I MEANS THE BATCH    * 00640000
006500*                  TRIED TO PROCESS THIS PO/STR, BUT RAN INTO   * 00650000
006600*                  PROBLEMS, AND DID NOT PROCESS IT).           * 00660000
006700*                                                               * 00670000
006800* 12/08/94    BMW  FIXED PROBLEM WITH MOVING ONLY LAST TEN      * 00680000
006900*                  CHARS OF INVC ID INTO THE PRICE CLAIM ARRAY. * 00690000
007000*                  IT NOW MOVES ALL 22 INVC ID CHARS.           * 00700000
007100*                                                               * 00710000
007200* 12/09/94    BMW  FIXED PROBLEM WITH SETTING THE PRICE CLAIM   * 00720000
007300*                  ADJUSTMENT TYPE CODE.  PGM NOW COMPARES THE  * 00730000
007400*                  INVC UNIT COST INSTEAD OF THE ARRAY UNIT COST* 00740000
007500*                  TO THE RECEIVED UNIT COST TO DETERMINE THE   * 00750000
007600*                  ADJUSTMENT CODE, SEE 4360-.                  * 00760000
007700*                                                               * 00770000
007800* 12/16/94    MKK  CHANGED CODE TO TAKE PRICE CLAIMS INTO       * 00780000
007900*                  ACCOUNT WHEN CREATING REMAINDER INVOICE ITEMS* 00790000
008000*                                                               * 00800000
008100* 01/04/95    MKK -CHANGED TPREQIT CURSOR TO SUM ON PAY_REQ_    * 00810000
008200*                  LNE_QTY. THIS WAY FEWER ITEM ROWS WILL BE    * 00820000
008300*                  BROUGHT BACK WHICH WILL RESULT IN FEWER      * 00830000
008400*                  PRICE CLAIM ENTRIES.  FEWER PRICE CLAIM      * 00840000
008500*                  ENTRIES WILL HELP KEEP THE INTERNAL PRICE    * 00850000
008600*                  CLAIM TABLE WITHIN THE CURRENT 500 OCCURRENCE* 00860000
008700*                  LIMIT AND REDUCE THE POSSIBILITY OF TRYING   * 00870000
008800*                  TO ADD DUPLICATE KEYS ON TPRCCLM.            * 00880000
008900*                 -ALSO ADDED A CHECK IN 4360 TO ABEND IF       * 00890000
009000*                  PR-IDX GOES BEYOND ITS 500 OCCURRENCE MAX.   * 00900000
009100*                                                               * 00910000
009200* 01/11/95    BMW  REMOVED THE "VALUE" PARM FROM THE WHERE      * 00920000
009300*                  CLAUSES TO IMPROVE DB2 PERFORMANCE.          * 00930000
009400*                                                               * 00940000
009500* 01/12/95    BMW  ADDED CODE TO "POSITION" IN THE STORE ARRAY  * 00950000
009600*                  ON THE STORE NUMBER PASSED BY THE CALLING    * 00960000
009700*                  PROGRAM.                                     * 00970000
009800*                                                               * 00980000
009900* 01/17/95    MKK -CHANGED COST IN PRICE CLAIM TABLE FROM       * 00990000
010000*                  V99 TO V999.                                 * 01000000
010100*                 -CHANGED TPREQIT_CSR TO REMOVE SUM (CHANGE    * 01010000
010200*                  FROM 01/04) FOR EFFICIENCY REASONS AND       * 01020000
010300*                  ADDED INTERNAL LOGIC IN 4340 TO HANDLE       * 01030000
010400*                  THE SUMMING TASK.                            * 01040000
010500*                 -IN 7510, ADDED CODE TO FILL IN A VALUE FOR   * 01050000
010600*                  PRCCLM-SEQ-NBR.  THIS FIELD WAS ADDED TO     * 01060000
010700*                  PREVENT ABENDS WHERE THERE ARE MULTIPLE      * 01070000
010800*                  UNIT COSTS FOR THE SAME PO/STR/INVOICE/PO    * 01080000
010900*                  LINE COMBINATION.                            * 01090000
011000*                                                               * 01100000
011100* 02/20/95    MKK -MADE CHANGE TO USE MOST RECENT INVOICE DATE  * 01110000
011200*                  FROM THE INVOICES WHEN CREATING A REMAINDER  * 01120000
011300*                  INVOICES INSTAED OF USING CURRENT DATE.      * 01130000
011400*                                                               * 01140000
011500* 03/31/95    MKK -INCREASED SIZE OF PRICE CLAIM TABLE FROM     * 01150000
011600*                  500 OCCURRENCES TO 600.                      * 01160000
011700*                 -ADDED CODE IN 2100-CHECK-FUNCTION-KEY TO     * 01170000
011800*                  BYPASS THE SECOND BUILD OF THE PANEL IF      * 01180000
011900*                  AN ERROR WAS ENCOUNTERED ON THE FIRST BUILD. * 01190000
012000*                 -INCLUDED STATUS OF RELEASED IN CHECK OF      * 01200000
012100*                  BULK/STORE COMBO TO PREVENT RELEASE OF SAME  * 01210000
012200*                  PO ONCE BY STORE AND THEN BY BULK.           * 01220000
012300*                                                               * 01230000
012400* 05/25/95    PJK -INCREASED SIZE OF PRICE CLAIM TABLE FROM     * 01240000
012500*                  600 OCCURRENCES TO 1300.                     * 01250000
012600*                                                               * 01260000
012700* 07/26/95    MKK -ADDED LOGIC TO CALCULATE A WEIGHTED DISCOUNT * 01270000
012800*                  PERCENT.  THIS INCLUDED ADDING A NEW CURSOR: * 01280000
012900*                  DISCOUNT_CSR, MODIFYING TINVOIC_CSR TO       * 01290000
013000*                  INCLUDE TMDINVC-TERM-SEL-CDE, ADDING INCLUDE * 01300000
013100*                  MEMBERS APWS052 AND APPD052, ADDING WS FIELDS* 01310000
013200*                  FOR DISCOUNT CALCULATION, AND MODIFYING      * 01320000
013300*                  LOGIC IN THE FOLLOWING PARAGRAPHS:           * 01330000
013400*                  4310-FETCH-TINVOIC-ROWS                      * 01340000
013500*                  4317-ADD-TO-TINVOIC-TABLE                    * 01350000
013600*                  4315-FETCH-TINVOIC                           * 01360000
013700*                  4318-GET-PO-DISC-PCT (NEW)                   * 01370000
013800*                  4319-GET-INVOICE-DISC-PCT (NEW)              * 01380000
013900*                  7000-UPDATE-TABLES                           * 01390000
014000*                  7100-INSERT-TNINREC                          * 01400000
014100*                  7400-INSERT-TPOSTRR                          * 01410000
014200*                  8140-INSERT-TMDINVC                          * 01420000
014300*                  8150-INSERT-TINVCTM                          * 01430000
014400*                  8151-GET-TERMS-DATA                          * 01440000
014500*                  8600-TALCHRG-INSERT                          * 01450000
014600*                  8060-CREATE-RI-ITEM                          * 01460000
014700*                 -REMOVED 'PO_NBR IS NOT NULL' CONDITION FOR   * 01470000
014800*                  TPAYREQ SINCE THIS COLUMN DEFINITION HAS     * 01480000
014900*                  BEEN CHANGED TO NOT NULL (STR_NBR_CSR AND    * 01490000
015000*                  COUNTS SELECTED IN 4001-CHECK-STORE-BULK-    * 01500000
015100*                  COMBO)                                       * 01510000
015200*                 -ADDED A CHECK FOR FS_POST_TMST BEING SET     * 01520000
015300*                  WHEN ACCESSING TRECDIS AND TRECEIV SO ONLY   * 01530000
015400*                  RECEIVERS THAT WILL NOT CHANGE ARE ACCESSED  * 01540000
015500*                 -ADDED COLUMN PAYT_RLSE_TMST TO TPRCCLM IN    * 01550000
015600*                  7510-INSERT-TPRCCLM                          * 01560000
015700*                                                               * 01570000
015800* 08/08/95    MJW -INCREASED NUMBER OF PC-MAX-PRCCLM-RETRIES    * 01580000
015900*                  TO 25.                                       * 01590000
016000*                                                               * 01600000
016100* 08/31/95    NAE -MOVED THE ADJUSTMENT TO TOTAL DISCOUNT FOR   * 01610000
016200*                  RI'S FROM 8060 TO 8090.                      * 01620000
016300*                                                               * 01630000
016400* 09/05/95    MJW -ADDED CODE FOR NEW MAP FIELD.  AN ASTERISK'*'* 01640000
016500*                  WILL DISPLAY WHEN THE RECEIVED COST IS LESS  * 01650000
016600*                  THAN THE INVOICED COST- HOWEVER, IF BOTH THE * 01660000
016700*                  RECEIVED QUANTITY AND THE RECEIVED COSTS ARE * 01670000
016800*                  +0, A SPACE ' ' WILL BE DISPLAYED.           * 01680000
016900*                                                               * 01690000
017000* 09/06/95    MJW -MODIFY THE STR_NBR_CSR TO REMOVE TPREQIT AND * 01700000
017100*                  ADD A WHERE CONDITION 'AND B.DTL-ENTR-IND = Y* 01710000
017200*                 -SET INVOIC-STATUS-CHG-TMST TO CURRENTIMESTAMP* 01720000
017300*                                                               * 01730000
017400* 09/07/95    MKK -CHANGED THE DIVIDE STATEMENT IN 4310 TO CHECK* 01740000
017500*                  FOR A TOTAL GROSS COST OF ZERO.              * 01750000
017600*                                                               * 01760000
017700* 09/11/95    MKK -CHANGED THE PO LINE ENTRIES TO OCCUR 1000    * 01770000
017800*                  INSTEAD OF 999.                              * 01780000
017900*                                                               * 01790000
018000* 11/16/95    MKK -REMOVED TAPCNTL_CSR AND TAPCNTL_NINREC_CSR   * 01800000
018100*                  SINCE THEY ARE NOT USED.                     * 01810000
018200*                 -MODIFIED PRICE CLAIM SEQUENCE NUMBER         * 01820000
018300*                  DETERMINATION TO USE THE MAX SEQ NBR AS A    * 01830000
018400*                  STARTING POINT RATHER THAN USING RETRY LOGIC.* 01840000
018500*                 -REMOVED REFERENCES TO VER NBR ON TNINREC     * 01850000
018600*                  EXCEPT ON THE INSERT.  VER NBR IS NO LONGER  * 01860000
018700*                  PART OF THE INDEX ON TNINREC.                * 01870000
018800*                                                               * 01880000
018900* 02/22/96    MKK -UPPED THE OCCURRENCES OF TRECEIV-TABLE FROM  * 01890000
019000*                  50 TO 100.                                   * 01900000
019100*                                                               * 01910000
019200* 06/04/96    DSW -ADDED CODE TO HARDCODE DEFAULT VALUES FOR    * 01920000
019300*                  CALC_DUE_DTE AND DUE_DTE_SRC_CDE WHEN        * 01930000
019400*                  INSERTING RECORDS INTO TINVOIC.              * 01940000
019500*                                                               * 01950000
019600* 08/08/96    PDV -REMOVED FS_POST_TMST FROM WHERE CLAUSE IN    * 01960000
019700*                  SQL IN PARAGRAGH 4350-FINAL-CHECKS TO MAKE   * 01970000
019800*                  THE RECEIVERS COMPLETE INDICATOR FLAG        * 01980000
019900*                  CONSISTENT BETWEEN THE PO ITEM SCREEN AND    * 01990000
020000*                  THE INVOICE ITEM.   PIT # 34349              * 02000000
020100*                 -ALSO CHANGED ALL ++INCLUDE TO COPY STATEMENTS* 02010000
020200*                                                               * 02020000
020300* 09/25/96    MJW -CHANGED INVOICE TABLE OCCURS TO 250 FROM     * 02030000
020400*                  150.  ALSO CHANGED THE CHECK FOR MAX TO A    * 02040000
020500*                  CONSTANT - PC-IH-IDX-MAX.                    * 02050000
020600* 10/15/96    MJW -CHANGED INVOICE TABLE OCCURS BACK TO 150 FROM* 02060000
020700*                  250.  CHANGED PC-IH-IDX-MAX TO 150.          * 02070000
020800* 11/04/96    MJW -CHANGED INVOICE TABLE OCCURS TO 300 FROM     * 02080000
020900*                  150.                                         * 02090000
021000*  2/24/97    CJK -CHANGED INVOICE TABLE OCCURS FROM 300 TO     * 02100000
021100*                  500.  ALSO CHANGED THE MAX CONSTANT VALUE -  * 02110000
021200*                  PC-IH-IDX-MAX.                               * 02120000
021300*  8/25/97    CJK -ADDED 2 NEW COLUMNS WHEN AN 'RI' INVOICE IS    02130000
021400*                  INSERTED. INVC-NET-COST-AMT = GRO-COST-AMT   * 02140000
021500*                  AND PPD-RVRSL-IND DEFAULTS TO 'N'. CHANGES   * 02150000
021600*                  WERE MADE IN 8130-INSERT-TINVOIC.            * 02160000
021700* 08/25/97                                                      * 02170000
021800*          IN THE PREQIT_CSR, THE COLUMNS SELECTED IN THE SECOND* 02180000
021900*          HALF OF THE UNION WERE CHANGED.  INSTEAD OF SELECTING* 02190000
022000*          THE PAYT_REQ_LNE_NBR, THE VALUE OF ZERO IS SELECTED  * 02200000
022100*          FOR BOTH TIMES THAT COLUMN IS SELECTED.              * 02210000
022200*          BY:  MIKE BESKE                   WR/PIT 4164        * 02220000
022300* 09/26/97                                                      * 02230000
022400*          INCREASED THE NUMBER OF OCCURRENCES IN THE INVOICE   * 02240000
022500*          HEADER TABLE FROM 500 TO 750.                        * 02250000
022600*          BY:  NANCY EILBES                 PIT 115518         * 02260000
022700* 10/06/97                                                      * 02270000
022800*          INCREASED THE NUMBER OF OCCURRENCES IN THE PRICE     * 02280000
022900*          CLAIM TABLE FROM 1300 TO 2000.                       * 02290000
023000*          BY:  NANCY EILBES                 PIT 115518         * 02300000
023100*                                                               * 02310000
023200* 10/28/97                                                      * 02320000
023300*          CHANGED THE INITIAL VALUE OF PPD-RVRSL-IND TO SPACE  * 02330000
023400*          ON INSERTS TO TINVOIC.                               * 02340000
023500*          BY:  NANCY EILBES                 WR/PIT 4164        * 02350000
023600* 01/06/98                                                      * 02360000
023700*          INCREASED THE NUMBER OF OCCURRENCES FOR RECDIS FROM  * 02370000
023800*          9999 TO 12000 AND FOR TRECEIV FROM 100 TO 150.       * 02380000
023900*          ADDED VARIABLES FOR INDEX MAX BEFORE PO-LINE-TABLE,  * 02390000
024000*          TINVOIC-TABLE, TRECEIV-TABLE, TRECDIS-TABLE,         * 02400000
024100*          TPRCCLM-TABLE, AND TNINREC-TABLE SO THEY ARE EASILY  * 02410000
024200*          CHANGED WHEN NUMBER OF OCCURRENCES CHANGES.          * 02420000
024300*          BY:  MARY KING                    WR 5962            * 02430000
024400* 01/07/98                                                      * 02440000
024500*          RETURNED NUMBER OF OCCURRENCES FOR RECDIS TO 9999.   * 02450000
024600*          BY:  MARY KING                    WR 5962            * 02460000
024700* 03/17/98                                                      * 02470000
024800*          INCREASED THE NUMBER OF OCCURRENCES FOR TRECEIV-TABLE* 02480000
024900*          TO 250 PERMANENTLY.                                  * 02490000
025000*          BY:  MIKE BESKE                   WR 5587            * 02500000
025100* 04/27/98                                                      * 02510000
025200*          INCREASED THE NUMBER OF OCCURRENCES FOR TNINREC-TABLE* 02520000
025300*          FROM 999 TO 8000 TEMPORARILY.                        * 02530000
025400*          BY:  MIKE BESKE                   PITS 182107        * 02540000
025500* 04/28/98                                                      * 02550000
025600*          RETURNED THE TNINREC-TABLE LIMIT BACK TO 999.        * 02560000
025700*          BY:  MIKE BESKE                   PITS 182107        * 02570000
025800* 04/29/98                                                      * 02580000
025900*          INCREASED THE NUMBER OF OCCURRENCES FOR TNINREC-TABLE* 02590000
026000*          FROM 999 TO 1500 TEMPORARILY.                        * 02600000
026100*          BY:  MIKE BESKE                   PITS 183595        * 02610000
026200* 05/04/98                                                      * 02620000
026300*          RETURNED THE TNINREC-TABLE LIMIT BACK TO 999.        * 02630000
026400*          BY:  MIKE BESKE                   PITS 183595        * 02640000
026500*                                                               * 02650000
026600* 05/05/98  ADDED THE PROCESSING NECESSARY TO MAINTAIN AP       * 02660000
026700*           PROCESS CODE ON ALL INVOICES.  THIS CODE WAS        * 02670000
026800*           NEEDED BECAUSE THE STATUS CODE IS NO LONGER         * 02680000
026900*           SUFFICIENT TO INDICATE IF THE INVOICES FOR A PO     * 02690000
027000*           HAVE BEEN JOURNALIZED.  THE LOGIC HAS BEEN MODIFIED * 02700000
027100*           TO INSERT ROWS INTO TINVOIC AND PLACE VALUES IN THE * 02710000
027200*           TWO NEW COLUMNS:                                    * 02720000
027300*               - AP-PRC-CDE                                    * 02730000
027400*               - AP-PRC-DTE                                    * 02740000
027500*           BY:  ROBIN BERNOSKI               WR/PIT 4164       * 02750000
027600* 09/09/98                                                      * 02760000
027700*          INCREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 02770000
027800*          FROM 2000 TO 3000 TEMPORARILY.                       * 02780000
027900*          BY:  ROBIN BERNOSKI               WR/PIT 5587        * 02790000
028000* 09/14/98                                                      * 02800000
028100*          DECREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 02810000
028200*          FROM 3000 TO 2000.                                   * 02820000
028300*          BY:  ROBIN BERNOSKI               WR/PIT 5587        * 02830000
028400* 11/13/98                                                      * 02840000
028500*          INCREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 02850000
028600*          FROM 2000 TO 6000 TEMPORARILY.                       * 02860000
028700*          BY:  ROBIN BERNOSKI               WR/PIT             * 02870000
028800* 11/17/98                                                      * 02880000
028900*          DECREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 02890000
029000*          FROM 6000 TO 2000.                                   * 02900000
029100*          BY:  ROBIN BERNOSKI               WR/PIT 5587        * 02910000
029200* 12/03/98                                                      * 02920000
029300*          INCREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 02930000
029400*          FROM 2000 TO 10000 TEMPORARILY TO ACCOUNT FOR THE    * 02940000
029500*          SEASONAL INCREASE IN VOLUME.                           02950000
029600*          BY:  ROBIN BERNOSKI               WR/PIT 5587        * 02960000
029700* 05/06/99                                                      * 02970000
029800*          INCREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 02980000
029900*          FROM 2000 TO 2600 TEMPORARILY.                       * 02990000
030000*          BY:  CAROLYN GIFFORD              WR/PIT 5587        * 03000000
030100* 05/10/99                                                      * 03010000
030200*          RETURNED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE * 03020000
030300*          BACK TO 2000.                                        * 03030000
030400*          BY:  CAROLYN GIFFORD              WR/PIT 5587        * 03040000
030500* 05/12/99                                                      * 03050000
030600*          INCREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 03060000
030700*          FROM 2000 TO 3000 TEMPORARILY.                       * 03070000
030800*          BY:  CAROLYN GIFFORD              WR/PIT 5587        * 03080000
030900*                                                               * 03090000
031000* 06/21/99                                                      * 03100000
031100*          INCREASED THE NUMBER OF OCCURRENCES FOR TNINREC-TABLE* 03110000
031200*          FROM 999 TO 2000 TEMPORARILY.                        * 03120000
031300*          BY:  MIKE BESKE                   WR/PIT 5587        * 03130000
031400*                                                               * 03140000
031500* 06/21/99                                                      * 03150000
031600*          RETURNED THE TNINREC-TABLE LIMIT BACK TO 999.        * 03160000
031700*          BY:  MIKE BESKE                   WR/PIT 5587        * 03170000
031800*                                                               * 03180000
031900* 11/17/99                                                      * 03190000
032000*          INCREASED THE NUMBER OF OCCURRENCES FOR TPRCCLM-TABLE* 03200000
032100*          FROM 2000 TO 10000 TEMPORARILY TO ACCOUNT FOR THE    * 03210000
032200*          SEASONAL INCREASE IN VOLUME.                         * 03220000
032300*          BY:  MIKE BESKE                   WR/PIT 5587        * 03230000
032400*                                                               * 03240000
032500* 12/22/99                                                      * 03250000
032600*          INCREASED THE TNINREC-TABLE LIMIT FROM 999 TO 9000   * 03260000
032700*          TEMPORARILY.                                         * 03270000
032800*          BY:  MARK BURNSIDE                WR/PIT 334644      * 03280000
032900*                                                               * 03290000
033000* 12/22/99 CHANGED THE LIMIT FOR THE TNINREC-TABLE BACK TO 999  * 03300000
033100*          FROM 9000.                                           * 03310000
033200*          BY:  MARK BURNSIDE                WR/PIT 334644      * 03320000
033300*                                                               * 03330000
033400* 12/29/99 ADDED NOTE RE: NOT CHANGING SIZE OF TNINREC-TABLE.   * 03340000
033500*          BY:  CAROLYN GIFFORD              WR/PIT 334644      * 03350000
033600*                                                               * 03360000
033700* 07/20/2000                                                    * 03370000
033800*          INSERTED CODE INTO PARAGRAPH 8150-INSERT-TINVCTM TO  * 03380000
033900*          MOVE THE PAYTRM-DISCOUNT-DAYS-QTY INTO THE           * 03390000
034000*          INVCTM-NET-DUE-DAY-QTY FIELD IF THE                  * 03400000
034100*          PAYTRM-DISCOUNT-DAYS-QTY IS GREATER THAN ZERO.  IF   * 03410000
034200*          THAT CONDITION IS TRUE ZERO IS MOVED TO THE          * 03420000
034300*          INVCTM-DISC-DUE-DAY-QTY FIELD, ELSE A STRAIGHT       * 03430000
034400*          MOVE OF THESE FIELDS OCCURS BETWEEN THE PAYTRM TABLE * 03440000
034500*          AND THE INVCTM TABLE LAYOUT.                         * 03450000
034600*          BY:  MARK BURNSIDE                WR/PIT             * 03460000
034700*                                                               * 03470000
034800* 08/29/00 ADDED CODE THAT WILL PROCESS THE WEIGHTED ADVERTISING* 03480000
034900*          PERCENT SEPARATLY FROM THE WEIGHTED DISCOUNT PERCENT.* 03490000
035000*          ADDED CODE TO SELECT ADDITIONAL EXTENDED DAYS FROM   * 03500000
035100*          THE TPOAGMT TABLE IF THEY EXIST AS PART OF THE MARK  * 03510000
035200*          OUT OF STOCK ENHANCEMENTS.                           * 03520000
035300*          BY:  MIKE BESKE                   WR#: 20224         * 03530000
035400*                                                               * 03540000
035500* 12/13/00 CHANGED THE SIZE OF THE TINVOIC-TABLE FROM 750 TO    * 03550000
035600*          2000.                                                * 03560000
035700*          BY:  ROBIN BERNOSKI               WR/PIT: 20704      * 03570000
035800*                                                               * 03580000
035900* 12/10/01 ADDED CODE TO ADVANCE TO THE NEXT STORE ELIGIBLE TO  * 03590000
036000*          BE PAYRELEASED AFTER A PAYRELEASE HAS BEEN COMPLETED.* 03600000
036100*          THIS REPLACES THE PREVIOUS WAY OF GOING BACK TO THE  * 03610000
036200*          FIRST ELIGIBLE STORE AND THEN THE USER WOULD HAVE TO * 03620000
036300*          FORWARD (F20) THROUGH THE ENTIRE LIST TO GET BACK TO * 03630000
036400*          WHERE THE LAST STORE THAT WAS PAYRELEASED WAS IN THE * 03640000
036500*          LIST.  (PARAS 2100- 4002-)                           * 03650000
036600*          BY:  MIKE BESKE                   WR/PIT: 22442      * 03660000
036700*                                                               * 03670000
036800* 06/25/02 RECOMPILE FROM PRODUCTION TO PICK UP CHANGES TO      * 03680000
036900*          COPYBOOKS APPD052 AND APWS052.                       * 03690000
037000*          BY:  KEVIN CATLIN                 WR#: 23839         * 03700000
037100*                                                               * 03710000
037200* 08/05/2002 COLBY HANGER EXPENSE PROCESSING.  RECOMPILE FROM   * 03720000
037300*            PRODUCTION TO INCORPORATE COPYBOOK CHANGES.        * 03730000
037400*        BY: KEVIN CATLIN                   WR#: 23254          * 03740000
037500*                                                               * 03750000
037600* 09/09/2002 ARK PO PROJECT PHASE 2.  REPLACE PAYT_REQ_SEQ_NBR  * 03760000
037700*            WITH NEW INDEX OF PO_NBR AND INVC_ID.  CURSORS     * 03770000
037800*            MODIFIED ARE DISCOUNT_CSR AND ADVERT_CSR.          * 03780000
037900*            PARAGRAPHS MODIFIED ARE 4319, 8150, 8600, 8610,    * 03790000
038000*            AND 8700.                                          * 03800000
038100*        BY: KEVIN CATLIN                   WR#: 23500          * 03810000
038200*                                                               * 03820000
038300* 11/04/2002 MODIFIED ALL OF THE AMOUNT FIELDS FROM 9(7)V99     * 03830000
038400*           TO S9(9)V99 COMP-3 IN COPYBOOK APWS052.THIS WAS DONE* 03840000
038500*           TO CORRECT A DISCOUNT BALANCING ISSUE.              * 03850000
038600*        BY: MIKE BESKE                     WR#: 23750          * 03860000
038700*                                                               * 03870000
038800*                                                               * 03880000
038900* 12/02/2002 TEMPORARILY INCREASED THE LIMIT ON THE PRICE       * 03890000
039000*            CLAIM TABLE TO 15,000 FROM 10,000.                 * 03900000
039100*        BY: MARK BURNSIDE                 PITS#: 511066        * 03910000
039200*                                                               * 03920000
039300* 12/17/2002 TEMPORARILY INCREASED THE LIMIT ON THE PRICE       * 03930000
039400*            CLAIM TABLE TO 17,000 FROM 15,000.                 * 03940000
039500*        BY: NANCY EILBES                  PITS#: 511066        * 03950000
039600*                                                               * 03960000
039700* DATE  01/03/2003                                              * 03970000
039800*     CHANGE MADE: ADDED EDIT TO BLOCK PO RECONCILIATION FOR    * 03980000
039900*     IMPORT PURCHASE ORDERS.  MODIFIED PARAGRAPHS 1000 AND     * 03990000
040000*     1100 AND ADDED PARAGRAPH 1110.                            * 04000000
040100*     MADE BY: KEVIN CATLIN            WR/IR #: P000517139      * 04010000
040200*                                                               * 04020000
040300* DATE  03/19/2003                                              * 04030000
040400*     CHANGE MADE: INCREASED LIMIT ON PRICE CLAIM TABLE TO      * 04040000
040500*     50,000 TO ACCOMMODATE AP NEEDS.                           * 04050000
040600*     MADE BY: KEVIN CATLIN            WR/IR #: P000533923      * 04060000
040700*                                                               * 04070000
040800* DATE  03/25/2003                                              * 04080000
040900*     CHANGE MADE: RECOMPILE FROM PRODUCTION TO PICK UP CHANGE  * 04090000
041000*     TO COPYBOOK APWS052.                                      * 04100000
041100*     MADE BY: KEVIN CATLIN            WR/IR #: WR24481         * 04110000
041200*                                                               * 04120000
041300* DATE  12/02/2003                                              * 04130000
041400*     CHANGE MADE: IN PARAGRAPH 4003-CHECK-TPOSTR, ADDED WHERE  * 04140000
041500*     CONDITION OF 'OR STR_NBR = 0'.  THIS WILL PREVENT THE     * 04150000
041600*     PAY-RELEASE OF AN INDIVIDUAL STORE NUMBER WHEN THERE IS   * 04160000
041700*     A BULK RELEASE PENDING FOR THE SAME PO.  ALSO CHANGED     * 04170000
041800*     LOGIC IN 7400-INSERT-TPOSTRR TO MOVE THE USERID INSTEAD   * 04180000
041900*     OF THE TERMINAL ID TO THE PAYT_RLSE_TRMNL_ID FIELD. USERID* 04190000
042000*     IS MUCH MORE MEANINGFUL WHEN RESEARCHING A PROBLEM WITH   * 04200000
042100*     A PAY-RELEASE.                                            * 04210000
042200*     MADE BY: NANCY EILBES            WR/IR #: P000613163      * 04220000
042300*                                                               * 04230000
042400* DATE  12/29/2003                                              * 04240000
042500*     CHANGE MADE: EXPANDED NUMBER OF ENTRIES IN ASC-STORE-TBL  * 04250000
042600*     FROM 500 TO 675.  !!!!!! NOTE THAT THIS IS PUSHING THE    * 04260000
042700*     LIMITS OF THE COMMAREA, SO THIS TABLE CANNOT BE EXPANDED  * 04270000
042800*     MUCH FURTHER !!!!!! ALSO CORRECTED LOGIC WHERE ASC-STORE- * 04280000
042900*     TBL IS BEING LOADED TO INCREASE THE SUBSCRIPT LIMIT TO    * 04290000
043000*     MATCH THE NUMBER OF TABLE ENTRIES.                        * 04300000
043100*     MADE BY: NANCY EILBES            WR/IR #: P000619831      * 04310000
043200*                                                               * 04320000
043300* DATE  01/30/2004                                              * 04330000
043400*     CHANGE MADE: RECOMPILE FROM PRODUCTION TO PICK UP CHANGE  * 04340000
043500*     TO COPYBOOKS APWS052 AND APPD052. THIS INVOLVES THE VENDOR* 04350000
043600*     INSURANCE EXCEPTION OF NOT CHARGING BACK THE VENDOR FOR   * 04360000
043700*     INSURANCE CHARGE CODES: 'INS' AND '445'.  THE VENDORS ARE * 04370000
043800*     ANDEL JEWELRY '117498121' AND CITIZEN WATCH '078822863'.  * 04380000
043900*     MADE BY: MIKE BESKE              WR/IR #: P000628860      * 04390000
044000*                                                               * 04400000
044100* DATE  03/15/2004                                              * 04410000
044200*     CHANGE MADE: ADD A NEW SQL CALL TO CHECK AND SEE IF PO    * 04420000
044300*     LINE NUMBERS HAVE BEEN RENUMBERED.  IF THIS IS THE CASE   * 04430000
044400*     DO NOT ALLOW INVOICE TO BE PAY RELEASED.  THE USER WILL   * 04440000
044500*     NEED TO BATCH UP THE LINE NUMBERS BEFORE THE INVOICE CAN  * 04450000
044600*     BE PAY RELEASED.                                          * 04460000
044700*     MADE BY: L SCHALLHORN            WR/IR #: P000636481      * 04470000
044800*                                                               * 04480000
044900* DATE  04/26/2004                                              * 04490000
045000*     CHANGE MADE: INCREASED THE LENGTH OF ASC-KEY-STR-NBR &    * 04500000
045100*     ASC-SAVE-STR-NBR TO 4 DIGITS AS PART OF THE STORE         * 04510000
045200*     CONSTRAINTS PROJECT.                                      * 04520000
045300*     MADE BY: MIKE BESKE              WR/IR #: WR25805         * 04530000
045400*                                                               * 04540000
045500* DATE  06/04/2004                                              * 04550000
045600*     CHANGE MADE: ADDED A NEW TEMP STORAGE QUEUE TO REPLACE    * 04560000
045700*     THE ASC-STORE-TABLE.  THE ASC-STORE-TABLE WAS LIMITED TO  * 04570000
045800*     HOLDING ONLY 675 STORES BECAUSE THE COMMAREA WAS MAXXED.  * 04580000
045900*     THE SQW-STORE-TABLE WILL HOLD UP TO 3000 STORES.  THIS IS * 04590000
046000*     PARAGRAPHS 9300-, 9400- & 9500-.  THIS IS PART OF THE     * 04600000
046100*     STORE CONSTRAINTS PROJECT.                                  04610000
046200*     MADE BY: MIKE BESKE              WR/IR #: WR25805         * 04620000
046300*                                                               * 04630000
046400* DATE  10/05/2004                                              * 04640000
046500*     CHANGE MADE: INCREASED TINVOIC-TABLE FROM 2000 TO 4000    * 04650000
046600*     ENTRIES TO ACCOMMODATE LARGER PURCHASE ORDERS.            * 04660000
046700*     MADE BY: KEVIN CATLIN            WR/IR #: P000699062      * 04670000
046800*                                                               * 04680000
046900* DATE  10/12/2004                                              * 04690000
047000*     CHANGE MADE: ADDED IMPORTANT PROGRAMMING NOTE BY THE      * 04700000
047100*     IH-MAX FIELD REGARDING ANY UPDATES TO ITS VALUE.          * 04710000
047200*     MADE BY: MIKE BESKE              WR/IR #: P000700924      * 04720000
047300*                                                               * 04730000
047400* DATE  04/13/2005                                              * 04740000
047500*     CHANGE MADE: ADDED CODE TO PROCESS OFF-INVOICE CO-OP      * 04750000
047600*     ADVERTISING ALLOWANCES SO THAT THEY ARE NOT ROLLED IN WITH* 04760000
047700*     OTHER OFF-INVOICE ALLOWANCES.  CODE WAS ADDED AS FOLLOWS: * 04770000
047800*     PARA 4310- ADDED CODE TO CALCULATE WEIGHTED COOP PERCENT; * 04780000
047900*     PARA 4317- ADDED CODE TO ACCUMULATE THE COOP ALLOWANCE AMT* 04790000
048000*                AND SUBTRACT THE COOP ALLOWANCE AMT FROM THE   * 04800000
048100*                ACCUMULATED DISCOUNTED COST AMT;               * 04810000
048200*     PARA 8000- ADDED CODE TO PERFORM A NEW PARA (8620-) WHEN  * 04820000
048300*                THE WEIGHTED COOP PERCENT > 0;                 * 04830000
048400*     PARA 8620- ADDED CODE TO INSERT THE COOP DATA INTO TALCHRG* 04840000
048500*                WHEN THE WEIGHTED COOP PERCENT > 0.            * 04850000
048600*     MADE BY: MIKE BESKE              WR/IR #: WR28651         * 04860000
048700*                                                               * 04870000
048800* DATE  08/24/2005                                              * 04880000
048900*     CHANGE MADE: BROADCAST CALCULATION CHANGE.                * 04890000
049000*     REMOVED THE DECLARE FOR THE ADVERT_CSR CURSOR AND CODE IN * 04900000
049100*     THE PARAGRAPHS 4317- AND 4317B- RELATING TO IT.  CHANGED  * 04910000
049200*     THE WHERE CLAUSE OF THE DISCOUNT_CSR CURSOR TO EXCLUDE    * 04920000
049300*     THE CONDITION ALW_CHRG_CDE NOT IN ('ADV').  ALTERED THE   * 04930000
049400*     CALCULATION OF THE PV-WEIGHTED-ADV-PCT TO BE DIVIDED BY   * 04940000
049500*     THE TOTAL GROSS COST IN PARAGRAPH 4310-.  ADDED LOGIC TO  * 04950000
049600*     PARAGRAPH 4317- TO INCLUDE APPD052-ADV-DISC-AMT IN THE    * 04960000
049700*     CALCULATION OF THE DISCOUNTED COST AMOUNT.  ALL OF THESE  * 04970000
049800*     CHANGES WERE MADE TO CALCULATE BROADCAST OFF INVOICE FROM * 04980000
049900*     GROSS COST RATHER THAN FROM NET COST.                     * 04990000
050000*     MADE BY: KRYSTEN LEARY           WR/IR #: WR29100         * 05000000
050100*                                                               * 05010000
050200* DATE  03/20/2006                                              * 05020000
050300*     CHANGE MADE: UNIT COST ADJUSTMENT CHARGE CODE 37 AND      * 05030000
050400*                  PRICE CLAIM CHARGE CODE 16.                  * 05040000
050500*     REMOVED USE OF PV-UNT-COST-SEL-CDE IN PARAGRAPH 4349- AND * 05050000
050600*     IN 4360- SINCE CREDIT PRICE CLAIMS, (CM AND CP) WILL NOT  * 05060000
050700*     BE CREATED SINCE THE LOWEST COST IS ALWAYS USED.  ADDED   * 05070000
050800*     CODE TO CHECK RECV-UNT-COST-AMT VERSUS INVC-UNT-COST-AMT  * 05080000
050900*     AND MOVE EITHER 'DM' OR 'DP' TO PR-DOC-TYP-CDE.           * 05090000
051000*     MADE BY: ROLF NOHE               WR/IR #: WR29575         * 05100000
051100*                                                               * 05110000
051200* DATE  04/21/2006                                              * 05120000
051300*     CHANGE MADE: CORRECTION TO WR29575.                       * 05130000
051400*     CORRECTED PROBLEM CAUSED BY MISHANDLING OF MULTIPLE COSTS * 05140000
051500*     FROM THE VENDOR ON THE INVOICE.  ADDED CODE TO COMPARE    * 05150000
051600*     UNIT COSTS AND UPDATE THE UNT-COST-SEL-CDE FROM TMIITEM   * 05160000
051700*     SO THAT THE LOWEST COST WOULD ALWAYS BE USED.             * 05170000
051800*     MADE BY: ROLF NOHE               WR/IR #: WR29575         * 05180000
051900*                                                               * 05190000
052000* DATE  04/24/2006                                              * 05200000
052100*     CHANGE MADE: CORRECT ASRA ABEND.                          * 05210000
052200*     PROGRAM WAS CAUSING AN ASRA ABEND IN CICS.  FOUND THE     * 05220000
052300*     NEW CODE WORKED MOST OF THE TIME, BUT WOULD FAIL IF USER  * 05230000
052400*     WENT FROM APLPOREC TO ANY OTHER SCREEN AND BACK TO PAY    * 05240000
052500*     RELEASE.                                                  * 05250000
052600*     MADE BY: ROLF NOHE               WR/IR #: P000873555      * 05260000
052700*                                                               * 05270000
052800* DATE  05/25/2006                                              * 05280000
052900*     CHANGE MADE: VENDOR ALLOWANCE - MAINTAIN INDIVIDUALITY OF * 05290000
053000*                  OFF-INVOICE ALLOWANCES.                      * 05300000
053100*     CHANGE MADE: VENDOR ALLOWANCE CHANGES - MAINTAIN           *05310000
053200*                  INDIVIDUALITY OF OFF-INVOICE ALLOWANCES.      *05320000
053300*     ADDED WORK FIELDS FOR WEIGHTED DISCOUNT PERCENTS AND FOR   *05330000
053400*     INDIVIDUAL ALLOWANCE AMOUNTS.  IN PARAGRAPH 4310- ADDED    *05340000
053500*     LOGIC TO CALCULATE EACH OF THE NEW WEIGHTED DISCOUNT       *05350000
053600*     PERCENTS.  IN PARAGRAPH 4317- ADDED LOGIC TO ACCUMULATE    *05360000
053700*     NEW STORE AMT, TRADE AMT, MOS DISCOUNT AMT, AND            *05370000
053800*     MISC DISC AMT INTO THEIR RESPECTIVE FIELDS.  ALSO REMOVED  *05380000
053900*     STATEMENT THAT ADDS ALLOWANCE AMT TO PV-TOTAL-DISCOUNT-AMT.*05390000
054000*     IN PARAGRAPH 8000- ADDED LOGIC TO MOVE THE APPROPRIATE     *05400000
054100*     VALUE TO ALCHRG-ALW-CHRG-CDE AND IT'S PERCENTAGE PRIOR TO  *05410000
054200*     PERFORM 8600- TO INSERT TO TALCHRG.  MODIFIED PARAGRAPH    *05420000
054300*     8600- TO MAKE IT MORE GENERIC AND REMOVED PARAGRAPHS 8610- *05430000
054400*     AND 8620-.                                                 *05440000
054500*     MADE BY: ROLF NOHE               WR/IR #: WR30028         * 05450000
054600*                                                               * 05460000
054700* DATE  12/13/2006                                              * 05470000
054800*     CHANGE MADE: MATCH BY DC MODIFICATIONS                    * 05480000
054900*     REMOVED TAUDINC AND ALL CODE RELATED TO THIS DATABASE.    * 05490000
055000*     CREATED VARIOUS FIELDS IN W/S FOR DC_NBR AND MTCH_LVL_CDE * 05500000
055100*     TO BE USED THROUGHOUT THE PROGRAM AS THE LOGIC IS CHANGED * 05510000
055200*     FROM PROCESSING AT A PO/STORE COMB TO A PO/MATCH LEVEL    * 05520000
055300*     COMB (STORE/DC/BULK).  TWO NEW CURSORS WERE ADDED FOR     * 05530000
055400*     DISTINCT MATCH LEVEL AND DISTINCT DC NUMBER.  MANY EXIST- * 05540000
055500*     ING CURSORS HAD ADDITIONS TO THEIR WHERE CONDITIONS FOR   * 05550000
055600*     HIGH/LOW STORE, HIGH/LOW DC AND MATCH LEVEL CODE.  DC AND * 05560000
055700*     MATCH LEVEL CODE WERE ADDED TO THE HEADER AREA OF THE     * 05570000
055800*     ONLINE SCREEN.  EXISTING PARAS WERE RENUMBER AS FOLLOWS:  * 05580000
055900*     4002- TO 4003- AND 4003- TO 4004-.  ADDED DC NBR TO THE   * 05590000
056000*     SQW-STORE-TABLE SO THAT BOTH STR AND DC FROM THE INVOICE  * 05600000
056100*     INPUT WILL BE AVAILABLE TO POPULATE ANY NEW REMAINDER     * 05610000
056200*     INVOICES AND NON-INVOICED RECEIPTS CREATED FROM THE PAY-  * 05620000
056300*     RELEASE AT STORE MATCH LEVEL.  NEW PARAS WERE CREATED     * 05630000
056400*     TO DETERMINE THE MATCH LEVEL (4002-) AND TO LOAD DC NBRS  * 05640000
056500*     INTO THE INTERNAL STORE NUMBER ARRAY WHEN THE MATCH LEVEL * 05650000
056600*     IS DC (4006-).  OTHER PARA MODS AS FOLLOWS:               * 05660000
056700*     PARA 1100- ADDED MOVE OF AP300-DC-NBR TO ASC-KEY-DC-NBR;  * 05670000
056800*     PARA 4001- RECODED THE CHECK OF MIXED PO/STR COMBINATIONS * 05680000
056900*                TO CHECK FOR A MIX OF PO/MATCH LEVEL COMBINA-  * 05690000
057000*                TIONS;                                         * 05700000
057100*     PARA 4007- REPLACED IF STR-NBR WITH MULTI IF MTCH-LVL-CDE * 05710000
057200*                AND BASED ON THE MATCH LEVEL, POPULATED THE    * 05720000
057300*                HIGH/LOW FIELDS FOR STR-NBR AND DC-NBR;        * 05730000
057400*     PARA 4315- ADDED DC_NBR AND MTCH_LVL_CDE TO FETCH SQL;    * 05740000
057500*     PARA 4317- ADDED MOVES FOR DC NBR AND MTCH LVL CDE TO     * 05750000
057600*                THE INTRNAL INVOICE ARRAY;                     * 05760000
057700*     PARA 4320- REPLACE IF STR-NBR WITH IF MTCH-LVL-CDE.       * 05770000
057800*     PARA 4400- ADDED MOVES FOR DC NBR AND MATCH LVL CDE TO THE* 05780000
057900*                THEIR MAP OUTPUT FIELDS;                       * 05790000
058000*     PARA 5200- ADDED IF STMT FOR MTCH-LVL-CDE FOR MOVE OF STR * 05800000
058100*                NBR;                                           * 05810000
058200*     PARA 7000- REPLACED IF STR-NBR WITH IF MTCH-LVL-CDE;      * 05820000
058300*     PARA 7100- ADDED MOVE OF DC_NBR TO TNINREC INSERT;        * 05830000
058400*                ADDED CODE TO USE MATCH LEVEL TO DETERMINE     * 05840000
058500*                WHAT VALUES TO MOVE INTO STR-NBR AND DC-NBR    * 05850000
058600*                TO TNINREC FOR THE NON-INVOICED RECEIPT BEING  * 05860000
058700*                CREATED.                                       * 05870000
058800*     PARA 7400- ADDED MOVE OF MTCH-LVL-CDE TO TPOSTRR;         * 05880000
058900*     PARA 7510- ADDED IF MTCH-LVL-CDE TO DETERMINE WHAT IS     * 05890000
059000*                MOVED TO TPRRCLM STORE NUMBER;                 * 05900000
059100*     PARA 8130- ADDED MOVE OF DC_NBR AND MTCH_LVL_CDE TO INSERT* 05910000
059200*                ADDED CODE TO USE MATCH LEVEL TO DETERMINE     * 05920000
059300*                WHAT VALUES TO MOVE INTO STR-NBR AND DC-NBR    * 05930000
059400*                TO TINVOIC FOR THE REMAINDER INVOICE BEING     * 05940000
059500*                CREATED.                                       * 05950000
059600*     PARA 9000- ADDED MOVE OF DC_NBR TO THE AP300- FIELDS.     * 05960000
059700*     MADE BY: MIKE BESKE              WR/IR #: WR21578         * 05970000
059800*                                                               * 05980000
059900* DATE  03/11/2007                                              * 05990000
060000*     CHANGE MADE: ADDED CODE TO BLOCK PAYRELEASING A PO/LOC    * 06000000
060100*     IF THERE IS NO MATCH RECEIVING OR THE RECEIVING TOTAL     * 06010000
060200*     AMOUNT IS $0.00.                                          * 06020000
060300*     MOD PARAS: 1100-, 4300-.                                  * 06030000
060400*     REMOVED ALL REFERENCES TO TPAYREQ.                        * 06040000
060500*     MOD PARA: 8130-.                                         *  06050000
060600*     DELETE PARA 8120-.                                        * 06060000
060700*     MADE BY: MIKE BESKE              WR/IR #: WR21578         * 06070000
060800*                                                               * 06080000
060900* DATE  01/29/2008                                              * 06090000
061000*     CHANGE MADE: INCREASED SIZE OF TRECEIV-TABLE TO ALLOW     * 06100000
061100*     PAYRELEASE FOR A PO WITH OVER 700 ROWS ON TRECEIV TABLE.  * 06110000
061200*     MADE BY: ROLF NOHE               WR/IR #: WR31939         * 06120000
061300*                                                               * 06130000
061400* DATE  01/29/2008                                              * 06140000
061500*     CHANGE MADE: SET TRECEIV-TABLE BACK TO THE ORIGINAL       * 06150000
061600*     MAXIMUM OR 250.                                           * 06160000
061700*     MADE BY: ROLF NOHE               WR/IR #: WR31939         * 06170000
061800*                                                               * 06180000
061900* DATE  02/04/08                                                * 06190000
062000*     CHANGE MADE: PRIVATE LABEL LOAD                           * 06200000
062100*     FOR DOMESTIC PO'S THE FIRST COST WILL CONTAIN THE ITEM    * 06210000
062200*     COST AND THE UNIT COST WILL CONTAIN THE ITEM COST PLUS    * 06220000
062300*     THE INTERNAL PRIVATE LABLE LOAD AMOUNT.  FOR DOMESTIC     * 06230000
062400*     PO'S THE PURITM-PRD-1ST-COST-AMT CONTAINS THE INITAL COST * 06240000
062500*     OF THE PRODUCT.  THE TRECDIS_CSR, TIMITEM_CSR, AND 4325-, * 06250000
062600*     4329-, 8830- AND 8840- HAVE BEEN MODIFIED TO USE THE      * 06260000
062700*     PRODUCT FIRST COST AMOUNT RATHER THAN THE UNIT COST AMT.  * 06270000
062800*     MADE BY: MICHELE RINDFLEISCH     WR/IR #: WR32664         * 06280000
062900*                                                               * 06290000
063000* DATE  02/20/2008                                              * 06300000
063100*     CHANGE MADE: TEMPORARILY INCREASED SIZE OF INTERNAL       * 06310000
063200*     TRECEIV TABLE FROM 250 TO 1000 TO ALLOW FOR PAY RELEASE   * 06320000
063300*     OF 3 PO'S WITH OVER 700 RECORDS.                          * 06330000
063400*     MADE BY: MICHELE RINDFLEISCH     WR/IR #: INC000000266638 * 06340000
063500*                                                               * 06350000
063600* DATE  02/20/2008                                              * 06360000
063700*     CHANGE MADE: SET TRECEIV-TABLE BACK TO THE ORIGINAL       * 06370000
063800*     MAXIMUM OF 250.                                           * 06380000
063900*     MADE BY: MICHELE RINDFLEISCH     WR/IR #: INC000000266702 * 06390000
064000*                                                               * 06400000
064100* DATE  03/03/2008                                              * 06410000
064200*     CHANGE MADE: TEMPORARILY INCREASED SIZE OF INTERNAL       * 06420000
064300*     TRECEIV TABLE FROM 250 TO 1000 TO ALLOW FOR PAY RELEASE   * 06430000
064400*     OF 3 PO'S WITH OVER 700 RECORDS.                          * 06440000
064500*     MADE BY: GREG WISIALOWSKI        WR/IR #: WR34276         * 06450000
064600*                                                               * 06460000
064700* DATE  03/04/2008                                              * 06470000
064800*     CHANGE MADE: SET TRECEIV-TABLE BACK TO THE ORIGINAL       * 06480000
064900*     MAXIMUM OF 250.                                           * 06490000
065000*     MADE BY: GREG WISIALOWSKI        WR/IR #: WR34276         * 06500000
065100*                                                               * 06510000
065200* DATE  05/27/2008                                              * 06520000
065300*     CHANGE MADE: TEMPORARILY INCREASED SIZE OF INTERNAL       * 06530000
065400*     TRECEIV TABLE FROM 250 TO 800 TO ALLOW FOR PAY RELEASE    * 06540000
065500*     OF DIRECT SHIP PO 4870967 WITH 760 REC SEQ NBRS.          * 06550000
065600*     RC-MAX WAS ALSO INCREASED FROM 250 TO 800 TEMPORARILY.    * 06560000
065700*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06570000
065800*                                                               * 06580000
065900* DATE  05/27/2008                                              * 06590000
066000*     CHANGE MADE: SET TRECEIV-TABLE BACK TO THE ORIGINAL       * 06600000
066100*     MAXIMUM OF 250.                                           * 06610000
066200*     RC-MAX WAS ALSO SET BACK TO 250.                          * 06620000
066300*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06630000
066400*                                                               * 06640000
066500* DATE  10/20/2008                                              * 06650000
066600*     CHANGE MADE: TEMPORARILY INCREASED SIZE OF INTERNAL       * 06660000
066700*     TRECEIV TABLE FROM 250 TO 390 TO ALLOW FOR PAY RELEASE    * 06670000
066800*     OF PO 4975961 WITH 760 REC SEQ NBRS.                      * 06680000
066900*     RC-MAX WAS ALSO INCREASED FROM 250 TO 390 TEMPORARILY.    * 06690000
067000*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06700000
067100*                                                               * 06710000
067200* DATE  10/20/2008                                              * 06720000
067300*     CHANGE MADE: SET TRECEIV-TABLE BACK TO THE ORIGINAL       * 06730000
067400*     MAXIMUM OF 250.                                           * 06740000
067500*     RC-MAX WAS ALSO SET BACK TO 250.                          * 06750000
067600*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06760000
067700*                                                               * 06770000
067800* DATE  10/27/2008                                              * 06780000
067900*     CHANGE MADE: TEMPORARILY INCREASED SIZE OF INTERNAL       * 06790000
068000*     TRECEIV TABLE FROM 250 TO 500 TO ALLOW FOR PAY RELEASE    * 06800000
068100*     OF PO 4982338 WITH 447 REC SEQ NBRS.                      * 06810000
068200*     RC-MAX WAS ALSO INCREASED FROM 250 TO 500 TEMPORARILY.    * 06820000
068300*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06830000
068400*                                                               * 06840000
068500* DATE  10/27/2008                                              * 06850000
068600*     CHANGE MADE: SET TRECEIV-TABLE BACK TO THE ORIGINAL       * 06860000
068700*     MAXIMUM OF 250.                                           * 06870000
068800*     RC-MAX WAS ALSO SET BACK TO 250.                          * 06880000
068900*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06890000
069000*                                                               * 06900000
069100* DATE  10/29/2008                                              * 06910000
069200*     CHANGE MADE: TEMPORARILY INCREASED SIZE OF INTERNAL       * 06920000
069300*     TRECEIV TABLE FROM 250 TO 260 TO ALLOW FOR PAY RELEASE    * 06930000
069400*     OF PO 4982338 WITH 257 REC SEQ NBRS.                      * 06940000
069500*     RC-MAX WAS ALSO INCREASED FROM 250 TO 260 TEMPORARILY.    * 06950000
069600*     MADE BY: MIKE BESKE              WR/IR #: WR34276         * 06960000
069700*                                                               * 06970000
069800* DATE  01/08/2009                                              * 06980000
069900*     CHANGE MADE: INCREASED SIZE OF INTERNAL TRECEIV TABLE     * 06990000
070000*     FROM 260 TO 1260 TO ALLOW PAY RELEASE FOR PO 6578206.     * 07000000
070100*     IF THIS CHANGE DOES NOT SEEM TO CAUSE ISSUES OVER TIME,   * 07010000
070200*     IT MAY BE PERMANENT TO AVOID ALL THESE TEMPORARY CHANGES. * 07020000
070300*     MADE BY: NANCY EILBES            WR/IR #: INC000000655497 * 07030000
070400*                                                               * 07040000
070500* DATE  01/11/2011                                              * 07050000
070600*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07060000
070700*     FROM 4000 TO 4800 ALLOW PAY RELEASE OF SEVERAL CONSUMER   * 07070000
070800*     DIRECT POS.                                               * 07080000
070900*     MADE BY: NANCY EILBES            WR/IR #: INC000001550911 * 07090000
071000*                                                               * 07100000
071100* DATE  10/20/2011                                              * 07110000
071200*     CHANGE MADE: TEMP INCREASE OF INTERNAL PO-LINE-TABLE      * 07120000
071300*     FROM 999 TO 1000 TO ALLOW PAY RELEASE OF PO 7444708.      * 07130000
071400*     MODIFIED PO-MAX AND PO-IDX FROM 999 TO 1000.              * 07140000
071500*     MADE BY: MIKE BESKE              WR/IR #: INC000001887150 * 07150000
071600*                                                               * 07160000
071700* DATE  10/21/2011                                              * 07170000
071800*     CHANGE MADE: BACKED OUT THE TEMP INCREASE OF PO-MAX       * 07180000
071900*     AND PO-IDX. MODIFIED PO-MAX AND PO-IDX FROM 999 TO 1000.  * 07190000
072000*     MADE BY: MIKE BESKE              WR/IR #: INC000001887150 * 07200000
072100*                                                               * 07210000
072200* DATE  12/06/2011                                              * 07220000
072300*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07230000
072400*     FROM 4800 TO 5800 ALLOW PAY RELEASE OF SEVERAL CONSUMER   * 07240000
072500*     DIRECT POS FROM BLACK FRIDAY AND CYBER MONDAY SALES.      * 07250000
072600*     MADE BY: MIKE BESKE              WR/IR #: CRQ000000016459 * 07260000
072700*                                                               * 07270000
072800* DATE  12/07/2011                                              * 07280000
072900*     CHANGE MADE: TEMP INCREASE OF INTERNAL PO-LINE-TABLE      * 07290000
073000*     FROM 999 TO 1000 TO ALLOW PAY RELEASE OF PO 7505259.      * 07300000
073100*     MODIFIED PO-MAX AND PO-IDX FROM 999 TO 1000.              * 07310000
073200*     MADE BY: MIKE BESKE              WR/IR #: CRQ000000016553 * 07320000
073300*                                                               * 07330000
073400* DATE  12/19/2011                                              * 07340000
073500*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07350000
073600*     FROM 5800 TO 7000 ALLOW PAY RELEASE OF SEVERAL CONSUMER   * 07360000
073700*     DIRECT POS FROM BLACK FRIDAY AND CYBER MONDAY SALES.      * 07370000
073800*     MADE BY: MIKE BESKE              WR/IR #: CRQ000000017193 * 07380000
073900*                                                               * 07390000
074000* DATE  01/16/2012                                              * 07400000
074100*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07410000
074200*     FROM 7000 TO 7500 ALLOW PAY RELEASE OF CONSUMER           * 07420000
074300*     DIRECT POS FROM BLACK FRIDAY AND CYBER MONDAY SALES.      * 07430000
074400*     MADE BY: MIKE BESKE              WR/IR #: CRQ000000018612 * 07440000
074500*                                                               * 07450000
074600* DATE  09/23/2013                                              * 07460044
074700*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07470000
074800*     FROM 7500 TO 8000 ALLOW PAY RELEASE OF CONSUMER           * 07480000
074900*     DIRECT POS DUE TO ATG PROBLEMS                            * 07490000
075000*     MADE BY: MIKE BESKE              WR/IR #: CHG0063481      * 07500000
075100*                                                               * 07510000
075200* DATE  01/28/2014                                              * 07520000
075300*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07530000
075400*     FROM 8000 TO 8500 ALLOW PAY RELEASE OF CONSUMER           * 07540000
075500*     DIRECT POS                                                * 07550044
075600*     MADE BY: ANAND KUMAR             WR/IR #: CHG0072776      * 07560000
075700*                                                               * 07570000
075800* DATE  10/27/2014                                              * 07580037
075900*     CHANGE MADE: PO EXTENDED DIGIT CHANGES.                   * 07590037
076000*     EXTENDED PO# FROM 7 TO 9                                  * 07600037
076100*     MADE BY: COGNIZANT               WR/IR #: CHG0102899      * 07610041
076210*                                                               * 07621044
076220* DATE  01/19/2016                                              * 07622044
076230*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07623044
076240*     FROM 8500 TO 10000 TO ALLOW PAY RELEASE OF CONSUMER       * 07624044
076250*     DIRECT POS. ALSO MADE CORRESPONDING CHANGES TO APKRP263.  * 07625044
076260*     MADE BY: SRINATH (COGNIZANT)     WR/IR #: CHG0132253      * 07626044
076270*                                                               * 07627046
076280* DATE  02/25/2016                                              * 07628046
076290*     CHANGE MADE: INCREASED SIZE OF INTERNAL TRECEIV TABLE     * 07629046
076291*     FROM TO 2500 TO ALLOW PAY RELEASE OF PO 10298999 THAT HAS * 07629146
076292*     2254 ROWS ON TRECEIV.                                     * 07629246
076293*     MADE BY: NANCY EILBES            WR/IR #: CHG0135354      * 07629346
076294*                                                               * 07629447
076295* DATE  02/26/2016                                              * 07629547
076296*     CHANGE MADE: ADDED COMMENTS THAT IF LIMIT ON TRECEIV      * 07629647
076297*     TABLE IS CHANGED, 2 BATCH PROGRAMS MUST ALSO HAVE THEIR   * 07629747
076298*     LIMITS CHANGED TO THE SAME VALUES.                        * 07629847
076299*     MADE BY: NANCY EILBES            WR/IR #: CHG0135451      * 07629947
076300*                                                               * 07630048
076301* DATE  01/29/2020                                              * 07630148
076302*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07630248
076303*     FROM 10000 TO 12000 TO ALLOW PAY RELEASE OF CONSUMER       *07630348
076304*     DIRECT POS. ALSO MADE CORRESPONDING CHANGES TO APKRP263.  * 07630448
076305*     MADE BY: COGNIZANT               WR/IR #: CHG0238863      * 07630548
076306*                                                               * 07630650
076307* DATE  12/22/2020                                              * 07630750
076308*     CHANGE MADE: INCREASED SIZE OF INTERNAL TINVOIC TABLE     * 07630850
076309*     FROM 12000 TO 15000 TO ALLOW PAY RELEASE OF CONSUMER       *07630950
076310*     DIRECT POS. ALSO MADE CORRESPONDING CHANGES TO APKRP263.  * 07631050
076311*     MADE BY: NANCY EILBES            WR/IR #: CHG0252211      * 07631150
076312*                                                               * 07631255
076313* DATE  05/11/2021                                              * 07631355
076314*     CHANGE MADE: ADD STATUS OF 'PJ' TO ALL SELECTS FROM THE   * 07631452
076315*     TINVOIC TABLE, TO INCLUDE SEPHORA AT KOHLS TRANS           *07631552
076317*     MADE BY: JEAN KURK                CHG0256545              * 07631755
076318*---------------------------------------------------------------* 07631856
076319* DATE  09/01/2021                                                07631956
076320*            - CHANGE CALL OF 'DPKUT100' TO                     * 07632056
076321*              CALL DP010I-NUMERIC-EDIT-ROUTINE                 * 07632156
076322*              MAKING THE CALL DYNAMIC VS STATIC                * 07632256
076323*     MADE BY: GERMAN BANDA            WR/IR #: CHG0261053        07632358
076324*                                                               * 07632469
076325* DATE  10/11/2021                                              * 07632559
076326*     CHANGE MADE: DO NOT ALLOW SEPHORA INVOICES TO BE PAY      * 07632659
076327*     RELEASED IF ANY INVOICES ARE IN 'EN' STATUS                *07632759
076328*     MADE BY: JEAN KURK                CHG0262250              * 07632859
076329* DATE  10/24/2022                                                07632969
076330*     ADD COPYBOOK DPWS930                                        07633069
076331*     CHANGE CICS ARCHITECTURE CALL TO USE DP930-CICS-ARCH-API    07633169
076332*     MADE BY: BOB MCASEY              WR/IR #: CHG0276864        07633269
076340*---------------------------------------------------------------* 07634056
076400/                                                                 07640000
076500 ENVIRONMENT DIVISION.                                            07650000
076600                                                                  07660000
076700 DATA DIVISION.                                                   07670000
076800                                                                  07680000
076900 WORKING-STORAGE SECTION.                                         07690000
077000                                                                  07700000
077100 01  PO-MAX                               PIC S9(9) COMP-3        07710000
077200                                          VALUE +1000.            07720000
077300 01  PO-LINE-TABLE.                                               07730000
077400     05  PO-LINE-ENTRIES                                          07740000
077500         OCCURS 1000 TIMES                                        07750000
077600         INDEXED BY PO-IDX.                                       07760000
077700         10  T-PAYT-REQ-SEQ-NBR           PIC  S9(9) COMP.        07770000
077800         10  T-APP-PO-LNE-NBR             PIC  S9(9) COMP.        07780000
077900         10  T-KEY-PO-LNE-NBR             PIC  S9(9) COMP.        07790000
078000         10  T-INVC-QTY                   PIC  S9(9) COMP.        07800000
078100         10  T-INVC-UNT-COST-AMT          PIC  S9(7)V9(3)  COMP-3.07810000
078200         10  T-INVC-EXTD-AMT              PIC  S9(11)V9(2) COMP-3.07820000
078300         10  T-RECV-QTY                   PIC  S9(9) COMP.        07830000
078400         10  T-RECV-UNT-COST-AMT          PIC  S9(7)V9(3)  COMP-3.07840000
078500         10  T-PRCCLM-QTY                 PIC  S9(9) COMP.        07850000
078600         10  T-STYLE-DESC                 PIC  X(16).             07860000
078700         10  T-MULT-INVC-SW               PIC  X(01).             07870000
078800     05  PC-BLANK-PO-LINE-TABLE-ENTRY.                            07880000
078900         10  PC-PAYT-REQ-SEQ-NBR          PIC  S9(9) COMP.        07890000
079000         10  PC-APP-PO-LNE-NBR            PIC  S9(9) COMP.        07900000
079100         10  PC-KEY-PO-LNE-NBR            PIC  S9(9) COMP.        07910000
079200         10  PC-INVC-QTY                  PIC  S9(9) COMP.        07920000
079300         10  PC-INVC-UNT-COST             PIC  S9(7)V9(3)  COMP-3.07930000
079400         10  PC-INVC-EXTD-AMT             PIC  S9(11)V9(2) COMP-3.07940000
079500         10  PC-RECV-QTY                  PIC  S9(9) COMP.        07950000
079600         10  PC-RECV-UNT-COST             PIC  S9(7)V9(3)  COMP-3.07960000
079700         10  PC-PRCCLM-QTY                PIC  S9(9) COMP.        07970000
079800         10  PC-STYLE-DESC                PIC  X(16).             07980000
079900         10  PC-MULT-INVC-SW              PIC  X(01).             07990000
080000                                                                  08000000
080100***************************************************************** 08010000
080200****  IMPORTANT PROGRAM NOTE:                                **** 08020000
080300****  -----------------------                                **** 08030000
080400****                                                         **** 08040000
080500****  IF THE IH-MAX VALUE AND THE NUMBER OF OCCURS FOR THE   **** 08050000
080600****  TINVOIC-ENTRIES  UPDATED, CHANGED OR ALTERED, YOU MUST **** 08060000
080700****  CHANGE THE CORRESPONDING FIELDS IN APKRP263 TO AVOID   **** 08070000
080800****  A FATAL PRODUCTION ABEND IN JOB APK070!!!!! THE VALUES **** 08080000
080900****  MUST MATCH EXACTLY!!!!  THE APKRP263 FIELDS ARE:       **** 08090000
081000****  IT-IND-LIMIT AND THE NUMBER OF OCCURS FOR IT-INVOICES  **** 08100000
081100****  INTERNAL ARRAY.                                        **** 08110000
081200****                                                         **** 08120000
081300***************************************************************** 08130000
081400 01  IH-MAX                               PIC S9(9) COMP-3        08140000
081500                                          VALUE +15000.           08150050
081600 01  TINVOIC-TABLE.                                               08160000
081700     05  TINVOIC-ENTRIES                                          08170000
081800         OCCURS 15000 TIMES                                       08180050
081900         INDEXED BY IH-IDX.                                       08190000
082000         10  T-IH-PAYT-REQ-SEQ-NBR        PIC  S9(9) COMP.        08200000
082100         10  T-IH-INVC-ID                 PIC   X(22).            08210000
082200         10  T-IH-STR-NBR                 PIC  S9(4) COMP.        08220000
082300         10  T-IH-INVC-TYP-CDE            PIC   X(2).             08230000
082400         10  T-IH-STATUS-CDE              PIC   X(2).             08240000
082500         10  T-IH-HOLD-IND                PIC   X(1).             08250000
082600         10  T-IH-DETAIL-EXISTS-SW        PIC   X(1).             08260000
082700         10  T-IH-GRO-COST-AMT            PIC  S9(9)V99 COMP-3.   08270000
082800         10  T-IH-TERM-SEL-CDE            PIC   X(1).             08280000
082900         10  T-IH-DC-NBR                  PIC  S9(4) COMP.        08290000
083000         10  T-IH-MTCH-LVL-CDE            PIC   X(1).             08300000
083100                                                                  08310000
083310***************************************************************** 08331047
083320****  IMPORTANT PROGRAM NOTE:                                **** 08332047
083330****  -----------------------                                **** 08333047
083340****                                                         **** 08334047
083350****  IF THE RC-MAX VALUE AND THE NUMBER OF OCCURS FOR THE   **** 08335047
083360****  TRECEIV TABLE IS UPDATED, ALSO YOU MUST CHANGE THE     **** 08336047
083370****  LIMITS FOR RECEIVERS IN APKRP263 AND APKUT287 TO AVOID **** 08337047
083380****  PRODUCTION FAILURES IN JOBS APK027 AND APK070.         **** 08338047
083393****                                                         **** 08339347
083394***************************************************************** 08339447
083395 01  RC-MAX                               PIC S9(9) COMP-3        08339547
083396                                          VALUE +2500.            08339647
083400 01  TRECEIV-TABLE.                                               08340000
083500     05  TRECEIV-ENTRY                                            08350000
083600         OCCURS 2500 TIMES                                        08360045
083700         INDEXED BY RC-IDX.                                       08370000
083800         10  T-ORD-NBR                    PIC  S9(9) COMP.        08380000
083900         10  T-REC-SEQ-NBR                PIC  S9(9) COMP.        08390000
084000     05  PV-TRECEIV-KEY.                                          08400000
084100         10  PV-ORD-NBR                   PIC  S9(9) COMP.        08410000
084200         10  PV-REC-SEQ-NBR               PIC  S9(9) COMP.        08420000
084300                                                                  08430000
084400 01  RD-MAX                               PIC S9(9) COMP-3        08440000
084500                                          VALUE +9999.            08450000
084600 01  TRECDIS-TABLE.                                               08460000
084700     05  TRECDIS-ENTRY                                            08470000
084800         OCCURS  9999 TIMES                                       08480000
084900         INDEXED BY RD-IDX.                                       08490000
085000         10  T-RD-ORD-NBR                 PIC  S9(9) COMP.        08500000
085100         10  T-RD-ORD-LNE-NBR             PIC  S9(9) COMP.        08510000
085200         10  T-RD-REC-SEQ-NBR             PIC  S9(9) COMP.        08520000
085300         10  T-RD-OPER-UNT-ID             PIC  S9(4) COMP.        08530000
085400         10  T-RD-FCLTY-ID                PIC  S9(4) COMP.        08540000
085500         10  T-RD-STR-NBR                 PIC  S9(4) COMP.        08550000
085600         10  T-RD-STR-FCLTY-ID            PIC  S9(4) COMP.        08560000
085700*        10  T-RD-CRE-TMST                PIC  X(26).             08570000
085800     05  PV-TRECDIS-KEY.                                          08580000
085900         10  PV-RD-ORD-NBR                PIC  S9(9) COMP.        08590000
086000         10  PV-RD-ORD-LNE-NBR            PIC  S9(9) COMP.        08600000
086100         10  PV-RD-REC-SEQ-NBR            PIC  S9(9) COMP.        08610000
086200         10  PV-RD-OPER-UNT-ID            PIC  S9(4) COMP.        08620000
086300         10  PV-RD-FCLTY-ID               PIC  S9(4) COMP.        08630000
086400         10  PV-RD-STR-NBR                PIC  S9(4) COMP.        08640000
086500         10  PV-RD-STR-FCLTY-ID           PIC  S9(4) COMP.        08650000
086600*        10  PV-RD-CRE-TMST               PIC  X(26).             08660000
086700                                                                  08670000
086800 01  PR-MAX                               PIC S9(9) COMP-3        08680000
086900                                          VALUE +50000.           08690000
087000 01  TPRCCLM-TABLE.                                               08700000
087100     05  TPRCCLM-ENTRY                                            08710000
087200         OCCURS 50000 TIMES                                       08720000
087300         INDEXED BY PR-IDX.                                       08730000
087400         10  T-PR-DOC-TYP-CDE           PIC X(02).                08740000
087500         10  T-PR-INVC-ID               PIC X(22).                08750000
087600         10  T-PR-PO-LINE-NBR           PIC S9(9)    COMP.        08760000
087700         10  T-PR-UNIT-QTY              PIC S9(07)   COMP-3.      08770000
087800* MKK 01/17 CHANGED COST FROM V99 TO V999                         08780000
087900         10  T-PR-UNIT-COST             PIC S9(9)V999 COMP-3.     08790000
088000         10  T-PR-ADJ-COST              PIC S9(9)V999 COMP-3.     08800000
088100                                                                  08810000
088200 01  NI-MAX                               PIC S9(9) COMP-3        08820000
088300                                          VALUE +999.             08830000
088400******************************************************************08840000
088500*                                                                *08850000
088600*   DO NOT INCREASE THE SIZE OF THE TNINREC-TABLE !!!! IT WILL   *08860000
088700*   CREATE BALANCING PROBLEMS FOR AP.                            *08870000
088800*                                                                *08880000
088900*   IN ORDER TO RESOLVE AN ON-LINE ERROR WHEN TNINREC TABLE SIZE *08890000
089000*   IS EXCEEDED THE NIR ROWS MUST BE SUMMED BY LINE FOR THE PO   *08900000
089100*   AND EXISTING ROWS DELETED. SEE PROGRAM APKUP212 - ADD PO     *08910000
089200*   NUMBER TO CONTROL CARD APCC212 IN TKMA.AP.TEST.CONTROL.      *08920000
089300*   COPY PROC APKUP212 FROM TKMA.AP.TEST.JOBLIB TO CREATE        *08930000
089400*   APK999 MEMBER & RUN FROM PROCLIBE.                           *08940000
089500*                                                                *08950000
089600*   DO NOT INCREASE THE SIZE OF THE TNINREC-TABLE !!!!           *08960000
089700*                                                                *08970000
089800******************************************************************08980000
089900 01  TNINREC-TABLE.                                               08990000
090000     05  TNINREC-ENTRY                                            09000000
090100         OCCURS 999 TIMES                                         09010000
090200         INDEXED BY NI-IDX.                                       09020000
090300         10  T-NI-PO-LNE-NBR            PIC S9(9)    COMP.        09030000
090400         10  T-NI-NON-INVC-SEQ-NBR      PIC S9(9)    COMP.        09040000
090500     05  PV-TNINREC-KEY.                                          09050000
090600         10  PV-NI-PO-LNE-NBR           PIC S9(9)    COMP.        09060000
090700         10  PV-NI-NON-INVC-SEQ-NBR     PIC S9(9)    COMP.        09070000
090800                                                                  09080000
090900 01  DK-DB2-KEYS.                                                 09090000
091000     05  DK-PO-NBR                    PIC S9(09) VALUE +0         09100000
091100                                                 COMP.            09110000
091200     05  DK-STR-NBR                   PIC S9(04) VALUE +0         09120000
091300                                                 COMP.            09130000
091400     05  DK-STR-NBR-LOW               PIC S9(04) VALUE +0         09140000
091500                                                 COMP.            09150000
091600     05  DK-STR-NBR-HIGH              PIC S9(04) VALUE +0         09160000
091700                                                 COMP.            09170000
091800     05  DK-DC-NBR                    PIC S9(04) VALUE +0         09180000
091900                                                 COMP.            09190000
092000     05  DK-DC-NBR-LOW                PIC S9(04) VALUE +0         09200000
092100                                                 COMP.            09210000
092200     05  DK-DC-NBR-HIGH               PIC S9(04) VALUE +0         09220000
092300                                                 COMP.            09230000
092400     05  DK-PAYT-REQ-SEQ-NBR          PIC S9(09) VALUE +0         09240000
092500                                                 COMP.            09250000
092600     05  DK-MTCH-LVL-CDE              PIC  X(01) VALUE SPACE.     09260000
092700                                                                  09270000
092800 01  PC-PROGRAM-CONSTANTS.                                        09280000
092900     05  PC-NULL-DATE                   PIC  X(26)  VALUE         09290000
093000        '9999-09-09'.                                             09300000
093100     05  PC-NULL-TIMESTAMP              PIC  X(26)  VALUE         09310000
093200        '9999-09-09-09.09.09.999999'.                             09320000
093300     05  PC-CURRENT-MAP-NAME            PIC  X(08)  VALUE         09330000
093400                                                    'AP330A  '.   09340000
093500     05  PC-CURRENT-MAPSET-NAME         PIC  X(08)  VALUE         09350000
093600                                                    'APKM330 '.   09360000
093700     05  PC-CURRENT-PROGRAM-NAME        PIC  X(08)  VALUE         09370000
093800                                                    'APKCS330'.   09380000
093900     05  PC-APPL-MAP                    PIC S9(04)  VALUE  +1     09390000
094000                                                    COMP.         09400000
094100     05  PC-LIST-QUEUE-SEQ              PIC  9(01)  VALUE 1.      09410000
094200     05  PC-SEL-QUEUE-SEQ               PIC  9(01)  VALUE 2.      09420000
094300     05  PC-STORE-QUEUE-SEQ             PIC  9(01)  VALUE 3.      09430000
094400     05  PC-INTER-APPL-CODES.                                     09440000
094500         10 PC-INTER-APPL-CRIT-SPEC     PIC  X(01)  VALUE '1'.    09450000
094600         10 PC-INTER-APPL-LIST          PIC  X(01)  VALUE '5'.    09460000
094700     05  PC-ITEMS-PER-PANEL             PIC S9(04)  VALUE +11     09470000
094800                                                    COMP SYNC.    09480000
094900     05  PC-MAX-BLOCKS-IN-ARRAY         PIC S9(04)  VALUE +2      09490000
095000                                                    COMP SYNC.    09500000
095100     05  PC-MAX-ITEMS                   PIC S9(09)  VALUE         09510000
095200                                                    +1000000      09520000
095300                                                    COMP-3.       09530000
095400     05  PC-MSG-NUMBER-LENGTH           PIC S9(04)  VALUE +7      09540000
095500                                                    COMP SYNC.    09550000
095600     05  PC-MAX-RETRIES                 PIC S9(03)  VALUE +3      09560000
095700                                                    COMP-3.       09570000
095800     05  PC-PERCENT                     PIC  X(01)  VALUE '%'.    09580000
095900     05  PC-N                           PIC  X(01)  VALUE 'N'.    09590000
096000     05  PC-ADD                         PIC  X(03)  VALUE 'ADD'.  09600000
096100     05  PC-INQ                         PIC  X(03)  VALUE 'INQ'.  09610000
096200     05  PC-UPD                         PIC  X(03)  VALUE 'UPD'.  09620000
096300     05  PC-DEL                         PIC  X(03)  VALUE 'DEL'.  09630000
096400     05  PC-ERR                         PIC  X(03)  VALUE 'ERR'.  09640000
096500                                                                  09650000
096600     05  PC-TSYMSG-NUMBERS.                                       09660000
096700         10  PC-TSYMSG-00007            PIC  9(05)  VALUE 00007.  09670000
096800         10  PC-TSYMSG-00005            PIC  9(05)  VALUE 00005.  09680000
096900         10  PC-TSYMSG-00008            PIC  9(05)  VALUE 00008.  09690000
097000         10  PC-TSYMSG-00004            PIC  9(05)  VALUE 00004.  09700000
097100         10  PC-TSYMSG-00045            PIC  9(05)  VALUE 00045.  09710000
097200         10  PC-TSYMSG-00047            PIC  9(05)  VALUE 00047.  09720000
097300         10  PC-TSYMSG-00050            PIC  9(05)  VALUE 00050.  09730000
097400         10  PC-TSYMSG-00051            PIC  9(05)  VALUE 00051.  09740000
097500         10  PC-TSYMSG-00052            PIC  9(05)  VALUE 00052.  09750000
097600         10  PC-TSYMSG-00053            PIC  9(05)  VALUE 00053.  09760000
097700         10  PC-TSYMSG-00054            PIC  9(05)  VALUE 00054.  09770000
097800         10  PC-TSYMSG-00055            PIC  9(05)  VALUE 00055.  09780000
097910         10  PC-TSYMSG-00057            PIC  9(05)  VALUE 00057.  09791053
098000         10  PC-TSYMSG-00059            PIC  9(05)  VALUE 00059.  09800000
098100         10  PC-TSYMSG-00069            PIC  9(05)  VALUE 00069.  09810000
098200         10  PC-TSYMSG-00070            PIC  9(05)  VALUE 00070.  09820000
098300         10  PC-TSYMSG-00101            PIC  9(05)  VALUE 00101.  09830000
098400         10  PC-TSYMSG-00279            PIC  9(05)  VALUE 00279.  09840000
098500         10  PC-TSYMSG-00726            PIC  9(05)  VALUE 00726.  09850000
098600         10  PC-TSYMSG-00736            PIC  9(05)  VALUE 00736.  09860000
098700         10  PC-TSYMSG-00737            PIC  9(05)  VALUE 00737.  09870000
098800         10  PC-TSYMSG-00738            PIC  9(05)  VALUE 00738.  09880000
098900         10  PC-TSYMSG-00739            PIC  9(05)  VALUE 00739.  09890000
099000         10  PC-TSYMSG-00740            PIC  9(05)  VALUE 00740.  09900000
099100         10  PC-TSYMSG-00859            PIC  9(05)  VALUE 00859.  09910000
099200         10  PC-TSYMSG-00860            PIC  9(05)  VALUE 00860.  09920000
099300         10  PC-TSYMSG-00903            PIC  9(05)  VALUE 00903.  09930000
099400         10  PC-TSYMSG-00905            PIC  9(05)  VALUE 00905.  09940000
099500         10  PC-TSYMSG-00907            PIC  9(05)  VALUE 00907.  09950000
099600         10  PC-TSYMSG-00946            PIC  9(05)  VALUE 00946.  09960000
099700         10  PC-TSYMSG-00950            PIC  9(05)  VALUE 00950.  09970000
099800         10  PC-TSYMSG-00964            PIC  9(05)  VALUE 00964.  09980000
099900         10  PC-TSYMSG-00965            PIC  9(05)  VALUE 00965.  09990000
100000         10  PC-TSYMSG-03035            PIC  9(05)  VALUE 03035.  10000000
100100         10  PC-TSYMSG-03236            PIC  9(05)  VALUE 03236.  10010000
100200         10  PC-TSYMSG-03520            PIC  9(05)  VALUE 03520.  10020000
100300         10  PC-TSYMSG-03521            PIC  9(05)  VALUE 03521.  10030000
100400         10  PC-TSYMSG-03529            PIC  9(05)  VALUE 03529.  10040000
100500         10  PC-TSYMSG-03530            PIC  9(05)  VALUE 03530.  10050000
100510         10  PC-TSYMSG-03818            PIC  9(05)  VALUE 03818.  10051063
100600                                                                  10060000
100700 01  PC-PR-PENDING-X.                                             10070000
100800     05  PC-PR-PENDING-SW               PIC  X(01)  VALUE 'N'.    10080000
100900         88  PC-PR-PENDING-BEGIN                    VALUE 'N'.    10090000
101000         88  PC-PR-PENDING-END                      VALUE 'Y'.    10100000
101100                                                                  10110000
101200 01  PS-PROGRAM-SWITCHES.                                         10120000
101300     05  PS-ERROR-SW                    PIC  X(01)  VALUE 'Y'.    10130000
101400         88  PS-NO-ERROR                            VALUE 'Y'.    10140000
101500         88  PS-ERROR                               VALUE 'N'.    10150000
101600     05  PS-DONE-SW                     PIC  X(01)  VALUE 'N'.    10160000
101700         88  PS-DONE                                VALUE 'Y'.    10170000
101800         88  PS-NOT-DONE                            VALUE 'N'.    10180000
101900     05  PS-START-ITEM-ERROR-SW       PIC  X        VALUE 'Y'.    10190000
102000         88  PS-NO-START-ITEM-ERROR                 VALUE 'Y'.    10200000
102100         88  PS-START-ITEM-ERROR                    VALUE 'N'.    10210000
102200     05  PS-RI-INVC-CREATED-SW        PIC  X        VALUE 'Y'.    10220000
102300         88  RI-INVC-CREATED                        VALUE 'Y'.    10230000
102400         88  RI-INVC-NOT-CREATED                    VALUE 'N'.    10240000
102500     05  PS-INSERT-SUCCESSFUL-SW      PIC  X        VALUE 'Y'.    10250000
102600         88  INSERT-SUCCESSFUL                      VALUE 'Y'.    10260000
102700         88  INSERT-NOT-SUCCESSFUL                  VALUE 'N'.    10270000
102800     05  PS-STORE-PROCESSING-SW       PIC  X        VALUE 'B'.    10280000
102900         88  PROCESSING-BULK                        VALUE 'B'.    10290000
103000         88  PROCESSING-BY-STORE                    VALUE 'S'.    10300000
103100     05  PS-INVCS-BALANCE-SW          PIC  X        VALUE 'Y'.    10310000
103200         88  INVCS-IN-BALANCE                       VALUE 'Y'.    10320000
103300         88  INVCS-NOT-IN-BALANCE                   VALUE 'N'.    10330000
103400     05  PS-INVC-ITEM-SW              PIC  X        VALUE 'Y'.    10340000
103500         88  MORE-INVC-ITEMS                        VALUE 'Y'.    10350000
103600         88  NO-MORE-INVC-ITEMS                     VALUE 'N'.    10360000
103700     05  PS-PRCCLM-AMT-SUMMED-SW      PIC  X        VALUE 'Y'.    10370000
103800         88  AMT-NOT-SUMMED                         VALUE 'Y'.    10380000
103900         88  AMT-SUMMED                             VALUE 'N'.    10390000
104000     05  PS-FIRSTTIME-SW              PIC  X        VALUE 'Y'.    10400000
104100         88  FIRSTTIME                              VALUE 'Y'.    10410000
104200         88  NOT-FIRSTTIME                          VALUE 'N'.    10420000
104300     05  PS-VALID-INVC-PO-SW          PIC  X        VALUE 'N'.    10430000
104400         88  PS-NOT-VALID-INVC-PO                   VALUE 'N'.    10440000
104500         88  PS-VALID-INVC-PO                       VALUE 'Y'.    10450000
104600     05  PS-TPURCHS-SW                PIC  X        VALUE 'Y'.    10460000
104700         88  TPURCHS-NOT-FOUND                      VALUE 'N'.    10470000
104800         88  TPURCHS-FOUND                          VALUE 'Y'.    10480000
104810     05  PS-TINVOIC-SW                PIC  X        VALUE 'Y'.    10481060
104820         88  TINVOIC-NOT-FOUND                      VALUE 'N'.    10482060
104830         88  TINVOIC-FOUND                          VALUE 'Y'.    10483060
104900     05  PS-NO-LINE-SW                PIC  X        VALUE 'Y'.    10490000
105000         88  NO-LINE-NOT-FOUND                      VALUE 'N'.    10500000
105100         88  NO-LINE-FOUND                          VALUE 'Y'.    10510000
105200     05  PS-RECON-ERROR-COND-SW       PIC  X        VALUE 'N'.    10520000
105300         88  PS-NO-RECON-ERROR                      VALUE 'N'.    10530000
105400         88  PS-RECON-ERROR-COND                    VALUE 'Y'.    10540000
105500                                                                  10550000
105600 01  PV-TIMESTAMP                   PIC X(26)  VALUE SPACES.      10560000
105700 01  FILLER  REDEFINES PV-TIMESTAMP.                              10570000
105800     10  FILLER                     PIC X(14).                    10580000
105900     10  PV-MINUTE                  PIC X(02).                    10590000
106000     10  FILLER                     PIC X(02).                    10600000
106100     10  PV-SECOND                  PIC X(01).                    10610000
106200     10  FILLER                     PIC X(01).                    10620000
106300     10  PV-NANOSEC-1               PIC X(03).                    10630000
106400     10  PV-NANOSEC-2               PIC X(03).                    10640000
106500                                                                  10650000
106600 01  PV-MISC.                                                     10660000
106700     05  PV-RANDOM-KEY                  PIC 9(09)  VALUE ZERO.    10670000
106800     05  FILLER  REDEFINES PV-RANDOM-KEY.                         10680000
106900         10  PV-RANDOM-KEY-NANOSEC-1    PIC X(03).                10690000
107000         10  PV-RANDOM-KEY-NANOSEC-2    PIC X(03).                10700000
107100         10  PV-RANDOM-KEY-MINUTE       PIC X(02).                10710000
107200         10  PV-RANDOM-KEY-SECOND       PIC X(01).                10720000
107300                                                                  10730000
107400     05  PV-RANDOM-KEY-INT              PIC S9(9) COMP VALUE ZERO.10740000
107500                                                                  10750000
107600     05  PV-NBR-STRS                    PIC S9(4) COMP.           10760000
107700     05  PV-NBR-STRS-ON-TPOSTRR         PIC S9(4) COMP.           10770000
107800     05  PV-STR-NBR                     PIC S9(4) COMP.           10780000
107900     05  PV-STR-DC-NBR                  PIC S9(4) COMP.           10790000
108000     05  PV-DC-NBR                      PIC S9(4) COMP.           10800000
108100     05  PV-PO-LNE-NBR                  PIC S9(9) COMP.           10810000
108200     05  PV-PO-NBR-DISPLAY              PIC ZZZZZZZZ9.            10820039
108300     05  PV-MTCH-LVL-CDE                PIC X(1).                 10830000
108400     05  PV-8V99                        PIC Z(8).99.              10840000
108500     05  PV-8V99-X REDEFINES                                      10850000
108600         PV-8V99                        PIC X(11).                10860000
108700     05  PV-8V99-SIGN                   PIC -Z(8).99.             10870000
108800     05  PV-8V99-SIGN-X REDEFINES                                 10880000
108900         PV-8V99-SIGN                   PIC X(12).                10890000
109000     05  PV-PAYREQ-PAYT-REQ-SEQ-NBR     PIC S9(9) COMP.           10900000
109100     05  PV-PAYT-REQ-SEQ-NBR-X.                                   10910000
109200         10  FILLER                     PIC X(1)  VALUE 'R'.      10920000
109300         10  PV-PAYT-REQ-SEQ-NBR-NUM    PIC 9(9).                 10930000
109400                                                                  10940000
109500     05  PV-DISC-PAY-DAY-QTY            PIC  S9(4) COMP.          10950000
109600     05  PV-RECV-TOTAL-AMT              PIC S9(11)V99 COMP-3.     10960000
109700     05  PV-REMAINDER-TOT-COST          PIC S9(11)V99 COMP-3.     10970000
109800     05  PV-REMAINDER-INVC-QTY          PIC S9(9)     COMP-3.     10980000
109900     05  PV-REMAINDER-INVC-DTE          PIC X(10) VALUE SPACES.   10990000
110000     05  PV-RI-ITEM-QTY-MAX             PIC S9(9)     COMP-3.     11000000
110100     05  PV-INVC-SUM-QTY                PIC S9(9) COMP.           11010000
110200     05  PV-PRCCLM-QTY-SUMMED           PIC S9(9) COMP.           11020000
110300                                                                  11030000
110400     05  PV-ONE                         PIC X(01).                11040000
110500     05  PV-COMMA                       PIC X(01).                11050000
110600     05  PV-STRING                      PIC X(22).                11060000
110700     05  PV-START                       PIC S9(04) COMP.          11070000
110800     05  PV-NULL-LNE-NBR-IND            PIC X.                    11080000
110900         88  PV-PO-LNE-NBR-NOT-NULL     VALUE '1'.                11090000
111000         88  PV-PO-LNE-NBR-IS-NULL      VALUE '2'.                11100000
111100     05  PV-APP-LNE-NBR                 PIC S9(9) COMP.           11110000
111200     05  PV-KEY-LNE-NBR                 PIC S9(9) COMP.           11120000
111300     05  PV-VEND-STYL-NAME              PIC X(20).                11130000
111400     05  PV-UNT-COST-SEL-CDE            PIC X.                    11140000
111500     05  PV-QTY                         PIC S9(9) COMP.           11150000
111600     05  PV-UNT-COST-AMT                PIC S9(7)V9(3) COMP-3.    11160000
111700     05  PV-PAYT-REQ-SEQ-NBR            PIC S9(9) COMP.           11170000
111800     05  PV-CSR-NULL-LNE-NBR-IND        PIC X.                    11180000
111900         88  PV-CSR-PO-LNE-NBR-NOT-NULL VALUE '1'.                11190000
112000         88  PV-CSR-PO-LNE-NBR-IS-NULL  VALUE '2'.                11200000
112100     05  PV-CSR-APP-LNE-NBR             PIC S9(9) COMP.           11210000
112200     05  PV-CSR-KEY-LNE-NBR             PIC S9(9) COMP.           11220000
112300     05  PV-CSR-VEND-STYL-NAME          PIC X(20).                11230000
112400     05  PV-CSR-UNT-COST-SEL-CDE        PIC X.                    11240000
112500     05  PV-CSR-QTY                     PIC S9(9) COMP.           11250000
112600     05  PV-CSR-UNT-COST-AMT            PIC S9(7)V9(3) COMP-3.    11260000
112700     05  PV-CSR-PAYT-REQ-SEQ-NBR        PIC S9(9) COMP.           11270000
112800     05  PV-NULL-INDICATORS.                                      11280000
112900         10  MIITEM-PO-LNE-NBR-NN       PIC S9(4) COMP.           11290000
113000         10  MIITEM-VER-NBR-NN          PIC S9(4) COMP.           11300000
113100     05  PV-DECIMAL-8                   PIC S9(10)V9(8)           11310000
113200                                        VALUE ZEROS  COMP-3.      11320000
113300     05  PV-TMIITEM-CSR-VARIABLES.                                11330000
113400         10  PV-PURITM-PO-LNE-NBR       PIC S9(9) COMP.           11340000
113500         10  PV-PURITM-PRD-1ST-COST-AMT  PIC S9(4)V9(3) COMP-3.   11350000
113600         10  PV-INVOIC-PO-NBR           PIC S9(9) COMP.           11360000
113700         10  PV-INVOIC-PAYT-REQ-SEQ-NBR PIC S9(9) COMP.           11370000
113800         10  PV-MIITEM-PO-NBR           PIC S9(9) COMP.           11380000
113900         10  PV-MIITEM-PAYT-REQ-SEQ-NBR PIC S9(9) COMP.           11390000
114000         10  PV-MIITEM-PAYT-REQ-LNE-NBR PIC S9(9) COMP.           11400000
114100         10  PV-MIITEM-UNT-COST-SEL-CDE PIC  X(1).                11410000
114200         10  PV-MIITEM-PO-LNE-NBR       PIC S9(9) COMP.           11420000
114300         10  PV-PREQIT-UNT-COST-AMT     PIC S9(7)V9(3) COMP-3.    11430000
114400     05  PV-NEW-UNT-COST-SEL-CDE        PIC  X(1).                11440000
114500                                                                  11450000
114600 01  PV-PROGRAM-VARIABLES.                                        11460000
114700     05  PV-SUB                         PIC S9(04)  VALUE +0      11470000
114800                                                    COMP SYNC.    11480000
114900     05  PV-REMAINDER                   PIC S9(04)  VALUE +0      11490000
115000                                                    COMP SYNC.    11500000
115100     05  PV-READ-COUNT                  PIC S9(09)  VALUE +0      11510000
115200                                                    COMP-3.       11520000
115300     05  PV-ITEMS-PROCESSED             PIC S9(09)  VALUE +0      11530000
115400                                                    COMP-3.       11540000
115500     05  PV-HOLD-SELECTED-ITEMS         PIC S9(09)  VALUE +0      11550000
115600                                                    COMP-3.       11560000
115700     05  PV-ITEM-IN-USE                 PIC S9(09)  VALUE +0      11570000
115800                                                    COMP-3.       11580000
115900     05  PV-TOP-ITEM                    PIC S9(09)  VALUE +0      11590000
116000                                                    COMP-3.       11600000
116100     05  PV-BOTTOM-ITEM                 PIC S9(09)  VALUE +0      11610000
116200                                                    COMP-3.       11620000
116300     05  PV-TEMP-BLOCK-NUMBER           PIC S9(09)  VALUE +0      11630000
116400                                                    COMP-3.       11640000
116500     05  PV-BLOCK-NUMBER                PIC S9(04)  VALUE +0      11650000
116600                                                    COMP SYNC.    11660000
116700     05  PV-CICS-RESP                   PIC S9(04)  VALUE +0      11670000
116800                                                    COMP SYNC.    11680000
116900     05  PV-ITEM                        PIC S9(04)  VALUE +0      11690000
117000                                                    COMP SYNC.    11700000
117100     05  PV-SEL-QUEUE-ITEM              PIC S9(04)  VALUE +0      11710000
117200                                                    COMP SYNC.    11720000
117300     05  PV-STORE-ITEM                  PIC S9(04)  VALUE +0      11730000
117400                                                    COMP SYNC.    11740000
117500     05  PV-SAVE-ITEM                   PIC S9(04)  VALUE +0      11750000
117600                                                    COMP SYNC.    11760000
117700     05  PV-HIGHEST-BLOCK-WRITTEN       PIC S9(04)  VALUE +0      11770000
117800                                                    COMP SYNC.    11780000
117900     05  PV-LIST-ITEM-NUMBER            PIC S9(04)  VALUE +0      11790000
118000                                                    COMP SYNC.    11800000
118100     05  PV-FIRST-BLOCK-IN-ARRAY        PIC S9(04)  VALUE +0      11810000
118200                                                    COMP SYNC.    11820000
118300     05  PV-NEXT-BLOCK-IN-ARRAY         PIC S9(04)  VALUE +0      11830000
118400                                                    COMP SYNC.    11840000
118500     05  PV-PREV-BLOCK-IN-ARRAY         PIC S9(04)  VALUE +0      11850000
118600                                                    COMP SYNC.    11860000
118700     05  PV-FIRST-BLOCK-IN-RANGE        PIC S9(04)  VALUE +0      11870000
118800                                                    COMP SYNC.    11880000
118900     05  PV-LAST-BLOCK-IN-RANGE         PIC S9(04)  VALUE +0      11890000
119000                                                    COMP SYNC.    11900000
119100     05  PV-START-OF-SELECTED-RANGE     PIC S9(04)  VALUE +0      11910000
119200                                                    COMP SYNC.    11920000
119300     05  PV-END-OF-SELECTED-RANGE       PIC S9(04)  VALUE +0      11930000
119400                                                    COMP SYNC.    11940000
119500     05  PV-RETRY-COUNTER               PIC S9(04)  VALUE +0      11950000
119600                                                    COMP SYNC.    11960000
119700     05  PV-DB2-COUNT                   PIC S9(09)  VALUE +0      11970000
119800                                                    COMP-3.       11980000
119900     05  PV-BULK-COUNT                  PIC S9(09)  VALUE +0      11990000
120000                                                    COMP-3.       12000000
120100     05  PV-BY-DC-COUNT                 PIC S9(09)  VALUE +0      12010000
120200                                                    COMP-3.       12020000
120300     05  PV-BY-STORE-COUNT              PIC S9(09)  VALUE +0      12030000
120400                                                    COMP-3.       12040000
120500     05  PV-MTCH-LVL-COUNT              PIC S9(09)  VALUE +0      12050000
120600                                                    COMP-3.       12060000
120700     05  PV-RECEIVER-COUNT              PIC S9(09)  VALUE +0      12070000
120800                                                    COMP-3.       12080000
120900     05  PV-WO-NBR                      PIC S9(04)  VALUE +0      12090000
121000                                                    COMP SYNC.    12100000
121100     05  PV-RECVR-STATUS-CDE            PIC  X(02)  VALUE SPACES. 12110000
121200* MKK 5/18/95                                                     12120000
121300     05  PV-TOTAL-GROSS-COST            PIC S9(9)V99 VALUE ZEROS  12130000
121400                                                     COMP-3.      12140000
121500     05  PV-TOTAL-DISCOUNT-AMT          PIC S9(9)V99 VALUE ZEROS  12150000
121600                                                     COMP-3.      12160000
121700     05  PV-WEIGHTED-DISC-PCT           PIC SV9(04)  VALUE ZEROS  12170000
121800                                                     COMP-3.      12180000
121900     05  PV-COOP-ALLOW-AMT              PIC S9(9)V99 VALUE ZEROS  12190000
122000                                                     COMP-3.      12200000
122100     05  PV-WEIGHTED-COOP-PCT           PIC SV9(04)  VALUE ZEROS  12210000
122200                                                     COMP-3.      12220000
122300     05  PV-PRCCLM-DIFFERENCE           PIC S9(7)V9(3)            12230000
122400                                                     VALUE ZEROS  12240000
122500                                                     COMP-3.      12250000
122600                                                                  12260000
122700     05  PV-ADV-DISC-AMT            PIC S9(9)V99 VALUE ZEROS      12270000
122800                                                 COMP-3.          12280000
122900     05  PV-DISCOUNTED-COST-AMT     PIC S9(9)V99 VALUE ZEROS      12290000
123000                                                 COMP-3.          12300000
123100     05  PV-TOTAL-DISCOUNTED-COST-AMT                             12310000
123200                                    PIC S9(9)V99 VALUE ZEROS      12320000
123300                                                 COMP-3.          12330000
123400     05  PV-WEIGHTED-ADV-PCT        PIC SV9(04)  VALUE ZEROS      12340000
123500                                                 COMP-3.          12350000
123600     05  PV-NEW-STORE-AMT           PIC S9(9)V99 VALUE ZEROS      12360000
123700                                                 COMP-3.          12370000
123800     05  PV-WEIGHTED-NSD-PCT        PIC SV9(04)  VALUE ZEROS      12380000
123900                                                 COMP-3.          12390000
124000     05  PV-MOS-DISCOUNT-AMT        PIC S9(9)V99 VALUE ZEROS      12400000
124100                                                 COMP-3.          12410000
124200     05  PV-WEIGHTED-MOS-PCT        PIC SV9(04)  VALUE ZEROS      12420000
124300                                                 COMP-3.          12430000
124400     05  PV-TRADE-DISCOUNT-AMT      PIC S9(9)V99 VALUE ZEROS      12440000
124500                                                 COMP-3.          12450000
124600     05  PV-WEIGHTED-TRD-PCT        PIC SV9(04)  VALUE ZEROS      12460000
124700                                                 COMP-3.          12470000
124800     05  PV-MISC-DISCOUNT-AMT       PIC S9(9)V99 VALUE ZEROS      12480000
124900                                                 COMP-3.          12490000
125000     05  PV-WEIGHTED-MISC-PCT       PIC SV9(04)  VALUE ZEROS      12500000
125100                                                 COMP-3.          12510000
125200     05  PV-PRFT-ASST-AMT           PIC S9(9)V99 VALUE ZEROS      12520000
125300                                                 COMP-3.          12530000
125400     05  PV-WEIGHTED-ALW-PCT        PIC SV9(04)  VALUE ZEROS      12540000
125500                                                 COMP-3.          12550000
125600     05  PV-ALLOWANCES-SWITCH           PIC  X(1)    VALUE 'N'.   12560000
125700         88  OUT-OF-ALLOWANCES                       VALUE 'Y'.   12570000
125800         88  MORE-ALLOWANCES                         VALUE 'N'.   12580000
125900     05  PV-ADVERT-ALLWS-SWITCH         PIC  X(1)    VALUE 'N'.   12590000
126000         88  OUT-OF-ADVERT-ALLWS                     VALUE 'Y'.   12600000
126100         88  MORE-ADVERT-ALLWS                       VALUE 'N'.   12610000
126200                                                                  12620000
126300*---------------------------------------------------------------* 12630000
126400*   THIS IS THE LAYOUT FOR THE LIST ITEMS TEMP STORAGE QUEUE.   * 12640000
126500*   THIS MUST BE THE EXACT SAME FORMAT A BLOCK IN THE           * 12650000
126600*   APPLICATION-SPECIFIC COMMAREA.                              * 12660000
126700*---------------------------------------------------------------* 12670000
126800 01  LQW-LIST-QUEUE-WORK-AREA.                                    12680000
126900     05  LQW-BLOCK-MODIFIED             PIC X(01)   VALUE SPACE.  12690000
127000     05  LQW-ITEM-ENTRIES               OCCURS 11 TIMES           12700000
127100                                        INDEXED BY LQW-IDX.       12710000
127200         10  LQW-LIST-ITEM-NUMBER       PIC S9(09)  COMP-3.       12720000
127300         10  LQW-TEMP-SELECTED-SW       PIC X(01).                12730000
127400         10  LQW-SELECTED-SW            PIC X(01).                12740000
127500             88  LQW-SELECT                         VALUE 'S'.    12750000
127600             88  LQW-DESELECT                       VALUE ' '.    12760000
127700         10  LQW-INVC-EXTD              PIC S9(11)V99 COMP-3.     12770000
127800         10  LQW-RECV-EXTD              PIC S9(11)V99 COMP-3.     12780000
127900         10  LQW-INVC-QTY               PIC S9(9)     COMP-3.     12790000
128000         10  LQW-RECV-QTY               PIC S9(9)     COMP-3.     12800000
128100         10  LQW-PO-LNE-NBR             PIC S9(5)     COMP-3.     12810000
128200         10  LQW-STYL-DESC              PIC X(20).                12820000
128300         10  LQW-LOW-COST-IND           PIC X(01).                12830000
128400/                                                                 12840000
128500*---------------------------------------------------------------* 12850000
128600*  STANDARD LIST ITEM TS QUEUE                                  * 12860000
128700*---------------------------------------------------------------* 12870000
128800                                                                  12880000
128900     COPY APWS301.                                                12890000
129000                                                                  12900000
129100/                                                                 12910000
129200*---------------------------------------------------------------* 12920000
129300*   THIS IS THE LAYOUT FOR THE STORE NUMBER TEMP STORAGE QUEUE. * 12930000
129400*---------------------------------------------------------------* 12940000
129500                                                                  12950000
129600 01  SQW-STORE-TABLE.                                             12960000
129700     05  SQW-STR-SUB         PIC S9(4) COMP.                      12970000
129800     05  SQW-STORE-ENTRIES                                        12980000
129900         OCCURS 3000 TIMES.                                       12990000
130000         10  SQW-STR-NBR     PIC S9(4) COMP.                      13000000
130100         10  SQW-STR-DC-NBR  PIC S9(4) COMP.                      13010000
130200                                                                  13020000
130300/                                                                 13030000
130400*---------------------------------------------------------------* 13040000
130500*    MAP LAYOUT                                                 * 13050000
130600*---------------------------------------------------------------* 13060000
130700                                                                  13070000
130800     COPY APKM330.                                                13080000
130900                                                                  13090000
131000 01  MR-OCCURS-LAYOUT                   REDEFINES  AP330AO.       13100000
131100     05  FILLER                         PIC X(104).               13110040
131200                                                                  13120000
131300     05  MR-SCROLL-AREA                 OCCURS 11 TIMES.          13130000
131400         10  MR-SELECTL                 PIC S9(04) COMP.          13140000
131500         10  MR-SELECTA                 PIC X(01).                13150000
131600         10  MR-SELECTC                 PIC X(01).                13160000
131700         10  MR-SELECTH                 PIC X(01).                13170000
131800         10  MR-SELECT                  PIC X(01).                13180000
131900                                                                  13190000
132000         10  FILLER                     PIC X(03).                13200000
132100         10  MR-INVC-EXTD-C             PIC X(01).                13210000
132200         10  MR-INVC-EXTD-H             PIC X(01).                13220000
132300         10  MR-INVC-EXTD.                                        13230000
132400             15  MR-INVC-EXTD-NUM       PIC ZZZZZZ9.99.           13240000
132500                                                                  13250000
132600         10  FILLER                     PIC X(03).                13260000
132700         10  MR-RECV-EXTD-C             PIC X(01).                13270000
132800         10  MR-RECV-EXTD-H             PIC X(01).                13280000
132900         10  MR-RECV-EXTD.                                        13290000
133000             15  MR-RECV-EXTD-NUM       PIC ZZZZZZ9.99.           13300000
133100                                                                  13310000
133200         10  FILLER                     PIC X(03).                13320000
133300         10  MR-INVC-QTY-C              PIC X(01).                13330000
133400         10  MR-INVC-QTY-H              PIC X(01).                13340000
133500         10  MR-INVC-QTY.                                         13350000
133600             15  MR-INVC-QTY-NUM        PIC ZZZZZZ9.              13360000
133700                                                                  13370000
133800         10  FILLER                     PIC X(03).                13380000
133900         10  MR-RECV-QTY-C              PIC X(01).                13390000
134000         10  MR-RECV-QTY-H              PIC X(01).                13400000
134100         10  MR-RECV-QTY.                                         13410000
134200             15  MR-RECV-QTY-NUM        PIC ZZZZZZ9.              13420000
134300                                                                  13430000
134400         10  FILLER                     PIC X(03).                13440000
134500         10  MR-PO-LNE-C                PIC X(01).                13450000
134600         10  MR-PO-LNE-H                PIC X(01).                13460000
134700         10  MR-PO-LNE.                                           13470000
134800             15  MR-PO-LNE-NUM          PIC ZZZ9.                 13480000
134900                                                                  13490000
135000         10  FILLER                     PIC X(03).                13500000
135100         10  MR-STYL-DESC-C             PIC X(01).                13510000
135200         10  MR-STYL-DESC-H             PIC X(01).                13520000
135300         10  MR-STYL-DESC               PIC X(20).                13530000
135400                                                                  13540000
135500         10  FILLER                     PIC X(03).                13550000
135600         10  MR-LOW-COST-IND-C          PIC X(01).                13560000
135700         10  MR-LOW-COST-IND-H          PIC X(01).                13570000
135800         10  MR-LOW-COST-IND            PIC X(01).                13580000
135900/                                                                 13590000
136000*---------------------------------------------------------------* 13600000
136100*    ATTRIBUTE SETTINGS COPYBOOK.                               * 13610000
136200*---------------------------------------------------------------* 13620000
136300                                                                  13630000
136400     COPY DPWS015.                                                13640000
136500                                                                  13650000
136600*---------------------------------------------------------------* 13660000
136700*    FUNCTION KEYS COPYBOOK.                                    * 13670000
136800*---------------------------------------------------------------* 13680000
136900                                                                  13690000
137000     COPY DPWS016.                                                13700000
137100                                                                  13710000
137200*---------------------------------------------------------------* 13720000
137300*    NUMERIC EDIT LAYOUT.                                       * 13730000
137400*---------------------------------------------------------------* 13740000
137500                                                                  13750000
137600     COPY DPWS010I.                                               13760000
137700                                                                  13770000
137800/                                                                 13780000
137900*---------------------------------------------------------------* 13790000
138000*    PARAMETERS FOR CALLING CICS ARCHITECTURE API (DPKCS030).   * 13800000
138100*---------------------------------------------------------------* 13810000
138200                                                                  13820000
138300     COPY DPWS030.                                                13830000
138310     COPY DPWS930.                                                13831069
138400                                                                  13840000
138500/                                                                 13850000
138600*---------------------------------------------------------------* 13860000
138700*    STANDARD COMMAREA.                                         * 13870000
138800*---------------------------------------------------------------* 13880000
138900                                                                  13890000
139000     COPY DPWS020.                                                13900000
139100     05  FILLER REDEFINES DP020-VARIABLE-COMMAREA.                13910000
139200                                                                  13920000
139300*---------------------------------------------------------------* 13930000
139400* INTER-APPLICATION COMMAREA.                                   * 13940000
139500*---------------------------------------------------------------* 13950000
139600                                                                  13960000
139700         10  INTER-APPL-COMM-AREA       PIC X(200).               13970000
139800     COPY APWS300.                                                13980000
139900*---------------------------------------------------------------* 13990000
140000*  THIS IS THE APPLICATION-SPECIFIC COMMAREA.                   * 14000000
140100*---------------------------------------------------------------* 14010000
140200         10  ASC-SPECIFIC-COMMAREA.                               14020000
140300             15  ASC-LIST-KEYS.                                   14030000
140400                 20  ASC-KEY-STR-NBR-X.                           14040000
140500                     25  ASC-KEY-STR-NBR       PIC  9(4).         14050000
140600                 20  ASC-KEY-DC-NBR-X.                            14060000
140700                     25  ASC-KEY-DC-NBR        PIC  9(4).         14070000
140800                 20  ASC-KEY-STR-DC-NBR-X.                        14080000
140900                     25  ASC-KEY-STR-DC-NBR    PIC  9(4).         14090000
141000                 20  ASC-KEY-PO-NBR            PIC S9(9) COMP.    14100000
141100                 20  ASC-KEY-PO-LNE-NBR        PIC S9(9) COMP.    14110000
141200             15  ASC-STR-SUB-N                 PIC S9(4) COMP.    14120000
141300             15  ASC-STR-NBR-N                 PIC S9(4) COMP.    14130000
141400             15  ASC-DC-NBR-N                  PIC S9(4) COMP.    14140000
141500             15  ASC-NO-DETAIL-MSG             PIC  X(79).        14150000
141600                 88   ASC-NO-DETAILS-TEXT-ONLY VALUE              14160000
141700                     'NO DETAILS FOR INVC(S):'.                   14170000
141800             15  ASC-NO-DETAIL-MSG-RDF REDEFINES                  14180000
141900                 ASC-NO-DETAIL-MSG.                               14190000
142000                 20  FILLER                    PIC  X(23).        14200000
142100                 20  ASC-NO-DETAIL-INVOICES    PIC  X(56).        14210000
142200             15  ASC-DUN-NBR                   PIC  X(09).        14220000
142300             15  ASC-ENT-NAME                  PIC  X(30).        14230000
142400             15  ASC-DEPT-NBR                  PIC  X(03).        14240000
142500             15  ASC-NEW-STR-PO-IND            PIC  X(01).        14250000
142600             15  ASC-RECV-COMPLETE-IND         PIC  X(01).        14260000
142700             15  ASC-HOLD-IND                  PIC  X(01).        14270000
142800             15  ASC-PAY-RELEASE-IND           PIC  X(01).        14280000
142900             15  ASC-CURRENT-TIMESTAMP        PIC  X(26).         14290000
143000             15  ASC-CURRENT-TS-RDF       REDEFINES               14300000
143100                 ASC-CURRENT-TIMESTAMP.                           14310000
143200                 20  ASC-CURRENT-DATE     PIC X(10).              14320000
143300                 20  FILLER               PIC X(01).              14330000
143400                 20  ASC-CURRENT-TIME.                            14340000
143500                     25  ASC-HH           PIC 9(02).              14350000
143600                     25  FILLER           PIC X(01).              14360000
143700                     25  ASC-MIN          PIC 9(02).              14370000
143800                     25  FILLER           PIC X(01).              14380000
143900                     25  ASC-SEC          PIC 9(02).              14390000
144000                     25  FILLER           PIC X(01).              14400000
144100                     25  ASC-MILLI-SEC    PIC 9(06).              14410000
144200             15  ASC-WORK-TIMESTAMP       PIC X(26).              14420000
144300             15  ASC-TS-RDF               REDEFINES               14430000
144400                 ASC-WORK-TIMESTAMP.                              14440000
144500                 20  FILLER               PIC X(20).              14450000
144600                 20  ASC-MILLISECONDS     PIC 9(06).              14460000
144700             15  ASC-BLOCK-ENTRIES      OCCURS 2 TIMES.           14470000
144800                 20  ASC-BLOCK-MODIFIED-SW                        14480000
144900                                        PIC X(01).                14490000
145000                     88  ASC-BLOCK-NOT-MODIFIED    VALUE 'N'.     14500000
145100                     88  ASC-BLOCK-MODIFIED        VALUE 'Y'.     14510000
145200                                                                  14520000
145300                 20  ASC-ITEM-ARRAY.                              14530000
145400                     25  ASC-ITEM-ENTRIES OCCURS 11 TIMES.        14540000
145500                         30  ASC-LIST-ITEM-NUMBER                 14550000
145600                                        PIC S9(09) COMP-3.        14560000
145700                         30  ASC-TEMP-SELECTED-SW                 14570000
145800                                        PIC X(01).                14580000
145900                             88  ASC-VALID-SELECT  VALUE ' '      14590000
146000                                                         'S'      14600000
146100                                                         'B'      14610000
146200                                                         'E'.     14620000
146300                             88  ASC-TEMP-NO-SELECT               14630000
146400                                                   VALUE ' '.     14640000
146500                             88  ASC-TEMP-SELECT   VALUE 'S'.     14650000
146600                             88  ASC-TEMP-BEGIN    VALUE 'B'.     14660000
146700                             88  ASC-TEMP-END      VALUE 'E'.     14670000
146800                         30  ASC-SELECTED-SW                      14680000
146900                                        PIC X(01).                14690000
147000                             88  ASC-NO-SELECT     VALUE ' '.     14700000
147100                             88  ASC-SELECT        VALUE 'S'.     14710000
147200                             88  ASC-BEGIN         VALUE 'B'.     14720000
147300                             88  ASC-END           VALUE 'E'.     14730000
147400                         30  ASC-INVC-EXTD      PIC S9(11)V99     14740000
147500                                                COMP-3.           14750000
147600                         30  ASC-RECV-EXTD      PIC S9(11)V99     14760000
147700                                                COMP-3.           14770000
147800                         30  ASC-INVC-QTY       PIC S9(9)         14780000
147900                                                COMP-3.           14790000
148000                         30  ASC-RECV-QTY       PIC S9(9)         14800000
148100                                                COMP-3.           14810000
148200                         30  ASC-PO-LNE-NBR     PIC S9(5)         14820000
148300                                                COMP-3.           14830000
148400                         30  ASC-STYL-DESC      PIC X(20).        14840000
148500                         30  ASC-LOW-COST-IND   PIC X(01).        14850000
148600                                                                  14860000
148700             15  ASC-BLK-SUB            PIC S9(04) COMP SYNC.     14870000
148800             15  ASC-ITEM-SUB           PIC S9(04) COMP SYNC.     14880000
148900             15  ASC-SEL-SUB            PIC S9(04) COMP.          14890000
149000             15  ASC-SEL-ITEM           PIC S9(04) COMP.          14900000
149100             15  ASC-NUMBER-OF-ITEMS-READ                         14910000
149200                                        PIC S9(09) COMP-3.        14920000
149300             15  ASC-NUMBER-OF-SELECTED-ITEMS                     14930000
149400                                        PIC S9(09) COMP-3.        14940000
149500             15  ASC-NUMBER-OF-TS-ITEMS PIC S9(05) COMP-3.        14950000
149600             15  ASC-ITEMS-DISPLAYED    PIC S9(03) COMP-3.        14960000
149700             15  ASC-ITEM-AT-TOP-OF-PANEL                         14970000
149800                                        PIC S9(09) COMP-3.        14980000
149900             15  ASC-ITEM-AT-BOT-OF-PANEL                         14990000
150000                                        PIC S9(09) COMP-3.        15000000
150100             15  ASC-HIGHEST-BLOCK-WRITTEN                        15010000
150200                                        PIC S9(04) COMP SYNC.     15020000
150300             15  ASC-START-OF-SELECTED-RANGE                      15030000
150400                                        PIC S9(09) COMP-3.        15040000
150500             15  ASC-END-OF-SELECTED-RANGE                        15050000
150600                                        PIC S9(09) COMP-3.        15060000
150700             15  ASC-ITEMS-LEFT-INDICATOR                         15070000
150800                                        PIC X(01).                15080000
150900                 88  ASC-ITEMS-LEFT-ON-DB          VALUE 'Y'.     15090000
151000                 88  ASC-NO-ITEMS-LEFT-ON-DB       VALUE 'N'.     15100000
151100             15  ASC-TEMP-QUEUE-UPDATE-SW                         15110000
151200                                        PIC X(01).                15120000
151300                 88  ASC-UPDATE-TSQ                VALUE 'Y'.     15130000
151400                 88  ASC-NO-TSQ-UPDATE             VALUE ' '.     15140000
151500             15  ASC-LIST-QUEUE-NAME.                             15150000
151600                 20  ASC-LIST-TERM-ID   PIC X(04).                15160000
151700                 20  ASC-LIST-TASK-NUMBER                         15170000
151800                                        PIC S9(05) COMP-3.        15180000
151900                 20  ASC-LIST-SEQ       PIC 9(01).                15190000
152000             15  ASC-SEL-QUEUE-NAME-IN   PIC X(08).               15200000
152100             15  ASC-SEL-QUEUE-NAME-OUT.                          15210000
152200                 20  ASC-SEL-TERM-ID-OUT PIC X(04).               15220000
152300                 20  ASC-SEL-TASK-NUMBER-OUT                      15230000
152400                                         PIC S9(05) COMP-3.       15240000
152500                 20  ASC-SEL-SEQ-OUT     PIC 9(01).               15250000
152600             15  ASC-STORE-QUEUE-NAME.                            15260000
152700                 20  ASC-STORE-TERM-ID   PIC X(04).               15270000
152800                 20  ASC-STORE-TASK-NUMBER                        15280000
152900                                         PIC S9(05) COMP-3.       15290000
153000                 20  ASC-STORE-SEQ       PIC 9(01).               15300000
153100                                                                  15310000
153200             15  ASC-START-ITEM-REQUEST.                          15320000
153300                 20  ASC-START-ITEM-REQUEST-N  PIC 9(07).         15330000
153400             15  ASC-USE-SELECTION-QUEUE-IND   PIC X(01).         15340000
153500                 88  ASC-USE-SELECTION-QUEUE   VALUE 'Y'.         15350000
153600             15  ASC-SAVE-STR-NBR        PIC 9(04).               15360000
153700             15  ASC-SAVE-DC-NBR         PIC 9(04).               15370000
153800             15  ASC-MTCH-LVL-CDE        PIC X(01).               15380000
153900             15  ASC-RECEIVERS-FOUND-SW        PIC  X.            15390000
154000                 88  ASC-NO-RECEIVERS-FOUND           VALUE 'Y'.  15400000
154100                 88  ASC-RECEIVERS-FOUND              VALUE 'N'.  15410000
154200             15  ASC-RCVR-TOT-AMT-ZERO-SW      PIC  X.            15420000
154300                 88  ASC-RCVR-TOT-AMT-ZERO            VALUE 'Y'.  15430000
154400                 88  ASC-RCVR-TOT-AMT-NOT-ZERO        VALUE 'N'.  15440000
154500             15  ASC-RECV-TOTAL-AMT            PIC S9(11)V99      15450000
154600                                                         COMP-3.  15460000
154700/                                                                 15470000
154800*---------------------------------------------------------------* 15480000
154900*    COPYBOOK FOR DISCOUNT ALLOWANCE CALCULATION.               * 15490000
155000*---------------------------------------------------------------* 15500000
155100                                                                  15510000
155200     COPY APWS052.                                                15520000
155300                                                                  15530000
155400*---------------------------------------------------------------* 15540000
155500*    ABEND PROCESSING COPYBOOK.                                 * 15550000
155600*---------------------------------------------------------------* 15560000
155700                                                                  15570000
155800     COPY DPWS013.                                                15580000
155900                                                                  15590000
156000/                                                                 15600000
156100     EXEC SQL  INCLUDE   TINVOIC  END-EXEC.                       15610000
156200/                                                                 15620000
156300     EXEC SQL  INCLUDE   TMDINVC  END-EXEC.                       15630000
156400/                                                                 15640000
156500     EXEC SQL  INCLUDE   TPREQIT  END-EXEC.                       15650000
156600/                                                                 15660000
156700     EXEC SQL  INCLUDE   TMIITEM  END-EXEC.                       15670000
156800/                                                                 15680000
156900     EXEC SQL  INCLUDE   TNINREC  END-EXEC.                       15690000
157000/                                                                 15700000
157100     EXEC SQL  INCLUDE   TPURCHS  END-EXEC.                       15710000
157200/                                                                 15720000
157300     EXEC SQL  INCLUDE   TPURITM  END-EXEC.                       15730000
157400/                                                                 15740000
157500     EXEC SQL  INCLUDE   TPOAGMT  END-EXEC.                       15750000
157600/                                                                 15760000
157700     EXEC SQL  INCLUDE   TPAYTRM  END-EXEC.                       15770000
157800/                                                                 15780000
157900     EXEC SQL  INCLUDE   TINVCTM  END-EXEC.                       15790000
158000/                                                                 15800000
158100     EXEC SQL  INCLUDE   TALCHRG  END-EXEC.                       15810000
158200/                                                                 15820000
158300     EXEC SQL  INCLUDE   TEXTENT  END-EXEC.                       15830000
158400/                                                                 15840000
158500     EXEC SQL  INCLUDE   TENTNME  END-EXEC.                       15850000
158600/                                                                 15860000
158700     EXEC SQL  INCLUDE   TRECEIV  END-EXEC.                       15870000
158800/                                                                 15880000
158900     EXEC SQL  INCLUDE   TRECITM  END-EXEC.                       15890000
159000/                                                                 15900000
159100     EXEC SQL  INCLUDE   TRECDIS  END-EXEC.                       15910000
159200/                                                                 15920000
159300     EXEC SQL  INCLUDE   TAPCNTL  END-EXEC.                       15930000
159400/                                                                 15940000
159500     EXEC SQL  INCLUDE   TPOSTRR  END-EXEC.                       15950000
159600/                                                                 15960000
159700     EXEC SQL  INCLUDE   TPRCCLM  END-EXEC.                       15970000
159800/                                                                 15980000
159810     EXEC SQL  INCLUDE   TMDSEAR  END-EXEC.                       15981061
159820/                                                                 15982061
159830     EXEC SQL  INCLUDE   VNT00001 END-EXEC.                       15983061
159840/                                                                 15984061
159900*    DB2 AREA FOR SYSDUMMY1                                       15990000
160000                                                                  16000000
160100     EXEC SQL                                                     16010000
160200          INCLUDE SYSDUMMY                                        16020000
160300     END-EXEC.                                                    16030000
160400                                                                  16040000
160410*--------------------------------------------------------------*  16041062
160420* COPYBOOK FOR SEPHORA LOGIC                                   *  16042062
160430*--------------------------------------------------------------*  16043062
160440     COPY APWS021.                                                16044062
160500                                                                  16050000
160600*---------------------------------------------------------------* 16060000
160700*    DB2 AREA FOR COMMUNICATIONS                                * 16070000
160800*---------------------------------------------------------------* 16080000
160900     EXEC SQL                                                     16090000
161000          INCLUDE SQLCA                                           16100000
161100     END-EXEC.                                                    16110000
161200                                                                  16120000
161300/                                                                 16130000
161400*---------------------------------------------------------------* 16140000
161500*  COLLECT ALL STORES THAT HAVE BEEN INVOICED AND HAVE DETAILS  * 16150000
161600*---------------------------------------------------------------* 16160000
161700     EXEC SQL                                                     16170000
161800         DECLARE STR_NBR_CSR CURSOR FOR                           16180000
161900             SELECT DISTINCT B.STR_NBR                            16190000
162000                   ,B.DC_NBR                                      16200000
162100                 FROM   TINVOIC B                                 16210000
162200                 WHERE B.PO_NBR           = :DK-PO-NBR            16220000
162300*                AND   B.STATUS_CDE       IN ('EN','RC','OB','IB')16230051
162310                 AND   B.STATUS_CDE IN ('EN','RC','OB','IB','PJ') 16231051
162400                 AND   B.INVC_TYP_CDE     IN ('MI', 'RI')         16240000
162500                 AND   B.DTL_ENTR_IND     =  'Y'                  16250000
162600             ORDER BY B.STR_NBR                                   16260000
162700     END-EXEC.                                                    16270000
162800/                                                                 16280000
162900*---------------------------------------------------------------* 16290000
163000*  COLLECT ALL MATCH LEVEL CODES FOR INVOICES THAT HAVE DETAILS   16300000
163100*  AND HAVE NOT BEEN RECONCILED FOR THE PO BEING PROCESSED.       16310000
163200*---------------------------------------------------------------* 16320000
163300     EXEC SQL                                                     16330000
163400         DECLARE MTCH_LVL_CDE_CSR CURSOR FOR                      16340000
163500             SELECT DISTINCT B.MTCH_LVL_CDE                       16350000
163600                 FROM   TINVOIC B                                 16360000
163700                 WHERE B.PO_NBR           = :DK-PO-NBR            16370000
163800*                AND   B.STATUS_CDE       IN ('EN','RC','OB','IB')16380051
163810                 AND   B.STATUS_CDE IN ('EN','RC','OB','IB','PJ') 16381051
163900                 AND   B.INVC_TYP_CDE     IN ('MI', 'RI')         16390000
164000                 AND   B.DTL_ENTR_IND     =  'Y'                  16400000
164100             ORDER BY B.MTCH_LVL_CDE                              16410000
164200     END-EXEC.                                                    16420000
164300/                                                                 16430000
164400*---------------------------------------------------------------* 16440000
164500*  COLLECT ALL DC NUMBERS FOR INVOICES THAT HAVE DETAILS          16450000
164600*  AND HAVE NOT BEEN RECONCILED FOR THE PO BEING PROCESSED.       16460000
164700*---------------------------------------------------------------* 16470000
164800     EXEC SQL                                                     16480000
164900         DECLARE DC_NBR_CSR CURSOR FOR                            16490000
165000             SELECT DISTINCT B.DC_NBR                             16500000
165100                 FROM   TINVOIC B                                 16510000
165200                 WHERE B.PO_NBR           = :DK-PO-NBR            16520000
165300*                AND   B.STATUS_CDE       IN ('EN','RC','OB','IB')16530051
165310                 AND   B.STATUS_CDE IN ('EN','RC','OB','IB','PJ') 16531051
165400                 AND   B.INVC_TYP_CDE     IN ('MI', 'RI')         16540000
165500                 AND   B.DTL_ENTR_IND     =  'Y'                  16550000
165600             ORDER BY B.DC_NBR                                    16560000
165700     END-EXEC.                                                    16570000
165800/                                                                 16580000
165900*---------------------------------------------------------------* 16590000
166000*    RETRIEVE THE HEADER LEVEL INVOICES FOR THE                   16600000
166100*    PURCHASE ORDER.                                              16610000
166200*---------------------------------------------------------------* 16620000
166300                                                                  16630000
166400     EXEC SQL                                                     16640000
166500          DECLARE TINVOIC_CSR CURSOR FOR                          16650000
166600             SELECT    B.PAYT_REQ_SEQ_NBR                         16660000
166700                      ,B.INVC_ID                                  16670000
166800                      ,B.STR_NBR                                  16680000
166900                      ,B.INVC_TYP_CDE                             16690000
167000                      ,B.STATUS_CDE                               16700000
167100                      ,B.HOLD_IND                                 16710000
167200                      ,B.GRO_COST_AMT                             16720000
167300                      ,B.INVC_DTE                                 16730000
167400                      ,C.TERM_SEL_CDE                             16740000
167500                      ,B.DC_NBR                                   16750000
167600                      ,B.MTCH_LVL_CDE                             16760000
167700             FROM      TINVOIC B                                  16770000
167800                      ,TMDINVC C                                  16780000
167900             WHERE   B.PO_NBR         = :DK-PO-NBR                16790000
168000             AND     B.PO_NBR         = C.PO_NBR                  16800000
168100             AND     B.INVC_ID        = C.INVC_ID                 16810000
168200*            AND     B.STATUS_CDE    IN ('EN','RC','OB','IB')     16820051
168210             AND     B.STATUS_CDE IN ('EN','RC','OB','IB','PJ')   16821051
168300             AND     B.INVC_TYP_CDE  IN ('MI','RI')               16830000
168400             AND     B.STR_NBR  BETWEEN :DK-STR-NBR-LOW           16840000
168500                                    AND :DK-STR-NBR-HIGH          16850000
168600             AND     B.DC_NBR   BETWEEN :DK-DC-NBR-LOW            16860000
168700                                    AND :DK-DC-NBR-HIGH           16870000
168800             AND     B.MTCH_LVL_CDE   = :DK-MTCH-LVL-CDE          16880000
168900     END-EXEC.                                                    16890000
169000                                                                  16900000
169100/                                                                 16910000
169200*---------------------------------------------------------------* 16920000
169300*    OPEN A CURSOR TO RETRIEVE THE RECEIVER ITEMS FOR             16930000
169400*    THE PURCHASE ORDER THAT HAVE BEEN VERIFIED AND NOT           16940000
169500*    PREVIOUSLY MATCHED.                                          16950000
169600*---------------------------------------------------------------* 16960000
169700                                                                  16970000
169800     EXEC SQL                                                     16980000
169900          DECLARE TRECDIS_CSR CURSOR FOR                          16990000
170000             SELECT A.ORD_NBR                                     17000000
170100                   ,A.REC_SEQ_NBR                                 17010000
170200                   ,C.ORD_LNE_NBR                                 17020000
170300                   ,C.OPER_UNT_ID                                 17030000
170400                   ,C.FCLTY_ID                                    17040000
170500                   ,C.STR_NBR                                     17050000
170600                   ,C.STR_FCLTY_ID                                17060000
170700                   ,C.AP_VERIFY_ITM_QTY                           17070000
170800                   ,D.PRD_1ST_COST_AMT                            17080000
170900             FROM   TRECEIV A                                     17090000
171000                   ,TRECITM B                                     17100000
171100                   ,TRECDIS C                                     17110000
171200                   ,TPURITM D                                     17120000
171300             WHERE  A.ORD_NBR         = :DK-PO-NBR                17130000
171400             AND    A.STATUS_CDE      = 'VE'                      17140000
171500             AND    A.AP_PRC_CDE      = ' '                       17150000
171600             AND    A.FS_POST_TMST NOT IN                         17160000
171700                                 ('9999-09-09-09.09.09.999999')   17170000
171800                                                                  17180000
171900             AND    A.ORD_NBR         = B.ORD_NBR                 17190000
172000             AND    A.ORD_NBR         = C.ORD_NBR                 17200000
172100             AND    A.ORD_NBR         = D.PO_NBR                  17210000
172200                                                                  17220000
172300             AND    A.VER_STATUS_CDE  = 'A'                       17230000
172400             AND    B.VER_STATUS_CDE  = 'A'                       17240000
172500             AND    C.VER_STATUS_CDE  = 'A'                       17250000
172600             AND    C.AP_PRC_CDE      = ' '                       17260000
172700                                                                  17270000
172800             AND    A.REC_SEQ_NBR     = B.REC_SEQ_NBR             17280000
172900             AND    A.REC_SEQ_NBR     = C.REC_SEQ_NBR             17290000
173000                                                                  17300000
173100             AND    C.STR_NBR     BETWEEN :DK-STR-NBR-LOW         17310000
173200                                      AND :DK-STR-NBR-HIGH        17320000
173300             AND    A.OPER_UNT_ID BETWEEN :DK-DC-NBR-LOW          17330000
173400                                      AND :DK-DC-NBR-HIGH         17340000
173500             AND    B.OPER_UNT_ID     = C.OPER_UNT_ID             17350000
173600             AND    B.FCLTY_ID        = C.FCLTY_ID                17360000
173700             AND    B.ORD_LNE_NBR     = C.ORD_LNE_NBR             17370000
173800             AND    B.ORD_LNE_NBR     = D.APP_PO_LNE_NBR          17380000
173900             AND    B.PO_VER_NBR      = D.VER_NBR                 17390000
174000     END-EXEC.                                                    17400000
174100                                                                  17410000
174200/                                                                 17420000
174300*---------------------------------------------------------------* 17430000
174400*    OPEN A CURSOR TO RETRIEVE THE NON-INVOICED                   17440000
174500*    RECEIPTS FOR THE PURCHASE ORDER, THAT HAVE NOT               17450000
174600*    BEEN PREVIOUSLY MATCHED.                                     17460000
174700*---------------------------------------------------------------* 17470000
174800                                                                  17480000
174900     EXEC SQL                                                     17490000
175000          DECLARE TNINREC_CSR CURSOR FOR                          17500000
175100             SELECT PO_LNE_NBR                                    17510000
175200                   ,NON_INVC_SEQ_NBR                              17520000
175300                   ,NON_INVC_UNT_QTY                              17530000
175400                   ,UNT_COST_AMT                                  17540000
175500                                                                  17550000
175600             FROM   TNINREC                                       17560000
175700             WHERE  PO_NBR           =  :DK-PO-NBR                17570000
175800             AND    STR_NBR     BETWEEN :DK-STR-NBR-LOW           17580000
175900                                    AND :DK-STR-NBR-HIGH          17590000
176000             AND    DC_NBR      BETWEEN :DK-DC-NBR-LOW            17600000
176100                                    AND :DK-DC-NBR-HIGH           17610000
176200             AND    STATUS_CDE       =  ' '                       17620000
176300     END-EXEC.                                                    17630000
176400                                                                  17640000
176500/                                                                 17650000
176600*---------------------------------------------------------------* 17660000
176700*    OPEN A CURSOR TO RETRIEVE ALL THE INVOICE ITEMS              17670000
176800*    FOR THE INVOICES FOR THE PO/STORE.  THE 1ST SELECT           17680000
176900*    RETRIEVES ALL INVOICE ITEMS FOR THE PO/STR THAT ARE          17690000
177000*    LINKED TO A PO LINE.  THE 2ND SELECT RETRIEVES ALL           17700000
177100*    INVOICE ITEMS FOR THE PO/STR THAT ARE NOT LINKED TO A        17710000
177200*    PO LINE.                                                     17720000
177300*---------------------------------------------------------------* 17730000
177400                                                                  17740000
177500     EXEC SQL                                                     17750000
177600          DECLARE TPREQIT_CSR CURSOR FOR                          17760000
177700             SELECT '1'                                           17770000
177800                   ,E.APP_PO_LNE_NBR                              17780000
177900                   ,E.PO_LNE_NBR                                  17790000
178000                   ,E.VEND_STYL_NAME                              17800000
178100                   ,D.UNT_COST_SEL_CDE                            17810000
178200                   ,C.PAY_REQ_LNE_QTY                             17820000
178300                   ,C.UNT_COST_AMT                                17830000
178400                   ,B.PAYT_REQ_SEQ_NBR                            17840000
178500             FROM   TINVOIC B                                     17850000
178600                   ,TPREQIT C                                     17860000
178700                   ,TMIITEM D                                     17870000
178800                   ,TPURITM E                                     17880000
178900             WHERE  B.PAYT_REQ_SEQ_NBR   = C.PAYT_REQ_SEQ_NBR     17890000
179000             AND    B.PAYT_REQ_SEQ_NBR   = D.PAYT_REQ_SEQ_NBR     17900000
179100             AND    C.PAYT_REQ_LNE_NBR   = D.PAYT_REQ_LNE_NBR     17910000
179200             AND    B.PO_NBR             = :DK-PO-NBR             17920000
179300*            AND    B.STATUS_CDE        IN ('EN','RC','OB','IB')  17930051
179310             AND    B.STATUS_CDE   IN ('EN','RC','OB','IB','PJ')  17931051
179400             AND    B.INVC_TYP_CDE      IN ('MI','RI')            17940000
179500             AND    B.STR_NBR      BETWEEN :DK-STR-NBR-LOW        17950000
179600                                       AND :DK-STR-NBR-HIGH       17960000
179700             AND    B.DC_NBR       BETWEEN :DK-DC-NBR-LOW         17970000
179800                                       AND :DK-DC-NBR-HIGH        17980000
179900             AND    B.MTCH_LVL_CDE       = :DK-MTCH-LVL-CDE       17990000
180000             AND    B.PO_NBR             = E.PO_NBR               18000000
180100             AND    E.VER_STATUS_CDE     = 'A'                    18010000
180200             AND    D.PO_LNE_NBR         = E.PO_LNE_NBR           18020000
180300             AND    D.PO_LNE_NBR         IS NOT NULL              18030000
180400                                                                  18040000
180500             UNION ALL                                            18050000
180600                                                                  18060000
180700             SELECT '2'                                           18070000
180800                   ,0                                             18080000
180900                   ,0                                             18090000
181000                   ,'UNMATCHED           '                        18100000
181100                   ,D.UNT_COST_SEL_CDE                            18110000
181200                   ,C.PAY_REQ_LNE_QTY                             18120000
181300                   ,C.UNT_COST_AMT                                18130000
181400                   ,B.PAYT_REQ_SEQ_NBR                            18140000
181500             FROM   TINVOIC B                                     18150000
181600                   ,TPREQIT C                                     18160000
181700                   ,TMIITEM D                                     18170000
181800             WHERE  B.PAYT_REQ_SEQ_NBR   = C.PAYT_REQ_SEQ_NBR     18180000
181900             AND    B.PAYT_REQ_SEQ_NBR   = D.PAYT_REQ_SEQ_NBR     18190000
182000             AND    C.PAYT_REQ_LNE_NBR   = D.PAYT_REQ_LNE_NBR     18200000
182100             AND    B.PO_NBR             = :DK-PO-NBR             18210000
182200*            AND    B.STATUS_CDE        IN ('EN','RC','OB','IB')  18220051
182210             AND    B.STATUS_CDE   IN ('EN','RC','OB','IB','PJ')  18221051
182300             AND    B.INVC_TYP_CDE      IN ('MI','RI')            18230000
182400             AND    B.STR_NBR      BETWEEN :DK-STR-NBR-LOW        18240000
182500                                       AND :DK-STR-NBR-HIGH       18250000
182600             AND    B.DC_NBR       BETWEEN :DK-DC-NBR-LOW         18260000
182700                                       AND :DK-DC-NBR-HIGH        18270000
182800             AND    B.MTCH_LVL_CDE       = :DK-MTCH-LVL-CDE       18280000
182900             AND    D.PO_LNE_NBR        IS NULL                   18290000
183000                                                                  18300000
183100            ORDER BY 1, 7, 5, 6                                   18310000
183200     END-EXEC.                                                    18320000
183300/                                                                 18330000
183400                                                                  18340000
183500     EXEC SQL                                                     18350000
183600          DECLARE PREQIT_NULL_PO_CSR CURSOR FOR                   18360000
183700             SELECT C.PAYT_REQ_SEQ_NBR                            18370000
183800                   ,C.PAYT_REQ_LNE_NBR                            18380000
183900                   ,PAY_REQ_LNE_QTY                               18390000
184000                   ,UNT_COST_AMT                                  18400000
184100             FROM   TINVOIC B                                     18410000
184200                   ,TPREQIT C                                     18420000
184300                   ,TMIITEM D                                     18430000
184400             WHERE  B.PAYT_REQ_SEQ_NBR   = C.PAYT_REQ_SEQ_NBR     18440000
184500             AND    B.PAYT_REQ_SEQ_NBR   = D.PAYT_REQ_SEQ_NBR     18450000
184600             AND    C.PAYT_REQ_SEQ_NBR   = D.PAYT_REQ_SEQ_NBR     18460000
184700             AND    C.PAYT_REQ_LNE_NBR   = D.PAYT_REQ_LNE_NBR     18470000
184800             AND    B.PO_NBR             = :DK-PO-NBR             18480000
184900*            AND    B.STATUS_CDE        IN ('EN','RC','OB','IB')  18490051
184910             AND    B.STATUS_CDE   IN ('EN','RC','OB','IB','PJ')  18491051
185000             AND    B.INVC_TYP_CDE      IN ('MI','RI')            18500000
185100             AND    B.STR_NBR      BETWEEN :DK-STR-NBR-LOW        18510000
185200                                       AND :DK-STR-NBR-HIGH       18520000
185300             AND    B.DC_NBR       BETWEEN :DK-DC-NBR-LOW         18530000
185400                                       AND :DK-DC-NBR-HIGH        18540000
185500             AND    B.MTCH_LVL_CDE       = :DK-MTCH-LVL-CDE       18550000
185600             AND    D.PO_LNE_NBR        IS NULL                   18560000
185700             ORDER BY 3                                           18570000
185800     END-EXEC.                                                    18580000
185900***     ATTENTION    ATTENTION   ATTENTION!!!!!!!                 18590000
186000***     ATTENTION    ATTENTION   ATTENTION!!!!!!!                 18600000
186100***   THE ORDER BY CLAUSE ON PREQIT_NULL_PO_CSR IS NOT REALLY     18610000
186200***   NEEDED; BUT IS **REQUIRED** TO FORCE DB2 TO CREATE THE      18620000
186300***   RESULT TABLE WHEN OPENNING THE CURSOR INSTEAD OF            18630000
186400***   DYNAMICALLY DETERMINING THE NEXT ROW AT FETCH TIME.         18640000
186500***   IF THE ORDER BY IS REMOVED THE PROGRAM COULD GO INTO A      18650000
186600***   LOOP BY INSERTING A REMAINDER INVOICE ITEM, THEN FETCHING   18660000
186700***   THE ROW IT JUST INSERTED AND THINKING IT SHOULD BE USED TO  18670000
186800***   INSERT ANOTHER ROW.                                         18680000
186900                                                                  18690000
187000                                                                  18700000
187100                                                                  18710000
187200     EXEC SQL                                                     18720000
187300          DECLARE INVC_ITEM_CSR CURSOR FOR                        18730000
187400             SELECT SUM(PAY_REQ_LNE_QTY)                          18740000
187500                   ,UNT_COST_AMT                                  18750000
187600             FROM   TINVOIC B                                     18760000
187700                   ,TPREQIT C                                     18770000
187800                   ,TMIITEM D                                     18780000
187900             WHERE  B.PAYT_REQ_SEQ_NBR   = C.PAYT_REQ_SEQ_NBR     18790000
188000             AND    B.PAYT_REQ_SEQ_NBR   = D.PAYT_REQ_SEQ_NBR     18800000
188100             AND    C.PAYT_REQ_SEQ_NBR   = D.PAYT_REQ_SEQ_NBR     18810000
188200             AND    C.PAYT_REQ_LNE_NBR   = D.PAYT_REQ_LNE_NBR     18820000
188300             AND    B.PO_NBR             = :DK-PO-NBR             18830000
188400*            AND    B.STATUS_CDE        IN ('EN','RC','OB','IB')  18840051
188410             AND    B.STATUS_CDE   IN ('EN','RC','OB','IB','PJ')  18841051
188500             AND    B.INVC_TYP_CDE      IN ('MI','RI')            18850000
188600             AND    B.STR_NBR      BETWEEN :DK-STR-NBR-LOW        18860000
188700                                       AND :DK-STR-NBR-HIGH       18870000
188800             AND    B.DC_NBR       BETWEEN :DK-DC-NBR-LOW         18880000
188900                                       AND :DK-DC-NBR-HIGH        18890000
189000             AND    B.MTCH_LVL_CDE       = :DK-MTCH-LVL-CDE       18900000
189100             AND    D.PO_LNE_NBR         = :PV-PO-LNE-NBR         18910000
189200             GROUP BY UNT_COST_AMT                                18920000
189300             ORDER BY UNT_COST_AMT                                18930000
189400     END-EXEC.                                                    18940000
189500/                                                                 18950000
189600*----------------------------------------------------------------*18960000
189700* DISCOUNT_CSR RETRIEVES ALLOWANCES ASSOCIATED WITH AN INVOICE.  *18970000
189800*----------------------------------------------------------------*18980000
189900     EXEC SQL                                                     18990000
190000       DECLARE DISCOUNT_CSR CURSOR FOR                            19000000
190100         SELECT                                                   19010000
190200              ALW_CHRG_TYP_CDE                                    19020000
190300             ,ALW_CHRG_CDE                                        19030000
190400             ,ALW_CHRG_PCT                                        19040000
190500             ,ALW_CHRG_AMT                                        19050000
190600         FROM                                                     19060000
190700             TALCHRG                                              19070000
190800         WHERE PO_NBR           = :DK-PO-NBR                      19080000
190900           AND INVC_ID          = :INVOIC-INVC-ID                 19090000
191000           AND ALW_CHRG_TYP_CDE = 'A'                             19100000
191100*          AND ALW_CHRG_CDE NOT IN ('ADV')                        19110000
191200     END-EXEC.                                                    19120000
191300/                                                                 19130000
191400*----------------------------------------------------------------*19140000
191500* ADVERT_CSR RETRIEVES ADVERTISING ALLOWANCES ASSOCIATED WITH AN *19150000
191600* INVOICE.                                                       *19160000
191700*----------------------------------------------------------------*19170000
191800*    EXEC SQL                                                     19180000
191900*      DECLARE ADVERT_CSR CURSOR FOR                              19190000
192000*        SELECT                                                   19200000
192100*             ALW_CHRG_TYP_CDE                                    19210000
192200*            ,ALW_CHRG_CDE                                        19220000
192300*            ,ALW_CHRG_PCT                                        19230000
192400*            ,ALW_CHRG_AMT                                        19240000
192500*        FROM                                                     19250000
192600*            TALCHRG                                              19260000
192700*        WHERE PO_NBR           = :DK-PO-NBR                      19270000
192800*          AND INVC_ID          = :INVOIC-INVC-ID                 19280000
192900*          AND ALW_CHRG_TYP_CDE = 'A'                             19290000
193000*          AND ALW_CHRG_CDE     = 'ADV'                           19300000
193100*    END-EXEC.                                                    19310000
193200/                                                                 19320000
193300*----------------------------------------------------------------*19330000
193400* TMIITEM_CSR RETREIVES ALL UNT_COST_SEL_CDE ASSOCIATED WITH AN  *19340000
193500* INVOICE.  PURITM-PRD-1ST-COST-AMT AND PREQIT-UNT-COST-AMT ARE  *19350000
193600* USED TO FIND THE LOWEST UNT-COST-AMT.  THE UNT-COST-SEL-CDE IS *19360000
193700* THEN UPDATED SO THAT THE LOWEST COST IS USED DURING PAY RELEASE*19370000
193800*----------------------------------------------------------------*19380000
193900     EXEC SQL                                                     19390000
194000       DECLARE TMIITEM_CSR CURSOR FOR                             19400000
194100         SELECT D.PO_LNE_NBR                                      19410000
194200              , D.PRD_1ST_COST_AMT                                19420000
194300              , A.PO_NBR                                          19430000
194400              , A.PAYT_REQ_SEQ_NBR                                19440000
194500              , C.PO_NBR                                          19450000
194600              , C.PAYT_REQ_SEQ_NBR                                19460000
194700              , C.PAYT_REQ_LNE_NBR                                19470000
194800              , C.UNT_COST_SEL_CDE                                19480000
194900              , C.PO_LNE_NBR                                      19490000
195000              , B.UNT_COST_AMT                                    19500000
195100           FROM TINVOIC A                                         19510000
195200              , TPREQIT B                                         19520000
195300              , TMIITEM C                                         19530000
195400              , TPURITM D                                         19540000
195500          WHERE A.PAYT_REQ_SEQ_NBR   = B.PAYT_REQ_SEQ_NBR         19550000
195600            AND A.PAYT_REQ_SEQ_NBR   = C.PAYT_REQ_SEQ_NBR         19560000
195700            AND B.PAYT_REQ_LNE_NBR   = C.PAYT_REQ_LNE_NBR         19570000
195800            AND A.PO_NBR             = :DK-PO-NBR                 19580000
195900            AND A.PO_NBR             = D.PO_NBR                   19590000
196000*           AND A.STATUS_CDE        IN ('EN','RC','OB','IB')      19600051
196010            AND A.STATUS_CDE   IN ('EN','RC','OB','IB','PJ')      19601051
196100            AND A.INVC_TYP_CDE      IN ('MI','RI')                19610000
196200            AND A.STR_NBR      BETWEEN :DK-STR-NBR-LOW            19620000
196300                                   AND :DK-STR-NBR-HIGH           19630000
196400            AND A.DC_NBR       BETWEEN :DK-DC-NBR-LOW             19640000
196500                                   AND :DK-DC-NBR-HIGH            19650000
196600            AND A.MTCH_LVL_CDE       = :DK-MTCH-LVL-CDE           19660000
196700            AND D.VER_STATUS_CDE     = 'A'                        19670000
196800            AND C.PO_LNE_NBR         = D.PO_LNE_NBR               19680000
196900            AND C.PO_LNE_NBR        IS NOT NULL                   19690000
197000                                                                  19700000
197100        ORDER BY 1, 7, 5, 6                                       19710000
197200     END-EXEC.                                                    19720000
197300/                                                                 19730000
197400 LINKAGE SECTION.                                                 19740000
197500                                                                  19750000
197600 01  DFHCOMMAREA.                                                 19760000
197700     05  FILLER                         OCCURS  1 TO 4072 TIMES   19770000
197800                                        DEPENDING ON EIBCALEN.    19780000
197900         10  FILLER                     PIC X.                    19790000
198000                                                                  19800000
198100/                                                                 19810000
198200 PROCEDURE DIVISION.                                              19820000
198300*---------------------------------------------------------------* 19830000
198400*   THIS MODULE IS THE HIGHEST PROCESSING LEVEL IN THE PROGRAM. * 19840000
198500*   FIRST, CALL THE CICS ARCHITECTURE API, PERFORM THE PROGRAM  * 19850000
198600*   PROCESSING AND THEN CALL THE CICS ARCHITECTURE API TO EXIT. * 19860000
198700*---------------------------------------------------------------* 19870000
198800 0000-MAIN-MODULE.                                                19880000
198900                                                                  19890000
199000     INITIALIZE DP030-CICS-API-FIELDS.                            19900000
199100                                                                  19910000
199200     MOVE +1                       TO DP030-NUMBER-OF-MAPS.       19920000
199300     MOVE PC-CURRENT-MAPSET-NAME   TO DP030-MAPSET-NAME.          19930000
199400     MOVE PC-CURRENT-MAP-NAME      TO DP030-MAP-NAME (1).         19940000
199500                                                                  19950000
199600     SET DP030-RECEIVE-APPL-MAP    TO TRUE.                       19960000
199700                                                                  19970000
199800     MOVE LENGTH OF AP330AI        TO DP030-MAP-LENGTH (1).       19980000
199900     MOVE 'PROGRAM ENTRY CALL'     TO DP013-MESSAGE-TEXT (1).     19990000
200000                                                                  20000000
200100*    -- THE FOLLOWING IS TO HANDLE LOWER LEVEL PROGRAM'S          20010000
200200*    -- NEXT-APPL-ERROR WHEN THEY'RE NOT IN NEXT-ACT-INIT STATE   20020000
200300     SET DP030-OVERRIDE-APPL-ERROR TO TRUE.                       20030000
200400                                                                  20040000
200500     PERFORM 0001-CALL-CICS-ARCH-API.                             20050000
200600     PERFORM 1000-CONTROL-PROCESSING                              20060000
200700                                                                  20070000
200800     MOVE 'PROGRAM EXIT CALL'      TO DP013-MESSAGE-TEXT (1).     20080000
200900     PERFORM 0001-CALL-CICS-ARCH-API.                             20090000
201000                                                                  20100000
201100*---------------------------------------------------------------* 20110000
201200*   THIS PARAGRAPH CALLS THE CICS ARCHITECTURE API SUBROUTINE   * 20120000
201300*   AND WILL ABEND IF ANY ERRORS OCCURRED IN THAT CALL.         * 20130000
201400*---------------------------------------------------------------* 20140000
201500 0001-CALL-CICS-ARCH-API.                                         20150000
201610     CALL DP930-CICS-ARCH-API  USING DFHEIBLK                     20161069
201700                                     DFHCOMMAREA                  20170069
201800                                     DP030-CICS-API-FIELDS        20180069
201900                                     DP020-STANDARD-COMMAREA      20190069
202000                                     AP330AI.                     20200069
202100                                                                  20210000
202200     IF  DP030-RC-CALL-SUCCESSFUL OR                              20220000
202300*        -- FOR LOW LEVEL ERRORS --                               20230000
202400         DP030-RC-APPL-ERROR                                      20240000
202500         CONTINUE                                                 20250000
202600     ELSE                                                         20260000
202700         SET DP013-NO-ROLLBACK                                    20270000
202800             DP013-XCTL-DISPLAY-RESTART                           20280000
202900             DP013-CICS-ABEND      TO TRUE                        20290000
203000         MOVE '0001-CALL-CICS-ARCH-API'                           20300000
203100                                   TO DP013-PARAGRAPH             20310000
203310         MOVE 'CALL TO CICS ARCH API NOT SUCCESSFUL, RETURN-CODE O20331069
203320-             'N NEXT LINE'        TO DP013-MESSAGE-TEXT (2)      20332069
203400         MOVE DP030-RETURN-CODE    TO DP013-MESSAGE-TEXT (3)      20340000
203500         PERFORM DP013-0000-PROCESS-ABEND                         20350000
203600     END-IF.                                                      20360000
203700                                                                  20370000
203800*----------------------------------------------------------------*20380000
203900* PROCESS THE APPROPRIATE PARAGRAPHS BASED ON WHAT THE NEXT      *20390000
204000* COURSE OF ACTION IS FOR THIS TRANSACTION.                      *20400000
204100*                                                                *20410000
204200* NOTE:  PV-TOP-ITEM IS THE ITEM THAT IS REQUESTED TO BE AT THE  *20420000
204300*  TOP OF THE PANEL.  MOVING ASC-ITEM-AT-TOP-OF-PANEL TO THIS    *20430000
204400*  MEANS THAT POSITION WITHIN THE LIST WILL NOT CHANGE -- THIS   *20440000
204500*  IS THE DEFAULT WHICH WILL BE OVERRIDDEN BY SCROLLING ACTIONS. *20450000
204600*----------------------------------------------------------------*20460000
204700                                                                  20470000
204800 1000-CONTROL-PROCESSING.                                         20480000
204900                                                                  20490000
205000     EVALUATE TRUE                                                20500000
205100         WHEN DP020-NEXT-ACT-RETURN                               20510000
205200         WHEN DP030-RC-APPL-ERROR                                 20520000
205300*            -- HANDLES A DP020-NEXT-ACT-APPL-ERROR IN LOWER LEVEL20530000
205400*            -- PROGRAMS WHEN THEY ARE >>NOT<< IN NEXT-ACT-INITIAL20540000
205500*            -- LOGIC...                                          20550000
205600             PERFORM 2050-DELETE-LIST-QUEUE                       20560000
205700             PERFORM 9500-DELETE-STORE-QUEUE                      20570000
205800             PERFORM 4000-BUILD-INITIAL-PANEL                     20580000
205900                                                                  20590000
206000         WHEN DP020-NEXT-ACT-INITIAL                              20600000
206100             INITIALIZE ASC-SPECIFIC-COMMAREA                     20610000
206200             MOVE EIBTRMID         TO ASC-LIST-TERM-ID            20620000
206300                                      ASC-STORE-TERM-ID           20630000
206400                                      ASC-SEL-TERM-ID-OUT         20640000
206500             MOVE DP020-SRC-TASK-NUMBER                           20650000
206600                                   TO ASC-LIST-TASK-NUMBER        20660000
206700                                      ASC-STORE-TASK-NUMBER       20670000
206800                                      ASC-SEL-TASK-NUMBER-OUT     20680000
206900             MOVE PC-LIST-QUEUE-SEQ                               20690000
207000                                   TO ASC-LIST-SEQ                20700000
207100             MOVE PC-STORE-QUEUE-SEQ                              20710000
207200                                   TO ASC-STORE-SEQ               20720000
207300             MOVE PC-SEL-QUEUE-SEQ TO ASC-SEL-SEQ-OUT             20730000
207400             MOVE 'N' TO ASC-PAY-RELEASE-IND                      20740000
207500             PERFORM 1100-PROCESS-INTER-APPL-COMM                 20750000
207600             IF  PS-NO-ERROR                                      20760000
207700                 PERFORM 4000-BUILD-INITIAL-PANEL                 20770000
207800             END-IF                                               20780000
207900                                                                  20790000
208000         WHEN DP020-NEXT-ACT-READ-MAP                             20800000
208100             MOVE ASC-ITEM-AT-TOP-OF-PANEL                        20810000
208200                                   TO PV-TOP-ITEM                 20820000
208300             PERFORM 2000-PROCESS-PANEL                           20830000
208400                                                                  20840000
208500                                                                  20850000
208600         WHEN OTHER                                               20860000
208700             SET DP013-LOGIC-ABEND TO TRUE                        20870000
208800             SET DP013-NO-ROLLBACK TO TRUE                        20880000
208900             MOVE '1000-CONTROL-PROCESSING'                       20890000
209000                                   TO DP013-PARAGRAPH             20900000
209100             MOVE 'INVALID NEXT APPLICATION ACTIVITY RECEIVED'    20910000
209200                                   TO DP013-MESSAGE-TEXT(1)       20920000
209300             PERFORM DP013-0000-PROCESS-ABEND                     20930000
209400     END-EVALUATE.                                                20940000
209500                                                                  20950000
209600/                                                                 20960000
209700*----------------------------------------------------------------*20970000
209800* MOVE DATA PASSED THROUGH THE INTER-APPL COMMAREA               *20980000
209900*----------------------------------------------------------------*20990000
210000 1100-PROCESS-INTER-APPL-COMM.                                    21000000
210100                                                                  21010000
210200     MOVE SPACE                    TO ASC-START-ITEM-REQUEST.     21020000
210300                                                                  21030000
210400     MOVE AP300-PO-NBR             TO ASC-KEY-PO-NBR.             21040000
210500     MOVE AP300-STORE-NBR          TO ASC-KEY-STR-NBR.            21050000
210600     MOVE AP300-DC-NBR             TO ASC-KEY-DC-NBR.             21060000
210700                                                                  21070000
210800     PERFORM 1110-CHECK-TPURCHS.                                  21080000
210900     IF TPURCHS-FOUND                                             21090000
211000         IF PURCHS-PO-TYP-CDE = 'IM' OR 'IE' OR 'IF'              21100000
211100             IF PS-NO-ERROR                                       21110000
211200* -- PO RECONCILIATION NOT ALLOWED FOR IMPORT PURCHASE ORDERS --  21120000
211300                 MOVE PC-TSYMSG-03035  TO DP020-MSG-NUMBER        21130000
211400             END-IF                                               21140000
211500             SET DP020-NEXT-ACT-APPL-ERROR                        21150000
211600                 DP020-MSG-FATAL                                  21160000
211700                 PS-ERROR    TO TRUE                              21170000
211901*  CHECK FOR SEPHORA PO - ERROR IF 'MI' INVOICES IN 'EN' STATUS   21190168
211902         ELSE                                                     21190260
211912             MOVE PC-CURRENT-PROGRAM-NAME TO SA-PROGRAM-NAME      21191260
211914             PERFORM S100-GET-SEPHORA-DEPT                        21191460
211915             MOVE PURCHS-ENT-ID      TO PV-ENT-ID                 21191560
211916             MOVE PURCHS-DEPT-NBR    TO PV-DEPT-NBR               21191660
211917             PERFORM S500-CHECK-FOR-SEPHORA                       21191760
211920             IF PS-SEPHORA-AT-KOHLS                               21192067
211921                 PERFORM 1130-CHECK-TINVOIC                       21192160
211930                 IF TINVOIC-FOUND                                 21193063
211931                     IF PS-NO-ERROR                               21193163
211940* -- PO PAY RELEASE NOT ALLOWED FOR SEPHORA WITH EN INVOICES --   21194060
211950                         MOVE PC-TSYMSG-03818                     21195060
211951                                           TO DP020-MSG-NUMBER    21195160
211960                     END-IF                                       21196060
211970                     SET DP020-NEXT-ACT-APPL-ERROR                21197064
211980                         DP020-MSG-FATAL                          21198064
211990                         PS-ERROR    TO TRUE                      21199064
211991                 END-IF                                           21199160
211992             END-IF                                               21199260
211993         END-IF                                                   21199364
211994     ELSE                                                         21199464
212000         IF PS-NO-ERROR                                           21200000
212100*  -- PURCHASE ORDER NOT FOUND --                                 21210000
212200             MOVE PC-TSYMSG-00726  TO DP020-MSG-NUMBER            21220000
212300         END-IF                                                   21230000
212400         SET DP020-NEXT-ACT-APPL-ERROR                            21240000
212500             DP020-MSG-FATAL                                      21250000
212600             PS-ERROR    TO TRUE                                  21260000
212700     END-IF                                                       21270000
212800                                                                  21280000
212900     IF PS-NO-ERROR                                               21290000
213000         EVALUATE DP020-INT-APPL-FORMAT-IND                       21300000
213100             WHEN PC-INTER-APPL-CRIT-SPEC                         21310000
213200                  CONTINUE                                        21320000
213300             WHEN PC-INTER-APPL-LIST                              21330000
213400                  SET ASC-USE-SELECTION-QUEUE                     21340000
213500                                   TO TRUE                        21350000
213600                  MOVE AP300-NUMBER-OF-SELECTED-ITEMS             21360000
213700                                   TO ASC-NUMBER-OF-SELECTED-ITEMS21370000
213800                  MOVE AP300-NUMBER-OF-TS-ITEMS                   21380000
213900                                   TO ASC-NUMBER-OF-TS-ITEMS      21390000
214000                  MOVE AP300-SEL-QUEUE-NAME                       21400000
214100                                   TO ASC-SEL-QUEUE-NAME-IN       21410000
214200                  PERFORM 1120-PREPARE-LIST-ENTRY                 21420000
214300         END-EVALUATE                                             21430000
214400     END-IF.                                                      21440000
214500                                                                  21450000
214600*----------------------------------------------------------------*21460000
214700*  VERIFIES THAT PO EXISTS AND IF IT'S A VALID PO TYPE           *21470000
214800*----------------------------------------------------------------*21480000
214900 1110-CHECK-TPURCHS.                                              21490000
215000                                                                  21500000
215900     EXEC SQL                                                     21590059
216000         SELECT  PO_TYP_CDE                                       21600059
216010              ,  ENT_ID                                           21601059
216020              ,  DEPT_NBR                                         21602059
216100           INTO  :PURCHS-PO-TYP-CDE                               21610059
216110              ,  :PURCHS-ENT-ID                                   21611059
216120              ,  :PURCHS-DEPT-NBR                                 21612059
216200           FROM  TPURCHS                                          21620059
216300          WHERE  PO_NBR         = :ASC-KEY-PO-NBR                 21630059
216400            AND  VER_STATUS_CDE = 'A'                             21640059
216500     END-EXEC.                                                    21650059
216600                                                                  21660000
216700     EVALUATE TRUE                                                21670059
216800         WHEN SQLCODE = +0                                        21680059
216900             SET TPURCHS-FOUND  TO TRUE                           21690059
217000         WHEN SQLCODE = +100                                      21700059
217100             SET TPURCHS-NOT-FOUND  TO TRUE                       21710059
217600     WHEN SQLWARN0 NOT = SPACES                                   21760059
217700         WHEN SQLCODE < ZERO                                      21770059
217800         WHEN SQLCODE > ZERO                                      21780059
217900             MOVE '1110-CHECK-TPURCHS'                            21790059
218000                                 TO DP013-PARAGRAPH               21800000
218100             MOVE 'SELECT ON TPURCHS'                             21810059
218200                                 TO DP013-MESSAGE-TEXT (1)        21820000
218300             MOVE SQLCA TO DP013-SQLCA                            21830059
218400             MOVE 'TPURCHS'  TO DP013-DB2-TABLE-NAME (1)          21840059
218500             SET DP013-DB2-ABEND                                  21850059
218600                 DP013-XCTL-DISPLAY-RESTART                       21860059
218700                                 TO TRUE                          21870000
218800             PERFORM DP013-0000-PROCESS-ABEND                     21880059
218900     END-EVALUATE.                                                21890059
220400                                                                  22040000
220500*----------------------------------------------------------------*22050000
220600*  VERIFIES THAT PO LINES EXIST                                  *22060000
220700*  THIS CHECK IS NECESSARY TO PREVENT CREATION OF RI AND/OR NI   *22070000
220800*----------------------------------------------------------------*22080000
220900 1115-CHECK-PO-LINE-NBRS.                                         22090000
221000                                                                  22100000
221100     PERFORM                                                      22110000
221200         WITH TEST AFTER                                          22120000
221300         VARYING PV-RETRY-COUNTER                                 22130000
221400         FROM 1 BY 1                                              22140000
221500         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               22150000
221600            OR (SQLCODE = +0)                                     22160000
221700            OR (SQLCODE = +100))                                  22170000
221800                                                                  22180000
221900         EXEC SQL                                                 22190000
222000             SELECT  '1'                                          22200000
222100               INTO  :PV-ONE                                      22210000
222200               FROM  SYSIBM.SYSDUMMY1 X                           22220000
222300              WHERE  EXISTS (SELECT 1                             22230000
222400                     FROM TINVOIC A                               22240000
222500                         ,TMIITEM B                               22250000
222600                     WHERE A.PO_NBR         = :ASC-KEY-PO-NBR     22260000
222700                     AND A.STATUS_CDE      IN ('EN', 'RC',        22270000
222810                                               'OB', 'IB', 'PJ')  22281051
222820*                                              'OB', 'IB')        22282051
222900                     AND A.INVC_TYP_CDE    IN ('MI','RI')         22290000
223000                     AND A.STR_NBR          = :DK-STR-NBR         22300000
223100                     AND A.STR_NBR    BETWEEN :DK-STR-NBR-LOW     22310000
223200                                          AND :DK-STR-NBR-HIGH    22320000
223300                     AND A.DC_NBR     BETWEEN :DK-DC-NBR-LOW      22330000
223400                                          AND :DK-DC-NBR-HIGH     22340000
223500                     AND A.MTCH_LVL_CDE     = :DK-MTCH-LVL-CDE    22350000
223600                     AND A.PAYT_REQ_SEQ_NBR = B.PAYT_REQ_SEQ_NBR  22360000
223700                     AND B.PO_LNE_NBR  IS NOT NULL                22370000
223800                     AND NOT EXISTS(SELECT PO_LNE_NBR             22380000
223900                             FROM TPURITM C                       22390000
224000                             WHERE A.PO_NBR = C.PO_NBR            22400000
224100                             AND C.PO_LNE_NBR = B.PO_LNE_NBR      22410000
224200                             AND C.VER_STATUS_CDE = 'A')          22420000
224300               AND X.IBMREQD = X.IBMREQD)                         22430000
224400         END-EXEC                                                 22440000
224500                                                                  22450000
224600         EVALUATE TRUE                                            22460000
224700             WHEN SQLCODE = +0                                    22470000
224800                 SET NO-LINE-FOUND  TO TRUE                       22480000
224900             WHEN SQLCODE = +100                                  22490000
225000                 SET NO-LINE-NOT-FOUND  TO TRUE                   22500000
225100             WHEN SQLCODE = -904                                  22510000
225200             WHEN SQLCODE = -913                                  22520000
225300                 CONTINUE                                         22530000
225400                                                                  22540000
225500             WHEN SQLWARN0 NOT = SPACES                           22550000
225600             WHEN SQLCODE < ZERO                                  22560000
225700             WHEN SQLCODE > ZERO                                  22570000
225800                 MOVE '1115-CHECK-PO-LINE-NBRS'                   22580000
225900                                 TO DP013-PARAGRAPH               22590000
226000                 MOVE 'SELECT ON TPURITM'                         22600000
226100                                 TO DP013-MESSAGE-TEXT (1)        22610000
226200                 MOVE SQLCA TO DP013-SQLCA                        22620000
226300                 MOVE 'TPURITM'  TO DP013-DB2-TABLE-NAME (1)      22630000
226400                 SET DP013-DB2-ABEND                              22640000
226500                     DP013-XCTL-DISPLAY-RESTART                   22650000
226600                                 TO TRUE                          22660000
226700                 PERFORM DP013-0000-PROCESS-ABEND                 22670000
226800         END-EVALUATE                                             22680000
226900     END-PERFORM.                                                 22690000
227000                                                                  22700000
227100     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        22710000
227200         MOVE '1115-CHECK-PO-LINE-NBRS'                           22720000
227300                                 TO DP013-PARAGRAPH               22730000
227400         MOVE 'MAXIMUM RETRIES EXCEEDED ATTEMPTING TO SELECT'     22740000
227500                                 TO DP013-MESSAGE-TEXT (1)        22750000
227600         MOVE SQLCA              TO DP013-SQLCA                   22760000
227700         MOVE 'TPURITM'          TO DP013-DB2-TABLE-NAME (1)      22770000
227800         SET DP013-DB2-ABEND                                      22780000
227900             DP013-XCTL-DISPLAY-RESTART                           22790000
228000                                 TO TRUE                          22800000
228100         PERFORM DP013-0000-PROCESS-ABEND                         22810000
228200     END-IF.                                                      22820000
228300                                                                  22830000
228400*----------------------------------------------------------------*22840000
228500*  ENTRY IS FROM A LIST. GET THE KEYS FROM THE TEMP STORAGE      *22850000
228600*  QUEUE PASSED FROM THE LIST.                                   *22860000
228700*----------------------------------------------------------------*22870000
228800                                                                  22880000
228900 1120-PREPARE-LIST-ENTRY.                                         22890000
229000      MOVE AP301-MAX-ITEMS         TO ASC-SEL-SUB.                22900000
229100      MOVE ZERO                    TO ASC-SEL-ITEM.               22910000
229200      PERFORM 2300-GET-NEXT-RECORD.                               22920000
229300                                                                  22930000
229400/                                                                 22940000
229410*----------------------------------------------------------------*22941060
229420*  CHECK FOR ANY INVOICES IN 'EN' STATUS                         *22942060
229421*  THIS IS ONLY CALLED FOR SEPHORA VENDORS                       *22942160
229430*----------------------------------------------------------------*22943060
229440 1130-CHECK-TINVOIC.                                              22944060
229450                                                                  22945060
229460     EXEC SQL                                                     22946060
229470         SELECT  INVC_ID                                          22947060
229491           INTO  :INVOIC-INVC-ID                                  22949160
229494           FROM  TINVOIC                                          22949460
229495          WHERE  PO_NBR         = :ASC-KEY-PO-NBR                 22949560
229496            AND  INVC_TYP_CDE   = 'MI'                            22949668
229497            AND  STATUS_CDE     = 'EN'                            22949768
229498     END-EXEC.                                                    22949868
229499                                                                  22949968
229500     EVALUATE TRUE                                                22950068
229501         WHEN SQLCODE = +0                                        22950168
229502         WHEN SQLCODE = -811                                      22950268
229503             SET TINVOIC-FOUND  TO TRUE                           22950368
229504         WHEN SQLCODE = +100                                      22950468
229505             SET TINVOIC-NOT-FOUND  TO TRUE                       22950568
229508     WHEN SQLWARN0 NOT = SPACES                                   22950860
229509         WHEN SQLCODE < ZERO                                      22950960
229510         WHEN SQLCODE > ZERO                                      22951060
229511             MOVE '1130-CHECK-TINVOIC'                            22951160
229512                                 TO DP013-PARAGRAPH               22951260
229513             MOVE 'SELECT ON TINVOIC'                             22951360
229514                                 TO DP013-MESSAGE-TEXT (1)        22951460
229515             MOVE SQLCA TO DP013-SQLCA                            22951560
229516             MOVE 'TINVOIC'  TO DP013-DB2-TABLE-NAME (1)          22951660
229517             SET DP013-DB2-ABEND                                  22951760
229518                 DP013-XCTL-DISPLAY-RESTART                       22951860
229519                                 TO TRUE                          22951960
229520             PERFORM DP013-0000-PROCESS-ABEND                     22952060
229521     END-EVALUATE.                                                22952160
229522                                                                  22952260
229530*----------------------------------------------------------------*22953000
229600* DO ANY PROCESSING FOR KEYS FOR WHICH NO EDITTING OF THE DATA   *22960000
229700* ON THE SCREEN NEEDS TO BE DONE.  IF ONE OF THOSE KEYS IS NOT   *22970000
229800* USED, EDIT THE DATA ON THE SCREEN AND GO ON TO CHECK THE REST  *22980000
229900* OF THE FUNCTION KEYS.  NOTE THAT WITH THE API, NO INVALID      *22990000
230000* FUNCTION KEYS CAN GET THIS FAR.                                *23000000
230100*----------------------------------------------------------------*23010000
230200                                                                  23020000
230300 2000-PROCESS-PANEL.                                              23030000
230400     EVALUATE TRUE                                                23040000
230500         WHEN DP020-SRC-AID = DP016-CLEAR                         23050000
230600             MOVE ZERO             TO ASC-ITEM-AT-TOP-OF-PANEL    23060000
230700             PERFORM 3000-EDIT-DATA-IN-COMMAREA                   23070000
230800             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 23080000
230900                                                                  23090000
231000         WHEN DP020-FK-REFRESH (DP020-SRC-AID)                    23100000
231100             PERFORM 2050-DELETE-LIST-QUEUE                       23110000
231200             PERFORM 9500-DELETE-STORE-QUEUE                      23120000
231300             PERFORM 4000-BUILD-INITIAL-PANEL                     23130000
231400                                                                  23140000
231500         WHEN DP020-FK-DESELECT (DP020-SRC-AID)                   23150000
231600             PERFORM 2140-DESELECT-ALL-ITEMS                      23160000
231700             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 23170000
231800                                                                  23180000
231900         WHEN DP020-FK-SELECT-ALL (DP020-SRC-AID)                 23190000
232000              PERFORM 2150-SELECT-ALL-ITEMS                       23200000
232100              PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                23210000
232200                                                                  23220000
232300         WHEN DP020-FK-NEXT-SELECTION (DP020-SRC-AID)             23230000
232400             IF ASC-USE-SELECTION-QUEUE                           23240000
232500                 PERFORM 6200-DEL-LIST-QUEUE                      23250000
232600                 PERFORM 2300-GET-NEXT-RECORD                     23260000
232700                 PERFORM 4000-BUILD-INITIAL-PANEL                 23270000
232800                 PERFORM 3200-RESET-ATTRIBUTES                    23280000
232900             ELSE                                                 23290000
233000*                --- BOTTOM OF LIST ---                           23300000
233100                 MOVE PC-TSYMSG-00070                             23310000
233200                                   TO DP020-MSG-NUMBER            23320000
233300                 SET DP020-MSG-INFORMATIONAL                      23330000
233400                                   TO TRUE                        23340000
233500             END-IF                                               23350000
233600                                                                  23360000
233700         WHEN DP020-FK-PREV-SELECTION (DP020-SRC-AID)             23370000
233800             IF ASC-USE-SELECTION-QUEUE                           23380000
233900                 PERFORM 6200-DEL-LIST-QUEUE                      23390000
234000                 PERFORM 2330-GET-PREV-RECORD                     23400000
234100                 PERFORM 4000-BUILD-INITIAL-PANEL                 23410000
234200                 PERFORM 3200-RESET-ATTRIBUTES                    23420000
234300             ELSE                                                 23430000
234400*                --- TOP OF LIST ---                              23440000
234500                 MOVE PC-TSYMSG-00069                             23450000
234600                                   TO DP020-MSG-NUMBER            23460000
234700                 SET DP020-MSG-INFORMATIONAL                      23470000
234800                                   TO TRUE                        23480000
234900             END-IF                                               23490000
235000         WHEN OTHER                                               23500000
235100             PERFORM 2200-MOVE-SCREEN-TO-COMMAREA                 23510000
235200             PERFORM 3000-EDIT-DATA-IN-COMMAREA                   23520000
235300             IF  PS-NO-ERROR                                      23530000
235400                 SET DP030-CONTINUE-GO TO TRUE                    23540000
235500                 PERFORM 9300-READ-STORE-QUEUE                    23550000
235600                 PERFORM 2100-CHECK-FUNCTION-KEY                  23560000
235700             ELSE                                                 23570000
235800                 SET DP030-OVERRIDE-GO TO TRUE                    23580000
235900             END-IF                                               23590000
236000     END-EVALUATE.                                                23600000
236100                                                                  23610000
236200/                                                                 23620000
236300*----------------------------------------------------------------*23630000
236400*  DELETE THE LIST ITEMS TEMP STORAGE QUEUE.                     *23640000
236500*----------------------------------------------------------------*23650000
236600 2050-DELETE-LIST-QUEUE.                                          23660000
236700                                                                  23670000
236800     EXEC CICS                                                    23680000
236900         DELETEQ TS                                               23690000
237000           QUEUE (ASC-LIST-QUEUE-NAME)                            23700000
237100            RESP (PV-CICS-RESP)                                   23710000
237200     END-EXEC.                                                    23720000
237300                                                                  23730000
237400     IF (PV-CICS-RESP = DFHRESP(NORMAL)) OR                       23740000
237500        (PV-CICS-RESP = DFHRESP(QIDERR))                          23750000
237600         CONTINUE                                                 23760000
237700     ELSE                                                         23770000
237800         SET DP013-CICS-ABEND      TO TRUE                        23780000
237900         SET DP013-NO-ROLLBACK     TO TRUE                        23790000
238000                                                                  23800000
238100         MOVE '2050-DELETE-LIST-QUEUE'                            23810000
238200                                   TO DP013-PARAGRAPH             23820000
238300         MOVE 'ERROR TRYING TO DELETE LIST TEMP STORAGE QUEUE'    23830000
238400                                   TO DP013-MESSAGE-TEXT (1)      23840000
238500         PERFORM DP013-0000-PROCESS-ABEND                         23850000
238600     END-IF.                                                      23860000
238700                                                                  23870000
238800     MOVE +0                       TO ASC-HIGHEST-BLOCK-WRITTEN.  23880000
238900                                                                  23890000
239000/                                                                 23900000
239100*----------------------------------------------------------------*23910000
239200* ACT ON ANY FUNCTION KEYS THAT REQUIRE EDITS TO BE PASSED FIRST.*23920000
239300* NOTE THAT INVALID FUNCTION KEYS WILL NOT BE RETURNED FROM THE  *23930000
239400* CICS ARCHITECTURE API.                                         *23940000
239500*----------------------------------------------------------------*23950000
239600 2100-CHECK-FUNCTION-KEY.                                         23960000
239700                                                                  23970000
239800     EVALUATE TRUE                                                23980000
239900         WHEN DP020-SRC-AID = DP016-ENTER                         23990000
240000             PERFORM 2130-CHECK-FOR-JUMP-BROWSE                   24000000
240100             IF  PS-ERROR                                         24010000
240200                 CONTINUE                                         24020000
240300             ELSE                                                 24030000
240400                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             24040000
240500             END-IF                                               24050000
240600                                                                  24060000
240700         WHEN DP020-FK-CONFIRM (DP020-SRC-AID)                    24070000
240800             IF ASC-PAY-RELEASE-IND = 'Y'                         24080000
240900**              -- FIRST, PERFORM 4000- TO DO THE UPDATES,        24090000
241000**              -- THEN PERFORM IT AGAIN TO RE-BUILD THE          24100000
241100**              -- SCREEN W/OUT THE STORE WHICH WAS JUST          24110000
241200**              -- COMPLETED.                                     24120000
241300                PERFORM 2050-DELETE-LIST-QUEUE                    24130000
241400                PERFORM 9500-DELETE-STORE-QUEUE                   24140000
241500                PERFORM 4000-BUILD-INITIAL-PANEL                  24150000
241600                IF PS-NO-ERROR                                    24160000
241700                   SET PC-PR-PENDING-END TO TRUE                  24170000
241800                   MOVE 'N' TO ASC-PAY-RELEASE-IND                24180000
241900                   MOVE  0  TO ASC-KEY-STR-NBR                    24190000
242000                               ASC-KEY-DC-NBR                     24200000
242100                   PERFORM 2050-DELETE-LIST-QUEUE                 24210000
242200                   PERFORM 9500-DELETE-STORE-QUEUE                24220000
242300                   PERFORM 4000-BUILD-INITIAL-PANEL               24230000
242400                   IF ASC-NUMBER-OF-ITEMS-READ = ZERO             24240000
242500*                  -- THERE ARE NO MORE STORES TO RECONCILE --    24250000
242600                      MOVE PC-TSYMSG-00907 TO DP020-MSG-NUMBER    24260000
242700                      MOVE ASC-KEY-PO-NBR         TO              24270000
242800                           PV-PO-NBR-DISPLAY                      24280000
242900                      MOVE PV-PO-NBR-DISPLAY      TO              24290000
243000                           DP020-MSG-TEXT                         24300000
243100                      SET DP020-MSG-INFORMATIONAL TO TRUE         24310000
243200                      SET DP030-OVERRIDE-APPL-ERROR TO TRUE       24320000
243300                   END-IF                                         24330000
243400                END-IF                                            24340000
243500             ELSE                                                 24350000
243600*               --- INVALID FUNCTION KEY ---                      24360000
243700                MOVE PC-TSYMSG-00045                              24370000
243800                                  TO DP020-MSG-NUMBER             24380000
243900                SET DP020-MSG-INFORMATIONAL                       24390000
244000                                  TO TRUE                         24400000
244100                PERFORM 4400-MOVE-COMMAREA-TO-SCREEN              24410000
244200             END-IF                                               24420000
244300                                                                  24430000
244400         WHEN DP020-FK-LOCAL-FUNC-01 (DP020-SRC-AID)              24440000
244500             PERFORM 1115-CHECK-PO-LINE-NBRS                      24450000
244600             IF NO-LINE-FOUND                                     24460000
244700                IF PS-NO-ERROR                                    24470000
244800*   -- PO LINE(S) RENUMBERS PAY RELEASE NOT ALLOWED  --           24480000
244900                   MOVE PC-TSYMSG-03236 TO DP020-MSG-NUMBER       24490000
245000                END-IF                                            24500000
245100                MOVE -1           TO MR-SELECTL (PV-SUB)          24510000
245200                SET DP030-SET-CURSOR-APPL-1                       24520000
245300                                  TO TRUE                         24530000
245400                SET DP020-MSG-FATAL                               24540000
245500                    PS-ERROR TO TRUE                              24550000
245600             ELSE                                                 24560000
245700                IF ASC-NO-RECEIVERS-FOUND                         24570000
245800                   IF PS-NO-ERROR                                 24580000
245900**         -- CANNOT PAYRELEASE PO/LOCATION BECAUSE THERE IS NO   24590000
246000**            MATCHING RECEIVING --                               24600000
246100                      MOVE PC-TSYMSG-03529 TO DP020-MSG-NUMBER    24610000
246200                   END-IF                                         24620000
246300                   MOVE -1              TO MR-SELECTL (PV-SUB)    24630000
246400                   SET DP030-SET-CURSOR-APPL-1                    24640000
246500                       DP020-MSG-FATAL                            24650000
246600                       PS-ERROR         TO TRUE                   24660000
246700                ELSE                                              24670000
246800                   IF ASC-RCVR-TOT-AMT-ZERO                       24680000
246900                      IF PS-NO-ERROR                              24690000
247000**         -- CANNOT PAYRELEASE PO/LOCATION BECAUSE THE RECEIVING 24700000
247100**            TOTAL IS $0.00 --                                   24710000
247200                         MOVE PC-TSYMSG-03530 TO DP020-MSG-NUMBER 24720000
247300                      END-IF                                      24730000
247400                      MOVE -1              TO MR-SELECTL (PV-SUB) 24740000
247500                      SET DP030-SET-CURSOR-APPL-1                 24750000
247600                          DP020-MSG-FATAL                         24760000
247700                          PS-ERROR         TO TRUE                24770000
247800                   ELSE                                           24780000
247900                      MOVE 'Y' TO ASC-PAY-RELEASE-IND             24790000
248000                      SET PC-PR-PENDING-BEGIN TO TRUE             24800000
248100*                     --- PRESS F2 TO CONFIRM ---                 24810000
248200                      MOVE PC-TSYMSG-00004                        24820000
248300                                     TO DP020-MSG-NUMBER          24830000
248400                      SET DP020-MSG-INFORMATIONAL                 24840000
248500                                     TO TRUE                      24850000
248600                      PERFORM 4400-MOVE-COMMAREA-TO-SCREEN        24860000
248700                   END-IF                                         24870000
248800                END-IF                                            24880000
248900             END-IF                                               24890000
249000                                                                  24900000
249100         WHEN DP020-FK-LOCAL-GOTO (DP020-SRC-AID)                 24910000
249200                 MOVE ASC-NUMBER-OF-SELECTED-ITEMS TO             24920000
249300                      AP300-NUMBER-OF-SELECTED-ITEMS              24930000
249400                 PERFORM 5000-PREPARE-SEL-QUEUE                   24940000
249500                                                                  24950000
249600                 PERFORM 9000-FORMAT-COMMAREA                     24960000
249700                                                                  24970000
249800         WHEN DP020-FK-LOCAL-FUNC-02 (DP020-SRC-AID)              24980000
249900             MOVE ASC-STR-SUB-N TO SQW-STR-SUB                    24990000
250000             IF SQW-STR-SUB = +1                                  25000000
250100*                -- TOP-OF-LIST    --                             25010000
250200                 MOVE PC-TSYMSG-00069      TO DP020-MSG-NUMBER    25020000
250300                 SET DP020-MSG-INFORMATIONAL                      25030000
250400                                           TO TRUE                25040000
250500                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             25050000
250600             ELSE                                                 25060000
250700                 SUBTRACT +1 FROM SQW-STR-SUB                     25070000
250800                 IF ASC-MTCH-LVL-CDE = 'D'                        25080000
250900                    MOVE SQW-STR-NBR(SQW-STR-SUB) TO              25090000
251000                             ASC-KEY-DC-NBR                       25100000
251100                    MOVE ZERO TO ASC-KEY-STR-NBR                  25110000
251200                 ELSE                                             25120000
251300                    MOVE SQW-STR-NBR(SQW-STR-SUB) TO              25130000
251400                             ASC-KEY-STR-NBR                      25140000
251500                    MOVE ZERO TO ASC-KEY-DC-NBR                   25150000
251600                 END-IF                                           25160000
251700                 PERFORM 6200-DEL-LIST-QUEUE                      25170000
251800                 PERFORM 4000-BUILD-INITIAL-PANEL                 25180000
251900             END-IF                                               25190000
252000         WHEN DP020-FK-LOCAL-FUNC-03 (DP020-SRC-AID)              25200000
252100             MOVE ASC-STR-SUB-N TO SQW-STR-SUB                    25210000
252200             ADD +1 TO SQW-STR-SUB                                25220000
252300             IF SQW-STR-SUB > +3000 OR                            25230000
252400                SQW-STR-NBR(SQW-STR-SUB) = +0                     25240000
252500*                -- BOTTOM OF LIST --                             25250000
252600                 MOVE PC-TSYMSG-00070      TO DP020-MSG-NUMBER    25260000
252700                 SET DP020-MSG-INFORMATIONAL                      25270000
252800                                           TO TRUE                25280000
252900                 SUBTRACT +1 FROM SQW-STR-SUB                     25290000
253000                 PERFORM 4400-MOVE-COMMAREA-TO-SCREEN             25300000
253100             ELSE                                                 25310000
253200*                SET SQW-STR-SUB TO ASC-STR-SUB-N                 25320000
253300                 IF ASC-MTCH-LVL-CDE = 'D'                        25330000
253400                    MOVE SQW-STR-NBR(SQW-STR-SUB) TO              25340000
253500                             ASC-KEY-DC-NBR                       25350000
253600                    MOVE ZERO TO ASC-KEY-STR-NBR                  25360000
253700                 ELSE                                             25370000
253800                    MOVE SQW-STR-NBR(SQW-STR-SUB) TO              25380000
253900                             ASC-KEY-STR-NBR                      25390000
254000                    MOVE ZERO TO ASC-KEY-DC-NBR                   25400000
254100                 END-IF                                           25410000
254200                 PERFORM 6200-DEL-LIST-QUEUE                      25420000
254300                 PERFORM 4000-BUILD-INITIAL-PANEL                 25430000
254400             END-IF                                               25440000
254500         WHEN DP020-FK-FIRST-PAGE(DP020-SRC-AID)                  25450000
254600             MOVE +1               TO PV-TOP-ITEM                 25460000
254700             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 25470000
254800                                                                  25480000
254900         WHEN DP020-FK-PREV-PAGE(DP020-SRC-AID)                   25490000
255000             PERFORM 2110-BROWSE-BACKWARD                         25500000
255100             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 25510000
255200                                                                  25520000
255300         WHEN DP020-FK-NEXT-PAGE(DP020-SRC-AID)                   25530000
255400             PERFORM 2120-BROWSE-FORWARD                          25540000
255500             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 25550000
255600                                                                  25560000
255700         WHEN OTHER                                               25570000
255800             SET DP013-NO-ROLLBACK                                25580000
255900                 DP013-XCTL-DISPLAY-RESTART                       25590000
256000                 DP013-CICS-ABEND  TO TRUE                        25600000
256100             MOVE '2100-CHECK-FUNCTION-KEY'                       25610000
256200                                   TO DP013-PARAGRAPH             25620000
256300             MOVE 'INVALID FUNCTION KEY NOT CAPTURED BY API'      25630000
256400                                   TO DP013-MESSAGE-TEXT (1)      25640000
256500             PERFORM DP013-0000-PROCESS-ABEND                     25650000
256600     END-EVALUATE.                                                25660000
256700                                                                  25670000
256800/                                                                 25680000
256900*----------------------------------------------------------------*25690000
257000*    IF THE USER HITS THE PAGE BACKWARD KEY, COMPUTE THE TOP     *25700000
257100*    ITEM NUMBER FOR THE NEW PAGE.  IF IT IS ABOVE THE TOP,      *25710000
257200*    SET THE TOP ITEM NUMBER TO +1 AND DISPLAY THE TOP OF LIST   *25720000
257300*    MESSAGE.                                                    *25730000
257400*----------------------------------------------------------------*25740000
257500                                                                  25750000
257600 2110-BROWSE-BACKWARD.                                            25760000
257700                                                                  25770000
257800     SUBTRACT PC-ITEMS-PER-PANEL FROM ASC-ITEM-AT-TOP-OF-PANEL    25780000
257900         GIVING PV-TOP-ITEM.                                      25790000
258000                                                                  25800000
258100     IF  ((PV-TOP-ITEM < +1)                                      25810000
258200       OR (PV-TOP-ITEM = +1))                                     25820000
258300         MOVE +1                   TO PV-TOP-ITEM                 25830000
258400*        -- TOP OF LIST --                                        25840000
258500         MOVE PC-TSYMSG-00069      TO DP020-MSG-NUMBER            25850000
258600         SET DP020-MSG-INFORMATIONAL                              25860000
258700                                   TO TRUE                        25870000
258800     END-IF.                                                      25880000
258900                                                                  25890000
259000/                                                                 25900000
259100*----------------------------------------------------------------*25910000
259200*    IF THE USER HITS THE PAGE FORWARD KEY, COMPUTE THE TOP      *25920000
259300*    ITEM NUMBER FOR THE NEW PAGE.  IF THE USER ATTEMPTS TO GO   *25930000
259400*    PAST THE END, ISSUE THE BOTTOM OF LIST MESSAGE.             *25940000
259500*----------------------------------------------------------------*25950000
259600                                                                  25960000
259700 2120-BROWSE-FORWARD.                                             25970000
259800                                                                  25980000
259900     ADD PC-ITEMS-PER-PANEL ASC-ITEM-AT-TOP-OF-PANEL              25990000
260000         GIVING PV-TOP-ITEM.                                      26000000
260100                                                                  26010000
260200     IF  PV-TOP-ITEM > ASC-NUMBER-OF-ITEMS-READ                   26020000
260300         MOVE ASC-ITEM-AT-TOP-OF-PANEL                            26030000
260400                                   TO PV-TOP-ITEM                 26040000
260500*        -- BOTTOM OF LIST --                                     26050000
260600         MOVE PC-TSYMSG-00070      TO DP020-MSG-NUMBER            26060000
260700         SET DP020-MSG-INFORMATIONAL                              26070000
260800                                   TO TRUE                        26080000
260900     ELSE                                                         26090000
261000         COMPUTE PV-BOTTOM-ITEM =                                 26100000
261100             PV-TOP-ITEM + PC-ITEMS-PER-PANEL - 1                 26110000
261200         IF  PV-BOTTOM-ITEM > ASC-NUMBER-OF-ITEMS-READ            26120000
261300*            -- BOTTOM OF LIST --                                 26130000
261400             MOVE PC-TSYMSG-00070  TO DP020-MSG-NUMBER            26140000
261500             SET DP020-MSG-INFORMATIONAL                          26150000
261600                                   TO TRUE                        26160000
261700         END-IF                                                   26170000
261800     END-IF.                                                      26180000
261900                                                                  26190000
262000/                                                                 26200000
262100*----------------------------------------------------------------*26210000
262200*    THE USER CAN CHANGE THE CURRENT BEGINNING LIST NUMBER SO    *26220000
262300*    THAT THE TRANSACTION WILL JUMP TO THAT POINT IN THE LIST.   *26230000
262400*    THIS IS A FASTER WAY TO GET TO A CERTAIN POINT IN THE LIST  *26240000
262500*    RATHER THAN HITTING NEXT-PAGE TO GET TO THAT POINT.         *26250000
262600*    THE NEW LIST NUMBER ENTERED IS EDITED TO MAKE SURE THAT     *26260000
262700*    IT IS NUMERIC AND FALLS BETWEEN A SPECIFIED RANGE.          *26270000
262800*----------------------------------------------------------------*26280000
262900                                                                  26290000
263000 2130-CHECK-FOR-JUMP-BROWSE.                                      26300000
263100                                                                  26310000
263200     IF (ASC-START-ITEM-REQUEST = SPACE)                          26320000
263300         MOVE ASC-ITEM-AT-TOP-OF-PANEL                            26330000
263400                                   TO PV-TOP-ITEM                 26340000
263500     ELSE                                                         26350000
263600         MOVE ASC-START-ITEM-REQUEST                              26360000
263700                                   TO DP010I-UNEDITED-FIELD       26370000
263800         MOVE PC-MSG-NUMBER-LENGTH TO DP010I-MAXIMUM-DIGITS       26380000
263900         MOVE +0                   TO DP010I-MAXIMUM-DECIMALS     26390000
264000         SET DP010I-NEGATIVE-NOT-ALLOWED                          26400000
264100                                   TO TRUE                        26410000
264220         CALL DP010I-NUMERIC-EDIT-ROUTINE                         26422056
264230                         USING DP010I-NUMERIC-EDIT-AREA           26423056
264300                                                                  26430000
264400         IF  NOT DP010I-ERROR-DETECTED                            26440000
264500             MOVE DP010I-NUMERIC-FIELD                            26450000
264600                                   TO ASC-START-ITEM-REQUEST-N    26460000
264700             IF  ASC-START-ITEM-REQUEST-N > ZERO                  26470000
264800                 IF  ASC-START-ITEM-REQUEST-N >                   26480000
264900                                          ASC-NUMBER-OF-ITEMS-READ26490000
265000                     MOVE SPACE TO ASC-START-ITEM-REQUEST         26500000
265100                     COMPUTE PV-TOP-ITEM =                        26510000
265200                             ASC-NUMBER-OF-ITEMS-READ             26520000
265300                             - PC-ITEMS-PER-PANEL + 1             26530000
265400                     IF  PV-TOP-ITEM < +1                         26540000
265500                         MOVE +1   TO PV-TOP-ITEM                 26550000
265600                         MOVE PC-TSYMSG-00070                     26560000
265700                                   TO DP020-MSG-NUMBER            26570000
265800                         SET DP020-MSG-INFORMATIONAL              26580000
265900                                   TO TRUE                        26590000
266000                     END-IF                                       26600000
266100                 ELSE                                             26610000
266200                     MOVE ASC-START-ITEM-REQUEST-N                26620000
266300                                   TO PV-TOP-ITEM                 26630000
266400                     MOVE SPACE    TO ASC-START-ITEM-REQUEST      26640000
266500                     COMPUTE PV-BOTTOM-ITEM =                     26650000
266600                         PV-TOP-ITEM + PC-ITEMS-PER-PANEL - 1     26660000
266700                     IF  PV-BOTTOM-ITEM > ASC-NUMBER-OF-ITEMS-READ26670000
266800*                        -- BOTTOM OF LIST --                     26680000
266900                         MOVE PC-TSYMSG-00070                     26690000
267000                                   TO DP020-MSG-NUMBER            26700000
267100                         SET DP020-MSG-INFORMATIONAL              26710000
267200                                   TO TRUE                        26720000
267300                     END-IF                                       26730000
267400                 END-IF                                           26740000
267500             ELSE                                                 26750000
267600*                --- VALUE OUT OF RANGE ----                      26760000
267700                 MOVE PC-TSYMSG-00101                             26770000
267800                                   TO DP020-MSG-NUMBER            26780000
267900                 MOVE -1           TO ASTRTITL                    26790000
268000                 SET DP030-SET-CURSOR-APPL-1                      26800000
268100                                   TO TRUE                        26810000
268200                 MOVE DP015-REVERSE                               26820000
268300                                   TO ASTRTITH                    26830000
268400                 MOVE DP015-RED    TO ASTRTITC                    26840000
268500                 MOVE DP015-UNP-NUM-BRT-OFF                       26850000
268600                                   TO ASTRTITA                    26860000
268700                 SET DP020-MSG-FATAL                              26870000
268800                     PS-START-ITEM-ERROR                          26880000
268900                                   TO TRUE                        26890000
269000             END-IF                                               26900000
269100                                                                  26910000
269200         ELSE                                                     26920000
269300             MOVE PC-TSYMSG-00008  TO DP020-MSG-NUMBER            26930000
269400             MOVE -1               TO ASTRTITL                    26940000
269500             SET DP030-SET-CURSOR-APPL-1 TO TRUE                  26950000
269600             MOVE DP015-REVERSE    TO ASTRTITH                    26960000
269700             MOVE DP015-RED        TO ASTRTITC                    26970000
269800             MOVE DP015-UNP-NUM-BRT-OFF                           26980000
269900                                   TO ASTRTITA                    26990000
270000             SET DP020-MSG-FATAL                                  27000000
270100                 PS-START-ITEM-ERROR                              27010000
270200                                   TO TRUE                        27020000
270300         END-IF                                                   27030000
270400     END-IF.                                                      27040000
270500                                                                  27050000
270600/                                                                 27060000
270700*----------------------------------------------------------------*27070000
270800*    IF THE USER HITS THE DESELECT KEY, CLEAR THE SELECTION      *27080000
270900*    SWITCH FOR ALL ITEMS THAT WERE PREVIOUSLY SELECTED.         *27090000
271000*----------------------------------------------------------------*27100000
271100 2140-DESELECT-ALL-ITEMS.                                         27110000
271200                                                                  27120000
271300     MOVE +1                       TO ASC-BLK-SUB.                27130000
271400                                                                  27140000
271500     PERFORM 2141-CLEAR-SELECTED-INDS                             27150000
271600         VARYING ASC-ITEM-SUB                                     27160000
271700         FROM 1 BY 1                                              27170000
271800         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 27180000
271900                                                                  27190000
272000     ADD +1                        TO ASC-BLK-SUB.                27200000
272100                                                                  27210000
272200     PERFORM 2141-CLEAR-SELECTED-INDS                             27220000
272300         VARYING ASC-ITEM-SUB                                     27230000
272400         FROM 1 BY 1                                              27240000
272500         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 27250000
272600                                                                  27260000
272700     MOVE ASC-LIST-ITEM-NUMBER(1 1)                               27270000
272800                                   TO PV-LIST-ITEM-NUMBER.        27280000
272900                                                                  27290000
273000     COMPUTE PV-FIRST-BLOCK-IN-ARRAY =                            27300000
273100         1 + ((PV-LIST-ITEM-NUMBER - 1) / PC-ITEMS-PER-PANEL).    27310000
273200                                                                  27320000
273300     IF (PV-FIRST-BLOCK-IN-ARRAY NOT = +1) OR                     27330000
273400        (ASC-HIGHEST-BLOCK-WRITTEN > PC-MAX-BLOCKS-IN-ARRAY)      27340000
273500         MOVE +1                   TO ASC-BLK-SUB                 27350000
273600                                                                  27360000
273700         PERFORM 5100-WRITE-TEMP-STORAGE                          27370000
273800                                                                  27380000
273900         MOVE +1                   TO PV-BLOCK-NUMBER             27390000
274000                                                                  27400000
274100         COMPUTE PV-PREV-BLOCK-IN-ARRAY =                         27410000
274200             PV-FIRST-BLOCK-IN-ARRAY - 1                          27420000
274300                                                                  27430000
274400         PERFORM                                                  27440000
274500             UNTIL PV-BLOCK-NUMBER > PV-PREV-BLOCK-IN-ARRAY       27450000
274600                                                                  27460000
274700             PERFORM 4410-READ-TEMP-STORAGE                       27470000
274800                                                                  27480000
274900             PERFORM 2141-CLEAR-SELECTED-INDS                     27490000
275000                 VARYING ASC-ITEM-SUB FROM 1 BY 1                 27500000
275100                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          27510000
275200                                                                  27520000
275300             PERFORM 5100-WRITE-TEMP-STORAGE                      27530000
275400                                                                  27540000
275500             ADD +1                TO PV-BLOCK-NUMBER             27550000
275600                                                                  27560000
275700         END-PERFORM                                              27570000
275800                                                                  27580000
275900         COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                         27590000
276000             PV-FIRST-BLOCK-IN-ARRAY + PC-MAX-BLOCKS-IN-ARRAY     27600000
276100                                                                  27610000
276200         PERFORM                                                  27620000
276300             UNTIL PV-NEXT-BLOCK-IN-ARRAY >                       27630000
276400                   ASC-HIGHEST-BLOCK-WRITTEN                      27640000
276500                                                                  27650000
276600             MOVE PV-NEXT-BLOCK-IN-ARRAY                          27660000
276700                                   TO PV-BLOCK-NUMBER             27670000
276800                                                                  27680000
276900             PERFORM 4410-READ-TEMP-STORAGE                       27690000
277000                                                                  27700000
277100             PERFORM 2141-CLEAR-SELECTED-INDS                     27710000
277200                 VARYING ASC-ITEM-SUB                             27720000
277300                 FROM 1 BY 1                                      27730000
277400                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          27740000
277500                                                                  27750000
277600             PERFORM 5100-WRITE-TEMP-STORAGE                      27760000
277700                                                                  27770000
277800             ADD +1                TO PV-NEXT-BLOCK-IN-ARRAY      27780000
277900                                                                  27790000
278000         END-PERFORM                                              27800000
278100                                                                  27810000
278200         MOVE PV-FIRST-BLOCK-IN-ARRAY                             27820000
278300                                   TO PV-BLOCK-NUMBER             27830000
278400                                                                  27840000
278500         PERFORM 4410-READ-TEMP-STORAGE                           27850000
278600     END-IF.                                                      27860000
278700                                                                  27870000
278800                                                                  27880000
278900     MOVE +0                       TO ASC-NUMBER-OF-SELECTED-ITEMS27890000
279000     MOVE +0                       TO ASC-START-OF-SELECTED-RANGE.27900000
279100     MOVE +0                       TO ASC-END-OF-SELECTED-RANGE.  27910000
279200                                                                  27920000
279300     PERFORM 4400-MOVE-COMMAREA-TO-SCREEN.                        27930000
279400                                                                  27940000
279500/                                                                 27950000
279600*----------------------------------------------------------------*27960000
279700*    MARK EACH ITEM AS BEING NOT SELECTED.                       *27970000
279800*----------------------------------------------------------------*27980000
279900                                                                  27990000
280000 2141-CLEAR-SELECTED-INDS.                                        28000000
280100                                                                  28010000
280200     IF  ASC-LIST-ITEM-NUMBER (ASC-BLK-SUB ASC-ITEM-SUB)          28020000
280300             NOT EQUAL ZERO                                       28030000
280400         IF  NOT ASC-NO-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)          28040000
280500             SET ASC-NO-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)          28050000
280600                 ASC-TEMP-NO-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)    28060000
280700                 ASC-BLOCK-MODIFIED(ASC-BLK-SUB)                  28070000
280800                                   TO TRUE                        28080000
280900         END-IF                                                   28090000
281000     END-IF.                                                      28100000
281100                                                                  28110000
281200/                                                                 28120000
281300*----------------------------------------------------------------*28130000
281400*  IF THE USER HITS THE SELECT-ALL KEY, SET THE SELECTIO SWITCH  *28140000
281500*  FOR ALL ITEMS.                                                *28150000
281600*----------------------------------------------------------------*28160000
281700                                                                  28170000
281800 2150-SELECT-ALL-ITEMS.                                           28180000
281900                                                                  28190000
282000     MOVE +1                       TO ASC-BLK-SUB.                28200000
282100                                                                  28210000
282200     PERFORM 2151-SET-SELECTED-INDS                               28220000
282300         VARYING ASC-ITEM-SUB                                     28230000
282400         FROM 1 BY 1                                              28240000
282500         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 28250000
282600                                                                  28260000
282700     ADD +1                        TO ASC-BLK-SUB.                28270000
282800                                                                  28280000
282900     PERFORM 2151-SET-SELECTED-INDS                               28290000
283000         VARYING ASC-ITEM-SUB                                     28300000
283100         FROM 1 BY 1                                              28310000
283200         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 28320000
283300                                                                  28330000
283400     MOVE ASC-LIST-ITEM-NUMBER(1 1)                               28340000
283500                                   TO PV-LIST-ITEM-NUMBER.        28350000
283600                                                                  28360000
283700     COMPUTE PV-FIRST-BLOCK-IN-ARRAY =                            28370000
283800         1 + ((PV-LIST-ITEM-NUMBER - 1) / PC-ITEMS-PER-PANEL).    28380000
283900                                                                  28390000
284000     IF (PV-FIRST-BLOCK-IN-ARRAY NOT = +1) OR                     28400000
284100        (ASC-HIGHEST-BLOCK-WRITTEN >   PC-MAX-BLOCKS-IN-ARRAY)    28410000
284200         MOVE +1                   TO ASC-BLK-SUB                 28420000
284300                                                                  28430000
284400         PERFORM 5100-WRITE-TEMP-STORAGE                          28440000
284500                                                                  28450000
284600         MOVE +1                   TO PV-BLOCK-NUMBER             28460000
284700                                                                  28470000
284800         COMPUTE PV-PREV-BLOCK-IN-ARRAY =                         28480000
284900             PV-FIRST-BLOCK-IN-ARRAY - 1                          28490000
285000                                                                  28500000
285100         PERFORM                                                  28510000
285200             UNTIL PV-BLOCK-NUMBER > PV-PREV-BLOCK-IN-ARRAY       28520000
285300                                                                  28530000
285400             PERFORM 4410-READ-TEMP-STORAGE                       28540000
285500                                                                  28550000
285600             PERFORM 2151-SET-SELECTED-INDS                       28560000
285700                 VARYING ASC-ITEM-SUB                             28570000
285800                 FROM 1 BY 1                                      28580000
285900                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          28590000
286000                                                                  28600000
286100             PERFORM 5100-WRITE-TEMP-STORAGE                      28610000
286200                                                                  28620000
286300             ADD +1                TO PV-BLOCK-NUMBER             28630000
286400         END-PERFORM                                              28640000
286500                                                                  28650000
286600         COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                         28660000
286700             PV-FIRST-BLOCK-IN-ARRAY + PC-MAX-BLOCKS-IN-ARRAY     28670000
286800                                                                  28680000
286900         PERFORM                                                  28690000
287000             UNTIL PV-NEXT-BLOCK-IN-ARRAY >                       28700000
287100                   ASC-HIGHEST-BLOCK-WRITTEN                      28710000
287200                                                                  28720000
287300             MOVE PV-NEXT-BLOCK-IN-ARRAY                          28730000
287400                                   TO PV-BLOCK-NUMBER             28740000
287500                                                                  28750000
287600             PERFORM 4410-READ-TEMP-STORAGE                       28760000
287700                                                                  28770000
287800             PERFORM 2151-SET-SELECTED-INDS                       28780000
287900                 VARYING ASC-ITEM-SUB                             28790000
288000                 FROM 1 BY 1                                      28800000
288100                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          28810000
288200                                                                  28820000
288300             PERFORM 5100-WRITE-TEMP-STORAGE                      28830000
288400                                                                  28840000
288500             ADD +1                TO PV-NEXT-BLOCK-IN-ARRAY      28850000
288600         END-PERFORM                                              28860000
288700                                                                  28870000
288800         MOVE PV-FIRST-BLOCK-IN-ARRAY                             28880000
288900                                   TO PV-BLOCK-NUMBER             28890000
289000                                                                  28900000
289100         PERFORM 4410-READ-TEMP-STORAGE                           28910000
289200     END-IF.                                                      28920000
289300                                                                  28930000
289400     MOVE ASC-NUMBER-OF-ITEMS-READ TO                             28940000
289500          ASC-NUMBER-OF-SELECTED-ITEMS.                           28950000
289600                                                                  28960000
289700     PERFORM 4400-MOVE-COMMAREA-TO-SCREEN.                        28970000
289800/                                                                 28980000
289900*----------------------------------------------------------------*28990000
290000*    MARK EACH ITEM AS BEING SELECTED.                           *29000000
290100*----------------------------------------------------------------*29010000
290200                                                                  29020000
290300 2151-SET-SELECTED-INDS.                                          29030000
290400                                                                  29040000
290500     IF  ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB ASC-ITEM-SUB)           29050000
290600             NOT EQUAL ZERO                                       29060000
290700         IF  NOT ASC-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)             29070000
290800             SET ASC-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)             29080000
290900                 ASC-TEMP-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)        29090000
291000                 ASC-BLOCK-MODIFIED(ASC-BLK-SUB)                  29100000
291100                                   TO TRUE                        29110000
291200         END-IF                                                   29120000
291300     END-IF.                                                      29130000
291400                                                                  29140000
291500/                                                                 29150000
291600*----------------------------------------------------------------*29160000
291700*  MOVE ALL OF THE FIELDS THAT WERE ENTERED / CHANGED ON THE     *29170000
291800*  SCREEN INTO THE COMMAREA.  ALL EDITTING IS DONE IN THE COMM.  *29180000
291900*----------------------------------------------------------------*29190000
292000 2200-MOVE-SCREEN-TO-COMMAREA.                                    29200000
292100                                                                  29210000
292200     MOVE PV-TOP-ITEM              TO PV-ITEM-IN-USE.             29220000
292300     MOVE +1                       TO PV-SUB.                     29230000
292400                                                                  29240000
292500     PERFORM 3300-SET-SUBSCRIPTS.                                 29250000
292600                                                                  29260000
292700     IF  ASTRTITL > ZERO                                          29270000
292800         MOVE ASTRTITI             TO ASC-START-ITEM-REQUEST      29280000
292900     ELSE                                                         29290000
293000         IF  ASTRTITF = DP015-ERASE-EOF                           29300000
293100             INITIALIZE ASC-START-ITEM-REQUEST                    29310000
293200         END-IF                                                   29320000
293300     END-IF.                                                      29330000
293400                                                                  29340000
293500     PERFORM 2210-MOVE-LINES-TO-COMMAREA                          29350000
293600         VARYING PV-SUB                                           29360000
293700         FROM 1 BY 1                                              29370000
293800         UNTIL PV-SUB > ASC-ITEMS-DISPLAYED.                      29380000
293900                                                                  29390000
294000/                                                                 29400000
294100*----------------------------------------------------------------*29410000
294200*  MOVE THE ENTERABLE FIELDS ON EACH LIST LINE INTO THE COMMAREA *29420000
294300*----------------------------------------------------------------*29430000
294400 2210-MOVE-LINES-TO-COMMAREA.                                     29440000
294500                                                                  29450000
294600     IF  MR-SELECTL (PV-SUB) > ZERO                               29460000
294700         SET ASC-BLOCK-MODIFIED (ASC-BLK-SUB)                     29470000
294800                                   TO TRUE                        29480000
294900         MOVE MR-SELECT (PV-SUB)   TO ASC-TEMP-SELECTED-SW        29490000
295000                                 (ASC-BLK-SUB, ASC-ITEM-SUB)      29500000
295100     ELSE                                                         29510000
295200         IF  MR-SELECTA (PV-SUB) = DP015-ERASE-EOF                29520000
295300             SET ASC-BLOCK-MODIFIED (ASC-BLK-SUB) TO TRUE         29530000
295400             MOVE SPACE            TO ASC-TEMP-SELECTED-SW        29540000
295500                                 (ASC-BLK-SUB, ASC-ITEM-SUB)      29550000
295600         END-IF                                                   29560000
295700     END-IF.                                                      29570000
295800                                                                  29580000
295900     ADD +1                        TO ASC-ITEM-SUB.               29590000
296000                                                                  29600000
296100     IF  ASC-ITEM-SUB > PC-ITEMS-PER-PANEL                        29610000
296200         ADD +1                    TO ASC-BLK-SUB                 29620000
296300         MOVE +1                   TO ASC-ITEM-SUB                29630000
296400     END-IF.                                                      29640000
296500                                                                  29650000
296600/                                                                 29660000
296700******************************************************************29670000
296800* GET THE KEYS OF THE NEXT SELECTED OBJECT FROM THE              *29680000
296900* INPUT SELECTED-ITEMS TEMP STORAGE QUEUE.                       *29690000
297000******************************************************************29700000
297100 2300-GET-NEXT-RECORD.                                            29710000
297200                                                                  29720000
297300     ADD +1                        TO ASC-SEL-SUB.                29730000
297400     IF ASC-SEL-SUB > AP301-MAX-ITEMS                             29740000
297500         ADD +1                    TO ASC-SEL-ITEM                29750000
297600         MOVE +1                   TO ASC-SEL-SUB                 29760000
297700     END-IF.                                                      29770000
297800     IF ASC-SEL-ITEM NOT > ASC-NUMBER-OF-TS-ITEMS                 29780000
297900         PERFORM 9100-READ-SEL-QUEUE                              29790000
298000         IF AP301-ITEM (ASC-SEL-SUB) > ZERO                       29800000
298100             SET AP301-INQ (ASC-SEL-SUB)           TO TRUE        29810000
298200             PERFORM 9200-REWRITE-LIST-QUEUE                      29820000
298300         ELSE                                                     29830000
298400             SUBTRACT +1 FROM ASC-SEL-SUB                         29840000
298500*            --- BOTTOM OF LIST ---                               29850000
298600             MOVE PC-TSYMSG-00070  TO DP020-MSG-NUMBER            29860000
298700             SET DP020-MSG-INFORMATIONAL                          29870000
298800                                   TO TRUE                        29880000
298900         END-IF                                                   29890000
299000     ELSE                                                         29900000
299100         SUBTRACT +1 FROM ASC-SEL-ITEM                            29910000
299200         MOVE AP301-MAX-ITEMS      TO ASC-SEL-SUB                 29920000
299300         MOVE PC-TSYMSG-00070      TO DP020-MSG-NUMBER            29930000
299400         SET DP020-MSG-INFORMATIONAL                              29940000
299500                                   TO TRUE                        29950000
299600     END-IF.                                                      29960000
299700                                                                  29970000
299800/                                                                 29980000
299900******************************************************************29990000
300000* GET THE KEYS OF THE PREVIOUS SELECTED OBJECT FROM THE          *30000000
300100* INPUT SELECTED-ITEMS TEMP STORAGE QUEUE.                       *30010000
300200******************************************************************30020000
300300 2330-GET-PREV-RECORD.                                            30030000
300400                                                                  30040000
300500     SUBTRACT +1 FROM ASC-SEL-SUB.                                30050000
300600     IF ASC-SEL-SUB < +1                                          30060000
300700         SUBTRACT +1 FROM ASC-SEL-ITEM                            30070000
300800         MOVE AP301-MAX-ITEMS      TO ASC-SEL-SUB                 30080000
300900     END-IF.                                                      30090000
301000                                                                  30100000
301100     IF ASC-SEL-ITEM > ZERO                                       30110000
301200         PERFORM 9100-READ-SEL-QUEUE                              30120000
301300     ELSE                                                         30130000
301400         MOVE +1                   TO ASC-SEL-ITEM                30140000
301500                                      ASC-SEL-SUB                 30150000
301600*        --- TOP OF LIST ---                                      30160000
301700         MOVE PC-TSYMSG-00069      TO DP020-MSG-NUMBER            30170000
301800         SET DP020-MSG-INFORMATIONAL                              30180000
301900                                   TO TRUE                        30190000
302000     END-IF.                                                      30200000
302100                                                                  30210000
302200/                                                                 30220000
302300*----------------------------------------------------------------*30230000
302400*  EDIT ALL OF THE DATA ON THE SCREEN AS IT RESIDES IN THE       *30240000
302500*  COMMAREA (EDITTING IS NOT DONE AGAINST THE SCREEN DIRECTLY).  *30250000
302600*----------------------------------------------------------------*30260000
302700 3000-EDIT-DATA-IN-COMMAREA.                                      30270000
302800                                                                  30280000
302900     SET PS-NO-ERROR               TO TRUE.                       30290000
303000                                                                  30300000
303100     PERFORM 3200-RESET-ATTRIBUTES.                               30310000
303200                                                                  30320000
303300     MOVE ASC-ITEMS-DISPLAYED      TO PV-SUB.                     30330000
303400**                                                                30340000
303500* CALCULATE THE POSITION OF THE LAST ITEM DISPLAYED.              30350000
303600* EDITTING IS DONE FROM THE BOTTOM UP.                            30360000
303700**                                                                30370000
303800     COMPUTE PV-ITEM-IN-USE = PV-TOP-ITEM +                       30380000
303900         ASC-ITEMS-DISPLAYED - 1.                                 30390000
304000                                                                  30400000
304100     PERFORM 3300-SET-SUBSCRIPTS.                                 30410000
304200*                                                                 30420000
304300     PERFORM 3300-EDIT-SELECTIONS                                 30430000
304400         VARYING PV-SUB                                           30440000
304500         FROM PV-SUB BY -1                                        30450000
304600         UNTIL PV-SUB < +1                                        30460000
304700                                                                  30470000
304800     IF  PS-NO-ERROR                                              30480000
304900         PERFORM 3400-CHECK-RANGE-SEQUENCE                        30490000
305000     END-IF.                                                      30500000
305100                                                                  30510000
305200     IF  ((PS-NO-ERROR)                                           30520000
305300       AND (ASC-START-OF-SELECTED-RANGE > ZERO)                   30530000
305400       AND (ASC-END-OF-SELECTED-RANGE > ZERO))                    30540000
305500             PERFORM 3500-MARK-RANGE-AS-SELECTED                  30550000
305600     END-IF.                                                      30560000
305700                                                                  30570000
305800     IF ASC-NUMBER-OF-SELECTED-ITEMS > +1                         30580000
305900         MOVE ASC-ITEMS-DISPLAYED  TO PV-SUB                      30590000
306000         PERFORM VARYING PV-SUB                                   30600000
306100             FROM PV-SUB BY -1                                    30610000
306200             UNTIL PV-SUB < +1 OR                                 30620000
306300                   MR-SELECT  (PV-SUB) = 'S'                      30630000
306400         END-PERFORM                                              30640000
306500         MOVE PC-TSYMSG-00047      TO DP020-MSG-NUMBER            30650000
306600         SET DP020-MSG-FATAL       TO TRUE                        30660000
306700         SET PS-ERROR              TO TRUE                        30670000
306800         IF MR-SELECT(PV-SUB) = 'S'                               30680000
306900             MOVE -1               TO MR-SELECTL (PV-SUB)         30690000
307000             SET DP030-SET-CURSOR-APPL-1                          30700000
307100                                   TO TRUE                        30710000
307200             MOVE DP015-RED        TO MR-SELECTC (PV-SUB)         30720000
307300             MOVE DP015-REVERSE    TO MR-SELECTH (PV-SUB)         30730000
307400         ELSE                                                     30740000
307500             SET DP030-SET-CURSOR-TRAILER                         30750000
307600                                   TO TRUE                        30760000
307700         END-IF                                                   30770000
307800         PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                     30780000
307900     END-IF.                                                      30790000
308000                                                                  30800000
308100/                                                                 30810000
308200*----------------------------------------------------------------*30820000
308300*    DETERMINE THE VALUE OF THE ITEM SUBSCRIPT BASED ON THE ITEM *30830000
308400*    CURRENTLY IN USE AND THE FIRST ITEM IN THE ARRAY.  THIS WILL*30840000
308500*    POSITION US IN THE 1ST BLOCK OF THE ARRAY.                  *30850000
308600*                                                                *30860000
308700*    IF THE ITEM SUBSCRIPT EXCEEDS THE MAXIMUM NUMBER OF ITEMS   *30870000
308800*    IN A BLOCK, RECALCULATE THE SUBSCRIPT BY SUBTRACTING OUT    *30880000
308900*    THE MAXIMUM NUMBER OF ITEMS.  THIS WILL CORRECTLY POSITION  *30890000
309000*    US IN THE 2ND BLOCK OF THE ARRAY.                           *30900000
309100*----------------------------------------------------------------*30910000
309200                                                                  30920000
309300 3300-SET-SUBSCRIPTS.                                             30930000
309400                                                                  30940000
309500     COMPUTE ASC-ITEM-SUB =                                       30950000
309600         (PV-ITEM-IN-USE - ASC-LIST-ITEM-NUMBER(1 1)) + 1.        30960000
309700                                                                  30970000
309800     IF ASC-ITEM-SUB > PC-ITEMS-PER-PANEL                         30980000
309900         SUBTRACT PC-ITEMS-PER-PANEL FROM ASC-ITEM-SUB            30990000
310000                                                                  31000000
310100         MOVE PC-MAX-BLOCKS-IN-ARRAY                              31010000
310200                                   TO ASC-BLK-SUB                 31020000
310300     ELSE                                                         31030000
310400         MOVE +1                   TO ASC-BLK-SUB                 31040000
310500     END-IF.                                                      31050000
310600                                                                  31060000
310700*----------------------------------------------------------------*31070000
310800*  RESET THE ATTRIBUTES OF ALL ENTERABLE FIELDS ON THE MAP.      *31080000
310900*----------------------------------------------------------------*31090000
311000                                                                  31100000
311100 3200-RESET-ATTRIBUTES.                                           31110000
311200                                                                  31120000
311300     MOVE DP015-UNP-ALP-NOR-OFF    TO ASTRTITA.                   31130000
311400     MOVE DP015-GREEN              TO ASTRTITC.                   31140000
311500     MOVE DP015-UNDERLINE          TO ASTRTITH.                   31150000
311600                                                                  31160000
311700     PERFORM                                                      31170000
311800         VARYING PV-SUB                                           31180000
311900         FROM 1 BY 1                                              31190000
312000         UNTIL PV-SUB > PC-ITEMS-PER-PANEL                        31200000
312100         MOVE DP015-UNP-ALP-NOR-OFF                               31210000
312200                                   TO MR-SELECTA (PV-SUB)         31220000
312300         MOVE DP015-GREEN          TO MR-SELECTC (PV-SUB)         31230000
312400         MOVE DP015-UNDERLINE      TO MR-SELECTH (PV-SUB)         31240000
312500     END-PERFORM.                                                 31250000
312600                                                                  31260000
312700/                                                                 31270000
312800*----------------------------------------------------------------*31280000
312900*  EDIT THE SELECTIONS MADE.  NOTE THAT THE 'SELECTED-SW' IS     *31290000
313000*  WHAT WAS PREVIOUSLY CHECKED AND CORRECT 'TEMP-SELECTED-SW'    *31300000
313100*  IS WHAT HAS JUST BEEN ENTERED AND HAS NOT BEEN EDITTED OR     *31310000
313200*  WAS ENTERED EARLIER, BUT DID NOT PASS THE EDITS.              *31320000
313300*----------------------------------------------------------------*31330000
313400 3300-EDIT-SELECTIONS.                                            31340000
313500                                                                  31350000
313600     EVALUATE TRUE                                                31360000
313700         WHEN ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)     31370000
313800             = ASC-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)         31380000
313900             CONTINUE                                             31390000
314000         WHEN ASC-TEMP-SELECT  (ASC-BLK-SUB ASC-ITEM-SUB)         31400000
314100             IF  NOT ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)        31410000
314200                 ADD +1            TO ASC-NUMBER-OF-SELECTED-ITEMS31420000
314300                 MOVE ASC-TEMP-SELECTED-SW                        31430000
314400                                     (ASC-BLK-SUB ASC-ITEM-SUB)   31440000
314500                                   TO ASC-SELECTED-SW             31450000
314600                                     (ASC-BLK-SUB ASC-ITEM-SUB)   31460000
314700             END-IF                                               31470000
314800                                                                  31480000
314900                                                                  31490000
315000         WHEN ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)     31500000
315100                 = SPACE                                          31510000
315200             EVALUATE TRUE                                        31520000
315300                 WHEN ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)       31530000
315400                     SUBTRACT +1 FROM ASC-NUMBER-OF-SELECTED-ITEMS31540000
315500                     MOVE SPACE    TO ASC-SELECTED-SW             31550000
315600                                     (ASC-BLK-SUB ASC-ITEM-SUB)   31560000
315700                                                                  31570000
315800                 WHEN ASC-BEGIN (ASC-BLK-SUB ASC-ITEM-SUB)        31580000
315900                     MOVE ZERO     TO ASC-START-OF-SELECTED-RANGE 31590000
316000                     MOVE SPACE    TO ASC-SELECTED-SW             31600000
316100                                     (ASC-BLK-SUB ASC-ITEM-SUB)   31610000
316200                                                                  31620000
316300                 WHEN ASC-END (ASC-BLK-SUB ASC-ITEM-SUB)          31630000
316400                     MOVE ZERO     TO ASC-END-OF-SELECTED-RANGE   31640000
316500                     MOVE SPACE    TO ASC-SELECTED-SW             31650000
316600                                     (ASC-BLK-SUB ASC-ITEM-SUB)   31660000
316700             END-EVALUATE                                         31670000
316800                                                                  31680000
316900         WHEN ASC-TEMP-BEGIN (ASC-BLK-SUB ASC-ITEM-SUB)           31690000
317000             IF  ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)            31700000
317100                 SUBTRACT +1 FROM ASC-NUMBER-OF-SELECTED-ITEMS    31710000
317200             END-IF                                               31720000
317300             PERFORM 3330-EDIT-RANGE                              31730000
317400                                                                  31740000
317500         WHEN ASC-TEMP-END (ASC-BLK-SUB ASC-ITEM-SUB)             31750000
317600             IF  ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)            31760000
317700                 SUBTRACT +1 FROM ASC-NUMBER-OF-SELECTED-ITEMS    31770000
317800             END-IF                                               31780000
317900             PERFORM 3330-EDIT-RANGE                              31790000
318000                                                                  31800000
318100         WHEN OTHER                                               31810000
318200             MOVE PC-TSYMSG-00005  TO DP020-MSG-NUMBER            31820000
318300             SET DP020-MSG-FATAL   TO TRUE                        31830000
318400             MOVE -1               TO MR-SELECTL (PV-SUB)         31840000
318500             SET DP030-SET-CURSOR-APPL-1                          31850000
318600                                   TO TRUE                        31860000
318700             MOVE DP015-RED        TO MR-SELECTC (PV-SUB)         31870000
318800             MOVE DP015-REVERSE    TO MR-SELECTH (PV-SUB)         31880000
318900             SET PS-ERROR          TO TRUE                        31890000
319000             IF  ASC-SELECT (ASC-BLK-SUB ASC-ITEM-SUB)            31900000
319100                 SUBTRACT 1 FROM ASC-NUMBER-OF-SELECTED-ITEMS     31910000
319200                 MOVE SPACE        TO ASC-SELECTED-SW             31920000
319300                                     (ASC-BLK-SUB ASC-ITEM-SUB)   31930000
319400             END-IF                                               31940000
319500     END-EVALUATE.                                                31950000
319600                                                                  31960000
319700     SUBTRACT +1 FROM PV-ITEM-IN-USE.                             31970000
319800     SUBTRACT +1 FROM ASC-ITEM-SUB.                               31980000
319900                                                                  31990000
320000     IF  ASC-ITEM-SUB < 1                                         32000000
320100         SUBTRACT +1 FROM ASC-BLK-SUB                             32010000
320200         MOVE PC-ITEMS-PER-PANEL   TO ASC-ITEM-SUB                32020000
320300     END-IF.                                                      32030000
320400                                                                  32040000
320500*----------------------------------------------------------------*32050000
320600*  IF A BEGINNING AND END OF RANGE WAS ENTERED TO SELECT A       *32060000
320700*  RANGE OF LINES, MAKE SURE THERE IS ONLY 1 BEGINNING AND 1     *32070000
320800*  ENDING AND MAKE SURE THAT THE BEGINNING IS BEFORE (LESS THAN) *32080000
320900*  THE ENDING.                                                   *32090000
321000*----------------------------------------------------------------*32100000
321100 3330-EDIT-RANGE.                                                 32110000
321200                                                                  32120000
321300     IF  ASC-TEMP-BEGIN (ASC-BLK-SUB ASC-ITEM-SUB)                32130000
321400         IF  ASC-START-OF-SELECTED-RANGE = ZERO                   32140000
321500             MOVE ASC-TEMP-SELECTED-SW  (ASC-BLK-SUB ASC-ITEM-SUB)32150000
321600                                   TO ASC-SELECTED-SW             32160000
321700                                        (ASC-BLK-SUB ASC-ITEM-SUB)32170000
321800             MOVE PV-ITEM-IN-USE   TO ASC-START-OF-SELECTED-RANGE 32180000
321900         ELSE                                                     32190000
322000             IF  ASC-START-OF-SELECTED-RANGE = PV-ITEM-IN-USE     32200000
322100                 CONTINUE                                         32210000
322200             ELSE                                                 32220000
322300*                -- ONLY ONE BEGINNING-OF-RANGE-ALLOWED --        32230000
322400                 MOVE PC-TSYMSG-00054                             32240000
322500                                   TO DP020-MSG-NUMBER            32250000
322600                 SET DP020-MSG-FATAL                              32260000
322700                                   TO TRUE                        32270000
322800                 MOVE -1           TO MR-SELECTL (PV-SUB)         32280000
322900                 SET DP030-SET-CURSOR-APPL-1                      32290000
323000                                   TO TRUE                        32300000
323100                 MOVE DP015-RED    TO MR-SELECTC (PV-SUB)         32310000
323200                 MOVE DP015-UNDERLINE                             32320000
323300                                   TO MR-SELECTH (PV-SUB)         32330000
323400                 SET PS-ERROR      TO TRUE                        32340000
323500             END-IF                                               32350000
323600         END-IF                                                   32360000
323700     ELSE                                                         32370000
323800         IF  ASC-END-OF-SELECTED-RANGE = ZERO                     32380000
323900             MOVE ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB) 32390000
324000                                   TO ASC-SELECTED-SW             32400000
324100                                     (ASC-BLK-SUB ASC-ITEM-SUB)   32410000
324200             MOVE PV-ITEM-IN-USE   TO ASC-END-OF-SELECTED-RANGE   32420000
324300         ELSE                                                     32430000
324400             IF  ASC-END-OF-SELECTED-RANGE = PV-ITEM-IN-USE       32440000
324500                 CONTINUE                                         32450000
324600             ELSE                                                 32460000
324700*                -- ONLY ONE END-OF-RANGE ALLOWED --              32470000
324800                 MOVE PC-TSYMSG-00055                             32480000
324900                                   TO DP020-MSG-NUMBER            32490000
325000                 SET DP020-MSG-FATAL                              32500000
325100                                   TO TRUE                        32510000
325200                 MOVE -1           TO MR-SELECTL (PV-SUB)         32520000
325300                 SET DP030-SET-CURSOR-APPL-1                      32530000
325400                                   TO TRUE                        32540000
325500                 SET PS-ERROR      TO TRUE                        32550000
325600             END-IF                                               32560000
325700         END-IF                                                   32570000
325800     END-IF.                                                      32580000
325900                                                                  32590000
326000*----------------------------------------------------------------*32600000
326100*  IF BOTH A BEGINNING AND END OF RANGE HAVE BEEN SPECIFIED,     *32610000
326200*  MAKE SURE THAT THE BEGINNING IS BEFORE (LESS THAN) THE END.   *32620000
326300*----------------------------------------------------------------*32630000
326400 3400-CHECK-RANGE-SEQUENCE.                                       32640000
326500                                                                  32650000
326600     IF  ASC-START-OF-SELECTED-RANGE > ZERO                       32660000
326700       AND  ASC-END-OF-SELECTED-RANGE > ZERO                      32670000
326800       AND  ASC-START-OF-SELECTED-RANGE >                         32680000
326900                                         ASC-END-OF-SELECTED-RANGE32690000
327000*        -- END-OF-RANGE BEFORE BEGINNING-OF-RANGE                32700000
327100         MOVE PC-TSYMSG-00052      TO DP020-MSG-NUMBER            32710000
327200         SET DP020-MSG-FATAL       TO TRUE                        32720000
327300         SET PS-ERROR              TO TRUE                        32730000
327400         PERFORM 3410-POSITION-AT-ERROR                           32740000
327500     END-IF.                                                      32750000
327600                                                                  32760000
327700*----------------------------------------------------------------*32770000
327800*  BECAUSE RANGES CAN SPAN ACROSS MULTIPLE PAGES, A SEPARATE     *32780000
327900*  PARAGRAPH (THIS ONE) IS NEEDED TO DETERMINE WHERE THE CURSOR  *32790000
328000*  SHOULD BE POSITIONED ON A RANGE ERROR.                        *32800000
328100*----------------------------------------------------------------*32810000
328200 3410-POSITION-AT-ERROR.                                          32820000
328300                                                                  32830000
328400     SET DP030-SET-CURSOR-APPL-1   TO TRUE.                       32840000
328500                                                                  32850000
328600     COMPUTE PV-SUB = ASC-START-OF-SELECTED-RANGE                 32860000
328700                    - PV-TOP-ITEM + 1.                            32870000
328800                                                                  32880000
328900     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      32890000
329000         CONTINUE                                                 32900000
329100     ELSE                                                         32910000
329200         MOVE -1                   TO MR-SELECTL (PV-SUB)         32920000
329300         MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         32930000
329400         MOVE DP015-RED            TO MR-SELECTC (PV-SUB)         32940000
329500     END-IF.                                                      32950000
329600                                                                  32960000
329700     COMPUTE PV-SUB = ASC-END-OF-SELECTED-RANGE                   32970000
329800                    - PV-TOP-ITEM + 1.                            32980000
329900                                                                  32990000
330000     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      33000000
330100         CONTINUE                                                 33010000
330200     ELSE                                                         33020000
330300         MOVE -1                   TO MR-SELECTL (PV-SUB)         33030000
330400         MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         33040000
330500         MOVE DP015-RED            TO MR-SELECTC (PV-SUB)         33050000
330600     END-IF.                                                      33060000
330700                                                                  33070000
330800/                                                                 33080000
330900*----------------------------------------------------------------*33090000
331000*    WHENEVER THE USER SELECTS AN ITEM AS THE BEGINNING RANGE    *33100000
331100*    AND ONE AS THE ENDING RANGE, MARK THESE ITEMS AS WELL AS    *33110000
331200*    THOSE THAT FALL IN THE RANGE AS BEING SELECTED.             *33120000
331300*----------------------------------------------------------------*33130000
331400                                                                  33140000
331500 3500-MARK-RANGE-AS-SELECTED.                                     33150000
331600                                                                  33160000
331700     MOVE +1                       TO ASC-BLK-SUB.                33170000
331800                                                                  33180000
331900     PERFORM 3510-MARK-SELECTED-INDS                              33190000
332000         VARYING ASC-ITEM-SUB                                     33200000
332100         FROM 1 BY 1                                              33210000
332200         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 33220000
332300                                                                  33230000
332400     ADD +1                        TO ASC-BLK-SUB.                33240000
332500                                                                  33250000
332600     PERFORM 3510-MARK-SELECTED-INDS                              33260000
332700         VARYING ASC-ITEM-SUB                                     33270000
332800         FROM 1 BY 1                                              33280000
332900         UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL.                 33290000
333000                                                                  33300000
333100     MOVE ASC-LIST-ITEM-NUMBER(1 1)                               33310000
333200                                   TO PV-LIST-ITEM-NUMBER.        33320000
333300                                                                  33330000
333400     COMPUTE PV-FIRST-BLOCK-IN-ARRAY =                            33340000
333500         1 + ((PV-LIST-ITEM-NUMBER - 1) /                         33350000
333600               PC-ITEMS-PER-PANEL).                               33360000
333700                                                                  33370000
333800     MOVE ASC-START-OF-SELECTED-RANGE                             33380000
333900                                   TO PV-START-OF-SELECTED-RANGE. 33390000
334000                                                                  33400000
334100     COMPUTE PV-FIRST-BLOCK-IN-RANGE =                            33410000
334200         1 + ((PV-START-OF-SELECTED-RANGE - 1) /                  33420000
334300               PC-ITEMS-PER-PANEL).                               33430000
334400                                                                  33440000
334500     MOVE ASC-END-OF-SELECTED-RANGE                               33450000
334600                                   TO PV-END-OF-SELECTED-RANGE.   33460000
334700                                                                  33470000
334800     COMPUTE PV-LAST-BLOCK-IN-RANGE =                             33480000
334900         1 + ((PV-END-OF-SELECTED-RANGE - 1) /                    33490000
335000               PC-ITEMS-PER-PANEL).                               33500000
335100                                                                  33510000
335200     COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                             33520000
335300         PV-FIRST-BLOCK-IN-ARRAY + 1.                             33530000
335400                                                                  33540000
335500     IF (PV-FIRST-BLOCK-IN-RANGE < PV-FIRST-BLOCK-IN-ARRAY) OR    33550000
335600        (PV-LAST-BLOCK-IN-RANGE  > PV-NEXT-BLOCK-IN-ARRAY)        33560000
335700         MOVE +1                   TO ASC-BLK-SUB                 33570000
335800         PERFORM 5100-WRITE-TEMP-STORAGE                          33580000
335900         COMPUTE PV-PREV-BLOCK-IN-ARRAY =                         33590000
336000             PV-FIRST-BLOCK-IN-ARRAY - 1                          33600000
336100                                                                  33610000
336200         PERFORM                                                  33620000
336300             UNTIL PV-FIRST-BLOCK-IN-RANGE >                      33630000
336400                   PV-PREV-BLOCK-IN-ARRAY                         33640000
336500             MOVE PV-FIRST-BLOCK-IN-RANGE                         33650000
336600                                   TO PV-BLOCK-NUMBER             33660000
336700             PERFORM 4410-READ-TEMP-STORAGE                       33670000
336800             PERFORM 3510-MARK-SELECTED-INDS                      33680000
336900                 VARYING ASC-ITEM-SUB                             33690000
337000                 FROM 1 BY 1                                      33700000
337100                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          33710000
337200             PERFORM 5100-WRITE-TEMP-STORAGE                      33720000
337300             ADD +1                TO PV-FIRST-BLOCK-IN-RANGE     33730000
337400         END-PERFORM                                              33740000
337500                                                                  33750000
337600         COMPUTE PV-NEXT-BLOCK-IN-ARRAY =                         33760000
337700             PV-FIRST-BLOCK-IN-ARRAY + PC-MAX-BLOCKS-IN-ARRAY     33770000
337800         PERFORM                                                  33780000
337900             UNTIL PV-NEXT-BLOCK-IN-ARRAY >                       33790000
338000                   PV-LAST-BLOCK-IN-RANGE                         33800000
338100             MOVE PV-NEXT-BLOCK-IN-ARRAY                          33810000
338200                                   TO PV-BLOCK-NUMBER             33820000
338300             PERFORM 4410-READ-TEMP-STORAGE                       33830000
338400             PERFORM 3510-MARK-SELECTED-INDS                      33840000
338500                 VARYING ASC-ITEM-SUB                             33850000
338600                 FROM 1 BY 1                                      33860000
338700                 UNTIL ASC-ITEM-SUB > PC-ITEMS-PER-PANEL          33870000
338800             PERFORM 5100-WRITE-TEMP-STORAGE                      33880000
338900             ADD +1                TO PV-NEXT-BLOCK-IN-ARRAY      33890000
339000         END-PERFORM                                              33900000
339100                                                                  33910000
339200         MOVE PV-FIRST-BLOCK-IN-ARRAY                             33920000
339300                                   TO PV-BLOCK-NUMBER             33930000
339400         PERFORM 4410-READ-TEMP-STORAGE                           33940000
339500     END-IF.                                                      33950000
339600                                                                  33960000
339700     MOVE +0                       TO ASC-START-OF-SELECTED-RANGE 33970000
339800                                      ASC-END-OF-SELECTED-RANGE.  33980000
339900                                                                  33990000
340000/                                                                 34000000
340100*----------------------------------------------------------------*34010000
340200* SET THE SELECTION INDICATOR TO 'S' WITHIN THE RANGE.           *34020000
340300*----------------------------------------------------------------*34030000
340400                                                                  34040000
340500 3510-MARK-SELECTED-INDS.                                         34050000
340600                                                                  34060000
340700     IF (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB ASC-ITEM-SUB) >         34070000
340800         ASC-START-OF-SELECTED-RANGE)                             34080000
340900     OR (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB ASC-ITEM-SUB) =         34090000
341000         ASC-START-OF-SELECTED-RANGE)                             34100000
341100                                                                  34110000
341200         IF (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB ASC-ITEM-SUB) <     34120000
341300             ASC-END-OF-SELECTED-RANGE)                           34130000
341400         OR (ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB ASC-ITEM-SUB) =     34140000
341500             ASC-END-OF-SELECTED-RANGE)                           34150000
341600                                                                  34160000
341700             IF NOT ASC-SELECT(ASC-BLK-SUB ASC-ITEM-SUB)          34170000
341800                 SET ASC-SELECT     (ASC-BLK-SUB  ASC-ITEM-SUB)   34180000
341900                     ASC-TEMP-SELECT(ASC-BLK-SUB  ASC-ITEM-SUB)   34190000
342000                                   TO TRUE                        34200000
342100                 SET ASC-BLOCK-MODIFIED(ASC-BLK-SUB)              34210000
342200                                   TO TRUE                        34220000
342300                 ADD +1            TO ASC-NUMBER-OF-SELECTED-ITEMS34230000
342400             END-IF                                               34240000
342500         END-IF                                                   34250000
342600     END-IF.                                                      34260000
342700                                                                  34270000
342800/                                                                 34280000
342900*----------------------------------------------------------------*34290000
343000*    INITIALIZE BOTH BLOCKS IN THE ARRAY.                        *34300000
343100*    INITIALIZE ALL COUNTERS AND FLAGS.                          *34310000
343200*    READ THE DATA BASE FOR THE 1ST TIME AND FILL UP THE ARRAY.  *34320000
343300*    DISPLAY THE PANEL TO USER.                                  *34330000
343400*----------------------------------------------------------------*34340000
343500                                                                  34350000
343600 4000-BUILD-INITIAL-PANEL.                                        34360000
343700                                                                  34370000
343800     INITIALIZE ASC-BLOCK-ENTRIES (1)                             34380000
343900                ASC-BLOCK-ENTRIES (2).                            34390000
344000                                                                  34400000
344100     MOVE +1                       TO ASC-BLK-SUB.                34410000
344200                                                                  34420000
344300     SET ASC-ITEMS-LEFT-ON-DB      TO TRUE.                       34430000
344400                                                                  34440000
344500     MOVE +0                       TO ASC-ITEM-SUB                34450000
344600                                      ASC-NUMBER-OF-ITEMS-READ    34460000
344700                                      ASC-NUMBER-OF-SELECTED-ITEMS34470000
344800                                      ASC-HIGHEST-BLOCK-WRITTEN   34480000
344900                                      ASC-START-OF-SELECTED-RANGE 34490000
345000                                      ASC-END-OF-SELECTED-RANGE   34500000
345100                                      ASC-ITEM-AT-TOP-OF-PANEL.   34510000
345200                                                                  34520000
345300     EXEC SQL                                                     34530000
345400         SET :ASC-CURRENT-TIMESTAMP = CURRENT TIMESTAMP           34540000
345500     END-EXEC.                                                    34550000
345600                                                                  34560000
345700     MOVE ASC-CURRENT-TIMESTAMP TO ASC-WORK-TIMESTAMP.            34570000
345800                                                                  34580000
345900     MOVE +0 TO PV-DB2-COUNT                                      34590000
346000                PV-BULK-COUNT                                     34600000
346100                PV-BY-DC-COUNT                                    34610000
346200                PV-BY-STORE-COUNT.                                34620000
346300                                                                  34630000
346400     SET PS-NO-RECON-ERROR    TO TRUE.                            34640000
346500                                                                  34650000
346600     MOVE ASC-KEY-PO-NBR      TO DK-PO-NBR.                       34660000
346700                                                                  34670000
346800     PERFORM 4001-CHECK-STORE-DC-BULK-COMBO.                      34680000
346900                                                                  34690000
347000     IF PS-NO-ERROR                                               34700000
347100         PERFORM 4002-DETERMINE-MATCH-LEVEL                       34710000
347200         IF ASC-MTCH-LVL-CDE = 'S' OR 'P'                         34720000
347300            PERFORM 4003-TABLE-STORE-NBRS                         34730000
347400         END-IF                                                   34740000
347500         IF ASC-MTCH-LVL-CDE = 'D'                                34750000
347600            PERFORM 4006-TABLE-DC-NBRS                            34760000
347700         END-IF                                                   34770000
347800                                                                  34780000
347900         IF PV-NBR-STRS  = +0                                     34790000
348000             IF PV-NBR-STRS-ON-TPOSTRR > +0                       34800000
348100**               -- ALREADY A RECONCILE IN PROCESS FOR THIS PO_NBR34810000
348200                 SET DP020-NEXT-ACT-APPL-ERROR                    34820000
348300                     DP020-MSG-FATAL                              34830000
348400                     PS-ERROR              TO TRUE                34840000
348500                 MOVE PC-TSYMSG-00905      TO DP020-MSG-NUMBER    34850000
348600             ELSE                                                 34860000
348700**               -- NO STORES FOUND WHICH REQUIRE RECONCILIATION -34870000
348800                 SET DP020-NEXT-ACT-APPL-ERROR                    34880000
348900                     DP020-MSG-FATAL                              34890000
349000                     PS-ERROR              TO TRUE                34900000
349100                 MOVE PC-TSYMSG-00903      TO DP020-MSG-NUMBER    34910000
349200             END-IF                                               34920000
349300         END-IF                                                   34930000
349400                                                                  34940000
349500         IF PS-NO-ERROR                                           34950000
349600             SET PS-NOT-VALID-INVC-PO TO TRUE                     34960000
349700             PERFORM 4005-VALIDATE-INVC-PO-COMBO                  34970000
349800             IF PS-VALID-INVC-PO                                  34980000
349900                 PERFORM 4007-CONTINUE-DATA-ACCESS                34990000
350000             ELSE                                                 35000000
350100**               -- NO INVOICES FOUND FOR THIS PO NUMBER --       35010000
350200                 SET DP020-NEXT-ACT-APPL-ERROR                    35020000
350300                     DP020-MSG-FATAL                              35030000
350400                     PS-ERROR              TO TRUE                35040000
350500                 MOVE PC-TSYMSG-00903      TO DP020-MSG-NUMBER    35050000
350600             END-IF                                               35060000
350700         END-IF                                                   35070000
350800     END-IF.                                                      35080000
350900/                                                                 35090000
351000*----------------------------------------------------------------*35100000
351100*    DETERMINE IF THERE ARE SOME INVOICES ENTERED "BY STORE",    *35110000
351200*    "BY DC" AND SOME ENTERED "BULK".                            *35120000
351300*    IF SO, RETURN AN ERROR.   ALL INVOICES FOR A PO MUST BE     *35130000
351400*    ENTERED EITHER "BULK" (MTCH_LVL_CDE = P), "BY DC" (MTCH_LVL_*35140000
351500*    CDE = D) OR "BY STORE" (MTCH_LVL_CDE = S).                  *35150000
351600*----------------------------------------------------------------*35160000
351700 4001-CHECK-STORE-DC-BULK-COMBO.                                  35170000
351800                                                                  35180000
351900***  COUNT HOW MANY "BULK" INVOICES    (MATCH LEVEL CODE = P)     35190000
352000                                                                  35200000
352100     MOVE +0    TO PV-BULK-COUNT.                                 35210000
352200                                                                  35220000
352300     EXEC SQL                                                     35230000
352400     SELECT COUNT(*)                                              35240000
352500         INTO   :PV-BULK-COUNT                                    35250000
352600         FROM   TINVOIC B                                         35260000
352700         WHERE  B.PO_NBR              = :DK-PO-NBR                35270000
352800         AND    B.STATUS_CDE          IN ('EN','RC','OB','IB',    35280000
352910                                          'RL','PJ')              35291051
352920*                                         'RL')                   35292051
353000         AND    B.INVC_TYP_CDE        IN ('MI', 'RI')             35300000
353100         AND    B.MTCH_LVL_CDE        = 'P'                       35310000
353200     END-EXEC.                                                    35320000
353300                                                                  35330000
353400     EVALUATE TRUE                                                35340000
353500         WHEN SQLCODE = +0                                        35350000
353600              CONTINUE                                            35360000
353700         WHEN SQLCODE  NOT = +0                                   35370000
353800              MOVE '4001-CHECK-STORE-BULK-COMBO'                  35380000
353900                               TO DP013-PARAGRAPH                 35390000
354000              MOVE 'COUNT BULK INVCS'                             35400000
354100                               TO DP013-MESSAGE-TEXT (1)          35410000
354200              MOVE SQLCA       TO DP013-SQLCA                     35420000
354300              SET DP013-DB2-ABEND                                 35430000
354400                               TO TRUE                            35440000
354500              PERFORM DP013-0000-PROCESS-ABEND                    35450000
354600     END-EVALUATE.                                                35460000
354700                                                                  35470000
354800***  COUNT HOW MANY BY DC INVOICES    (MATCH LEVEL CODE = D)      35480000
354900                                                                  35490000
355000     MOVE +0    TO PV-BY-DC-COUNT.                                35500000
355100                                                                  35510000
355200     EXEC SQL                                                     35520000
355300     SELECT COUNT(*)                                              35530000
355400         INTO   :PV-BY-DC-COUNT                                   35540000
355500         FROM   TINVOIC B                                         35550000
355600         WHERE  B.PO_NBR              = :DK-PO-NBR                35560000
355700         AND    B.STATUS_CDE          IN ('EN','RC','OB','IB',    35570000
355800                                          'RL','PJ')              35580051
355810*                                         'RL')                   35581051
355900         AND    B.INVC_TYP_CDE        IN ('MI', 'RI')             35590000
356000         AND    B.MTCH_LVL_CDE        = 'D'                       35600000
356100     END-EXEC.                                                    35610000
356200                                                                  35620000
356300     EVALUATE TRUE                                                35630000
356400         WHEN SQLCODE = +0                                        35640000
356500              CONTINUE                                            35650000
356600         WHEN SQLCODE  NOT = +0                                   35660000
356700              MOVE '4001-CHECK-STORE-BULK-COMBO'                  35670000
356800                               TO DP013-PARAGRAPH                 35680000
356900              MOVE 'COUNT BY DC INVCS'                            35690000
357000                               TO DP013-MESSAGE-TEXT (1)          35700000
357100              MOVE SQLCA       TO DP013-SQLCA                     35710000
357200              SET DP013-DB2-ABEND                                 35720000
357300                               TO TRUE                            35730000
357400              PERFORM DP013-0000-PROCESS-ABEND                    35740000
357500     END-EVALUATE.                                                35750000
357600                                                                  35760000
357700***  COUNT HOW MANY BY STORE INVOICES    (MATCH LEVEL CODE = S)   35770000
357800                                                                  35780000
357900     MOVE +0    TO PV-BY-STORE-COUNT.                             35790000
358000                                                                  35800000
358100     EXEC SQL                                                     35810000
358200     SELECT COUNT(*)                                              35820000
358300         INTO   :PV-BY-STORE-COUNT                                35830000
358400         FROM   TINVOIC B                                         35840000
358500         WHERE  B.PO_NBR              = :DK-PO-NBR                35850000
358600         AND    B.STATUS_CDE          IN ('EN','RC','OB','IB',    35860000
358700                                          'RL','PJ')              35870051
358710*                                         'RL')                   35871051
358800         AND    B.INVC_TYP_CDE        IN ('MI', 'RI')             35880000
358900         AND    B.MTCH_LVL_CDE        = 'S'                       35890000
359000     END-EXEC.                                                    35900000
359100                                                                  35910000
359200     EVALUATE TRUE                                                35920000
359300         WHEN SQLCODE = +0                                        35930000
359400              CONTINUE                                            35940000
359500         WHEN SQLCODE  NOT = +0                                   35950000
359600              MOVE '4001-CHECK-STORE-BULK-COMBO'                  35960000
359700                               TO DP013-PARAGRAPH                 35970000
359800              MOVE 'COUNT BY STORE INVCS'                         35980000
359900                               TO DP013-MESSAGE-TEXT (1)          35990000
360000              MOVE SQLCA       TO DP013-SQLCA                     36000000
360100              SET DP013-DB2-ABEND                                 36010000
360200                               TO TRUE                            36020000
360300              PERFORM DP013-0000-PROCESS-ABEND                    36030000
360400     END-EVALUATE.                                                36040000
360500                                                                  36050000
360600                                                                  36060000
360700***  COMPARE THE 3 COUNTERS TO DETERMINE IF THERE IS A MIX OF     36070000
360800***  BULK, BY DC AND BY STORE INVOICES THAT ARE INVOLVED IN       36080000
360900***  THE RECONCILIATION OF THE PO BEING PROCESSED.  IF MORE       36090000
361000***  THAN ONE OF THE THREE COUNTERS IS GREATER THAN ZERO          36100000
361100***  THEN THE PO CANNOT BE RECONCILED AND AN ERROR CONDITION      36110000
361200***  EXISTS.                                                      36120000
361300     IF (PV-BULK-COUNT > +0) AND                                  36130000
361400        (PV-BY-DC-COUNT > +0) AND                                 36140000
361500        (PV-BY-STORE-COUNT > +0) AND                              36150000
361600         PS-NO-RECON-ERROR                                        36160000
361700        SET PS-RECON-ERROR-COND TO TRUE                           36170000
361800     END-IF.                                                      36180000
361900     IF (PV-BULK-COUNT > +0) AND                                  36190000
362000        (PV-BY-STORE-COUNT > +0) AND                              36200000
362100         PS-NO-RECON-ERROR                                        36210000
362200        SET PS-RECON-ERROR-COND TO TRUE                           36220000
362300     END-IF.                                                      36230000
362400     IF (PV-BULK-COUNT > +0) AND                                  36240000
362500        (PV-BY-DC-COUNT > +0) AND                                 36250000
362600         PS-NO-RECON-ERROR                                        36260000
362700        SET PS-RECON-ERROR-COND TO TRUE                           36270000
362800     END-IF.                                                      36280000
362900     IF (PV-BY-DC-COUNT > +0) AND                                 36290000
363000        (PV-BY-STORE-COUNT > +0) AND                              36300000
363100         PS-NO-RECON-ERROR                                        36310000
363200        SET PS-RECON-ERROR-COND TO TRUE                           36320000
363300     END-IF.                                                      36330000
363400                                                                  36340000
363500     IF PS-RECON-ERROR-COND                                       36350000
363600*** CANNOT RECONCILE; A MIX OF BULK AND/OR DC AND/OR STORE        36360000
363700*** INVOICES FOUND                                                36370000
363800        SET PS-ERROR                                              36380000
363900            DP020-MSG-FATAL                                       36390000
364000            DP020-NEXT-ACT-APPL-ERROR                             36400000
364100            ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                       36410000
364200        MOVE PC-TSYMSG-03520 TO DP020-MSG-NUMBER                  36420000
364300*       SET PS-NO-RECON-ERROR TO TRUE                             36430000
364400     END-IF.                                                      36440000
364500                                                                  36450000
364600/                                                                 36460000
364700*----------------------------------------------------------------*36470000
364800*    DETERMINE WHAT THE DISTINCT MATCH LEVEL IS AND THEN         *36480000
364900*    PERFORM THE APPROPRIATE PARAGRAPH FOR THE LIST DISPLAY.     *36490000
365000*----------------------------------------------------------------*36500000
365100 4002-DETERMINE-MATCH-LEVEL.                                      36510000
365200                                                                  36520000
365300     INITIALIZE DP013-DB2-INFO.                                   36530000
365400     MOVE +0 TO PV-MTCH-LVL-COUNT.                                36540000
365500     MOVE '4002-DETERMINE-MATCH-LEVEL'   TO DP013-PARAGRAPH.      36550000
365600     MOVE 'TINVOIC'            TO DP013-DB2-TABLE-NAME (1).       36560000
365700     MOVE '       '            TO DP013-DB2-TABLE-NAME (2).       36570000
365800     MOVE '       '            TO DP013-DB2-TABLE-NAME (3).       36580000
365900     MOVE '       '            TO DP013-DB2-TABLE-NAME (4).       36590000
366000     MOVE '       '            TO DP013-DB2-TABLE-NAME (5).       36600000
366100     PERFORM                                                      36610000
366200         WITH TEST AFTER                                          36620000
366300         VARYING PV-RETRY-COUNTER                                 36630000
366400         FROM 1 BY 1                                              36640000
366500         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               36650000
366600            OR (SQLCODE = +0))                                    36660000
366700                                                                  36670000
366800         EXEC SQL                                                 36680000
366900             OPEN MTCH_LVL_CDE_CSR                                36690000
367000         END-EXEC                                                 36700000
367100                                                                  36710000
367200         EVALUATE TRUE                                            36720000
367300             WHEN SQLCODE = +0                                    36730000
367400                  CONTINUE                                        36740000
367500             WHEN SQLCODE = -904                                  36750000
367600             WHEN SQLCODE = -913                                  36760000
367700                  CONTINUE                                        36770000
367800             WHEN SQLWARN0 NOT = SPACE                            36780000
367900             WHEN SQLCODE  NOT = +0                               36790000
368000                  MOVE 'OPEN CURSOR'                              36800000
368100                                   TO DP013-MESSAGE-TEXT (1)      36810000
368200                  MOVE SQLCA       TO DP013-SQLCA                 36820000
368300                  SET DP013-DB2-ABEND                             36830000
368400                                   TO TRUE                        36840000
368500                  PERFORM DP013-0000-PROCESS-ABEND                36850000
368600         END-EVALUATE                                             36860000
368700     END-PERFORM.                                                 36870000
368800                                                                  36880000
368900     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        36890000
369000         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              36900000
369100                                   TO DP013-MESSAGE-TEXT (1)      36910000
369200         MOVE SQLCA                TO DP013-SQLCA                 36920000
369300         SET DP013-DB2-ABEND       TO TRUE                        36930000
369400         PERFORM DP013-0000-PROCESS-ABEND                         36940000
369500     END-IF.                                                      36950000
369600                                                                  36960000
369700     PERFORM                                                      36970000
369800         UNTIL SQLCODE = +100                                     36980000
369900                                                                  36990000
370000         EXEC SQL                                                 37000000
370100            FETCH MTCH_LVL_CDE_CSR                                37010000
370200             INTO :PV-MTCH-LVL-CDE                                37020000
370300         END-EXEC                                                 37030000
370400                                                                  37040000
370500         EVALUATE TRUE                                            37050000
370600             WHEN SQLCODE = +0                                    37060000
370700                  ADD +1 TO PV-MTCH-LVL-COUNT                     37070000
370800                                                                  37080000
370900             WHEN SQLCODE = +100                                  37090000
371000                  CONTINUE                                        37100000
371100             WHEN OTHER                                           37110000
371200                  MOVE 'FETCH CURSOR'                             37120000
371300                                   TO DP013-MESSAGE-TEXT (1)      37130000
371400                  MOVE SQLCA       TO DP013-SQLCA                 37140000
371500                  SET DP013-DB2-ABEND                             37150000
371600                                   TO TRUE                        37160000
371700                  PERFORM DP013-0000-PROCESS-ABEND                37170000
371800         END-EVALUATE                                             37180000
371900     END-PERFORM.                                                 37190000
372000                                                                  37200000
372100     EXEC SQL                                                     37210000
372200         CLOSE MTCH_LVL_CDE_CSR                                   37220000
372300     END-EXEC.                                                    37230000
372400                                                                  37240000
372500     IF PV-MTCH-LVL-COUNT = +1                                    37250000
372600        MOVE PV-MTCH-LVL-CDE TO DK-MTCH-LVL-CDE                   37260000
372700                                ASC-MTCH-LVL-CDE                  37270000
372800     ELSE                                                         37280000
372900*** CANNOT RECONCILE; CANNOT DETERMINE THE CORRECT MATCH LEVEL    37290000
373000        SET PS-ERROR                                              37300000
373100            DP020-MSG-FATAL                                       37310000
373200            DP020-NEXT-ACT-APPL-ERROR TO TRUE                     37320000
373300        MOVE PC-TSYMSG-03521 TO DP020-MSG-NUMBER                  37330000
373400     END-IF.                                                      37340000
373500                                                                  37350000
373600/                                                                 37360000
373700*----------------------------------------------------------------*37370000
373800*    CREATE AN ARRAY OF STORES THAT SHOULD BE RECONCILED.  AT    *37380000
373900*    LEAST ONE INVOICE MUST BE ENTERED (WITH ITS DETAIL) FOR THE *37390000
374000*    STORE BEFORE THE STORE WILL BE INCLUDED IN THE LIST TO      *37400000
374100*    PROCESS.                                                    *37410000
374200*----------------------------------------------------------------*37420000
374300 4003-TABLE-STORE-NBRS.                                           37430000
374400                                                                  37440000
374500     INITIALIZE DP013-DB2-INFO.                                   37450000
374600     MOVE '4003-TABLE-STORE-NBRS'   TO DP013-PARAGRAPH.           37460000
374700     MOVE 'TINVOIC'            TO DP013-DB2-TABLE-NAME (1).       37470000
374800     MOVE '       '            TO DP013-DB2-TABLE-NAME (2).       37480000
374900     MOVE '       '            TO DP013-DB2-TABLE-NAME (3).       37490000
375000     MOVE '       '            TO DP013-DB2-TABLE-NAME (4).       37500000
375100     MOVE '       '            TO DP013-DB2-TABLE-NAME (5).       37510000
375200                                                                  37520000
375300     PERFORM                                                      37530000
375400         WITH TEST AFTER                                          37540000
375500         VARYING PV-RETRY-COUNTER                                 37550000
375600         FROM 1 BY 1                                              37560000
375700         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               37570000
375800            OR (SQLCODE = +0))                                    37580000
375900                                                                  37590000
376000         EXEC SQL                                                 37600000
376100             OPEN STR_NBR_CSR                                     37610000
376200         END-EXEC                                                 37620000
376300                                                                  37630000
376400         EVALUATE TRUE                                            37640000
376500             WHEN SQLCODE = +0                                    37650000
376600                  CONTINUE                                        37660000
376700             WHEN SQLCODE = -904                                  37670000
376800             WHEN SQLCODE = -913                                  37680000
376900                  CONTINUE                                        37690000
377000             WHEN SQLWARN0 NOT = SPACE                            37700000
377100             WHEN SQLCODE  NOT = +0                               37710000
377200                  MOVE 'OPEN CURSOR'                              37720000
377300                                   TO DP013-MESSAGE-TEXT (1)      37730000
377400                  MOVE SQLCA       TO DP013-SQLCA                 37740000
377500                  SET DP013-DB2-ABEND                             37750000
377600                                   TO TRUE                        37760000
377700                  PERFORM DP013-0000-PROCESS-ABEND                37770000
377800         END-EVALUATE                                             37780000
377900     END-PERFORM.                                                 37790000
378000                                                                  37800000
378100     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        37810000
378200         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              37820000
378300                                   TO DP013-MESSAGE-TEXT (1)      37830000
378400         MOVE SQLCA                TO DP013-SQLCA                 37840000
378500         SET DP013-DB2-ABEND       TO TRUE                        37850000
378600         PERFORM DP013-0000-PROCESS-ABEND                         37860000
378700     END-IF.                                                      37870000
378800                                                                  37880000
378900     INITIALIZE SQW-STORE-TABLE.                                  37890000
379000     MOVE +0 TO SQW-STR-SUB                                       37900000
379100                PV-NBR-STRS.                                      37910000
379200     PERFORM                                                      37920000
379300         UNTIL SQLCODE = +100                                     37930000
379400                                                                  37940000
379500         EXEC SQL                                                 37950000
379600            FETCH STR_NBR_CSR                                     37960000
379700             INTO :PV-STR-NBR                                     37970000
379800                 ,:PV-STR-DC-NBR                                  37980000
379900         END-EXEC                                                 37990000
380000                                                                  38000000
380100         EVALUATE TRUE                                            38010000
380200             WHEN SQLCODE = +0                                    38020000
380300                  MOVE +0    TO PV-DB2-COUNT                      38030000
380400                                                                  38040000
380500***                CHECK IF PREVIOUS RECON IS PENDING FOR PO/STORE38050000
380600                  PERFORM 4004-CHECK-TPOSTRR                      38060000
380700                                                                  38070000
380800                  IF PV-DB2-COUNT = +0                            38080000
380900***                    NO PENDING RECON, SO INCLUDE STORE IN LIST 38090000
381000                      ADD +1           TO SQW-STR-SUB             38100000
381100                                          ASC-STR-SUB-N           38110000
381200                                          PV-NBR-STRS             38120000
381300                      MOVE PV-STR-NBR  TO                         38130000
381400                           ASC-STR-NBR-N                          38140000
381500                           SQW-STR-NBR(SQW-STR-SUB)               38150000
381600                      MOVE PV-STR-DC-NBR  TO                      38160000
381700                           SQW-STR-DC-NBR(SQW-STR-SUB)            38170000
381800*                     IF SQW-STR-SUB = +1                         38180000
381900*                         IF PV-STR-NBR = +0                      38190000
382000*                             SET PROCESSING-BULK     TO TRUE     38200000
382100*                         ELSE                                    38210000
382200*                             SET PROCESSING-BY-STORE TO TRUE     38220000
382300*                         END-IF                                  38230000
382400*                     END-IF                                      38240000
382500                  ELSE                                            38250000
382600***                    PREVIOUS RECON IS PENDING                  38260000
382700                      ADD PV-DB2-COUNT TO PV-NBR-STRS-ON-TPOSTRR  38270000
382800                  END-IF                                          38280000
382900             WHEN SQLCODE = +100                                  38290000
383000                  CONTINUE                                        38300000
383100             WHEN OTHER                                           38310000
383200                  MOVE 'FETCH CURSOR'                             38320000
383300                                   TO DP013-MESSAGE-TEXT (1)      38330000
383400                  MOVE SQLCA       TO DP013-SQLCA                 38340000
383500                  SET DP013-DB2-ABEND                             38350000
383600                                   TO TRUE                        38360000
383700                  PERFORM DP013-0000-PROCESS-ABEND                38370000
383800         END-EVALUATE                                             38380000
383900     END-PERFORM.                                                 38390000
384000                                                                  38400000
384100     EXEC SQL                                                     38410000
384200         CLOSE STR_NBR_CSR                                        38420000
384300     END-EXEC.                                                    38430000
384400                                                                  38440000
384500     PERFORM 9400-WRITE-STORE-QUEUE.                              38450000
384600                                                                  38460000
384700***   POSITION ON A SPECIFIC STORE, BASED ON BUILD INIT OR        38470000
384800***   SCROLLING                                                   38480000
384900     IF PC-PR-PENDING-END                                         38490000
385000        IF ASC-SAVE-STR-NBR = 0                                   38500000
385100           MOVE +1 TO SQW-STR-SUB                                 38510000
385200                      ASC-STR-SUB-N                               38520000
385300        ELSE                                                      38530000
385400           PERFORM VARYING SQW-STR-SUB FROM 1 BY 1                38540000
385500             UNTIL (SQW-STR-NBR(SQW-STR-SUB) >                    38550000
385600                    ASC-SAVE-STR-NBR) OR                          38560000
385700                   (SQW-STR-SUB > PV-NBR-STRS)                    38570000
385800           END-PERFORM                                            38580000
385900           IF SQW-STR-SUB > PV-NBR-STRS                           38590000
386000              MOVE +1 TO SQW-STR-SUB                              38600000
386100                         ASC-STR-SUB-N                            38610000
386200           END-IF                                                 38620000
386300        END-IF                                                    38630000
386400     ELSE                                                         38640000
386500        IF ASC-KEY-STR-NBR > 0                                    38650000
386600           PERFORM VARYING SQW-STR-SUB FROM 1 BY 1 UNTIL          38660000
386700               SQW-STR-NBR(SQW-STR-SUB) = ASC-KEY-STR-NBR OR      38670000
386800               SQW-STR-SUB > PV-NBR-STRS                          38680000
386900           END-PERFORM                                            38690000
387000           IF SQW-STR-SUB > PV-NBR-STRS                           38700000
387100               MOVE +1 TO SQW-STR-SUB                             38710000
387200                          ASC-STR-SUB-N                           38720000
387300           END-IF                                                 38730000
387400        ELSE                                                      38740000
387500           MOVE +1 TO SQW-STR-SUB                                 38750000
387600                      ASC-STR-SUB-N                               38760000
387700        END-IF                                                    38770000
387800     END-IF.                                                      38780000
387900                                                                  38790000
388000     MOVE SQW-STR-SUB              TO ASC-STR-SUB-N.              38800000
388100     MOVE SQW-STR-NBR(SQW-STR-SUB) TO DK-STR-NBR                  38810000
388200                                      ASC-STR-NBR-N               38820000
388300                                      ASC-KEY-STR-NBR.            38830000
388400                                                                  38840000
388500     MOVE SQW-STR-DC-NBR(SQW-STR-SUB) TO ASC-KEY-STR-DC-NBR.      38850000
388600                                                                  38860000
388700/                                                                 38870000
388800 4004-CHECK-TPOSTRR.                                              38880000
388900                                                                  38890000
389000     EXEC SQL                                                     38900000
389100         SELECT COUNT(*)                                          38910000
389200           INTO :PV-DB2-COUNT                                     38920000
389300           FROM TPOSTRR                                           38930000
389400          WHERE PO_NBR         = :ASC-KEY-PO-NBR                  38940000
389500            AND (STR_NBR       = :PV-STR-NBR                      38950000
389600                 OR MTCH_LVL_CDE NOT IN (:ASC-MTCH-LVL-CDE))      38960000
389700            AND STATUS_CDE    IN (' ', 'I')                       38970000
389800     END-EXEC.                                                    38980000
389900                                                                  38990000
390000     EVALUATE TRUE                                                39000000
390100         WHEN SQLCODE = +0                                        39010000
390200              CONTINUE                                            39020000
390300         WHEN OTHER                                               39030000
390400              MOVE '4004-CHECK-TPOSTRR'                           39040000
390500                                   TO DP013-PARAGRAPH             39050000
390600              MOVE 'COUNT TPOSTRR'                                39060000
390700                                   TO DP013-MESSAGE-TEXT (1)      39070000
390800              MOVE SQLCA           TO DP013-SQLCA                 39080000
390900              MOVE 'TPOSTRR'       TO DP013-DB2-TABLE-NAME (1)    39090000
391000              SET DP013-DB2-ABEND  TO TRUE                        39100000
391100              PERFORM DP013-0000-PROCESS-ABEND                    39110000
391200     END-EVALUATE.                                                39120000
391300                                                                  39130000
391400 4005-VALIDATE-INVC-PO-COMBO.                                     39140000
391500                                                                  39150000
391600     EXEC SQL                                                     39160000
391700      SELECT '1'                                                  39170000
391800       INTO  :PV-ONE                                              39180000
391900        FROM SYSIBM.SYSDUMMY1 X                                   39190000
392000       WHERE EXISTS (SELECT 1                                     39200000
392100                     FROM  TINVOIC A                              39210000
392200                     WHERE A.PO_NBR        = :ASC-KEY-PO-NBR      39220000
392300*                      AND A.STATUS_CDE   IN ('EN','RC','OB','IB')39230051
392310                       AND A.STATUS_CDE   IN                      39231051
392320                                       ('EN','RC','OB','IB','PJ') 39232051
392400                       AND A.INVC_TYP_CDE IN ('MI','RI')          39240000
392500                       AND X.IBMREQD = X.IBMREQD)                 39250000
392600     END-EXEC.                                                    39260000
392700                                                                  39270000
392800     EVALUATE TRUE                                                39280000
392900         WHEN SQLCODE = +0                                        39290000
393000             SET PS-VALID-INVC-PO TO TRUE                         39300000
393100         WHEN SQLCODE = +0                                        39310000
393200             SET PS-NOT-VALID-INVC-PO TO TRUE                     39320000
393300         WHEN OTHER                                               39330000
393400             MOVE '4005-SELECT-TINVOIC'                           39340000
393500                               TO DP013-PARAGRAPH                 39350000
393600             MOVE 'SELECT ON TINVOIC'                             39360000
393700                               TO DP013-MESSAGE-TEXT (1)          39370000
393800             MOVE SQLCA        TO DP013-SQLCA                     39380000
393900             MOVE 'TINVOIC'    TO DP013-DB2-TABLE-NAME (1)        39390000
394000             MOVE SPACES       TO DP013-DB2-TABLE-NAME (2)        39400000
394100             SET DP013-DB2-ABEND                                  39410000
394200                 DP013-XCTL-DISPLAY-RESTART                       39420000
394300                               TO TRUE                            39430000
394400             PERFORM DP013-0000-PROCESS-ABEND                     39440000
394500     END-EVALUATE.                                                39450000
394600/                                                                 39460000
394700*----------------------------------------------------------------*39470000
394800*    CREATE AN ARRAY OF DC NBRS THAT SHOULD BE RECONCILED.  AT   *39480000
394900*    LEAST ONE INVOICE MUST BE ENTERED (WITH ITS DETAIL) FOR THE *39490000
395000*    DC BEFORE THE DC WILL BE INCLUDED IN THE LIST TO PROCESS    *39500000
395100*----------------------------------------------------------------*39510000
395200 4006-TABLE-DC-NBRS.                                              39520000
395300                                                                  39530000
395400     INITIALIZE DP013-DB2-INFO.                                   39540000
395500     MOVE '4006-TABLE-DC-NBRS' TO DP013-PARAGRAPH.                39550000
395600     MOVE 'TINVOIC'            TO DP013-DB2-TABLE-NAME (1).       39560000
395700     MOVE '       '            TO DP013-DB2-TABLE-NAME (2).       39570000
395800     MOVE '       '            TO DP013-DB2-TABLE-NAME (3).       39580000
395900     MOVE '       '            TO DP013-DB2-TABLE-NAME (4).       39590000
396000     MOVE '       '            TO DP013-DB2-TABLE-NAME (5).       39600000
396100                                                                  39610000
396200     PERFORM                                                      39620000
396300         WITH TEST AFTER                                          39630000
396400         VARYING PV-RETRY-COUNTER                                 39640000
396500         FROM 1 BY 1                                              39650000
396600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               39660000
396700            OR (SQLCODE = +0))                                    39670000
396800                                                                  39680000
396900         EXEC SQL                                                 39690000
397000             OPEN DC_NBR_CSR                                      39700000
397100         END-EXEC                                                 39710000
397200                                                                  39720000
397300         EVALUATE TRUE                                            39730000
397400             WHEN SQLCODE = +0                                    39740000
397500                  CONTINUE                                        39750000
397600             WHEN SQLCODE = -904                                  39760000
397700             WHEN SQLCODE = -913                                  39770000
397800                  CONTINUE                                        39780000
397900             WHEN SQLWARN0 NOT = SPACE                            39790000
398000             WHEN SQLCODE  NOT = +0                               39800000
398100                  MOVE 'OPEN CURSOR'                              39810000
398200                                   TO DP013-MESSAGE-TEXT (1)      39820000
398300                  MOVE SQLCA       TO DP013-SQLCA                 39830000
398400                  SET DP013-DB2-ABEND                             39840000
398500                                   TO TRUE                        39850000
398600                  PERFORM DP013-0000-PROCESS-ABEND                39860000
398700         END-EVALUATE                                             39870000
398800     END-PERFORM.                                                 39880000
398900                                                                  39890000
399000     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        39900000
399100         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              39910000
399200                                   TO DP013-MESSAGE-TEXT (1)      39920000
399300         MOVE SQLCA                TO DP013-SQLCA                 39930000
399400         SET DP013-DB2-ABEND       TO TRUE                        39940000
399500         PERFORM DP013-0000-PROCESS-ABEND                         39950000
399600     END-IF.                                                      39960000
399700                                                                  39970000
399800     INITIALIZE SQW-STORE-TABLE.                                  39980000
399900     MOVE +0 TO SQW-STR-SUB                                       39990000
400000                PV-NBR-STRS.                                      40000000
400100     PERFORM                                                      40010000
400200         UNTIL SQLCODE = +100                                     40020000
400300                                                                  40030000
400400         EXEC SQL                                                 40040000
400500            FETCH DC_NBR_CSR                                      40050000
400600             INTO :PV-DC-NBR                                      40060000
400700         END-EXEC                                                 40070000
400800                                                                  40080000
400900         EVALUATE TRUE                                            40090000
401000             WHEN SQLCODE = +0                                    40100000
401100                  MOVE +0    TO PV-DB2-COUNT                      40110000
401200                  MOVE PV-DC-NBR TO PV-STR-NBR                    40120000
401300                                                                  40130000
401400***                CHECK IF PREVIOUS RECON IS PENDING FOR PO/DC   40140000
401500                  PERFORM 4004-CHECK-TPOSTRR                      40150000
401600                                                                  40160000
401700                  IF PV-DB2-COUNT = +0                            40170000
401800***                    NO PENDING RECON, SO INCLUDE DC NBR IN LIST40180000
401900                      ADD +1         TO SQW-STR-SUB               40190000
402000                                        ASC-STR-SUB-N             40200000
402100                                        PV-NBR-STRS               40210000
402200                      MOVE PV-DC-NBR TO ASC-DC-NBR-N              40220000
402300                                        SQW-STR-NBR(SQW-STR-SUB)  40230000
402400                  ELSE                                            40240000
402500***                    PREVIOUS RECON IS PENDING                  40250000
402600                      ADD PV-DB2-COUNT TO PV-NBR-STRS-ON-TPOSTRR  40260000
402700                  END-IF                                          40270000
402800             WHEN SQLCODE = +100                                  40280000
402900                  CONTINUE                                        40290000
403000             WHEN OTHER                                           40300000
403100                  MOVE 'FETCH CURSOR'                             40310000
403200                                   TO DP013-MESSAGE-TEXT (1)      40320000
403300                  MOVE SQLCA       TO DP013-SQLCA                 40330000
403400                  SET DP013-DB2-ABEND                             40340000
403500                                   TO TRUE                        40350000
403600                  PERFORM DP013-0000-PROCESS-ABEND                40360000
403700         END-EVALUATE                                             40370000
403800     END-PERFORM.                                                 40380000
403900                                                                  40390000
404000     EXEC SQL                                                     40400000
404100         CLOSE DC_NBR_CSR                                         40410000
404200     END-EXEC.                                                    40420000
404300                                                                  40430000
404400     PERFORM 9400-WRITE-STORE-QUEUE.                              40440000
404500                                                                  40450000
404600***   POSITION ON A SPECIFIC DC NBR, BASED ON BUILD INIT OR       40460000
404700***   SCROLLING                                                   40470000
404800     IF PC-PR-PENDING-END                                         40480000
404900        IF ASC-SAVE-DC-NBR = 0                                    40490000
405000           MOVE +1 TO SQW-STR-SUB                                 40500000
405100                      ASC-STR-SUB-N                               40510000
405200        ELSE                                                      40520000
405300           PERFORM VARYING SQW-STR-SUB FROM 1 BY 1                40530000
405400             UNTIL (SQW-STR-NBR(SQW-STR-SUB) >                    40540000
405500                    ASC-SAVE-DC-NBR) OR                           40550000
405600                   (SQW-STR-SUB > PV-NBR-STRS)                    40560000
405700           END-PERFORM                                            40570000
405800           IF SQW-STR-SUB > PV-NBR-STRS                           40580000
405900              MOVE +1 TO SQW-STR-SUB                              40590000
406000                         ASC-STR-SUB-N                            40600000
406100           END-IF                                                 40610000
406200        END-IF                                                    40620000
406300     ELSE                                                         40630000
406400        IF ASC-KEY-DC-NBR > 0                                     40640000
406500           PERFORM VARYING SQW-STR-SUB FROM 1 BY 1 UNTIL          40650000
406600               SQW-STR-NBR(SQW-STR-SUB) = ASC-KEY-DC-NBR OR       40660000
406700               SQW-STR-SUB > PV-NBR-STRS                          40670000
406800           END-PERFORM                                            40680000
406900           IF SQW-STR-SUB > PV-NBR-STRS                           40690000
407000               MOVE +1 TO SQW-STR-SUB                             40700000
407100                          ASC-STR-SUB-N                           40710000
407200           END-IF                                                 40720000
407300        ELSE                                                      40730000
407400           MOVE +1 TO SQW-STR-SUB                                 40740000
407500                      ASC-STR-SUB-N                               40750000
407600        END-IF                                                    40760000
407700     END-IF.                                                      40770000
407800                                                                  40780000
407900     MOVE SQW-STR-SUB              TO ASC-STR-SUB-N.              40790000
408000     MOVE SQW-STR-NBR(SQW-STR-SUB) TO DK-DC-NBR                   40800000
408100                                      ASC-DC-NBR-N                40810000
408200                                      ASC-KEY-DC-NBR.             40820000
408300                                                                  40830000
408400/                                                                 40840000
408500 4007-CONTINUE-DATA-ACCESS.                                       40850000
408600                                                                  40860000
408700     IF DK-MTCH-LVL-CDE = 'P'                                     40870000
408800         MOVE +0                TO DK-STR-NBR-LOW                 40880000
408900                                   DK-DC-NBR-LOW                  40890000
409000         MOVE +9999             TO DK-STR-NBR-HIGH                40900000
409100                                   DK-DC-NBR-HIGH                 40910000
409200     ELSE                                                         40920000
409300        IF DK-MTCH-LVL-CDE = 'D'                                  40930000
409400           MOVE +0              TO DK-STR-NBR-LOW                 40940000
409500           MOVE +9999           TO DK-STR-NBR-HIGH                40950000
409600           MOVE ASC-KEY-DC-NBR  TO DK-DC-NBR-LOW                  40960000
409700                                   DK-DC-NBR-HIGH                 40970000
409800        ELSE                                                      40980000
409900          IF DK-MTCH-LVL-CDE = 'S'                                40990000
410000             MOVE ASC-KEY-STR-NBR TO DK-STR-NBR-LOW               41000000
410100                                     DK-STR-NBR-HIGH              41010000
410200             MOVE +0              TO DK-DC-NBR-LOW                41020000
410300             MOVE +9999           TO DK-DC-NBR-HIGH               41030000
410400          ELSE                                                    41040000
410500*** CANNOT RECONCILE; CANNOT DETERMINE THE CORRECT MATCH LEVEL    41050000
410600             INITIALIZE DP013-DB2-INFO                            41060000
410700             MOVE +0 TO PV-MTCH-LVL-COUNT                         41070000
410800             MOVE '4007-CONTINUE-DATA-ACCESS' TO DP013-PARAGRAPH  41080000
410900             MOVE 'TINVOIC' TO DP013-DB2-TABLE-NAME (1)           41090000
411000             MOVE '       ' TO DP013-DB2-TABLE-NAME (2)           41100000
411100             MOVE '       ' TO DP013-DB2-TABLE-NAME (3)           41110000
411200             MOVE '       ' TO DP013-DB2-TABLE-NAME (4)           41120000
411300             MOVE '       ' TO DP013-DB2-TABLE-NAME (5)           41130000
411400             SET PS-ERROR                                         41140000
411500                DP020-MSG-FATAL                                   41150000
411600                DP020-NEXT-ACT-APPL-ERROR TO TRUE                 41160000
411700             MOVE PC-TSYMSG-03521 TO DP020-MSG-NUMBER             41170000
411800          END-IF                                                  41180000
411900        END-IF                                                    41190000
412000     END-IF.                                                      41200000
412100                                                                  41210000
412200     PERFORM 4010-OPEN-CURSOR.                                    41220000
412300                                                                  41230000
412400     PERFORM 4300-READ-ITEMS-FROM-DB.                             41240000
412500                                                                  41250000
412600     PERFORM 4020-CLOSE-CURSOR.                                   41260000
412700                                                                  41270000
412800**  -- IN ORDER TO USE THE LOWEST UNIT COST DURING THE PAY RELEASE41280000
412900**  -- PROCESSING THE TMIITEM_CSR IS USED TO RETRIEVE THE         41290000
413000**  -- PURITM-PRD-1ST-COST-AMT, THE PREQIT-UNT-COST-AMT, AND THE  41300000
413100**  -- MIITEM-UNT-COST-SEL-CDE PRIOR TO THE ACTUAL PAY RELEASE.   41310000
413200**  -- THE PURITM-PRD-1ST-COST-AMT IS COMPARED TO THE             41320000
413300**  -- PREQIT-UNT-COST-AMT.  IF THE PURITM-PRD-1ST-COST-AMT IS    41330000
413400**  -- LESS THAN THE PREQIT-UNT-COST-AMT THE                      41340000
413500**  -- MIITEM-UNT-COST-SEL-CDE IS SET TO A 'P' OTHERWISE IT IS SET41350000
413600**  -- TO AN 'I' AND THE MIITEM-UNT-COST-SEL-CDE IS THEN UPDATED. 41360000
413700     PERFORM 8810-OPEN-TMIITEM-CSR.                               41370000
413800                                                                  41380000
413900     SET ASC-ITEMS-LEFT-ON-DB TO TRUE.                            41390000
414000                                                                  41400000
414100     PERFORM 8820-PROCESS-UNT-COST-SEL-CDE                        41410000
414200        UNTIL ASC-NO-ITEMS-LEFT-ON-DB.                            41420000
414300                                                                  41430000
414400     PERFORM 8860-CLOSE-TMIITEM-CSR.                              41440000
414500                                                                  41450000
414600     IF PS-NO-ERROR                                               41460000
414700         MOVE +1                       TO PV-TOP-ITEM             41470000
414800                                                                  41480000
414900         IF  ASC-NUMBER-OF-ITEMS-READ = ZERO                      41490000
415000             SET DP020-NEXT-ACT-APPL-ERROR                        41500000
415100                                       TO TRUE                    41510000
415200             SET DP020-MSG-FATAL       TO TRUE                    41520000
415300             MOVE PC-TSYMSG-00050      TO DP020-MSG-NUMBER        41530000
415400         ELSE                                                     41540000
415500             IF  ASC-NUMBER-OF-ITEMS-READ > ZERO                  41550000
415600                 MOVE +1                   TO ASC-BLK-SUB         41560000
415700                 PERFORM 5100-WRITE-TEMP-STORAGE                  41570000
415800                 ADD +1                    TO ASC-BLK-SUB         41580000
415900                 PERFORM 5100-WRITE-TEMP-STORAGE                  41590000
416000                                                                  41600000
416100                 MOVE 1                    TO ASC-BLK-SUB         41610000
416200                                              PV-BLOCK-NUMBER     41620000
416300                 PERFORM 4410-READ-TEMP-STORAGE                   41630000
416400                 IF  ASC-HIGHEST-BLOCK-WRITTEN GREATER THAN 1     41640000
416500                     MOVE 2                TO ASC-BLK-SUB         41650000
416600                                              PV-BLOCK-NUMBER     41660000
416700                     PERFORM 4410-READ-TEMP-STORAGE               41670000
416800                 END-IF                                           41680000
416900             END-IF                                               41690000
417000                                                                  41700000
417100             MOVE -1                   TO MR-SELECTL (1)          41710000
417200             SET DP030-SET-CURSOR-APPL-1                          41720000
417300                                       TO TRUE                    41730000
417400             PERFORM 4400-MOVE-COMMAREA-TO-SCREEN                 41740000
417500         END-IF                                                   41750000
417600     END-IF.                                                      41760000
417700                                                                  41770000
417800/                                                                 41780000
417900*----------------------------------------------------------------*41790000
418000* OPEN THE SHIPMENT CURSOR                                       *41800000
418100*----------------------------------------------------------------*41810000
418200                                                                  41820000
418300 4010-OPEN-CURSOR.                                                41830000
418400                                                                  41840000
418500     MOVE '4010-OPEN-CURSOR'   TO DP013-PARAGRAPH                 41850000
418600     MOVE 'TINVOIC'            TO DP013-DB2-TABLE-NAME (1)        41860000
418700     MOVE '       '            TO DP013-DB2-TABLE-NAME (2)        41870000
418800                                                                  41880000
418900     PERFORM                                                      41890000
419000         WITH TEST AFTER                                          41900000
419100         VARYING PV-RETRY-COUNTER                                 41910000
419200         FROM 1 BY 1                                              41920000
419300         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               41930000
419400            OR (SQLCODE = +0))                                    41940000
419500                                                                  41950000
419600         EXEC SQL                                                 41960000
419700             OPEN TINVOIC_CSR                                     41970000
419800         END-EXEC                                                 41980000
419900                                                                  41990000
420000                                                                  42000000
420100         EVALUATE TRUE                                            42010000
420200             WHEN SQLCODE = +0                                    42020000
420300                  CONTINUE                                        42030000
420400             WHEN SQLCODE = -904                                  42040000
420500             WHEN SQLCODE = -913                                  42050000
420600                  CONTINUE                                        42060000
420700             WHEN SQLWARN0 NOT = SPACE                            42070000
420800             WHEN SQLCODE  NOT = +0                               42080000
420900                  MOVE 'OPEN CURSOR'                              42090000
421000                                   TO DP013-MESSAGE-TEXT (1)      42100000
421100                  MOVE SQLCA       TO DP013-SQLCA                 42110000
421200                  SET DP013-DB2-ABEND                             42120000
421300                                   TO TRUE                        42130000
421400                  PERFORM DP013-0000-PROCESS-ABEND                42140000
421500         END-EVALUATE                                             42150000
421600     END-PERFORM.                                                 42160000
421700                                                                  42170000
421800     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        42180000
421900         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              42190000
422000                                   TO DP013-MESSAGE-TEXT (1)      42200000
422100         MOVE SQLCA                TO DP013-SQLCA                 42210000
422200         SET DP013-DB2-ABEND       TO TRUE                        42220000
422300         PERFORM DP013-0000-PROCESS-ABEND                         42230000
422400     END-IF.                                                      42240000
422500                                                                  42250000
422600     MOVE 'TRECEIV'            TO DP013-DB2-TABLE-NAME (1)        42260000
422700     MOVE 'TRECITM'            TO DP013-DB2-TABLE-NAME (2)        42270000
422800     MOVE 'TRECDIS'            TO DP013-DB2-TABLE-NAME (3)        42280000
422900     MOVE 'TPURITM'            TO DP013-DB2-TABLE-NAME (4)        42290000
423000                                                                  42300000
423100     PERFORM                                                      42310000
423200         WITH TEST AFTER                                          42320000
423300         VARYING PV-RETRY-COUNTER                                 42330000
423400         FROM 1 BY 1                                              42340000
423500         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               42350000
423600            OR (SQLCODE = +0))                                    42360000
423700                                                                  42370000
423800         EXEC SQL                                                 42380000
423900             OPEN TRECDIS_CSR                                     42390000
424000         END-EXEC                                                 42400000
424100                                                                  42410000
424200                                                                  42420000
424300         EVALUATE TRUE                                            42430000
424400             WHEN SQLCODE = +0                                    42440000
424500                  CONTINUE                                        42450000
424600             WHEN SQLCODE = -904                                  42460000
424700             WHEN SQLCODE = -913                                  42470000
424800                  CONTINUE                                        42480000
424900             WHEN SQLWARN0 NOT = SPACE                            42490000
425000             WHEN SQLCODE  NOT = +0                               42500000
425100                  MOVE 'OPEN CURSOR'                              42510000
425200                                   TO DP013-MESSAGE-TEXT (1)      42520000
425300                  MOVE SQLCA       TO DP013-SQLCA                 42530000
425400                  SET DP013-DB2-ABEND                             42540000
425500                                   TO TRUE                        42550000
425600                  PERFORM DP013-0000-PROCESS-ABEND                42560000
425700         END-EVALUATE                                             42570000
425800     END-PERFORM.                                                 42580000
425900                                                                  42590000
426000     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        42600000
426100         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              42610000
426200                                   TO DP013-MESSAGE-TEXT (1)      42620000
426300         MOVE SQLCA                TO DP013-SQLCA                 42630000
426400         SET DP013-DB2-ABEND       TO TRUE                        42640000
426500         PERFORM DP013-0000-PROCESS-ABEND                         42650000
426600     END-IF.                                                      42660000
426700                                                                  42670000
426800     MOVE 'TNINREC'            TO DP013-DB2-TABLE-NAME (1)        42680000
426900                                                                  42690000
427000     PERFORM                                                      42700000
427100         WITH TEST AFTER                                          42710000
427200         VARYING PV-RETRY-COUNTER                                 42720000
427300         FROM 1 BY 1                                              42730000
427400         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               42740000
427500            OR (SQLCODE = +0))                                    42750000
427600                                                                  42760000
427700         EXEC SQL                                                 42770000
427800             OPEN TNINREC_CSR                                     42780000
427900         END-EXEC                                                 42790000
428000                                                                  42800000
428100                                                                  42810000
428200         EVALUATE TRUE                                            42820000
428300             WHEN SQLCODE = +0                                    42830000
428400                  CONTINUE                                        42840000
428500             WHEN SQLCODE = -904                                  42850000
428600             WHEN SQLCODE = -913                                  42860000
428700                  CONTINUE                                        42870000
428800             WHEN SQLWARN0 NOT = SPACE                            42880000
428900             WHEN SQLCODE  NOT = +0                               42890000
429000                  MOVE 'OPEN CURSOR'                              42900000
429100                                   TO DP013-MESSAGE-TEXT (1)      42910000
429200                  MOVE SQLCA       TO DP013-SQLCA                 42920000
429300                  SET DP013-DB2-ABEND                             42930000
429400                                   TO TRUE                        42940000
429500                  PERFORM DP013-0000-PROCESS-ABEND                42950000
429600         END-EVALUATE                                             42960000
429700     END-PERFORM.                                                 42970000
429800                                                                  42980000
429900     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        42990000
430000         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              43000000
430100                                   TO DP013-MESSAGE-TEXT (1)      43010000
430200         MOVE SQLCA                TO DP013-SQLCA                 43020000
430300         SET DP013-DB2-ABEND       TO TRUE                        43030000
430400         PERFORM DP013-0000-PROCESS-ABEND                         43040000
430500     END-IF.                                                      43050000
430600                                                                  43060000
430700     MOVE '       '            TO DP013-DB2-TABLE-NAME (1)        43070000
430800     MOVE 'TPREQIT'            TO DP013-DB2-TABLE-NAME (2)        43080000
430900     MOVE 'TMIITEM'            TO DP013-DB2-TABLE-NAME (3)        43090000
431000     MOVE 'TPURITM'            TO DP013-DB2-TABLE-NAME (4)        43100000
431100                                                                  43110000
431200     PERFORM                                                      43120000
431300         WITH TEST AFTER                                          43130000
431400         VARYING PV-RETRY-COUNTER                                 43140000
431500         FROM 1 BY 1                                              43150000
431600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               43160000
431700            OR (SQLCODE = +0))                                    43170000
431800                                                                  43180000
431900         EXEC SQL                                                 43190000
432000             OPEN TPREQIT_CSR                                     43200000
432100         END-EXEC                                                 43210000
432200                                                                  43220000
432300                                                                  43230000
432400         EVALUATE TRUE                                            43240000
432500             WHEN SQLCODE = +0                                    43250000
432600                  CONTINUE                                        43260000
432700             WHEN SQLCODE = -904                                  43270000
432800             WHEN SQLCODE = -913                                  43280000
432900                  CONTINUE                                        43290000
433000             WHEN SQLWARN0 NOT = SPACE                            43300000
433100             WHEN SQLCODE  NOT = +0                               43310000
433200                  MOVE 'OPEN CURSOR'                              43320000
433300                                   TO DP013-MESSAGE-TEXT (1)      43330000
433400                  MOVE SQLCA       TO DP013-SQLCA                 43340000
433500                  SET DP013-DB2-ABEND                             43350000
433600                                   TO TRUE                        43360000
433700                  PERFORM DP013-0000-PROCESS-ABEND                43370000
433800         END-EVALUATE                                             43380000
433900     END-PERFORM.                                                 43390000
434000                                                                  43400000
434100     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        43410000
434200         MOVE 'MAX RETRIES EXCEEDED FOR OPEN CURSOR'              43420000
434300                                   TO DP013-MESSAGE-TEXT (1)      43430000
434400         MOVE SQLCA                TO DP013-SQLCA                 43440000
434500         SET DP013-DB2-ABEND       TO TRUE                        43450000
434600         PERFORM DP013-0000-PROCESS-ABEND                         43460000
434700     END-IF.                                                      43470000
434800                                                                  43480000
434900/                                                                 43490000
435000*----------------------------------------------------------------*43500000
435100* CLOSE THE SHIPMENT CURSOR                                      *43510000
435200*----------------------------------------------------------------*43520000
435300                                                                  43530000
435400 4020-CLOSE-CURSOR.                                               43540000
435500                                                                  43550000
435600     EXEC SQL                                                     43560000
435700         CLOSE TINVOIC_CSR                                        43570000
435800     END-EXEC.                                                    43580000
435900                                                                  43590000
436000     EXEC SQL                                                     43600000
436100         CLOSE TRECDIS_CSR                                        43610000
436200     END-EXEC.                                                    43620000
436300                                                                  43630000
436400     EXEC SQL                                                     43640000
436500         CLOSE TNINREC_CSR                                        43650000
436600     END-EXEC.                                                    43660000
436700                                                                  43670000
436800     EXEC SQL                                                     43680000
436900         CLOSE TPREQIT_CSR                                        43690000
437000     END-EXEC.                                                    43700000
437100                                                                  43710000
437200/                                                                 43720000
437300*----------------------------------------------------------------*43730000
437400*    DEPENDING ON WHAT WAS PASSED IN THE COMMAREA, SETUP THE     *43740000
437500*    DB2 KEYS IN PREPARATION FOR THE OPEN CURSROR.               *43750000
437600*----------------------------------------------------------------*43760000
437700                                                                  43770000
437800                                                                  43780000
437900/                                                                 43790000
438000*----------------------------------------------------------------*43800000
438100*    READ THE ITEMS FROM THE DATA BASE AND MOVE THEM INTO THE    *43810000
438200*    BLOCKS IN THE ARRAY.  WHENEVER BOTH BLOCKS BECOME FULL,     *43820000
438300*    WRITE OUT THE 1ST BLOCK TO TEMPORARY STORAGE, MOVE THE 2ND  *43830000
438400*    BLOCK IN THE ARRAY TO THE 1ST BLOCK, AND INITIALIZE THE     *43840000
438500*    2ND BLOCK MAKING IT AVAILABLE TO BE USED.                   *43850000
438600*                                                                *43860000
438700*    DUE TO THE SIZE OF THE TABLE, AND THE ORDER IN WHICH THE    *43870000
438800*    ROWS ARE SORTED, THE ENTIRE TABLE IS READ INTO THE PROGRAM  *43880000
438900*    UPON INITIALIZATION.                                        *43890000
439000*----------------------------------------------------------------*43900000
439100                                                                  43910000
439200 4300-READ-ITEMS-FROM-DB.                                         43920000
439300                                                                  43930000
439400     SET PR-IDX TO +1.                                            43940000
439500                                                                  43950000
439600     INITIALIZE  TINVOIC-TABLE                                    43960000
439700                 TRECEIV-TABLE                                    43970000
439800                 TRECDIS-TABLE                                    43980000
439900                 TPRCCLM-TABLE                                    43990000
440000                 TNINREC-TABLE                                    44000000
440100                 PO-LINE-TABLE                                    44010000
440200                 PV-REMAINDER-INVC-DTE.                           44020000
440300     MOVE +0 TO ASC-RECV-TOTAL-AMT.                               44030000
440400                                                                  44040000
440500     SET INVCS-IN-BALANCE TO TRUE.                                44050000
440600                                                                  44060000
440700     PERFORM 4310-FETCH-TINVOIC-ROWS.                             44070000
440800                                                                  44080000
440900     IF PS-NO-ERROR                                               44090000
441000         PERFORM 4320-FETCH-TRECDIS-ROWS                          44100000
441100     END-IF.                                                      44110000
441200                                                                  44120000
441300     IF PS-NO-ERROR                                               44130000
441400         PERFORM 4330-FETCH-TNINREC-ROWS                          44140000
441500     END-IF.                                                      44150000
441600                                                                  44160000
441700** CHECK IF THERE WERE ANY RECEIVERS FOR THE PO/LOCATION BEING    44170000
441800** PROCESSED.  SET A SWITCH, IF THERE WERE NONE, TO BLOCK THE     44180000
441900** PO/LOCATION FROM BEING PAYRELEASED.                            44190000
442000     IF PV-RECEIVER-COUNT = +0                                    44200000
442100        SET ASC-NO-RECEIVERS-FOUND TO TRUE                        44210000
442200     ELSE                                                         44220000
442300        SET ASC-RECEIVERS-FOUND TO TRUE                           44230000
442400     END-IF.                                                      44240000
442500                                                                  44250000
442600** CHECK IF THE RECEIVER TOTAL AMOUNT = $0 FOR                    44260000
442700** THE PO/LOCATION BEING PROCESSED.                               44270000
442800** SET A SWITCH, IF IT IS = $0, TO BLOCK THE                      44280000
442900** PO/LOCATION FROM BEING PAYRELEASED.                            44290000
443000     IF ASC-RECV-TOTAL-AMT = +0                                   44300000
443100        SET ASC-RCVR-TOT-AMT-ZERO TO TRUE                         44310000
443200     ELSE                                                         44320000
443300        SET ASC-RCVR-TOT-AMT-NOT-ZERO TO TRUE                     44330000
443400     END-IF.                                                      44340000
443500                                                                  44350000
443600     IF PS-NO-ERROR                                               44360000
443700         PERFORM 4340-FETCH-TPREQIT-ROWS                          44370000
443800     END-IF.                                                      44380000
443900                                                                  44390000
444000     IF PS-NO-ERROR                                               44400000
444100         PERFORM 4350-FINAL-CHECKS                                44410000
444200     END-IF.                                                      44420000
444300                                                                  44430000
444400     IF PS-NO-ERROR                                               44440000
444500         IF ASC-NO-DETAIL-INVOICES > SPACES                       44450000
444600         OR INVCS-NOT-IN-BALANCE                                  44460000
444700            CONTINUE                                              44470000
444800         ELSE                                                     44480000
444900             IF ASC-PAY-RELEASE-IND = 'Y' AND                     44490000
445000                DP020-FK-CONFIRM (DP020-SRC-AID)                  44500000
445100                 PERFORM 7000-UPDATE-TABLES                       44510000
445200             END-IF                                               44520000
445300         END-IF                                                   44530000
445400     END-IF.                                                      44540000
445500                                                                  44550000
445600     IF PS-NO-ERROR                                               44560000
445700         INITIALIZE PC-BLANK-PO-LINE-TABLE-ENTRY                  44570000
445800                                                                  44580000
445900**       -- THE FIRST TABLE ENTRY IS RESERVED FOR NULL PO_LNE_NBR.44590000
446000**       -- IF THE FIRST TABLE ENTRY IS IN AN INITIALIZED STATE,  44600000
446100**       -- START W/ THE 2ND ENTRY.                               44610000
446200                                                                  44620000
446300         IF PO-LINE-ENTRIES(1) = PC-BLANK-PO-LINE-TABLE-ENTRY     44630000
446400             SET PO-IDX TO +2                                     44640000
446500         ELSE                                                     44650000
446600             SET PO-IDX TO +1                                     44660000
446700         END-IF                                                   44670000
446800                                                                  44680000
446900         PERFORM 4370-LOAD-MAP-FIELDS                             44690000
447000             VARYING PO-IDX FROM PO-IDX BY +1                     44700000
447100                 UNTIL PO-IDX > PO-MAX OR                         44710000
447200                       PO-LINE-ENTRIES (PO-IDX) =                 44720000
447300                       PC-BLANK-PO-LINE-TABLE-ENTRY               44730000
447400                                                                  44740000
447500     END-IF.                                                      44750000
447600/                                                                 44760000
447700 4310-FETCH-TINVOIC-ROWS.                                         44770000
447800                                                                  44780000
447900     SET ASC-ITEMS-LEFT-ON-DB TO TRUE.                            44790000
448000     SET IH-IDX TO +1.                                            44800000
448100                                                                  44810000
448200     PERFORM                                                      44820000
448300         VARYING PV-READ-COUNT                                    44830000
448400         FROM 1 BY 1                                              44840000
448500         UNTIL ((PV-READ-COUNT > PC-MAX-ITEMS)                    44850000
448600            OR (ASC-NO-ITEMS-LEFT-ON-DB))                         44860000
448700                                                                  44870000
448800         PERFORM 4315-FETCH-TINVOIC                               44880000
448900                                                                  44890000
449000         IF  ASC-ITEMS-LEFT-ON-DB                                 44900000
449100             PERFORM 4317-ADD-TO-TINVOIC-TABLE                    44910000
449200         END-IF                                                   44920000
449300     END-PERFORM.                                                 44930000
449400                                                                  44940000
449500     IF PV-TOTAL-GROSS-COST NOT = ZERO                            44950000
449600         DIVIDE PV-TOTAL-DISCOUNT-AMT BY PV-TOTAL-GROSS-COST      44960000
449700             GIVING PV-WEIGHTED-DISC-PCT ROUNDED                  44970000
449800         DIVIDE PV-COOP-ALLOW-AMT     BY PV-TOTAL-GROSS-COST      44980000
449900             GIVING PV-WEIGHTED-COOP-PCT ROUNDED                  44990000
450000         DIVIDE PV-ADV-DISC-AMT       BY PV-TOTAL-GROSS-COST      45000000
450100             GIVING PV-WEIGHTED-ADV-PCT ROUNDED                   45010000
450200         DIVIDE PV-NEW-STORE-AMT      BY PV-TOTAL-GROSS-COST      45020000
450300             GIVING PV-WEIGHTED-NSD-PCT ROUNDED                   45030000
450400         DIVIDE PV-TRADE-DISCOUNT-AMT BY PV-TOTAL-GROSS-COST      45040000
450500             GIVING PV-WEIGHTED-TRD-PCT ROUNDED                   45050000
450600         DIVIDE PV-MOS-DISCOUNT-AMT   BY PV-TOTAL-GROSS-COST      45060000
450700             GIVING PV-WEIGHTED-MOS-PCT ROUNDED                   45070000
450800         DIVIDE PV-MISC-DISCOUNT-AMT  BY PV-TOTAL-GROSS-COST      45080000
450900             GIVING PV-WEIGHTED-MISC-PCT ROUNDED                  45090000
451000         DIVIDE PV-PRFT-ASST-AMT      BY PV-TOTAL-GROSS-COST      45100000
451100             GIVING PV-WEIGHTED-ALW-PCT ROUNDED                   45110000
451200     ELSE                                                         45120000
451300         MOVE ZERO TO PV-WEIGHTED-DISC-PCT                        45130000
451400                      PV-WEIGHTED-COOP-PCT                        45140000
451500                      PV-WEIGHTED-ADV-PCT                         45150000
451600                      PV-WEIGHTED-NSD-PCT                         45160000
451700                      PV-WEIGHTED-MOS-PCT                         45170000
451800                      PV-WEIGHTED-TRD-PCT                         45180000
451900                      PV-WEIGHTED-MISC-PCT                        45190000
452000                      PV-WEIGHTED-ALW-PCT                         45200000
452100     END-IF.                                                      45210000
452200                                                                  45220000
452300*    IF PV-TOTAL-DISCOUNTED-COST-AMT NOT = ZERO                   45230000
452400*        DIVIDE PV-ADV-DISC-AMT BY PV-TOTAL-DISCOUNTED-COST-AMT   45240000
452500*            GIVING PV-WEIGHTED-ADV-PCT ROUNDED                   45250000
452600*    ELSE                                                         45260000
452700*        MOVE ZERO TO PV-WEIGHTED-ADV-PCT                         45270000
452800*    END-IF.                                                      45280000
452900                                                                  45290000
453000*----------------------------------------------------------------*45300000
453100*    FETCH A TINVOIC ROW                                         *45310000
453200*----------------------------------------------------------------*45320000
453300                                                                  45330000
453400 4315-FETCH-TINVOIC.                                              45340000
453500                                                                  45350000
453600     EXEC SQL                                                     45360000
453700         FETCH TINVOIC_CSR                                        45370000
453800          INTO  :INVOIC-PAYT-REQ-SEQ-NBR                          45380000
453900               ,:INVOIC-INVC-ID                                   45390000
454000               ,:INVOIC-STR-NBR                                   45400000
454100               ,:INVOIC-INVC-TYP-CDE                              45410000
454200               ,:INVOIC-STATUS-CDE                                45420000
454300               ,:INVOIC-HOLD-IND                                  45430000
454400               ,:INVOIC-GRO-COST-AMT                              45440000
454500               ,:INVOIC-INVC-DTE                                  45450000
454600               ,:MDINVC-TERM-SEL-CDE                              45460000
454700               ,:INVOIC-DC-NBR                                    45470000
454800               ,:INVOIC-MTCH-LVL-CDE                              45480000
454900     END-EXEC.                                                    45490000
455000                                                                  45500000
455100     EVALUATE TRUE                                                45510000
455200         WHEN SQLCODE = +0                                        45520000
455300              CONTINUE                                            45530000
455400                                                                  45540000
455500         WHEN SQLCODE = +100                                      45550000
455600              SET ASC-NO-ITEMS-LEFT-ON-DB                         45560000
455700                                   TO TRUE                        45570000
455800                                                                  45580000
455900         WHEN SQLWARN0 NOT = SPACE                                45590000
456000         WHEN SQLCODE < +0                                        45600000
456100         WHEN SQLCODE > +0                                        45610000
456200              MOVE '4315-FETCH-TINVOIC'                           45620000
456300                                   TO DP013-PARAGRAPH             45630000
456400              MOVE 'FETCH TINVOIC CURSOR'                         45640000
456500                                   TO DP013-MESSAGE-TEXT (1)      45650000
456600              MOVE SQLCA           TO DP013-SQLCA                 45660000
456700              MOVE 'TINVOIC'       TO DP013-DB2-TABLE-NAME (1)    45670000
456800              SET DP013-DB2-ABEND  TO TRUE                        45680000
456900              PERFORM DP013-0000-PROCESS-ABEND                    45690000
457000     END-EVALUATE.                                                45700000
457100                                                                  45710000
457200**   BECAUSE PAYT_REQ_SEQ_NBR IS A UNIQUE VALUE, THERE'S NO NEED  45720000
457300**   TO SEARCH FOR EXISTANCE PRIOR TO ADDING TO THE INTERNAL      45730000
457400**   TABLE.  SIMPLY MOVE THE FETCHED VALUES TO THE NEXT BUCKET.   45740000
457500                                                                  45750000
457600 4317-ADD-TO-TINVOIC-TABLE.                                       45760000
457700                                                                  45770000
457800     IF IH-IDX > IH-MAX                                           45780000
457900         MOVE 'INVOICE HEADER TABLE FULL - CONTACT DP '           45790000
458000                                     TO DP020-MSG-TEXT            45800000
458100         SET PS-ERROR                                             45810000
458200             DP020-MSG-FATAL                                      45820000
458300             DP020-NEXT-ACT-APPL-ERROR                            45830000
458400             ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                      45840000
458500     ELSE                                                         45850000
458600                                                                  45860000
458700         IF INVOIC-STATUS-CDE = 'OB' OR 'IB'                      45870000
458800           SET INVCS-NOT-IN-BALANCE  TO TRUE                      45880000
458900         END-IF                                                   45890000
459000                                                                  45900000
459100         MOVE INVOIC-PAYT-REQ-SEQ-NBR                             45910000
459200           TO T-IH-PAYT-REQ-SEQ-NBR    (IH-IDX)                   45920000
459300         MOVE INVOIC-INVC-ID                                      45930000
459400           TO T-IH-INVC-ID             (IH-IDX)                   45940000
459500         MOVE INVOIC-STR-NBR                                      45950000
459600           TO T-IH-STR-NBR             (IH-IDX)                   45960000
459700         MOVE INVOIC-INVC-TYP-CDE                                 45970000
459800           TO T-IH-INVC-TYP-CDE        (IH-IDX)                   45980000
459900         MOVE INVOIC-STATUS-CDE                                   45990000
460000           TO T-IH-STATUS-CDE          (IH-IDX)                   46000000
460100         MOVE INVOIC-HOLD-IND                                     46010000
460200           TO T-IH-HOLD-IND            (IH-IDX)                   46020000
460300         MOVE INVOIC-GRO-COST-AMT                                 46030000
460400           TO T-IH-GRO-COST-AMT        (IH-IDX)                   46040000
460500         MOVE MDINVC-TERM-SEL-CDE                                 46050000
460600           TO T-IH-TERM-SEL-CDE        (IH-IDX)                   46060000
460700         MOVE INVOIC-DC-NBR                                       46070000
460800           TO T-IH-DC-NBR              (IH-IDX)                   46080000
460900         MOVE INVOIC-MTCH-LVL-CDE                                 46090000
461000           TO T-IH-MTCH-LVL-CDE        (IH-IDX)                   46100000
461100         EVALUATE TRUE                                            46110000
461200             WHEN PV-REMAINDER-INVC-DTE = SPACES                  46120000
461300                 MOVE INVOIC-INVC-DTE TO PV-REMAINDER-INVC-DTE    46130000
461400             WHEN INVOIC-INVC-DTE > PV-REMAINDER-INVC-DTE         46140000
461500                 MOVE INVOIC-INVC-DTE TO PV-REMAINDER-INVC-DTE    46150000
461600             WHEN OTHER                                           46160000
461700                 CONTINUE                                         46170000
461800         END-EVALUATE                                             46180000
461900                                                                  46190000
462000         ADD INVOIC-GRO-COST-AMT  TO PV-TOTAL-GROSS-COST          46200000
462100*        MOVE INVOIC-GRO-COST-AMT TO PV-DISCOUNTED-COST-AMT       46210000
462200         SET MORE-ALLOWANCES      TO TRUE                         46220000
462300                                                                  46230000
462400         PERFORM 4317A-OPEN-DISCOUNT-CSR                          46240000
462500*----- FOR EACH INVOICE GET ALL ASSOCIATED ALLOWANCES             46250000
462600         PERFORM WITH TEST BEFORE                                 46260000
462700             UNTIL OUT-OF-ALLOWANCES                              46270000
462800                                                                  46280000
462900             EXEC SQL                                             46290000
463000                 FETCH DISCOUNT_CSR                               46300000
463100                       INTO :ALCHRG-ALW-CHRG-TYP-CDE              46310000
463200                           ,:ALCHRG-ALW-CHRG-CDE                  46320000
463300                           ,:ALCHRG-ALW-CHRG-PCT                  46330000
463400                           ,:ALCHRG-ALW-CHRG-AMT                  46340000
463500             END-EXEC                                             46350000
463600                                                                  46360000
463700             EVALUATE TRUE                                        46370000
463800                 WHEN SQLCODE = +0                                46380000
463900                      INITIALIZE APPD052-VARIABLES                46390000
464000                      MOVE INVOIC-GRO-COST-AMT                    46400000
464100                                  TO APPD052-GROSS-INVOICE-COST   46410000
464200                      PERFORM CALC-ALW-CHRG                       46420000
464300                      ADD APPD052-COOP-ADV-ALLOW-AMT              46430000
464400                                  TO PV-COOP-ALLOW-AMT            46440000
464500                      ADD APPD052-ADV-DISC-AMT                    46450000
464600                                  TO PV-ADV-DISC-AMT              46460000
464700                      ADD APPD052-NEW-STORE-AMT                   46470000
464800                                  TO PV-NEW-STORE-AMT             46480000
464900                      ADD APPD052-TRADE-AMT                       46490000
465000                                  TO PV-TRADE-DISCOUNT-AMT        46500000
465100                      ADD APPD052-MOS-DISC-AMT                    46510000
465200                                  TO PV-MOS-DISCOUNT-AMT          46520000
465300                      ADD APPD052-MISC-DISC-AMT                   46530000
465400                                  TO PV-MISC-DISCOUNT-AMT         46540000
465500                      ADD APPD052-PRFT-ASST-COOP-AMT              46550000
465600                                  TO PV-PRFT-ASST-AMT             46560000
465700                 WHEN SQLCODE = +100                              46570000
465800                      SET OUT-OF-ALLOWANCES TO TRUE               46580000
465900                 WHEN SQLWARN0 NOT = SPACE                        46590000
466000                 WHEN SQLCODE < +0                                46600000
466100                 WHEN SQLCODE > +0                                46610000
466200                      MOVE '4317-ADD-TO-TINVOIC-TABLE'            46620000
466300                                           TO DP013-PARAGRAPH     46630000
466400                      MOVE 'FETCH DISCOUNT CURSOR'                46640000
466500                                     TO DP013-MESSAGE-TEXT (1)    46650000
466600                      MOVE SQLCA     TO DP013-SQLCA               46660000
466700                      MOVE 'TALCHRG' TO DP013-DB2-TABLE-NAME (1)  46670000
466800                      SET DP013-DB2-ABEND  TO TRUE                46680000
466900                      PERFORM DP013-0000-PROCESS-ABEND            46690000
467000             END-EVALUATE                                         46700000
467100                                                                  46710000
467200         END-PERFORM                                              46720000
467300                                                                  46730000
467400         EXEC SQL                                                 46740000
467500             CLOSE DISCOUNT_CSR                                   46750000
467600         END-EXEC                                                 46760000
467700                                                                  46770000
467800         ADD PV-DISCOUNTED-COST-AMT TO                            46780000
467900             PV-TOTAL-DISCOUNTED-COST-AMT                         46790000
468000                                                                  46800000
468100                                                                  46810000
468200         IF MDINVC-TERM-SEL-CDE = 'P'                             46820000
468300* -------- PO TERMS ARE INDICATED                                 46830000
468400             PERFORM 4318-GET-PO-DISC-PCT                         46840000
468500             COMPUTE PV-DECIMAL-8 =                               46850000
468600                     PAYTRM-DISCOUNT-PCT * INVOIC-GRO-COST-AMT    46860000
468700             COMPUTE PV-TOTAL-DISCOUNT-AMT ROUNDED                46870000
468800                   = PV-TOTAL-DISCOUNT-AMT                        46880000
468900                   + PV-DECIMAL-8                                 46890000
469000         ELSE                                                     46900000
469100* -------- INVOICE TERMS ARE INDICATED (MDINVC-TERM-SEL-CDE = 'I')46910000
469200             PERFORM 4319-GET-INVOICE-DISC-PCT                    46920000
469300             COMPUTE PV-DECIMAL-8 =                               46930000
469400                     INVCTM-DISC-PCT * INVOIC-GRO-COST-AMT        46940000
469500             COMPUTE PV-TOTAL-DISCOUNT-AMT ROUNDED                46950000
469600                   = PV-TOTAL-DISCOUNT-AMT                        46960000
469700                   + PV-DECIMAL-8                                 46970000
469800         END-IF                                                   46980000
469900                                                                  46990000
470000         SET  IH-IDX UP BY +1                                     47000000
470100     END-IF.                                                      47010000
470200                                                                  47020000
470300     COPY APPD052.                                                47030000
470400/                                                                 47040000
470500 4317A-OPEN-DISCOUNT-CSR.                                         47050000
470600                                                                  47060000
470700     PERFORM                                                      47070000
470800         WITH TEST AFTER                                          47080000
470900         VARYING PV-RETRY-COUNTER                                 47090000
471000         FROM 1 BY 1                                              47100000
471100         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               47110000
471200            OR (SQLCODE = +0))                                    47120000
471300                                                                  47130000
471400         EXEC SQL                                                 47140000
471500             OPEN DISCOUNT_CSR                                    47150000
471600         END-EXEC                                                 47160000
471700                                                                  47170000
471800         EVALUATE TRUE                                            47180000
471900             WHEN SQLCODE = +0                                    47190000
472000                  CONTINUE                                        47200000
472100             WHEN SQLCODE = -904                                  47210000
472200             WHEN SQLCODE = -913                                  47220000
472300                  CONTINUE                                        47230000
472400             WHEN SQLWARN0 NOT = SPACE                            47240000
472500             WHEN SQLCODE  NOT = +0                               47250000
472600                  MOVE '4317A-OPEN-DISCOUNT-CSR'                  47260000
472700                                           TO DP013-PARAGRAPH     47270000
472800                  MOVE 'OPEN DISCOUNT CURSOR'                     47280000
472900                                   TO DP013-MESSAGE-TEXT (1)      47290000
473000                  MOVE SQLCA       TO DP013-SQLCA                 47300000
473100                  SET DP013-DB2-ABEND                             47310000
473200                                   TO TRUE                        47320000
473300                  PERFORM DP013-0000-PROCESS-ABEND                47330000
473400         END-EVALUATE                                             47340000
473500     END-PERFORM.                                                 47350000
473600                                                                  47360000
473700     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        47370000
473800         MOVE 'MAX RETRIES EXCEEDED FOR OPEN DISCOUNT CURSOR'     47380000
473900                                   TO DP013-MESSAGE-TEXT (1)      47390000
474000         MOVE SQLCA                TO DP013-SQLCA                 47400000
474100         SET DP013-DB2-ABEND       TO TRUE                        47410000
474200         PERFORM DP013-0000-PROCESS-ABEND                         47420000
474300     END-IF.                                                      47430000
474400/                                                                 47440000
474500*----------------------------------------------------------------*47450000
474600*    RETRIEVES THE PURCHASE ORDER TERMS.                         *47460000
474700*    NOTE:  A NOT FOUND CONDITION IN THIS INSTANCE WILL CAUSE    *47470000
474800*           AN ABEND SINCE TERMS MUST ALWAYS BE PRESENT.         *47480000
474900*----------------------------------------------------------------*47490000
475000 4318-GET-PO-DISC-PCT.                                            47500000
475100                                                                  47510000
475200     EXEC SQL                                                     47520000
475300         SELECT                                                   47530000
475400             PT.DISCOUNT_PCT                                      47540000
475500         INTO                                                     47550000
475600             :PAYTRM-DISCOUNT-PCT                                 47560000
475700         FROM                                                     47570000
475800             TPOAGMT PA,                                          47580000
475900             TPAYTRM PT                                           47590000
476000         WHERE PA.PO_NBR         = :DK-PO-NBR                     47600000
476100           AND PA.PAYT_TERM_ID   = PT.PAY_TERM_ID                 47610000
476200           AND PA.AGRMT_TYP_ID   = '2'                            47620000
476300           AND PA.VER_STATUS_CDE = 'A'                            47630000
476400     END-EXEC.                                                    47640000
476500                                                                  47650000
476600     EVALUATE TRUE                                                47660000
476700         WHEN SQLCODE = ZERO                                      47670000
476800              CONTINUE                                            47680000
476900         WHEN SQLWARN0 NOT = SPACES                               47690000
477000         WHEN SQLCODE      < +0                                   47700000
477100         WHEN SQLCODE      > +0                                   47710000
477200             MOVE '4318-GET-PO-DISC-PCT'                          47720000
477300                                  TO DP013-PARAGRAPH              47730000
477400             MOVE 'SELECT PO DISC PCT'                            47740000
477500                                  TO DP013-MESSAGE-TEXT (1)       47750000
477600             MOVE SQLCA           TO DP013-SQLCA                  47760000
477700             MOVE 'TPOAGMT'       TO DP013-DB2-TABLE-NAME (1)     47770000
477800             MOVE 'TPAYTRM'       TO DP013-DB2-TABLE-NAME (2)     47780000
477900             SET DP013-DB2-ABEND  TO TRUE                         47790000
478000             PERFORM DP013-0000-PROCESS-ABEND                     47800000
478100     END-EVALUATE.                                                47810000
478200                                                                  47820000
478300*----------------------------------------------------------------*47830000
478400*    RETRIEVES THE INVOICE TERMS.                                *47840000
478500*    NOTE:  A NOT FOUND CONDITION IN THIS INSTANCE WILL CAUSE    *47850000
478600*           AN ABEND SINCE TERMS MUST ALWAYS BE PRESENT.         *47860000
478700*----------------------------------------------------------------*47870000
478800 4319-GET-INVOICE-DISC-PCT.                                       47880000
478900                                                                  47890000
479000     EXEC SQL                                                     47900000
479100         SELECT                                                   47910000
479200             DISC_PCT                                             47920000
479300         INTO                                                     47930000
479400             :INVCTM-DISC-PCT                                     47940000
479500            FROM TINVCTM                                          47950000
479600            WHERE PO_NBR        = :DK-PO-NBR                      47960000
479700              AND INVC_ID       = :INVOIC-INVC-ID                 47970000
479800              AND TERM_SEQ_NBR  = 1                               47980000
479900     END-EXEC.                                                    47990000
480000                                                                  48000000
480100     EVALUATE TRUE                                                48010000
480200         WHEN SQLCODE = ZERO                                      48020000
480300              CONTINUE                                            48030000
480400         WHEN SQLWARN0 NOT = SPACES                               48040000
480500         WHEN SQLCODE      < +0                                   48050000
480600         WHEN SQLCODE      > +0                                   48060000
480700             MOVE '4319-GET-INVOICE-DISC-PCT'                     48070000
480800                                  TO DP013-PARAGRAPH              48080000
480900             MOVE 'SELECT INVOICE DISC PCT'                       48090000
481000                                  TO DP013-MESSAGE-TEXT (1)       48100000
481100             MOVE SQLCA           TO DP013-SQLCA                  48110000
481200             MOVE 'TINVCTM'       TO DP013-DB2-TABLE-NAME (1)     48120000
481300             SET DP013-DB2-ABEND  TO TRUE                         48130000
481400             PERFORM DP013-0000-PROCESS-ABEND                     48140000
481500     END-EVALUATE.                                                48150000
481600                                                                  48160000
481700/                                                                 48170000
481800 4320-FETCH-TRECDIS-ROWS.                                         48180000
481900                                                                  48190000
482000     SET ASC-ITEMS-LEFT-ON-DB TO TRUE.                            48200000
482100                                                                  48210000
482200     PERFORM                                                      48220000
482300         VARYING PV-READ-COUNT                                    48230000
482400         FROM 1 BY 1                                              48240000
482500         UNTIL ((PV-READ-COUNT > PC-MAX-ITEMS)                    48250000
482600            OR (ASC-NO-ITEMS-LEFT-ON-DB))                         48260000
482700                                                                  48270000
482800         PERFORM 4325-FETCH-TRECDIS                               48280000
482900                                                                  48290000
483000         IF  ASC-ITEMS-LEFT-ON-DB                                 48300000
483100                                                                  48310000
483200             IF DK-MTCH-LVL-CDE = 'P' OR 'D'                      48320000
483300                 PERFORM 4327-ADD-TO-RECEIV-TABLE                 48330000
483400             ELSE                                                 48340000
483500                 PERFORM 4328-ADD-TO-RECDIS-TABLE                 48350000
483600             END-IF                                               48360000
483700                                                                  48370000
483800             PERFORM 4329-ADD-TO-PO-LNE-TABLE                     48380000
483900         END-IF                                                   48390000
484000     END-PERFORM.                                                 48400000
484100                                                                  48410000
484200*----------------------------------------------------------------*48420000
484300*    FETCH A TRECDIS ROW                                         *48430000
484400*----------------------------------------------------------------*48440000
484500                                                                  48450000
484600 4325-FETCH-TRECDIS.                                              48460000
484700                                                                  48470000
484800     EXEC SQL                                                     48480000
484900         FETCH TRECDIS_CSR                                        48490000
485000               INTO :RECEIV-ORD-NBR                               48500000
485100                   ,:RECEIV-REC-SEQ-NBR                           48510000
485200                   ,:RECDIS-ORD-LNE-NBR                           48520000
485300                   ,:RECDIS-OPER-UNT-ID                           48530000
485400                   ,:RECDIS-FCLTY-ID                              48540000
485500                   ,:RECDIS-STR-NBR                               48550000
485600                   ,:RECDIS-STR-FCLTY-ID                          48560000
485700                   ,:RECDIS-AP-VERIFY-ITM-QTY                     48570000
485800                   ,:PURITM-PRD-1ST-COST-AMT                      48580000
485900     END-EXEC.                                                    48590000
486000                                                                  48600000
486100     EVALUATE TRUE                                                48610000
486200         WHEN SQLCODE = +0                                        48620000
486300              ADD +1 TO PV-RECEIVER-COUNT                         48630000
486400              MOVE ZERO TO PV-RECV-TOTAL-AMT                      48640000
486500              COMPUTE PV-RECV-TOTAL-AMT =                         48650000
486600              (RECDIS-AP-VERIFY-ITM-QTY * PURITM-PRD-1ST-COST-AMT)48660000
486700              ADD PV-RECV-TOTAL-AMT TO ASC-RECV-TOTAL-AMT         48670000
486800                                                                  48680000
486900         WHEN SQLCODE = +100                                      48690000
487000              SET ASC-NO-ITEMS-LEFT-ON-DB                         48700000
487100                                   TO TRUE                        48710000
487200                                                                  48720000
487300         WHEN SQLWARN0 NOT = SPACE                                48730000
487400         WHEN SQLCODE < +0                                        48740000
487500         WHEN SQLCODE > +0                                        48750000
487600              MOVE '4325-FETCH-TRECDIS'                           48760000
487700                                   TO DP013-PARAGRAPH             48770000
487800              MOVE 'FETCH TRECDIS CURSOR'                         48780000
487900                                   TO DP013-MESSAGE-TEXT (1)      48790000
488000              MOVE SQLCA           TO DP013-SQLCA                 48800000
488100              MOVE 'TRECDIS'       TO DP013-DB2-TABLE-NAME (1)    48810000
488200              SET DP013-DB2-ABEND  TO TRUE                        48820000
488300              PERFORM DP013-0000-PROCESS-ABEND                    48830000
488400     END-EVALUATE.                                                48840000
488500                                                                  48850000
488600/                                                                 48860000
488700**   SAVE THE KEY TO THE TRECEIV TABLE FOR LATER PROCESSING  **   48870000
488800                                                                  48880000
488900 4327-ADD-TO-RECEIV-TABLE.                                        48890000
489000                                                                  48900000
489100     MOVE RECEIV-ORD-NBR     TO PV-ORD-NBR                        48910000
489200**                              PV-RD-ORD-NBR                     48920000
489300                                                                  48930000
489400     MOVE RECEIV-REC-SEQ-NBR TO PV-REC-SEQ-NBR                    48940000
489500**                              PV-RD-REC-SEQ-NBR                 48950000
489600*    MOVE RECEIV-CRE-TMST    TO PV-CRE-TMST                       48960000
489700                                                                  48970000
489800     SET RC-IDX TO +1                                             48980000
489900                                                                  48990000
490000     SEARCH TRECEIV-ENTRY                                         49000000
490100         AT END                                                   49010000
490200             MOVE 'TRECEIV INTERNAL TABLE FULL - CONTACT DP '     49020000
490300                                         TO DP020-MSG-TEXT        49030000
490400             SET PS-ERROR                                         49040000
490500                 DP020-MSG-FATAL                                  49050000
490600                 DP020-NEXT-ACT-APPL-ERROR                        49060000
490700                 ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                  49070000
490800                                                                  49080000
490900         WHEN (TRECEIV-ENTRY  (RC-IDX) = PV-TRECEIV-KEY           49090000
491000*              OR  T-CRE-TMST     (RC-IDX) = SPACES)              49100000
491100               OR  T-ORD-NBR      (RC-IDX) = ZEROES)              49110000
491200             NEXT SENTENCE                                        49120000
491300     END-SEARCH.                                                  49130000
491400                                                                  49140000
491500     IF PS-NO-ERROR                                               49150000
491600*        IF T-CRE-TMST (RC-IDX) = SPACES                          49160000
491700         IF T-ORD-NBR  (RC-IDX) = ZEROES                          49170000
491800             MOVE PV-TRECEIV-KEY TO TRECEIV-ENTRY (RC-IDX)        49180000
491900         END-IF                                                   49190000
492000     END-IF.                                                      49200000
492100/                                                                 49210000
492200**   SAVE THE KEY TO THE TRECDIS TABLE FOR LATER PROCESSING  **   49220000
492300                                                                  49230000
492400 4328-ADD-TO-RECDIS-TABLE.                                        49240000
492500                                                                  49250000
492600     MOVE DK-PO-NBR               TO PV-RD-ORD-NBR                49260000
492700     MOVE RECDIS-ORD-LNE-NBR      TO PV-RD-ORD-LNE-NBR            49270000
492800     MOVE RECEIV-REC-SEQ-NBR      TO PV-RD-REC-SEQ-NBR            49280000
492900     MOVE RECDIS-OPER-UNT-ID      TO PV-RD-OPER-UNT-ID            49290000
493000     MOVE RECDIS-FCLTY-ID         TO PV-RD-FCLTY-ID               49300000
493100     MOVE RECDIS-STR-NBR          TO PV-RD-STR-NBR                49310000
493200     MOVE RECDIS-STR-FCLTY-ID     TO PV-RD-STR-FCLTY-ID           49320000
493300*    MOVE RECDIS-CRE-TMST         TO PV-RD-CRE-TMST               49330000
493400                                                                  49340000
493500     SET RD-IDX TO +1                                             49350000
493600                                                                  49360000
493700     SEARCH TRECDIS-ENTRY                                         49370000
493800         AT END                                                   49380000
493900             MOVE 'TRECDIS INTERNAL TABLE FULL - CONTACT DP '     49390000
494000                                         TO DP020-MSG-TEXT        49400000
494100             SET PS-ERROR                                         49410000
494200                 DP020-MSG-FATAL                                  49420000
494300                 DP020-NEXT-ACT-APPL-ERROR                        49430000
494400                 ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                  49440000
494500                                                                  49450000
494600             WHEN (TRECDIS-ENTRY  (RD-IDX) = PV-TRECDIS-KEY       49460000
494700*              OR  T-RD-CRE-TMST  (RD-IDX) = SPACES)              49470000
494800               OR  T-RD-ORD-NBR   (RD-IDX) = ZEROES)              49480000
494900                 NEXT SENTENCE                                    49490000
495000     END-SEARCH.                                                  49500000
495100                                                                  49510000
495200     IF PS-NO-ERROR                                               49520000
495300*        IF T-RD-CRE-TMST (RD-IDX) = SPACES                       49530000
495400         IF T-RD-ORD-NBR  (RD-IDX) = ZEROES                       49540000
495500             MOVE PV-TRECDIS-KEY TO TRECDIS-ENTRY (RD-IDX)        49550000
495600         END-IF                                                   49560000
495700     END-IF.                                                      49570000
495800/                                                                 49580000
495900 4329-ADD-TO-PO-LNE-TABLE.                                        49590000
496000                                                                  49600000
496100*    NOTE: PO-IDX = 1 IS RESERVED FOR THE NULL PO-LNE-NBR ENTRY   49610000
496200*         (WHERE T-APP-PO-LNE-NBR WILL EQUAL +0). THE FOLLOWING   49620000
496300*          SEARCH BEGINS AT THE 2ND TABLE ENTRY.                  49630000
496400                                                                  49640000
496500     SET PO-IDX TO +2                                             49650000
496600                                                                  49660000
496700     SEARCH PO-LINE-ENTRIES                                       49670000
496800         AT END                                                   49680000
496900             MOVE 'PO LINE INTERNAL TABLE FULL - CONTACT DP '     49690000
497000                                         TO DP020-MSG-TEXT        49700000
497100             SET PS-ERROR                                         49710000
497200                 DP020-MSG-FATAL                                  49720000
497300                 DP020-NEXT-ACT-APPL-ERROR                        49730000
497400                 ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                  49740000
497500                                                                  49750000
497600             WHEN (T-APP-PO-LNE-NBR (PO-IDX) = RECDIS-ORD-LNE-NBR 49760000
497700               OR  T-APP-PO-LNE-NBR (PO-IDX) = +0)                49770000
497800                 NEXT SENTENCE                                    49780000
497900     END-SEARCH.                                                  49790000
498000                                                                  49800000
498100     IF PS-NO-ERROR                                               49810000
498200         MOVE RECDIS-ORD-LNE-NBR TO T-APP-PO-LNE-NBR (PO-IDX)     49820000
498300         ADD RECDIS-AP-VERIFY-ITM-QTY                             49830000
498400                                 TO T-RECV-QTY    (PO-IDX)        49840000
498500                                    T-PRCCLM-QTY  (PO-IDX)        49850000
498600         IF (T-RECV-UNT-COST-AMT (PO-IDX) = +0 OR                 49860000
498700           T-RECV-UNT-COST-AMT (PO-IDX) > PURITM-PRD-1ST-COST-AMT)49870000
498800*-->         ** USE THE LOWEST UNIT COST **                       49880000
498900             MOVE PURITM-PRD-1ST-COST-AMT                         49890000
499000                                 TO T-RECV-UNT-COST-AMT(PO-IDX)   49900000
499100         END-IF                                                   49910000
499200     END-IF.                                                      49920000
499300/                                                                 49930000
499400 4330-FETCH-TNINREC-ROWS.                                         49940000
499500                                                                  49950000
499600     SET ASC-ITEMS-LEFT-ON-DB TO TRUE.                            49960000
499700                                                                  49970000
499800     PERFORM                                                      49980000
499900         VARYING PV-READ-COUNT                                    49990000
500000         FROM 1 BY 1                                              50000000
500100         UNTIL ((PV-READ-COUNT > PC-MAX-ITEMS)                    50010000
500200            OR (ASC-NO-ITEMS-LEFT-ON-DB))                         50020000
500300                                                                  50030000
500400         PERFORM 4335-FETCH-TNINREC                               50040000
500500                                                                  50050000
500600         IF  ASC-ITEMS-LEFT-ON-DB                                 50060000
500700             PERFORM 4337-ADD-TO-NINREC-TABLE                     50070000
500800             PERFORM 4338-ADD-TO-PO-LNE-TABLE                     50080000
500900         END-IF                                                   50090000
501000     END-PERFORM.                                                 50100000
501100                                                                  50110000
501200*----------------------------------------------------------------*50120000
501300*    FETCH A TNINREC ROW                                         *50130000
501400*----------------------------------------------------------------*50140000
501500                                                                  50150000
501600 4335-FETCH-TNINREC.                                              50160000
501700                                                                  50170000
501800     EXEC SQL                                                     50180000
501900         FETCH TNINREC_CSR                                        50190000
502000          INTO :NINREC-PO-LNE-NBR                                 50200000
502100              ,:NINREC-NON-INVC-SEQ-NBR                           50210000
502200              ,:NINREC-NON-INVC-UNT-QTY                           50220000
502300              ,:NINREC-UNT-COST-AMT                               50230000
502400     END-EXEC.                                                    50240000
502500                                                                  50250000
502600     EVALUATE TRUE                                                50260000
502700         WHEN SQLCODE = +0                                        50270000
502800              ADD +1 TO PV-RECEIVER-COUNT                         50280000
502900              MOVE ZERO TO PV-RECV-TOTAL-AMT                      50290000
503000              COMPUTE PV-RECV-TOTAL-AMT =                         50300000
503100                (NINREC-NON-INVC-UNT-QTY * NINREC-UNT-COST-AMT)   50310000
503200              ADD PV-RECV-TOTAL-AMT TO ASC-RECV-TOTAL-AMT         50320000
503300                                                                  50330000
503400         WHEN SQLCODE = +100                                      50340000
503500              SET ASC-NO-ITEMS-LEFT-ON-DB                         50350000
503600                                   TO TRUE                        50360000
503700                                                                  50370000
503800         WHEN SQLWARN0 NOT = SPACE                                50380000
503900         WHEN SQLCODE < +0                                        50390000
504000         WHEN SQLCODE > +0                                        50400000
504100              MOVE '4335-FETCH-TNINREC'                           50410000
504200                                   TO DP013-PARAGRAPH             50420000
504300              MOVE 'FETCH TNINREC CURSOR'                         50430000
504400                                   TO DP013-MESSAGE-TEXT (1)      50440000
504500              MOVE SQLCA           TO DP013-SQLCA                 50450000
504600              MOVE 'TNINREC'       TO DP013-DB2-TABLE-NAME (1)    50460000
504700              SET DP013-DB2-ABEND  TO TRUE                        50470000
504800              PERFORM DP013-0000-PROCESS-ABEND                    50480000
504900     END-EVALUATE.                                                50490000
505000                                                                  50500000
505100 4337-ADD-TO-NINREC-TABLE.                                        50510000
505200                                                                  50520000
505300     MOVE NINREC-PO-LNE-NBR  TO PV-NI-PO-LNE-NBR                  50530000
505400     MOVE NINREC-NON-INVC-SEQ-NBR                                 50540000
505500                             TO PV-NI-NON-INVC-SEQ-NBR            50550000
505600                                                                  50560000
505700     SET NI-IDX TO +1                                             50570000
505800                                                                  50580000
505900     SEARCH TNINREC-ENTRY                                         50590000
506000         AT END                                                   50600000
506100             MOVE 'TNINREC INTERNAL TABLE FULL - CONTACT DP '     50610000
506200                                         TO DP020-MSG-TEXT        50620000
506300             SET PS-ERROR                                         50630000
506400                 DP020-MSG-FATAL                                  50640000
506500                 DP020-NEXT-ACT-APPL-ERROR                        50650000
506600                 ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                  50660000
506700                                                                  50670000
506800             WHEN (TNINREC-ENTRY  (NI-IDX) = PV-TNINREC-KEY       50680000
506900               OR  T-NI-NON-INVC-SEQ-NBR (NI-IDX) = +0)           50690000
507000                 NEXT SENTENCE                                    50700000
507100     END-SEARCH.                                                  50710000
507200                                                                  50720000
507300     IF PS-NO-ERROR                                               50730000
507400         IF T-NI-NON-INVC-SEQ-NBR (NI-IDX) = +0                   50740000
507500             MOVE PV-TNINREC-KEY TO TNINREC-ENTRY (NI-IDX)        50750000
507600         END-IF                                                   50760000
507700     END-IF.                                                      50770000
507800/                                                                 50780000
507900 4338-ADD-TO-PO-LNE-TABLE.                                        50790000
508000                                                                  50800000
508100*    NOTE: PO-IDX = 1 IS RESERVED FOR THE NULL PO-LNE-NBR ENTRY   50810000
508200*         (WHERE T-APP-PO-LNE-NBR WILL EQUAL +0).                 50820000
508300     SET PO-IDX TO +2                                             50830000
508400                                                                  50840000
508500     SEARCH PO-LINE-ENTRIES                                       50850000
508600         AT END                                                   50860000
508700             MOVE 'PO LINE INTERNAL TABLE FULL - CONTACT DP '     50870000
508800                                         TO DP020-MSG-TEXT        50880000
508900             SET PS-ERROR                                         50890000
509000                 DP020-MSG-FATAL                                  50900000
509100                 DP020-NEXT-ACT-APPL-ERROR                        50910000
509200                 ASC-NO-ITEMS-LEFT-ON-DB TO TRUE                  50920000
509300                                                                  50930000
509400             WHEN (T-APP-PO-LNE-NBR (PO-IDX) = NINREC-PO-LNE-NBR  50940000
509500               OR  T-APP-PO-LNE-NBR (PO-IDX) = +0)                50950000
509600                 NEXT SENTENCE                                    50960000
509700                                                                  50970000
509800     END-SEARCH.                                                  50980000
509900                                                                  50990000
510000     IF PS-NO-ERROR                                               51000000
510100         MOVE NINREC-PO-LNE-NBR  TO T-APP-PO-LNE-NBR (PO-IDX)     51010000
510200         ADD NINREC-NON-INVC-UNT-QTY TO T-RECV-QTY    (PO-IDX)    51020000
510300                                        T-PRCCLM-QTY  (PO-IDX)    51030000
510400         IF (T-RECV-UNT-COST-AMT (PO-IDX) = +0 OR                 51040000
510500             T-RECV-UNT-COST-AMT (PO-IDX) > NINREC-UNT-COST-AMT)  51050000
510600*-->         ** USE THE LOWEST UNIT COST **                       51060000
510700             MOVE NINREC-UNT-COST-AMT                             51070000
510800                                 TO T-RECV-UNT-COST-AMT(PO-IDX)   51080000
510900         END-IF                                                   51090000
511000     END-IF.                                                      51100000
511100/                                                                 51110000
511200 4340-FETCH-TPREQIT-ROWS.                                         51120000
511300                                                                  51130000
511400*MKK 01/17                                                        51140000
511500     SET ASC-ITEMS-LEFT-ON-DB TO TRUE.                            51150000
511600     SET FIRSTTIME            TO TRUE.                            51160000
511700                                                                  51170000
511800     PERFORM                                                      51180000
511900         VARYING PV-READ-COUNT                                    51190000
512000         FROM 1 BY 1                                              51200000
512100         UNTIL ((PV-READ-COUNT > PC-MAX-ITEMS)                    51210000
512200            OR (ASC-NO-ITEMS-LEFT-ON-DB))                         51220000
512300                                                                  51230000
512400         PERFORM 4345-FETCH-TPREQIT                               51240000
512500         PERFORM 4342-PROCESS-TPREQIT-ROWS                        51250000
512600                                                                  51260000
512700     END-PERFORM.                                                 51270000
512800                                                                  51280000
512900                                                                  51290000
513000*MKK 01/17                                                        51300000
513100 4342-PROCESS-TPREQIT-ROWS.                                       51310000
513200                                                                  51320000
513300     IF FIRSTTIME                                                 51330000
513400         INITIALIZE PV-NULL-LNE-NBR-IND                           51340000
513500                    PV-APP-LNE-NBR                                51350000
513600                    PV-KEY-LNE-NBR                                51360000
513700                    PV-VEND-STYL-NAME                             51370000
513800                    PV-UNT-COST-SEL-CDE                           51380000
513900                    PV-QTY                                        51390000
514000                    PV-UNT-COST-AMT                               51400000
514100                    PV-PAYT-REQ-SEQ-NBR                           51410000
514200         IF  ASC-ITEMS-LEFT-ON-DB                                 51420000
514300             PERFORM 4343-MOVE-TPREQIT-FIELDS                     51430000
514400         ELSE                                                     51440000
514500             CONTINUE                                             51450000
514600         END-IF                                                   51460000
514700     ELSE                                                         51470000
514800         IF ASC-ITEMS-LEFT-ON-DB                                  51480000
514900             IF  PV-CSR-KEY-LNE-NBR      = PV-KEY-LNE-NBR         51490000
515000             AND PV-CSR-UNT-COST-AMT     = PV-UNT-COST-AMT        51500000
515100             AND PV-CSR-UNT-COST-SEL-CDE = PV-UNT-COST-SEL-CDE    51510000
515200             AND PV-CSR-PAYT-REQ-SEQ-NBR = PV-PAYT-REQ-SEQ-NBR    51520000
515300                 PERFORM 4343-MOVE-TPREQIT-FIELDS                 51530000
515400             ELSE                                                 51540000
515500                 PERFORM 4347-FIND-DETAIL-IN-INVC-TABLE           51550000
515600                 INITIALIZE PV-NULL-LNE-NBR-IND                   51560000
515700                            PV-APP-LNE-NBR                        51570000
515800                            PV-KEY-LNE-NBR                        51580000
515900                            PV-VEND-STYL-NAME                     51590000
516000                            PV-UNT-COST-SEL-CDE                   51600000
516100                            PV-QTY                                51610000
516200                            PV-UNT-COST-AMT                       51620000
516300                            PV-PAYT-REQ-SEQ-NBR                   51630000
516400                 PERFORM 4343-MOVE-TPREQIT-FIELDS                 51640000
516500             END-IF                                               51650000
516600         ELSE                                                     51660000
516700             PERFORM 4347-FIND-DETAIL-IN-INVC-TABLE               51670000
516800             INITIALIZE PV-NULL-LNE-NBR-IND                       51680000
516900                        PV-APP-LNE-NBR                            51690000
517000                        PV-KEY-LNE-NBR                            51700000
517100                        PV-VEND-STYL-NAME                         51710000
517200                        PV-UNT-COST-SEL-CDE                       51720000
517300                        PV-QTY                                    51730000
517400                        PV-UNT-COST-AMT                           51740000
517500                        PV-PAYT-REQ-SEQ-NBR                       51750000
517600         END-IF                                                   51760000
517700     END-IF.                                                      51770000
517800                                                                  51780000
517900     SET NOT-FIRSTTIME    TO TRUE.                                51790000
518000                                                                  51800000
518100                                                                  51810000
518200*MKK 01/17                                                        51820000
518300 4343-MOVE-TPREQIT-FIELDS.                                        51830000
518400                                                                  51840000
518500     MOVE PV-CSR-NULL-LNE-NBR-IND TO PV-NULL-LNE-NBR-IND.         51850000
518600     MOVE PV-CSR-APP-LNE-NBR      TO PV-APP-LNE-NBR.              51860000
518700     MOVE PV-CSR-KEY-LNE-NBR      TO PV-KEY-LNE-NBR.              51870000
518800     MOVE PV-CSR-VEND-STYL-NAME   TO PV-VEND-STYL-NAME.           51880000
518900     MOVE PV-CSR-UNT-COST-SEL-CDE TO PV-UNT-COST-SEL-CDE.         51890000
519000     ADD  PV-CSR-QTY              TO PV-QTY.                      51900000
519100     MOVE PV-CSR-UNT-COST-AMT     TO PV-UNT-COST-AMT.             51910000
519200     MOVE PV-CSR-PAYT-REQ-SEQ-NBR TO PV-PAYT-REQ-SEQ-NBR.         51920000
519300                                                                  51930000
519400                                                                  51940000
519500*----------------------------------------------------------------*51950000
519600*    FETCH A TPREQIT ROW                                         *51960000
519700*----------------------------------------------------------------*51970000
519800                                                                  51980000
519900 4345-FETCH-TPREQIT.                                              51990000
520000                                                                  52000000
520100     EXEC SQL                                                     52010000
520200         FETCH TPREQIT_CSR                                        52020000
520300          INTO :PV-CSR-NULL-LNE-NBR-IND                           52030000
520400              ,:PV-CSR-APP-LNE-NBR                                52040000
520500              ,:PV-CSR-KEY-LNE-NBR                                52050000
520600              ,:PV-CSR-VEND-STYL-NAME                             52060000
520700              ,:PV-CSR-UNT-COST-SEL-CDE                           52070000
520800              ,:PV-CSR-QTY                                        52080000
520900              ,:PV-CSR-UNT-COST-AMT                               52090000
521000              ,:PV-CSR-PAYT-REQ-SEQ-NBR                           52100000
521100     END-EXEC.                                                    52110000
521200                                                                  52120000
521300     EVALUATE TRUE                                                52130000
521400         WHEN SQLCODE = +0                                        52140000
521500              CONTINUE                                            52150000
521600                                                                  52160000
521700         WHEN SQLCODE = +100                                      52170000
521800              SET ASC-NO-ITEMS-LEFT-ON-DB                         52180000
521900                                   TO TRUE                        52190000
522000                                                                  52200000
522100         WHEN SQLWARN0 NOT = SPACE                                52210000
522200         WHEN SQLCODE < +0                                        52220000
522300         WHEN SQLCODE > +0                                        52230000
522400              MOVE '4345-FETCH-TPREQIT'                           52240000
522500                                   TO DP013-PARAGRAPH             52250000
522600              MOVE 'FETCH TPREQIT CURSOR'                         52260000
522700                                   TO DP013-MESSAGE-TEXT (1)      52270000
522800              MOVE SQLCA           TO DP013-SQLCA                 52280000
522900              MOVE 'TPREQIT'       TO DP013-DB2-TABLE-NAME (1)    52290000
523000              SET DP013-DB2-ABEND  TO TRUE                        52300000
523100              PERFORM DP013-0000-PROCESS-ABEND                    52310000
523200     END-EVALUATE.                                                52320000
523300                                                                  52330000
523400 4347-FIND-DETAIL-IN-INVC-TABLE.                                  52340000
523500                                                                  52350000
523600     SET IH-IDX TO +1                                             52360000
523700     SEARCH TINVOIC-ENTRIES                                       52370000
523800         AT END                                                   52380000
523900             CONTINUE                                             52390000
524000         WHEN T-IH-INVC-ID (IH-IDX) = SPACES                      52400000
524100             CONTINUE                                             52410000
524200         WHEN T-IH-PAYT-REQ-SEQ-NBR (IH-IDX) =                    52420000
524300              PV-PAYT-REQ-SEQ-NBR                                 52430000
524400             MOVE 'Y' TO T-IH-DETAIL-EXISTS-SW (IH-IDX)           52440000
524500             PERFORM 4349-UPDATE-PO-LNE-TABLE                     52450000
524600     END-SEARCH.                                                  52460000
524700                                                                  52470000
524800 4349-UPDATE-PO-LNE-TABLE.                                        52480000
524900                                                                  52490000
525000     IF PV-PO-LNE-NBR-NOT-NULL                                    52500000
525100         SET PO-IDX TO +2                                         52510000
525200                                                                  52520000
525300         SEARCH PO-LINE-ENTRIES                                   52530000
525400             AT END                                               52540000
525500                 MOVE 'PO LINE INTERNAL TABLE FULL - CONTACT DP ' 52550000
525600                                             TO DP020-MSG-TEXT    52560000
525700                 SET PS-ERROR                                     52570000
525800                     DP020-MSG-FATAL                              52580000
525900                     DP020-NEXT-ACT-APPL-ERROR                    52590000
526000                     ASC-NO-ITEMS-LEFT-ON-DB TO TRUE              52600000
526100                                                                  52610000
526200                 WHEN (T-APP-PO-LNE-NBR (PO-IDX) = PV-APP-LNE-NBR 52620000
526300                   OR  T-APP-PO-LNE-NBR (PO-IDX) = +0)            52630000
526400                     NEXT SENTENCE                                52640000
526500                                                                  52650000
526600         END-SEARCH                                               52660000
526700     ELSE                                                         52670000
526800         SET PO-IDX TO +1                                         52680000
526900     END-IF.                                                      52690000
527000                                                                  52700000
527100     IF PS-NO-ERROR                                               52710000
527200         MOVE PV-PAYT-REQ-SEQ-NBR    TO T-PAYT-REQ-SEQ-NBR(PO-IDX)52720000
527300         IF PV-PO-LNE-NBR-NOT-NULL                                52730000
527400             MOVE PV-APP-LNE-NBR     TO T-APP-PO-LNE-NBR (PO-IDX) 52740000
527500             MOVE PV-KEY-LNE-NBR     TO T-KEY-PO-LNE-NBR (PO-IDX) 52750000
527600         ELSE                                                     52760000
527700             MOVE +0                 TO T-APP-PO-LNE-NBR (PO-IDX) 52770000
527800                                        T-KEY-PO-LNE-NBR (PO-IDX) 52780000
527900         END-IF                                                   52790000
528000         MOVE PV-VEND-STYL-NAME      TO T-STYLE-DESC  (PO-IDX)    52800000
528100         ADD  PV-QTY                 TO T-INVC-QTY    (PO-IDX)    52810000
528200         IF T-INVC-UNT-COST-AMT (PO-IDX) = +0                     52820000
528300             MOVE PV-UNT-COST-AMT   TO T-INVC-UNT-COST-AMT(PO-IDX)52830000
528400         ELSE                                                     52840000
528500             IF T-INVC-UNT-COST-AMT (PO-IDX) > +0 AND             52850000
528600               (T-INVC-UNT-COST-AMT (PO-IDX) NOT =                52860000
528700                PV-UNT-COST-AMT)                                  52870000
528800                 MOVE 'Y'            TO T-MULT-INVC-SW(PO-IDX)    52880000
528900             END-IF                                               52890000
529000         END-IF                                                   52900000
529100                                                                  52910000
529200         IF PV-UNT-COST-SEL-CDE = 'P'                             52920000
529300             COMPUTE T-INVC-EXTD-AMT (PO-IDX) =                   52930000
529400               (T-INVC-EXTD-AMT (PO-IDX) +                        52940000
529500                PV-QTY * T-RECV-UNT-COST-AMT(PO-IDX))             52950000
529600         ELSE                                                     52960000
529700             COMPUTE T-INVC-EXTD-AMT (PO-IDX) =                   52970000
529800               (T-INVC-EXTD-AMT (PO-IDX) +                        52980000
529900                PV-QTY * PV-UNT-COST-AMT)                         52990000
530000         END-IF                                                   53000000
530100                                                                  53010000
530200*        -- A ROW IS A CANDIDATE FOR TPRCCLM ONLY IF IT'S INVC &  53020000
530300*        -- RECV QTY'S ARE > ZERO, AND IT'S UNIT-COST'S DIFFER    53030000
530400                                                                  53040000
530500         IF (T-INVC-QTY   (PO-IDX) > +0    AND                    53050000
530600             T-RECV-QTY   (PO-IDX) > +0    AND                    53060000
530700             T-PRCCLM-QTY (PO-IDX) > +0)                          53070000
530800             IF ASC-PAY-RELEASE-IND = 'Y'            AND          53080000
530900                DP020-FK-CONFIRM (DP020-SRC-AID)     AND          53090000
531000                (PV-UNT-COST-AMT  NOT =                           53100000
531100                 T-RECV-UNT-COST-AMT (PO-IDX))                    53110000
531200                 PERFORM 4360-ADD-TO-TPRCCLM-TABLE                53120000
531300                                                                  53130000
531400             END-IF                                               53140000
531500         END-IF                                                   53150000
531600     END-IF.                                                      53160000
531700/                                                                 53170000
531800 4350-FINAL-CHECKS.                                               53180000
531900                                                                  53190000
532000     PERFORM 4352-GET-VENDOR-INFO.                                53200000
532100                                                                  53210000
532200     MOVE SPACES TO ASC-NO-DETAIL-INVOICES                        53220000
532300     SET ASC-NO-DETAILS-TEXT-ONLY TO TRUE                         53230000
532400     MOVE 'N'    TO ASC-HOLD-IND                                  53240000
532500                                                                  53250000
532600     PERFORM VARYING IH-IDX FROM +1 BY +1                         53260000
532700         UNTIL                                                    53270000
532800         T-IH-INVC-ID (IH-IDX) = SPACES                           53280000
532900               IF T-IH-DETAIL-EXISTS-SW (IH-IDX) = SPACE          53290000
533000                   IF ASC-NO-DETAIL-INVOICES > SPACES             53300000
533100                       MOVE ',' TO PV-COMMA                       53310000
533200                   ELSE                                           53320000
533300                       MOVE ' ' TO PV-COMMA                       53330000
533400                   END-IF                                         53340000
533500                   STRING ASC-NO-DETAIL-INVOICES                  53350000
533600                               DELIMITED BY '  '                  53360000
533700                          PV-COMMA                                53370000
533800                               DELIMITED BY SIZE                  53380000
533900                          T-IH-INVC-ID (IH-IDX)                   53390000
534000                               DELIMITED BY ' '                   53400000
534100                     INTO ASC-NO-DETAIL-INVOICES                  53410000
534200               END-IF                                             53420000
534300               IF T-IH-HOLD-IND (IH-IDX)= 'Y'                     53430000
534400                   MOVE 'Y'    TO ASC-HOLD-IND                    53440000
534500               END-IF                                             53450000
534600     END-PERFORM                                                  53460000
534700                                                                  53470000
534800     MOVE +0 TO PV-DB2-COUNT                                      53480000
534900                                                                  53490000
535000     EXEC SQL                                                     53500000
535100         SELECT COUNT(*)                                          53510000
535200           INTO :PV-DB2-COUNT                                     53520000
535300           FROM TRECEIV                                           53530000
535400          WHERE ORD_NBR        = :ASC-KEY-PO-NBR                  53540000
535500            AND STATUS_CDE    ^= 'VE'                             53550000
535600            AND VER_STATUS_CDE = 'A'                              53560000
535700     END-EXEC.                                                    53570000
535800                                                                  53580000
535900     EVALUATE TRUE                                                53590000
536000         WHEN PV-DB2-COUNT = +0                                   53600000
536100             MOVE 'N'         TO ASC-RECV-COMPLETE-IND            53610000
536200         WHEN PV-DB2-COUNT > +0                                   53620000
536300             MOVE 'Y'         TO ASC-RECV-COMPLETE-IND            53630000
536400         WHEN (SQLCODE NOT = +0)                                  53640000
536500              MOVE '4350-FINAL-CHECKS'                            53650000
536600                                   TO DP013-PARAGRAPH             53660000
536700              MOVE 'COUNT TRECEIV'                                53670000
536800                                   TO DP013-MESSAGE-TEXT (1)      53680000
536900              MOVE SQLCA           TO DP013-SQLCA                 53690000
537000              MOVE 'TRECEIV'       TO DP013-DB2-TABLE-NAME (1)    53700000
537100              SET DP013-DB2-ABEND  TO TRUE                        53710000
537200              PERFORM DP013-0000-PROCESS-ABEND                    53720000
537300     END-EVALUATE.                                                53730000
537400                                                                  53740000
537500 4352-GET-VENDOR-INFO.                                            53750000
537600                                                                  53760000
537700     PERFORM                                                      53770000
537800         WITH TEST AFTER                                          53780000
537900         VARYING PV-RETRY-COUNTER                                 53790000
538000         FROM 1 BY 1                                              53800000
538100         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               53810000
538200            OR (SQLCODE = +0)                                     53820000
538300            OR (SQLCODE = +100))                                  53830000
538400                                                                  53840000
538500         EXEC SQL                                                 53850000
538600           SELECT     A.DUN_NBR                                   53860000
538700                     ,B.ENT_NAME_DESC                             53870000
538800                     ,C.DEPT_NBR                                  53880000
538900                     ,C.NEW_STR_PO_IND                            53890000
539000             INTO    :EXTENT-DUN-NBR                              53900000
539100                    ,:ENTNME-ENT-NAME-DESC                        53910000
539200                    ,:PURCHS-DEPT-NBR                             53920000
539300                    ,:PURCHS-NEW-STR-PO-IND                       53930000
539400             FROM    TEXTENT A                                    53940000
539500                    ,TENTNME B                                    53950000
539600                    ,TPURCHS C                                    53960000
539700            WHERE    C.PO_NBR         = :DK-PO-NBR                53970000
539800              AND    C.VER_STATUS_CDE ='A'                        53980000
539900              AND    A.ENT_ID         = C.ENT_ID                  53990000
540000              AND    B.ENT_ID         = C.ENT_ID                  54000000
540100              AND    B.TYPE_CDE       = '01'                      54010000
540200         END-EXEC                                                 54020000
540300                                                                  54030000
540400         EVALUATE TRUE                                            54040000
540500             WHEN SQLCODE = +0                                    54050000
540600                 MOVE EXTENT-DUN-NBR          TO ASC-DUN-NBR      54060000
540700                 MOVE ENTNME-ENT-NAME-DESC    TO ASC-ENT-NAME     54070000
540800                 MOVE PURCHS-DEPT-NBR         TO ASC-DEPT-NBR     54080000
540900                 MOVE PURCHS-NEW-STR-PO-IND   TO                  54090000
541000                      ASC-NEW-STR-PO-IND                          54100000
541100             WHEN SQLCODE = -904                                  54110000
541200             WHEN SQLCODE = -913                                  54120000
541300             WHEN SQLCODE = +100                                  54130000
541400                 CONTINUE                                         54140000
541500             WHEN SQLWARN0 NOT = SPACES                           54150000
541600             WHEN SQLCODE < ZERO                                  54160000
541700             WHEN SQLCODE > ZERO                                  54170000
541800                 MOVE '4352-GET-VENDOR-INFO'                      54180000
541900                                   TO DP013-PARAGRAPH             54190000
542000                 MOVE 'SELECT ON TENTNME'                         54200000
542100                                   TO DP013-MESSAGE-TEXT (1)      54210000
542200                 MOVE SQLCA        TO DP013-SQLCA                 54220000
542300                 MOVE 'TEXTENT'    TO DP013-DB2-TABLE-NAME (1)    54230000
542400                 MOVE 'TENTNME'    TO DP013-DB2-TABLE-NAME (2)    54240000
542500                 MOVE 'TPURCHS'    TO DP013-DB2-TABLE-NAME (3)    54250000
542600                 SET DP013-DB2-ABEND                              54260000
542700                     DP013-XCTL-DISPLAY-RESTART                   54270000
542800                                   TO TRUE                        54280000
542900                 PERFORM DP013-0000-PROCESS-ABEND                 54290000
543000         END-EVALUATE                                             54300000
543100     END-PERFORM.                                                 54310000
543200                                                                  54320000
543300     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        54330000
543400         MOVE '4352-GET-VENDOR-INFO'                              54340000
543500                                   TO DP013-PARAGRAPH             54350000
543600         MOVE 'MAXIMUM RETRIES EXCEEDED ATTEMPTING TO SELECT'     54360000
543700                                   TO DP013-MESSAGE-TEXT (1)      54370000
543800         MOVE SQLCA                TO DP013-SQLCA                 54380000
543900         MOVE 'TENTNME'            TO DP013-DB2-TABLE-NAME (1)    54390000
544000         MOVE 'TEXTENT'            TO DP013-DB2-TABLE-NAME (2)    54400000
544100         MOVE 'TPURCHS'            TO DP013-DB2-TABLE-NAME (3)    54410000
544200         SET DP013-DB2-ABEND                                      54420000
544300             DP013-XCTL-DISPLAY-RESTART                           54430000
544400                                   TO TRUE                        54440000
544500         PERFORM DP013-0000-PROCESS-ABEND                         54450000
544600     END-IF.                                                      54460000
544700/                                                                 54470000
544800 4360-ADD-TO-TPRCCLM-TABLE.                                       54480000
544900                                                                  54490000
545000*    IF INVOICE NUMBER IS GREATER THAN 10 CHARS, BEGIN AT THE END 54500000
545100*    OF THE INVOICE NUMBER, WORKING BACKWARDS UNTIL A NON-BLANK   54510000
545200*    CHAR IS FOUND.  CONTINUE BACKWARDS ANOTHER 9 POSITIONS TO    54520000
545300*    FORMAT THE 10 CHAR INVOICE NUMBER.                           54530000
545400                                                                  54540000
545500     MOVE T-IH-INVC-ID (IH-IDX)   TO T-PR-INVC-ID     (PR-IDX)    54550000
545600                                                                  54560000
545700     MOVE T-APP-PO-LNE-NBR(PO-IDX) TO T-PR-PO-LINE-NBR (PR-IDX)   54570000
545800                                                                  54580000
545900*  COMPARE INVC QTY TO TOT QTY FOR PRICE CLAIMS.  IF INVC QTY IS  54590000
546000*  LESS, USE IT AS THE QTY TO CREATE THE PRICE CLAIM.  OTHERWISE, 54600000
546100*  USE TOT PRICE CLAIM QTY.  IF THE TOT PRICE CLAIM QTY IS MORE   54610000
546200*  THAN THE INVOICE QTY, SUBTRACT THE INVOICE QTY FROM THE PRICE  54620000
546300*  CLAIM QTY TO REFLECT QTY FOR WHICH THE PRICE CLAIM WAS CREATED.54630000
546400*  IF THE TOT PRICE CLAIM QTY IS THE SAME OR LESS THAN THE INVOICE54640000
546500*  QTY, THEN ALL THE PRICE CLAIM QTY HAS BEEN USED UP, SO SET IT  54650000
546600*  TO ZEROS.                                                      54660000
546700     IF PV-QTY  < T-PRCCLM-QTY(PO-IDX)                            54670000
546800         MOVE PV-QTY              TO T-PR-UNIT-QTY    (PR-IDX)    54680000
546900     ELSE                                                         54690000
547000         MOVE T-PRCCLM-QTY(PO-IDX) TO T-PR-UNIT-QTY   (PR-IDX)    54700000
547100     END-IF.                                                      54710000
547200     IF T-PRCCLM-QTY(PO-IDX) > PV-QTY                             54720000
547300         SUBTRACT PV-QTY          FROM T-PRCCLM-QTY   (PO-IDX)    54730000
547400     ELSE                                                         54740000
547500         MOVE ZEROS               TO T-PRCCLM-QTY     (PO-IDX)    54750000
547600     END-IF.                                                      54760000
547700                                                                  54770000
547800     MOVE PV-UNT-COST-AMT         TO T-PR-UNIT-COST   (PR-IDX)    54780000
547900     MOVE T-RECV-UNT-COST-AMT(PO-IDX)                             54790000
548000                                  TO T-PR-ADJ-COST    (PR-IDX).   54800000
548100                                                                  54810000
548200*----- USE LOWEST COST.  NOTE THAT SINCE THE LOWEST COST IS ALWAYS54820000
548300*----- USED, CREDIT PRICE CLAIMS (CM AND CP) WILL NOT BE CREATED  54830000
548400*----- IN INVOICE RECONCILIATION.                                 54840000
548500     IF PV-UNT-COST-SEL-CDE = 'P'                                 54850000
548600*        IF PV-UNT-COST-AMT  >  T-RECV-UNT-COST-AMT(PO-IDX)       54860000
548700             MOVE 'DM'            TO T-PR-DOC-TYP-CDE (PR-IDX)    54870000
548800*        END-IF                                                   54880000
548900     ELSE                                                         54890000
549000*        IF PV-UNT-COST-AMT  <  T-RECV-UNT-COST-AMT(PO-IDX)       54900000
549100             MOVE 'DP'            TO T-PR-DOC-TYP-CDE (PR-IDX)    54910000
549200*        END-IF                                                   54920000
549300     END-IF.                                                      54930000
549400                                                                  54940000
549500     SET     PR-IDX UP BY +1.                                     54950000
549600* MKK 01/04                                                       54960000
549700     IF PR-IDX > PR-MAX                                           54970000
549800         MOVE 'PRICE CLAIM TABLE FULL - CONTACT DP '              54980000
549900                                     TO DP020-MSG-TEXT            54990000
550000         SET PS-ERROR                                             55000000
550100             DP020-MSG-FATAL                                      55010000
550200             DP020-NEXT-ACT-APPL-ERROR                            55020000
550300             ASC-NO-ITEMS-LEFT-ON-DB                              55030000
550400                                     TO TRUE                      55040000
550500     END-IF.                                                      55050000
550600/                                                                 55060000
550700 4370-LOAD-MAP-FIELDS.                                            55070000
550800                                                                  55080000
550900     IF  ASC-ITEM-SUB < PC-ITEMS-PER-PANEL                        55090000
551000         ADD +1            TO ASC-ITEM-SUB                        55100000
551100     ELSE                                                         55110000
551200         ADD +1            TO ASC-BLK-SUB                         55120000
551300         MOVE +1           TO ASC-ITEM-SUB                        55130000
551400                                                                  55140000
551500         IF  ASC-BLK-SUB > PC-MAX-BLOCKS-IN-ARRAY                 55150000
551600             MOVE +1       TO ASC-BLK-SUB                         55160000
551700             SET ASC-BLOCK-MODIFIED (1)                           55170000
551800                           TO TRUE                                55180000
551900             PERFORM 5100-WRITE-TEMP-STORAGE                      55190000
552000             MOVE ASC-BLOCK-ENTRIES                               55200000
552100                       (PC-MAX-BLOCKS-IN-ARRAY)                   55210000
552200                        TO ASC-BLOCK-ENTRIES(ASC-BLK-SUB)         55220000
552300             ADD +1        TO ASC-BLK-SUB                         55230000
552400             INITIALIZE ASC-BLOCK-ENTRIES (ASC-BLK-SUB)           55240000
552500             SET ASC-BLOCK-NOT-MODIFIED(ASC-BLK-SUB)              55250000
552600                           TO TRUE                                55260000
552700         END-IF                                                   55270000
552800     END-IF                                                       55280000
552900                                                                  55290000
553000     ADD +1                         TO ASC-NUMBER-OF-ITEMS-READ   55300000
553100     MOVE ASC-NUMBER-OF-ITEMS-READ  TO ASC-LIST-ITEM-NUMBER       55310000
553200                              (ASC-BLK-SUB ASC-ITEM-SUB)          55320000
553300                                                                  55330000
553400     MOVE T-INVC-EXTD-AMT(PO-IDX)   TO ASC-INVC-EXTD              55340000
553500                              (ASC-BLK-SUB ASC-ITEM-SUB)          55350000
553600     MOVE T-INVC-QTY     (PO-IDX)   TO ASC-INVC-QTY               55360000
553700                              (ASC-BLK-SUB ASC-ITEM-SUB)          55370000
553800                                                                  55380000
553900     COMPUTE ASC-RECV-EXTD    (ASC-BLK-SUB ASC-ITEM-SUB)          55390000
554000           = (T-RECV-QTY (PO-IDX) * T-RECV-UNT-COST-AMT(PO-IDX))  55400000
554100                                                                  55410000
554200     MOVE T-RECV-QTY     (PO-IDX)   TO ASC-RECV-QTY               55420000
554300                              (ASC-BLK-SUB ASC-ITEM-SUB)          55430000
554400                                                                  55440000
554500     MOVE T-APP-PO-LNE-NBR (PO-IDX) TO ASC-PO-LNE-NBR             55450000
554600                              (ASC-BLK-SUB ASC-ITEM-SUB)          55460000
554700     MOVE T-STYLE-DESC   (PO-IDX)  TO  ASC-STYL-DESC              55470000
554800                              (ASC-BLK-SUB ASC-ITEM-SUB).         55480000
554900                                                                  55490000
555000     IF (T-RECV-UNT-COST-AMT(PO-IDX) <                            55500000
555100                                  T-INVC-UNT-COST-AMT(PO-IDX)) OR 55510000
555200        (T-MULT-INVC-SW (PO-IDX) = 'Y')                           55520000
555300        IF T-RECV-QTY(PO-IDX)          = +0    AND                55530000
555400           T-RECV-UNT-COST-AMT(PO-IDX) = +0                       55540000
555500           MOVE ' ' TO ASC-LOW-COST-IND(ASC-BLK-SUB ASC-ITEM-SUB) 55550000
555600        ELSE                                                      55560000
555700           MOVE '*' TO ASC-LOW-COST-IND(ASC-BLK-SUB ASC-ITEM-SUB) 55570000
555800     ELSE                                                         55580000
555900        MOVE ' ' TO ASC-LOW-COST-IND (ASC-BLK-SUB ASC-ITEM-SUB).  55590000
556000                                                                  55600000
556100                                                                  55610000
556200*----------------------------------------------------------------*55620000
556300* MOVE THE DISPLAYED FIELDS FROM THE COMMAREA TO THE SCREEN.     *55630000
556400*----------------------------------------------------------------*55640000
556500                                                                  55650000
556600 4400-MOVE-COMMAREA-TO-SCREEN.                                    55660000
556700                                                                  55670000
556800     IF  (((PV-TOP-ITEM > ASC-LIST-ITEM-NUMBER (1 1))             55680000
556900         AND (PV-TOP-ITEM > ASC-LIST-ITEM-NUMBER (2 1)))          55690000
557000         OR  (PV-TOP-ITEM < ASC-LIST-ITEM-NUMBER (1 1)))          55700000
557100             MOVE +1               TO ASC-BLK-SUB                 55710000
557200             PERFORM 5100-WRITE-TEMP-STORAGE                      55720000
557300             ADD +1                TO ASC-BLK-SUB                 55730000
557400             PERFORM 5100-WRITE-TEMP-STORAGE                      55740000
557500             DIVIDE PV-TOP-ITEM BY PC-ITEMS-PER-PANEL             55750000
557600                 GIVING PV-BLOCK-NUMBER                           55760000
557700                 REMAINDER PV-REMAINDER                           55770000
557800             IF  PV-REMAINDER > ZERO                              55780000
557900                 ADD +1            TO PV-BLOCK-NUMBER             55790000
558000             END-IF                                               55800000
558100             MOVE +1               TO ASC-BLK-SUB                 55810000
558200             PERFORM 4410-READ-TEMP-STORAGE                       55820000
558300             ADD +1                TO ASC-BLK-SUB                 55830000
558400                                      PV-BLOCK-NUMBER             55840000
558500             PERFORM 4410-READ-TEMP-STORAGE                       55850000
558600     END-IF.                                                      55860000
558700                                                                  55870000
558800     MOVE +1                       TO ASC-BLK-SUB.                55880000
558900                                                                  55890000
559000     COMPUTE ASC-ITEM-SUB =                                       55900000
559100         ((PV-TOP-ITEM - ASC-LIST-ITEM-NUMBER (1 1))              55910000
559200         + PC-ITEMS-PER-PANEL).                                   55920000
559300                                                                  55930000
559400     IF  ASC-ITEM-SUB > PC-ITEMS-PER-PANEL                        55940000
559500         ADD +1                    TO ASC-BLK-SUB                 55950000
559600         SUBTRACT PC-ITEMS-PER-PANEL FROM ASC-ITEM-SUB            55960000
559700     END-IF.                                                      55970000
559800                                                                  55980000
559900     COMPUTE ASC-ITEM-AT-BOT-OF-PANEL =                           55990000
560000         ((PV-TOP-ITEM + PC-ITEMS-PER-PANEL) - 1).                56000000
560100                                                                  56010000
560200     PERFORM 4430-CHECK-FOR-BEGIN-AND-END.                        56020000
560300     PERFORM 4420-FORMAT-LIST-LINES                               56030000
560400         VARYING PV-SUB                                           56040000
560500         FROM PC-ITEMS-PER-PANEL BY -1                            56050000
560600         UNTIL PV-SUB < +1.                                       56060000
560700                                                                  56070000
560800     COMPUTE ASC-ITEMS-DISPLAYED =                                56080000
560900         ((ASC-ITEM-AT-BOT-OF-PANEL - PV-TOP-ITEM) + 1).          56090000
561000                                                                  56100000
561100     IF PS-NO-START-ITEM-ERROR                                    56110000
561200         MOVE PV-TOP-ITEM              TO ASC-ITEM-AT-TOP-OF-PANEL56120000
561300                                          ASTRTITO                56130000
561400         MOVE SPACE                    TO ASC-START-ITEM-REQUEST  56140000
561500     ELSE                                                         56150000
561600         MOVE ASC-START-ITEM-REQUEST   TO ASTRTITO                56160000
561700     END-IF.                                                      56170000
561800                                                                  56180000
561900                                                                  56190000
562000     MOVE ASC-KEY-PO-NBR           TO APONUMO.                    56200000
562100     MOVE ASC-ENT-NAME             TO AVNDNMEO.                   56210000
562200     MOVE ASC-DEPT-NBR             TO ADPTNBRO.                   56220000
562300     IF ASC-MTCH-LVL-CDE = 'D'                                    56230000
562400        MOVE ASC-KEY-DC-NBR        TO ALOCATNO                    56240000
562500     ELSE                                                         56250000
562600        MOVE ASC-KEY-STR-NBR       TO ALOCATNO                    56260000
562700     END-IF.                                                      56270000
562800     MOVE ASC-MTCH-LVL-CDE         TO AMTHLVLO.                   56280000
562900     MOVE ASC-HOLD-IND             TO AHLDINDO.                   56290000
563000     MOVE ASC-RECV-COMPLETE-IND    TO ARCVCMPO.                   56300000
563100                                                                  56310000
563200     MOVE ASC-ITEM-AT-BOT-OF-PANEL TO AENDITO.                    56320000
563300     MOVE ASC-NUMBER-OF-ITEMS-READ TO ATOTITO.                    56330000
563400     MOVE ASC-NUMBER-OF-SELECTED-ITEMS                            56340000
563500                                   TO ASELITO.                    56350000
563600                                                                  56360000
563700     IF PS-NO-ERROR                                               56370000
563800         IF INVCS-NOT-IN-BALANCE                                  56380000
563900             SET DP020-MSG-FATAL                                  56390000
564000                 PS-ERROR              TO TRUE                    56400000
564100             MOVE PC-TSYMSG-00965      TO DP020-MSG-NUMBER        56410000
564200         END-IF                                                   56420000
564300                                                                  56430000
564400         IF ASC-NO-DETAIL-INVOICES > SPACES                       56440000
564500            MOVE SPACES TO DP020-MSG-TEXT                         56450000
564600            MOVE ASC-NO-DETAIL-INVOICES TO DP020-MSG-TEXT         56460000
564700            MOVE PC-TSYMSG-00964      TO DP020-MSG-NUMBER         56470000
564800            SET DP020-MSG-FATAL       TO TRUE                     56480000
564900            SET PS-ERROR              TO TRUE                     56490000
565000         END-IF                                                   56500000
565100     END-IF                                                       56510000
565200                                                                  56520000
565300     IF  DP020-MSG-NUMBER-X = SPACE                               56530000
565400         IF  ASC-ITEM-AT-BOT-OF-PANEL < ASC-NUMBER-OF-ITEMS-READ  56540000
565500*            --- MORE ITEMS TO DISPLAY ----                       56550000
565600             MOVE PC-TSYMSG-00279  TO DP020-MSG-NUMBER            56560000
565700             SET DP020-MSG-INFORMATIONAL                          56570000
565800                                   TO TRUE                        56580000
565900         END-IF                                                   56590000
566000     END-IF.                                                      56600000
566100                                                                  56610000
566200*----------------------------------------------------------------*56620000
566300*    READ A BLOCK FROM TEMPORARY STORAGE INTO THE ARRAY.         *56630000
566400*----------------------------------------------------------------*56640000
566500                                                                  56650000
566600 4410-READ-TEMP-STORAGE.                                          56660000
566700                                                                  56670000
566800     EXEC CICS                                                    56680000
566900         READQ TS                                                 56690000
567000             QUEUE (ASC-LIST-QUEUE-NAME)                          56700000
567100             INTO  (ASC-BLOCK-ENTRIES(ASC-BLK-SUB))               56710000
567200             ITEM  (PV-BLOCK-NUMBER)                              56720000
567300             RESP  (PV-CICS-RESP)                                 56730000
567400     END-EXEC.                                                    56740000
567500                                                                  56750000
567600     IF  ((PV-CICS-RESP = DFHRESP (NORMAL))                       56760000
567700       OR (PV-CICS-RESP = DFHRESP (ITEMERR)))                     56770000
567800         CONTINUE                                                 56780000
567900     ELSE                                                         56790000
568000         SET DP013-CICS-ABEND      TO TRUE                        56800000
568100         SET DP013-NO-ROLLBACK     TO TRUE                        56810000
568200         MOVE '4410-READ-TEMP-STORAGE'                            56820000
568300                                   TO DP013-PARAGRAPH             56830000
568400         MOVE 'ERROR TRYING TO READ FROM TEMP STORAGE QUEUE'      56840000
568500                                   TO DP013-MESSAGE-TEXT(1)       56850000
568600         PERFORM DP013-0000-PROCESS-ABEND                         56860000
568700     END-IF.                                                      56870000
568800                                                                  56880000
568900     SET ASC-BLOCK-NOT-MODIFIED(ASC-BLK-SUB)                      56890000
569000                                   TO TRUE.                       56900000
569100                                                                  56910000
569200     IF  PV-CICS-RESP = DFHRESP (ITEMERR)                         56920000
569300         INITIALIZE ASC-BLOCK-ENTRIES (ASC-BLK-SUB)               56930000
569400     END-IF.                                                      56940000
569500                                                                  56950000
569600/                                                                 56960000
569700*----------------------------------------------------------------*56970000
569800*    PROCESS THE ITEMS IN THE ARRAY AND MOVE THEM TO THE MAP.    *56980000
569900*----------------------------------------------------------------*56990000
570000                                                                  57000000
570100 4420-FORMAT-LIST-LINES.                                          57010000
570200                                                                  57020000
570300     IF  ASC-ITEM-AT-BOT-OF-PANEL > ASC-NUMBER-OF-ITEMS-READ      57030000
570400         SUBTRACT +1 FROM ASC-ITEM-AT-BOT-OF-PANEL                57040000
570500         MOVE DP015-ASK-DRK-OFF  TO MR-SELECTA  (PV-SUB)          57050000
570600         MOVE SPACES             TO MR-SELECT   (PV-SUB)          57060000
570700                                    MR-INVC-EXTD(PV-SUB)          57070000
570800                                    MR-RECV-EXTD(PV-SUB)          57080000
570900                                    MR-INVC-QTY (PV-SUB)          57090000
571000                                    MR-RECV-QTY (PV-SUB)          57100000
571100                                    MR-PO-LNE   (PV-SUB)          57110000
571200                                    MR-STYL-DESC(PV-SUB)          57120000
571300                                    MR-LOW-COST-IND(PV-SUB)       57130000
571400     ELSE                                                         57140000
571500         IF  ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)      57150000
571600                                                   > SPACE        57160000
571700             MOVE ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB) 57170000
571800                                   TO MR-SELECT (PV-SUB)          57180000
571900         ELSE                                                     57190000
572000             MOVE ASC-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)      57200000
572100                                   TO MR-SELECT (PV-SUB)          57210000
572200         END-IF                                                   57220000
572300                                                                  57230000
572400         IF  DP030-SET-CURSOR-TRAILER                             57240000
572500             IF  ((ASC-TEMP-SELECTED-SW (ASC-BLK-SUB ASC-ITEM-SUB)57250000
572600                 > SPACE)                                         57260000
572700               OR (PV-SUB = 1))                                   57270000
572800                SET DP030-SET-CURSOR-APPL-1 TO TRUE               57280000
572900                MOVE -1            TO MR-SELECTL (PV-SUB)         57290000
573000             END-IF                                               57300000
573100         END-IF                                                   57310000
573200                                                                  57320000
573300         IF PV-TOP-ITEM NOT = ASC-ITEM-AT-TOP-OF-PANEL            57330000
573400             MOVE DP015-UNP-ALP-NOR-OFF TO MR-SELECTA  (PV-SUB)   57340000
573500             MOVE ASC-INVC-EXTD       (ASC-BLK-SUB ASC-ITEM-SUB)  57350000
573600               TO MR-INVC-EXTD-NUM    (PV-SUB)                    57360000
573700             MOVE ASC-RECV-EXTD       (ASC-BLK-SUB ASC-ITEM-SUB)  57370000
573800               TO MR-RECV-EXTD-NUM    (PV-SUB)                    57380000
573900                                                                  57390000
574000             IF (ASC-INVC-EXTD        (ASC-BLK-SUB ASC-ITEM-SUB)  57400000
574100                 NOT =                                            57410000
574200                 ASC-RECV-EXTD        (ASC-BLK-SUB ASC-ITEM-SUB)) 57420000
574300                   MOVE DP015-YELLOW                              57430000
574400                     TO MR-INVC-EXTD-C(PV-SUB)                    57440000
574500                        MR-RECV-EXTD-C(PV-SUB)                    57450000
574600             ELSE                                                 57460000
574700                   MOVE DP015-BLUE                                57470000
574800                     TO MR-INVC-EXTD-C(PV-SUB)                    57480000
574900                        MR-RECV-EXTD-C(PV-SUB)                    57490000
575000             END-IF                                               57500000
575100             MOVE ASC-INVC-QTY        (ASC-BLK-SUB ASC-ITEM-SUB)  57510000
575200               TO MR-INVC-QTY-NUM     (PV-SUB)                    57520000
575300             MOVE ASC-RECV-QTY        (ASC-BLK-SUB ASC-ITEM-SUB)  57530000
575400               TO MR-RECV-QTY-NUM     (PV-SUB)                    57540000
575500                                                                  57550000
575600             IF (ASC-INVC-QTY         (ASC-BLK-SUB ASC-ITEM-SUB)  57560000
575700                 NOT =                                            57570000
575800                 ASC-RECV-QTY         (ASC-BLK-SUB ASC-ITEM-SUB)) 57580000
575900                   MOVE DP015-YELLOW                              57590000
576000                     TO MR-INVC-QTY-C (PV-SUB)                    57600000
576100                        MR-RECV-QTY-C (PV-SUB)                    57610000
576200             ELSE                                                 57620000
576300                   MOVE DP015-BLUE                                57630000
576400                     TO MR-INVC-QTY-C (PV-SUB)                    57640000
576500                        MR-RECV-QTY-C (PV-SUB)                    57650000
576600             END-IF                                               57660000
576700                                                                  57670000
576800             IF (ASC-LOW-COST-IND     (ASC-BLK-SUB ASC-ITEM-SUB)) 57680000
576900                 = '*'                                            57690000
577000                   MOVE DP015-YELLOW                              57700000
577100                     TO MR-LOW-COST-IND-C (PV-SUB)                57710000
577200             ELSE                                                 57720000
577300                   MOVE DP015-BLUE                                57730000
577400                     TO MR-LOW-COST-IND-C (PV-SUB)                57740000
577500             END-IF                                               57750000
577600                                                                  57760000
577700             IF ASC-PO-LNE-NBR        (ASC-BLK-SUB ASC-ITEM-SUB)  57770000
577800                 = +0                                             57780000
577900                 MOVE '****'                                      57790000
578000                   TO MR-PO-LNE       (PV-SUB)                    57800000
578100             ELSE                                                 57810000
578200                 MOVE ASC-PO-LNE-NBR  (ASC-BLK-SUB ASC-ITEM-SUB)  57820000
578300                   TO MR-PO-LNE-NUM   (PV-SUB)                    57830000
578400             END-IF                                               57840000
578500                                                                  57850000
578600             MOVE ASC-STYL-DESC       (ASC-BLK-SUB ASC-ITEM-SUB)  57860000
578700               TO MR-STYL-DESC        (PV-SUB)                    57870000
578800             MOVE ASC-LOW-COST-IND    (ASC-BLK-SUB ASC-ITEM-SUB)  57880000
578900               TO MR-LOW-COST-IND     (PV-SUB)                    57890000
579000         END-IF                                                   57900000
579100     END-IF.                                                      57910000
579200                                                                  57920000
579300     SUBTRACT +1 FROM ASC-ITEM-SUB.                               57930000
579400                                                                  57940000
579500     IF  ASC-ITEM-SUB < + 1                                       57950000
579600         MOVE PC-ITEMS-PER-PANEL   TO ASC-ITEM-SUB                57960000
579700         MOVE +1                   TO ASC-BLK-SUB                 57970000
579800     END-IF.                                                      57980000
579900                                                                  57990000
580000*----------------------------------------------------------------*58000000
580100*  IF A BEGINNING OF RANGE WAS SPECIFIED, MAKE SURE AN END OF    *58010000
580200*  RANGE WAS SPECIFIED AND VICE-VERSA.  IF ONE IS MISSING,       *58020000
580300*  ISSUE A WARNING.                                              *58030000
580400*----------------------------------------------------------------*58040000
580500 4430-CHECK-FOR-BEGIN-AND-END.                                    58050000
580600                                                                  58060000
580700     IF  ASC-START-OF-SELECTED-RANGE > ZERO                       58070000
580800         IF  ASC-END-OF-SELECTED-RANGE = ZERO                     58080000
580900*            -- NO END-OF-RANGE SPECFIED ---                      58090000
581000             MOVE PC-TSYMSG-00051  TO DP020-MSG-NUMBER            58100000
581100             SET DP020-MSG-WARNING TO TRUE                        58110000
581200             PERFORM 4431-POSITION-AT-WARNING                     58120000
581300         END-IF                                                   58130000
581400     ELSE                                                         58140000
581500         IF  ASC-END-OF-SELECTED-RANGE > ZERO                     58150000
581600*            -- NO BEGINNING-OF-RANGE SPECFIED ---                58160000
581700             MOVE PC-TSYMSG-00053  TO DP020-MSG-NUMBER            58170000
581800             SET DP020-MSG-WARNING TO TRUE                        58180000
581900             PERFORM 4431-POSITION-AT-WARNING                     58190000
582000         END-IF                                                   58200000
582100     END-IF.                                                      58210000
582200                                                                  58220000
582300*----------------------------------------------------------------*58230000
582400*  ONCE IT HAS BEEN DETERMINED THAT A WARNING IS TO BE ISSUED,   *58240000
582500*  DETERMINE IF EITHER THE BEGINNING OF RANGE OR END OF RANGE    *58250000
582600*  IS ON THE CURRENT SCREEN.  IF IT IS, HIGHLIGHT IT AND         *58260000
582700*  POSITION THE CURSOR THERE.                                    *58270000
582800*----------------------------------------------------------------*58280000
582900 4431-POSITION-AT-WARNING.                                        58290000
583000                                                                  58300000
583100     COMPUTE PV-SUB = ASC-START-OF-SELECTED-RANGE                 58310000
583200                    - PV-TOP-ITEM + 1.                            58320000
583300                                                                  58330000
583400     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      58340000
583500         CONTINUE                                                 58350000
583600     ELSE                                                         58360000
583700         SET DP030-SET-CURSOR-APPL-1                              58370000
583800                                   TO TRUE                        58380000
583900         MOVE -1                   TO MR-SELECTL (PV-SUB)         58390000
584000         MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         58400000
584100         MOVE DP015-YELLOW         TO MR-SELECTC (PV-SUB)         58410000
584200     END-IF.                                                      58420000
584300                                                                  58430000
584400     COMPUTE PV-SUB = ASC-END-OF-SELECTED-RANGE                   58440000
584500                    - PV-TOP-ITEM + 1.                            58450000
584600                                                                  58460000
584700     IF  PV-SUB < +1 OR > PC-ITEMS-PER-PANEL                      58470000
584800         CONTINUE                                                 58480000
584900     ELSE                                                         58490000
585000         SET DP030-SET-CURSOR-APPL-1                              58500000
585100                                   TO TRUE                        58510000
585200         MOVE -1                   TO MR-SELECTL (PV-SUB)         58520000
585300         MOVE DP015-REVERSE        TO MR-SELECTH (PV-SUB)         58530000
585400         MOVE DP015-YELLOW         TO MR-SELECTC (PV-SUB)         58540000
585500     END-IF.                                                      58550000
585600                                                                  58560000
585700*----------------------------------------------------------------*58570000
585800* PREPARE THE SELECTED ITEMS TEMP STORAGE QUEUE.  MOVE ALL SEL-  *58580000
585900* ECTED ITEMS FROM THE LIST TEMP STORAGE QUEUE TO THE LAYOUT     *58590000
586000* FOR THE SELECTED ITEMS QUEUE.                                  *58600000
586100*                                                                *58610000
586200* FIRST, DELETE THE SELECTION QUEUE, NEXT LOAD THE SELECTION     *58620000
586300* QUEUE RECORD.  FINALLY, WRITE THE SELECTION QUEUE ITEM WHEN    *58630000
586400* THE ARRAY IS FULL.                                             *58640000
586500*----------------------------------------------------------------*58650000
586600                                                                  58660000
586700 5000-PREPARE-SEL-QUEUE.                                          58670000
586800                                                                  58680000
586900     MOVE +1                       TO ASC-BLK-SUB.                58690000
587000     PERFORM 5100-WRITE-TEMP-STORAGE.                             58700000
587100     ADD +1                        TO ASC-BLK-SUB.                58710000
587200     PERFORM 5100-WRITE-TEMP-STORAGE.                             58720000
587300                                                                  58730000
587400     MOVE ASC-SEL-QUEUE-NAME-OUT   TO AP300-SEL-QUEUE-NAME.       58740000
587500     PERFORM 6010-DELETE-SEL-QUEUE.                               58750000
587600                                                                  58760000
587700     IF  ASC-NUMBER-OF-SELECTED-ITEMS > ZERO                      58770000
587800         SET ASC-UPDATE-TSQ        TO TRUE                        58780000
587900     END-IF.                                                      58790000
588000                                                                  58800000
588100     SET AP301-IDX                 TO 1.                          58810000
588200                                                                  58820000
588300     MOVE ZERO                     TO AP300-NUMBER-OF-TS-ITEMS    58830000
588400                                AP300-NUMBER-OF-SELECTED-ITEMS.   58840000
588500                                                                  58850000
588600     INITIALIZE AP301-SELECTED-ITEM-ARRAY.                        58860000
588700                                                                  58870000
588800     PERFORM 5200-FILL-SEL-QUEUE-RECORD                           58880000
588900             VARYING PV-ITEM                                      58890000
589000             FROM 1 BY 1                                          58900000
589100             UNTIL PV-ITEM GREATER ASC-HIGHEST-BLOCK-WRITTEN.     58910000
589200                                                                  58920000
589300     IF  AP301-IDX > 1                                            58930000
589400         PERFORM 5205-WRITE-SEL-QUEUE                             58940000
589500         ADD +1                    TO AP300-NUMBER-OF-TS-ITEMS    58950000
589600     END-IF.                                                      58960000
589700                                                                  58970000
589800/                                                                 58980000
589900*----------------------------------------------------------------*58990000
590000*    WRITE A NEW BLOCK FROM THE ARRAY TO TEMPORARY STORAGE.      *59000000
590100*    REWRITE AN EXISITING BLOCK ONLY IF IT HAS BEEN MODIFIED.    *59010000
590200*----------------------------------------------------------------*59020000
590300                                                                  59030000
590400 5100-WRITE-TEMP-STORAGE.                                         59040000
590500                                                                  59050000
590600     MOVE ASC-LIST-ITEM-NUMBER(ASC-BLK-SUB 1)                     59060000
590700                                   TO PV-LIST-ITEM-NUMBER.        59070000
590800     COMPUTE PV-BLOCK-NUMBER =                                    59080000
590900         1 + ((PV-LIST-ITEM-NUMBER - 1) / PC-ITEMS-PER-PANEL).    59090000
591000                                                                  59100000
591100     IF (PV-BLOCK-NUMBER < ASC-HIGHEST-BLOCK-WRITTEN)             59110000
591200     OR (PV-BLOCK-NUMBER = ASC-HIGHEST-BLOCK-WRITTEN)             59120000
591300         IF  ASC-BLOCK-MODIFIED(ASC-BLK-SUB)                      59130000
591400             PERFORM 5105-REWRITE-ASC-LISTQ                       59140000
591500         END-IF                                                   59150000
591600     ELSE                                                         59160000
591700         COMPUTE PV-HIGHEST-BLOCK-WRITTEN =                       59170000
591800         ASC-HIGHEST-BLOCK-WRITTEN + 1                            59180000
591900         PERFORM 5110-WRITE-ASC-LISTQ                             59190000
592000         ADD +1                    TO ASC-HIGHEST-BLOCK-WRITTEN   59200000
592100     END-IF.                                                      59210000
592200                                                                  59220000
592300     SET ASC-BLOCK-NOT-MODIFIED(ASC-BLK-SUB)                      59230000
592400                                   TO TRUE.                       59240000
592500                                                                  59250000
592600/                                                                 59260000
592700*----------------------------------------------------------------*59270000
592800*  REWRITE THE LIST TEMP STORAGE QUEUE FROM THE APPLICATION-     *59280000
592900*  SPECIFIC COMMAREA.                                            *59290000
593000*----------------------------------------------------------------*59300000
593100 5105-REWRITE-ASC-LISTQ.                                          59310000
593200                                                                  59320000
593300     EXEC CICS                                                    59330000
593400         WRITEQ TS                                                59340000
593500             QUEUE (ASC-LIST-QUEUE-NAME)                          59350000
593600             FROM  (ASC-BLOCK-ENTRIES(ASC-BLK-SUB))               59360000
593700             ITEM  (PV-BLOCK-NUMBER)                              59370000
593800             REWRITE                                              59380000
593900             RESP  (PV-CICS-RESP)                                 59390000
594000     END-EXEC.                                                    59400000
594100                                                                  59410000
594200     IF  PV-CICS-RESP = DFHRESP(NORMAL)                           59420000
594300         CONTINUE                                                 59430000
594400     ELSE                                                         59440000
594500         SET DP013-CICS-ABEND      TO TRUE                        59450000
594600         SET DP013-NO-ROLLBACK     TO TRUE                        59460000
594700         MOVE '5105-REWRITE-ASC-LISTQ'                            59470000
594800                                   TO DP013-PARAGRAPH             59480000
594900         MOVE 'ATTEMPTING TO REWRITE LIST TEMP STORAGE QUEUE'     59490000
595000                                   TO DP013-MESSAGE-TEXT(1)       59500000
595100         PERFORM DP013-0000-PROCESS-ABEND                         59510000
595200     END-IF.                                                      59520000
595300                                                                  59530000
595400/                                                                 59540000
595500*----------------------------------------------------------------*59550000
595600*  WRITE THE LIST TEMP STORAGE QUEUE FROM THE APPLICATION-       *59560000
595700*  SPECIFIC COMMAREA.                                            *59570000
595800*----------------------------------------------------------------*59580000
595900 5110-WRITE-ASC-LISTQ.                                            59590000
596000                                                                  59600000
596100     EXEC CICS                                                    59610000
596200         WRITEQ TS                                                59620000
596300             QUEUE (ASC-LIST-QUEUE-NAME)                          59630000
596400             FROM  (ASC-BLOCK-ENTRIES(ASC-BLK-SUB))               59640000
596500             ITEM  (PV-BLOCK-NUMBER)                              59650000
596600             RESP  (PV-CICS-RESP)                                 59660000
596700     END-EXEC.                                                    59670000
596800                                                                  59680000
596900     IF  PV-CICS-RESP NOT = DFHRESP (NORMAL)                      59690000
597000         SET DP013-CICS-ABEND      TO TRUE                        59700000
597100         SET DP013-NO-ROLLBACK     TO TRUE                        59710000
597200         MOVE '5110-WRITE-ASC-LISTQ'                              59720000
597300                                   TO DP013-PARAGRAPH             59730000
597400         MOVE 'ATTEMPTING TO DELETE TEMP STORAGE QUEUE'           59740000
597500                                   TO DP013-MESSAGE-TEXT(1)       59750000
597600         PERFORM DP013-0000-PROCESS-ABEND                         59760000
597700     END-IF.                                                      59770000
597800                                                                  59780000
597900/                                                                 59790000
598000*----------------------------------------------------------------*59800000
598100* READ A LIST QUEUE RECORD AND MOVE THE KEYS OF SELECTED OBJECTS *59810000
598200* TO THE SELECTED ITEMS TEMP STORAGE QUEUE RECORD.               *59820000
598300*----------------------------------------------------------------*59830000
598400                                                                  59840000
598500 5200-FILL-SEL-QUEUE-RECORD.                                      59850000
598600                                                                  59860000
598700     PERFORM 6112-READ-LIST-QUEUE.                                59870000
598800                                                                  59880000
598900     IF  PV-CICS-RESP EQUAL DFHRESP(NORMAL)                       59890000
599000         PERFORM                                                  59900000
599100         VARYING LQW-IDX                                          59910000
599200         FROM 1 BY 1                                              59920000
599300         UNTIL LQW-IDX GREATER THAN PC-ITEMS-PER-PANEL            59930000
599400           OR  LQW-LIST-ITEM-NUMBER (LQW-IDX) EQUAL ZERO          59940000
599500                                                                  59950000
599600*-->         -- THIS PROGRAM DEVIATES FROM STANDARD ARCHITECTURE  59960000
599700*-->         -- IN THAT >>ALL<< LIST ITEMS ARE WRITTEN TO THE     59970000
599800*-->         -- SELECTED ITEMS TS QUEUE.  THE SINGLE ROW WHICH    59980000
599900*-->         -- WAS ACTUALLY SELECTED IN MARKED W/ AN "S" IN THE  59990000
600000*-->         -- AP301-ACTION-SW.                                  60000000
600100                                                                  60010000
600200             ADD +1                   TO                          60020000
600300                 AP300-NUMBER-OF-SELECTED-ITEMS                   60030000
600400             IF  LQW-SELECT (LQW-IDX)                             60040000
600500                 MOVE 'S'             TO AP301-ACTION-SW          60050000
600600                                                       (AP301-IDX)60060000
600700                 MOVE LQW-PO-LNE-NBR       (LQW-IDX)              60070000
600800                                      TO ASC-KEY-PO-LNE-NBR       60080000
600900             ELSE                                                 60090000
601000                 MOVE SPACE           TO AP301-ACTION-SW          60100000
601100                                                       (AP301-IDX)60110000
601200             END-IF                                               60120000
601300             MOVE LQW-LIST-ITEM-NUMBER (LQW-IDX)                  60130000
601400                                  TO AP301-ITEM    (AP301-IDX)    60140000
601500             MOVE ASC-KEY-PO-NBR  TO AP301-PO-NBR (AP301-IDX)     60150000
601600             IF DK-MTCH-LVL-CDE = 'P'                             60160000
601700                MOVE ZERO            TO AP301-STORE-NBR(AP301-IDX)60170000
601800             END-IF                                               60180000
601900             IF DK-MTCH-LVL-CDE = 'D'                             60190000
602000                MOVE ASC-KEY-DC-NBR  TO AP301-STORE-NBR(AP301-IDX)60200000
602100             END-IF                                               60210000
602200             IF DK-MTCH-LVL-CDE = 'S'                             60220000
602300                MOVE ASC-KEY-STR-NBR TO AP301-STORE-NBR(AP301-IDX)60230000
602400             END-IF                                               60240000
602500             MOVE LQW-PO-LNE-NBR       (LQW-IDX)                  60250000
602600                                  TO AP301-PO-LNE-NBR(AP301-IDX)  60260000
602700             SET AP301-IDX UP BY 1                                60270000
602800             IF AP301-IDX > AP301-MAX-ITEMS                       60280000
602900                 PERFORM 5205-WRITE-SEL-QUEUE                     60290000
603000                 ADD +1        TO AP300-NUMBER-OF-TS-ITEMS        60300000
603100                 INITIALIZE AP301-SELECTED-ITEM-ARRAY             60310000
603200                 SET AP301-IDX TO 1                               60320000
603300             END-IF                                               60330000
603400         END-PERFORM                                              60340000
603500     END-IF.                                                      60350000
603600                                                                  60360000
603700/                                                                 60370000
603800*----------------------------------------------------------------*60380000
603900*    WRITE THE SELECTED ITEMS TEMP STORAGE QUEUE.                *60390000
604000*----------------------------------------------------------------*60400000
604100                                                                  60410000
604200 5205-WRITE-SEL-QUEUE.                                            60420000
604300                                                                  60430000
604400     MOVE ASC-NUMBER-OF-SELECTED-ITEMS                            60440000
604500                                   TO AP301-SELECTED-ITEMS.       60450000
604600                                                                  60460000
604700     EXEC CICS                                                    60470000
604800          WRITEQ TS                                               60480000
604900              QUEUE (ASC-SEL-QUEUE-NAME-OUT)                      60490000
605000              FROM  (AP301-INVC-LIST-TS-RCRD)                     60500000
605100              ITEM  (PV-SEL-QUEUE-ITEM)                           60510000
605200              RESP  (PV-CICS-RESP)                                60520000
605300     END-EXEC.                                                    60530000
605400                                                                  60540000
605500     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          60550000
605600         CONTINUE                                                 60560000
605700     ELSE                                                         60570000
605800         SET DP013-CICS-ABEND      TO TRUE                        60580000
605900         SET DP013-NO-ROLLBACK     TO TRUE                        60590000
606000         MOVE '5205-WRITE-SEL-QUEUE'                              60600000
606100                                   TO DP013-PARAGRAPH             60610000
606200         MOVE 'ATTEMPTING TO WRITE SELECTED ITEMS QUEUE'          60620000
606300                                   TO DP013-MESSAGE-TEXT(1)       60630000
606400         PERFORM DP013-0000-PROCESS-ABEND                         60640000
606500     END-IF.                                                      60650000
606600                                                                  60660000
606700/                                                                 60670000
606800*----------------------------------------------------------------*60680000
606900*  WHEN RETURNING TO THIS TRANSACTION FROM ANOTHER TRANSACTION,  *60690000
607000*  SETUP THE ARRAY AS IT WAS WHEN WE HAD LEFT PREVIOUSLY.  EDIT  *60700000
607100*  THE SELECTIONS MADE AT THAT TIME AND DISPLAY THE PANEL TO     *60710000
607200*  THE USER.                                                     *60720000
607300*----------------------------------------------------------------*60730000
607400 6000-REFRESH-PANEL-FROM-TEMP.                                    60740000
607500                                                                  60750000
607600     IF  ASC-UPDATE-TSQ                                           60760000
607700         SET ASC-NO-TSQ-UPDATE     TO TRUE                        60770000
607800         MOVE ZERO                 TO PV-SAVE-ITEM                60780000
607900                                      PV-SEL-QUEUE-ITEM           60790000
608000         MOVE ASC-NUMBER-OF-SELECTED-ITEMS                        60800000
608100                                   TO PV-HOLD-SELECTED-ITEMS      60810000
608200         PERFORM 6100-UPDATE-TSQ                                  60820000
608300             UNTIL PV-ITEMS-PROCESSED >                           60830000
608400                                     ASC-NUMBER-OF-SELECTED-ITEMS 60840000
608500         PERFORM 6010-DELETE-SEL-QUEUE                            60850000
608600         INITIALIZE ASC-BLOCK-ENTRIES (1)                         60860000
608700                    ASC-BLOCK-ENTRIES (2)                         60870000
608800     END-IF.                                                      60880000
608900                                                                  60890000
609000/                                                                 60900000
609100*----------------------------------------------------------------*60910000
609200*    DELETE THE SELECTED ITEMS TEMP STORAGE QUEUE.               *60920000
609300*----------------------------------------------------------------*60930000
609400 6010-DELETE-SEL-QUEUE.                                           60940000
609500                                                                  60950000
609600     EXEC CICS                                                    60960000
609700         DELETEQ TS                                               60970000
609800             QUEUE (ASC-SEL-QUEUE-NAME-OUT)                       60980000
609900             RESP  (PV-CICS-RESP)                                 60990000
610000     END-EXEC.                                                    61000000
610100                                                                  61010000
610200     IF ((PV-CICS-RESP = DFHRESP(NORMAL)) OR                      61020000
610300         (PV-CICS-RESP = DFHRESP(QIDERR)))                        61030000
610400         CONTINUE                                                 61040000
610500     ELSE                                                         61050000
610600         SET DP013-CICS-ABEND      TO TRUE                        61060000
610700         SET DP013-NO-ROLLBACK     TO TRUE                        61070000
610800         MOVE '6010-DELETE-SEL-QUEUE'                             61080000
610900                                   TO DP013-PARAGRAPH             61090000
611000         MOVE 'ERROR TRYING TO DELETE SELECTION TS QUEUE'         61100000
611100                                   TO DP013-MESSAGE-TEXT (1)      61110000
611200         PERFORM DP013-0000-PROCESS-ABEND                         61120000
611300     END-IF.                                                      61130000
611400                                                                  61140000
611500/                                                                 61150000
611600*----------------------------------------------------------------*61160000
611700*    INCREMENT THE TSQ ITEM NUMBER AND READ THE LIST QUEUE.      *61170000
611800*    LOOP THROUGH THE LIST QUEUE TO OBTAIN THE LINE ITEM NUMBER  *61180000
611900*    TO BE USED TO UPDATE (DESELECT) THE CORRECT LINE ITEM IN    *61190000
612000*    THE TEMP QUEUE.                                             *61200000
612100*----------------------------------------------------------------*61210000
612200                                                                  61220000
612300 6100-UPDATE-TSQ.                                                 61230000
612400                                                                  61240000
612500     ADD 1                         TO PV-SEL-QUEUE-ITEM.          61250000
612600     PERFORM 6105-READ-SEL-QUEUE.                                 61260000
612700                                                                  61270000
612800     PERFORM                                                      61280000
612900         VARYING AP301-IDX                                        61290000
613000         FROM 1 BY 1                                              61300000
613100         UNTIL ((PV-ITEMS-PROCESSED >                             61310000
613200                              PV-HOLD-SELECTED-ITEMS)             61320000
613300         OR (AP301-IDX GREATER THAN AP301-MAX-ITEMS))             61330000
613400         IF  AP301-ACTION-SW (AP301-IDX) > SPACE                  61340000
613500             PERFORM 6110-PROCESS-ITEMS                           61350000
613600         END-IF                                                   61360000
613700         ADD +1                    TO PV-ITEMS-PROCESSED          61370000
613800     END-PERFORM.                                                 61380000
613900                                                                  61390000
614000     PERFORM 6111-WRITE-LIST-QUEUE.                               61400000
614100                                                                  61410000
614200/                                                                 61420000
614300*----------------------------------------------------------------*61430000
614400*    READ THE LIST QUEUE RECORD.                                 *61440000
614500*----------------------------------------------------------------*61450000
614600                                                                  61460000
614700 6105-READ-SEL-QUEUE.                                             61470000
614800                                                                  61480000
614900     EXEC CICS                                                    61490000
615000          READQ TS                                                61500000
615100              QUEUE (ASC-SEL-QUEUE-NAME-OUT)                      61510000
615200              INTO  (AP301-INVC-LIST-TS-RCRD)                     61520000
615300              ITEM  (PV-SEL-QUEUE-ITEM)                           61530000
615400              RESP  (PV-CICS-RESP)                                61540000
615500     END-EXEC.                                                    61550000
615600                                                                  61560000
615700     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          61570000
615800         CONTINUE                                                 61580000
615900     ELSE                                                         61590000
616000         SET DP013-CICS-ABEND      TO TRUE                        61600000
616100         SET DP013-NO-ROLLBACK     TO TRUE                        61610000
616200         MOVE '6105-READ-SEL-QUEUE'                               61620000
616300                                   TO DP013-PARAGRAPH             61630000
616400         MOVE 'ATTEMPTING TO READ SELECTED ITEMS QUEUE'           61640000
616500                                   TO DP013-MESSAGE-TEXT(1)       61650000
616600         PERFORM DP013-0000-PROCESS-ABEND                         61660000
616700     END-IF.                                                      61670000
616800                                                                  61680000
616900/                                                                 61690000
617000*----------------------------------------------------------------*61700000
617100*    CALCULATE THE TEMP QUEUE ITEM THAT MUST BE READ AND READ IT.*61710000
617200*    REWRITE THE CURRENT TEMP QUEUE ITEM IF NECESSARY.  CALCULATE*61720000
617300*    THE LINE ITEM OCCURENCE AND UPDATE (DESELECT) IT.           *61730000
617400*----------------------------------------------------------------*61740000
617500                                                                  61750000
617600 6110-PROCESS-ITEMS.                                              61760000
617700                                                                  61770000
617800     COMPUTE PV-ITEM = 1 + ((AP301-ITEM (AP301-IDX) - 1)          61780000
617900                     / PC-ITEMS-PER-PANEL).                       61790000
618000                                                                  61800000
618100     IF  PV-ITEM NOT EQUAL PV-SAVE-ITEM                           61810000
618200         IF  PV-SAVE-ITEM NOT EQUAL ZERO                          61820000
618300             PERFORM 6111-WRITE-LIST-QUEUE                        61830000
618400         END-IF                                                   61840000
618500         MOVE PV-ITEM              TO PV-SAVE-ITEM                61850000
618600                                                                  61860000
618700         PERFORM 6112-READ-LIST-QUEUE                             61870000
618800         IF  PV-CICS-RESP NOT EQUAL DFHRESP(NORMAL)               61880000
618900             CONTINUE                                             61890000
619000         END-IF                                                   61900000
619100     END-IF.                                                      61910000
619200                                                                  61920000
619300     COMPUTE PV-SUB = (AP301-ITEM (AP301-IDX)                     61930000
619400                    - LQW-LIST-ITEM-NUMBER (1)) + 1.              61940000
619500                                                                  61950000
619600     SET LQW-DESELECT (PV-SUB)     TO TRUE.                       61960000
619700     MOVE LQW-SELECTED-SW (PV-SUB) TO LQW-TEMP-SELECTED-SW        61970000
619800                                     (PV-SUB).                    61980000
619900                                                                  61990000
620000     SUBTRACT 1 FROM ASC-NUMBER-OF-SELECTED-ITEMS.                62000000
620100                                                                  62010000
620200/                                                                 62020000
620300*----------------------------------------------------------------*62030000
620400*    WRITE THE TS QUEUE RECORD JUST UPDATED IN C600.             *62040000
620500*----------------------------------------------------------------*62050000
620600                                                                  62060000
620700 6111-WRITE-LIST-QUEUE.                                           62070000
620800                                                                  62080000
620900     EXEC CICS                                                    62090000
621000         WRITEQ TS                                                62100000
621100             QUEUE (ASC-LIST-QUEUE-NAME)                          62110000
621200             FROM  (LQW-LIST-QUEUE-WORK-AREA)                     62120000
621300             ITEM  (PV-SAVE-ITEM)                                 62130000
621400             REWRITE                                              62140000
621500             RESP  (PV-CICS-RESP)                                 62150000
621600     END-EXEC.                                                    62160000
621700                                                                  62170000
621800     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          62180000
621900         CONTINUE                                                 62190000
622000     ELSE                                                         62200000
622100         SET DP013-CICS-ABEND      TO TRUE                        62210000
622200         SET DP013-NO-ROLLBACK     TO TRUE                        62220000
622300         MOVE '6111-WRITE-LIST-QUEUE'                             62230000
622400                                   TO DP013-PARAGRAPH             62240000
622500         MOVE 'ATTEMPTING TO REWRITE LIST QUEUE'                  62250000
622600                                   TO DP013-MESSAGE-TEXT(1)       62260000
622700         PERFORM DP013-0000-PROCESS-ABEND                         62270000
622800     END-IF.                                                      62280000
622900                                                                  62290000
623000/                                                                 62300000
623100*----------------------------------------------------------------*62310000
623200*    READ THE TEMPORARY STORAGE QUEUE INTO A TEMPORARY WORK AREA.*62320000
623300*----------------------------------------------------------------*62330000
623400                                                                  62340000
623500 6112-READ-LIST-QUEUE.                                            62350000
623600                                                                  62360000
623700     EXEC CICS                                                    62370000
623800         READQ TS                                                 62380000
623900             QUEUE (ASC-LIST-QUEUE-NAME)                          62390000
624000             INTO  (LQW-LIST-QUEUE-WORK-AREA)                     62400000
624100             ITEM  (PV-ITEM)                                      62410000
624200             RESP  (PV-CICS-RESP)                                 62420000
624300     END-EXEC.                                                    62430000
624400                                                                  62440000
624500     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          62450000
624600         CONTINUE                                                 62460000
624700     ELSE                                                         62470000
624800         SET DP013-CICS-ABEND      TO TRUE                        62480000
624900         SET DP013-NO-ROLLBACK     TO TRUE                        62490000
625000         MOVE '6112-READ-LIST-QUEUE'                              62500000
625100                                   TO DP013-PARAGRAPH             62510000
625200         MOVE 'ATTEMPTING TO READQ LIST QUEUE'                    62520000
625300                                   TO DP013-MESSAGE-TEXT(1)       62530000
625400         PERFORM DP013-0000-PROCESS-ABEND                         62540000
625500     END-IF.                                                      62550000
625600                                                                  62560000
625700/                                                                 62570000
625800******************************************************************62580000
625900* DELETE THE LIST QUEUE WHEN PREV-SEL OR NEXT-SEL WAS ENTERED.   *62590000
626000******************************************************************62600000
626100 6200-DEL-LIST-QUEUE.                                             62610000
626200                                                                  62620000
626300     EXEC CICS                                                    62630000
626400         DELETEQ TS                                               62640000
626500             QUEUE (ASC-LIST-QUEUE-NAME)                          62650000
626600             RESP  (PV-CICS-RESP)                                 62660000
626700     END-EXEC.                                                    62670000
626800                                                                  62680000
626900     IF ((PV-CICS-RESP = DFHRESP(NORMAL)) OR                      62690000
627000        (PV-CICS-RESP = DFHRESP(QIDERR)))                         62700000
627100         CONTINUE                                                 62710000
627200     ELSE                                                         62720000
627300        SET DP013-CICS-ABEND       TO TRUE                        62730000
627400        SET DP013-NO-ROLLBACK      TO TRUE                        62740000
627500        MOVE '6200-DEL-LIST-QUEUE' TO DP013-PARAGRAPH             62750000
627600        MOVE 'ERROR TRYING TO DELETE LIST TS QUEUE'               62760000
627700                                   TO DP013-MESSAGE-TEXT (1)      62770000
627800        PERFORM DP013-0000-PROCESS-ABEND                          62780000
627900     END-IF.                                                      62790000
628000/                                                                 62800000
628100 7000-UPDATE-TABLES.                                              62810000
628200                                                                  62820000
628300     INITIALIZE PC-BLANK-PO-LINE-TABLE-ENTRY.                     62830000
628400                                                                  62840000
628500     SET RI-INVC-NOT-CREATED TO TRUE                              62850000
628600                                                                  62860000
628700     PERFORM VARYING PO-IDX FROM +2 BY +1                         62870000
628800         UNTIL PO-LINE-ENTRIES (PO-IDX) =                         62880000
628900               PC-BLANK-PO-LINE-TABLE-ENTRY                       62890000
629000*-->     -- SPIN THRU THE INVOICE HEADER TABLE TO BE SURE THAT    62900000
629100*-->     -- THE DETAIL MATCHES IT'S "PARENT".                     62910000
629200         PERFORM VARYING IH-IDX FROM +1 BY +1                     62920000
629300             UNTIL  (T-IH-PAYT-REQ-SEQ-NBR (IH-IDX) =             62930000
629400                     T-PAYT-REQ-SEQ-NBR    (PO-IDX))              62940000
629500         END-PERFORM                                              62950000
629600         IF T-RECV-QTY (PO-IDX) > T-INVC-QTY (PO-IDX)             62960000
629700              PERFORM 7100-INSERT-TNINREC                         62970000
629800         END-IF                                                   62980000
629900         IF T-INVC-QTY (PO-IDX) > T-RECV-QTY (PO-IDX)             62990000
630000              PERFORM 8000-PROCESS-REMAINDER-INVOICE              63000000
630100         END-IF                                                   63010000
630200     END-PERFORM.                                                 63020000
630300                                                                  63030000
630400     IF T-PAYT-REQ-SEQ-NBR (1) > +0                               63040000
630500         PERFORM 8400-NULL-LNE-NBR-PROCESSING                     63050000
630600     END-IF.                                                      63060000
630700                                                                  63070000
630800     IF RI-INVC-CREATED                                           63080000
630900        PERFORM 8090-UPDATE-TINVOIC-TMDINVC                       63090000
631000     END-IF.                                                      63100000
631100                                                                  63110000
631200     IF ASC-MTCH-LVL-CDE = 'P' OR 'D'                             63120000
631300         PERFORM 7200-UPDATE-TRECEIV                              63130000
631400     ELSE                                                         63140000
631500         PERFORM 7700-UPDATE-TRECDIS                              63150000
631600     END-IF.                                                      63160000
631700                                                                  63170000
631800     PERFORM 7300-UPDATE-TNINREC.                                 63180000
631900                                                                  63190000
632000     PERFORM 7500-INSERT-TPRCCLM.                                 63200000
632100     PERFORM 7400-INSERT-TPOSTRR.                                 63210000
632200                                                                  63220000
632300     PERFORM 7600-UPDATE-TINVOIC.                                 63230000
632400                                                                  63240000
632500     MOVE ASC-KEY-PO-NBR         TO PV-PO-NBR-DISPLAY.            63250000
632600                                                                  63260000
632700     IF ASC-MTCH-LVL-CDE = 'P'                                    63270000
632800        MOVE PV-PO-NBR-DISPLAY      TO DP020-MSG-TEXT             63280000
632900     ELSE                                                         63290000
633000       IF ASC-MTCH-LVL-CDE = 'D'                                  63300000
633100          MOVE SPACES TO DP020-MSG-TEXT                           63310000
633200          STRING PV-PO-NBR-DISPLAY                                63320000
633300                 '- DC  -'                                        63330000
633400                 ASC-KEY-DC-NBR-X                                 63340000
633500                 DELIMITED BY SIZE                                63350000
633600                 INTO DP020-MSG-TEXT                              63360000
633700       ELSE                                                       63370000
633800         IF ASC-MTCH-LVL-CDE = 'S'                                63380000
633900            MOVE SPACES TO DP020-MSG-TEXT                         63390000
634000            STRING PV-PO-NBR-DISPLAY                              63400000
634100                   '-STORE-'                                      63410000
634200                   ASC-KEY-STR-NBR-X                              63420000
634300                   DELIMITED BY SIZE                              63430000
634400                   INTO DP020-MSG-TEXT                            63440000
634500         END-IF                                                   63450000
634600       END-IF                                                     63460000
634700     END-IF.                                                      63470000
634800     MOVE PC-TSYMSG-00946        TO DP020-MSG-NUMBER.             63480000
634900     SET DP020-MSG-INFORMATIONAL TO TRUE.                         63490000
635000                                                                  63500000
635100     MOVE ASC-KEY-STR-NBR TO ASC-SAVE-STR-NBR.                    63510000
635200     MOVE ASC-KEY-DC-NBR  TO ASC-SAVE-DC-NBR.                     63520000
635300                                                                  63530000
635400     EXEC CICS                                                    63540000
635500         SYNCPOINT                                                63550000
635600     END-EXEC.                                                    63560000
635700                                                                  63570000
635800 7100-INSERT-TNINREC.                                             63580000
635900                                                                  63590000
636000     INITIALIZE DCLTNINREC.                                       63600000
636100                                                                  63610000
636200     MOVE DK-PO-NBR                TO NINREC-PO-NBR.              63620000
636300     MOVE T-APP-PO-LNE-NBR(PO-IDX) TO NINREC-PO-LNE-NBR.          63630000
636400     IF ASC-MTCH-LVL-CDE = 'P'                                    63640000
636500        MOVE ZEROES          TO NINREC-STR-NBR                    63650000
636600                                NINREC-DC-NBR                     63660000
636700     END-IF.                                                      63670000
636800     IF ASC-MTCH-LVL-CDE = 'D'                                    63680000
636900        MOVE ASC-KEY-DC-NBR  TO NINREC-STR-NBR                    63690000
637000                                NINREC-DC-NBR                     63700000
637100     END-IF.                                                      63710000
637200     IF ASC-MTCH-LVL-CDE = 'S'                                    63720000
637300        MOVE ASC-KEY-STR-NBR    TO NINREC-STR-NBR                 63730000
637400        MOVE ASC-KEY-STR-DC-NBR TO NINREC-DC-NBR                  63740000
637500     END-IF.                                                      63750000
637600     COMPUTE NINREC-NON-INVC-UNT-QTY =                            63760000
637700            T-RECV-QTY (PO-IDX) - T-INVC-QTY (PO-IDX).            63770000
637800     MOVE T-RECV-UNT-COST-AMT (PO-IDX) TO NINREC-UNT-COST-AMT.    63780000
637900     MOVE ASC-CURRENT-TIMESTAMP    TO NINREC-REC-TMST             63790000
638000     MOVE PC-NULL-DATE             TO NINREC-PAYT-DTE.            63800000
638100     MOVE PC-NULL-TIMESTAMP        TO NINREC-PAYT-RLSE-TMST.      63810000
638200     MOVE PV-WEIGHTED-DISC-PCT     TO NINREC-ORIG-DISC-PCT.       63820000
638300                                                                  63830000
638400     PERFORM                                                      63840000
638500         WITH TEST AFTER                                          63850000
638600         VARYING PV-RETRY-COUNTER                                 63860000
638700         FROM 1 BY 1                                              63870000
638800         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               63880000
638900             OR (SQLCODE = +0))                                   63890000
639000                                                                  63900000
639100         EXEC SQL                                                 63910000
639200              SET :PV-TIMESTAMP = CURRENT TIMESTAMP               63920000
639300         END-EXEC                                                 63930000
639400                                                                  63940000
639500         IF SQLCODE NOT = ZERO                                    63950000
639600             MOVE '7100-INSERT-TNINREC'                           63960000
639700                             TO DP013-PARAGRAPH                   63970000
639800             MOVE 'UNSUCCESSFUL SET CURRENT TIMESTAMP'            63980000
639900                             TO DP013-MESSAGE-TEXT (1)            63990000
640000             MOVE SQLCA      TO DP013-SQLCA                       64000000
640100             SET DP013-DB2-ABEND                                  64010000
640200                 DP013-XCTL-DISPLAY-RESTART                       64020000
640300                             TO TRUE                              64030000
640400             PERFORM DP013-0000-PROCESS-ABEND                     64040000
640500         END-IF                                                   64050000
640600                                                                  64060000
640700         MOVE PV-NANOSEC-2  TO PV-RANDOM-KEY-NANOSEC-1            64070000
640800         MOVE PV-NANOSEC-1  TO PV-RANDOM-KEY-NANOSEC-2            64080000
640900         MOVE PV-MINUTE     TO PV-RANDOM-KEY-MINUTE               64090000
641000         MOVE PV-SECOND     TO PV-RANDOM-KEY-SECOND               64100000
641100         MOVE PV-RANDOM-KEY TO PV-RANDOM-KEY-INT                  64110000
641200         MOVE PV-RANDOM-KEY-INT TO NINREC-NON-INVC-SEQ-NBR        64120000
641300                                                                  64130000
641400         EXEC SQL                                                 64140000
641500              INSERT INTO TNINREC                                 64150000
641600                     ( PO_NBR                                     64160000
641700                      ,VER_NBR                                    64170000
641800                      ,PO_LNE_NBR                                 64180000
641900                      ,NON_INVC_SEQ_NBR                           64190000
642000                      ,STR_NBR                                    64200000
642100                      ,NON_INVC_UNT_QTY                           64210000
642200                      ,UNT_COST_AMT                               64220000
642300                      ,PAYT_RLSE_TMST                             64230000
642400                      ,STATUS_CDE                                 64240000
642500                      ,PAYT_DTE                                   64250000
642600                      ,REC_TMST                                   64260000
642700                      ,ORIG_DISC_PCT                              64270000
642800                      ,DC_NBR)                                    64280000
642900             VALUES  (:NINREC-PO-NBR                              64290000
643000                     ,:NINREC-VER-NBR                             64300000
643100                     ,:NINREC-PO-LNE-NBR                          64310000
643200                     ,:NINREC-NON-INVC-SEQ-NBR                    64320000
643300                     ,:NINREC-STR-NBR                             64330000
643400                     ,:NINREC-NON-INVC-UNT-QTY                    64340000
643500                     ,:NINREC-UNT-COST-AMT                        64350000
643600                     ,:NINREC-PAYT-RLSE-TMST                      64360000
643700                     ,:NINREC-STATUS-CDE                          64370000
643800                     ,:NINREC-PAYT-DTE                            64380000
643900                     ,:NINREC-REC-TMST                            64390000
644000                     ,:NINREC-ORIG-DISC-PCT                       64400000
644100                     ,:NINREC-DC-NBR)                             64410000
644200         END-EXEC                                                 64420000
644300         EVALUATE TRUE                                            64430000
644400             WHEN SQLCODE = +0                                    64440000
644500             WHEN SQLCODE = -803                                  64450000
644600             WHEN SQLCODE = -904                                  64460000
644700             WHEN SQLCODE = -913                                  64470000
644800                  CONTINUE                                        64480000
644900                                                                  64490000
645000             WHEN SQLWARN0 NOT = SPACES                           64500000
645100             WHEN SQLCODE < +0                                    64510000
645200             WHEN SQLCODE > +0                                    64520000
645300                  MOVE '7100-INSERT-TNINREC'                      64530000
645400                                  TO DP013-PARAGRAPH              64540000
645500                  MOVE 'UNSUCCESSFUL INSERT FOR TNINREC'          64550000
645600                                  TO DP013-MESSAGE-TEXT (1)       64560000
645700                  MOVE SQLCA      TO DP013-SQLCA                  64570000
645800                  MOVE 'TNINREC ' TO DP013-DB2-TABLE-NAME (1)     64580000
645900                  SET DP013-DB2-ABEND                             64590000
646000                      DP013-XCTL-DISPLAY-RESTART                  64600000
646100                                  TO TRUE                         64610000
646200                  PERFORM DP013-0000-PROCESS-ABEND                64620000
646300         END-EVALUATE                                             64630000
646400     END-PERFORM.                                                 64640000
646500                                                                  64650000
646600     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        64660000
646700         MOVE '7100-INSERT-TNINREC'                               64670000
646800                                  TO DP013-PARAGRAPH              64680000
646900         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TNINREC'        64690000
647000                                  TO DP013-MESSAGE-TEXT (1)       64700000
647100         MOVE SQLCA               TO DP013-SQLCA                  64710000
647200         MOVE 'TNINREC '          TO DP013-DB2-TABLE-NAME (1)     64720000
647300         SET DP013-DB2-ABEND                                      64730000
647400             DP013-XCTL-DISPLAY-RESTART                           64740000
647500                                  TO TRUE                         64750000
647600         PERFORM DP013-0000-PROCESS-ABEND                         64760000
647700     END-IF.                                                      64770000
647800                                                                  64780000
647900                                                                  64790000
648000 7200-UPDATE-TRECEIV.                                             64800000
648100                                                                  64810000
648200     PERFORM VARYING RC-IDX FROM +1 BY +1                         64820000
648300*        UNTIL T-CRE-TMST (RC-IDX) = SPACES OR                    64830000
648400         UNTIL T-ORD-NBR  (RC-IDX) = ZEROES OR                    64840000
648500               RC-IDX > RC-MAX                                    64850000
648600           PERFORM 7210-UPDATE-TRECEIV                            64860000
648700     END-PERFORM.                                                 64870000
648800                                                                  64880000
648900 7210-UPDATE-TRECEIV.                                             64890000
649000                                                                  64900000
649100     MOVE T-ORD-NBR     (RC-IDX)  TO RECEIV-ORD-NBR               64910000
649200     MOVE T-REC-SEQ-NBR (RC-IDX)  TO RECEIV-REC-SEQ-NBR           64920000
649300*    MOVE T-CRE-TMST    (RC-IDX)  TO RECEIV-CRE-TMST              64930000
649400                                                                  64940000
649500     PERFORM                                                      64950000
649600         WITH TEST AFTER                                          64960000
649700         VARYING PV-RETRY-COUNTER                                 64970000
649800         FROM 1 BY 1                                              64980000
649900         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               64990000
650000             OR (SQLCODE = +0))                                   65000000
650100                                                                  65010000
650200         EXEC SQL                                                 65020000
650300             UPDATE TRECEIV                                       65030000
650400                SET AP_PRC_CDE       = 'M'                        65040000
650500                   ,AP_PRC_DTE       = :ASC-CURRENT-DATE          65050000
650600              WHERE ORD_NBR          = :RECEIV-ORD-NBR            65060000
650700                AND REC_SEQ_NBR      = :RECEIV-REC-SEQ-NBR        65070000
650800*               AND CRE_TMST         = :RECEIV-CRE-TMST           65080000
650900         END-EXEC                                                 65090000
651000                                                                  65100000
651100         EVALUATE TRUE                                            65110000
651200             WHEN SQLCODE = +0                                    65120000
651300             WHEN SQLCODE = -904                                  65130000
651400             WHEN SQLCODE = -913                                  65140000
651500                  CONTINUE                                        65150000
651600                                                                  65160000
651700             WHEN SQLWARN0 NOT = SPACES                           65170000
651800             WHEN SQLCODE < +0                                    65180000
651900             WHEN SQLCODE > +0                                    65190000
652000                  MOVE '7210-UPDATE-TRECEIV'                      65200000
652100                                  TO DP013-PARAGRAPH              65210000
652200                  MOVE 'UNSUCCESSFUL UPDATE'                      65220000
652300                                  TO DP013-MESSAGE-TEXT (1)       65230000
652400                  MOVE SQLCA      TO DP013-SQLCA                  65240000
652500                  MOVE 'TRECEIV ' TO DP013-DB2-TABLE-NAME (1)     65250000
652600                  SET DP013-DB2-ABEND                             65260000
652700                      DP013-XCTL-DISPLAY-RESTART                  65270000
652800                                  TO TRUE                         65280000
652900                  PERFORM DP013-0000-PROCESS-ABEND                65290000
653000         END-EVALUATE                                             65300000
653100     END-PERFORM.                                                 65310000
653200                                                                  65320000
653300     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        65330000
653400         MOVE '7210-UPDATE-TRECEIV'                               65340000
653500                                  TO DP013-PARAGRAPH              65350000
653600         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   65360000
653700                                  TO DP013-MESSAGE-TEXT (1)       65370000
653800         MOVE SQLCA               TO DP013-SQLCA                  65380000
653900         MOVE 'TRECEIV '          TO DP013-DB2-TABLE-NAME (1)     65390000
654000         SET DP013-DB2-ABEND                                      65400000
654100             DP013-XCTL-DISPLAY-RESTART                           65410000
654200                                  TO TRUE                         65420000
654300         PERFORM DP013-0000-PROCESS-ABEND                         65430000
654400     END-IF.                                                      65440000
654500                                                                  65450000
654600 7300-UPDATE-TNINREC.                                             65460000
654700                                                                  65470000
654800     PERFORM VARYING NI-IDX FROM +1 BY +1                         65480000
654900         UNTIL T-NI-NON-INVC-SEQ-NBR (NI-IDX) = +0  OR            65490000
655000               NI-IDX > NI-MAX                                    65500000
655100           PERFORM 7310-UPDATE-TNINREC                            65510000
655200     END-PERFORM.                                                 65520000
655300                                                                  65530000
655400 7310-UPDATE-TNINREC.                                             65540000
655500                                                                  65550000
655600     MOVE T-NI-PO-LNE-NBR       (NI-IDX) TO NINREC-PO-LNE-NBR.    65560000
655700     MOVE T-NI-NON-INVC-SEQ-NBR (NI-IDX) TO                       65570000
655800                                          NINREC-NON-INVC-SEQ-NBR.65580000
655900                                                                  65590000
656000     PERFORM                                                      65600000
656100         WITH TEST AFTER                                          65610000
656200         VARYING PV-RETRY-COUNTER                                 65620000
656300         FROM 1 BY 1                                              65630000
656400         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               65640000
656500             OR (SQLCODE = +0))                                   65650000
656600                                                                  65660000
656700         EXEC SQL                                                 65670000
656800             UPDATE TNINREC                                       65680000
656900                SET STATUS_CDE       = 'M'                        65690000
657000                   ,PAYT_RLSE_TMST   = :ASC-CURRENT-TIMESTAMP     65700000
657100              WHERE PO_NBR           = :ASC-KEY-PO-NBR            65710000
657200                AND PO_LNE_NBR       = :NINREC-PO-LNE-NBR         65720000
657300                AND NON_INVC_SEQ_NBR = :NINREC-NON-INVC-SEQ-NBR   65730000
657400         END-EXEC                                                 65740000
657500                                                                  65750000
657600         EVALUATE TRUE                                            65760000
657700             WHEN SQLCODE = +0                                    65770000
657800             WHEN SQLCODE = -904                                  65780000
657900             WHEN SQLCODE = -913                                  65790000
658000                  CONTINUE                                        65800000
658100                                                                  65810000
658200             WHEN SQLWARN0 NOT = SPACES                           65820000
658300             WHEN SQLCODE < +0                                    65830000
658400             WHEN SQLCODE > +0                                    65840000
658500                  MOVE '7310-UPDATE-TNINREC'                      65850000
658600                                  TO DP013-PARAGRAPH              65860000
658700                  MOVE 'UNSUCCESSFUL UPDATE'                      65870000
658800                                  TO DP013-MESSAGE-TEXT (1)       65880000
658900                  MOVE SQLCA      TO DP013-SQLCA                  65890000
659000                  MOVE 'TNINREC ' TO DP013-DB2-TABLE-NAME (1)     65900000
659100                  SET DP013-DB2-ABEND                             65910000
659200                      DP013-XCTL-DISPLAY-RESTART                  65920000
659300                                  TO TRUE                         65930000
659400                  PERFORM DP013-0000-PROCESS-ABEND                65940000
659500         END-EVALUATE                                             65950000
659600     END-PERFORM.                                                 65960000
659700                                                                  65970000
659800     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        65980000
659900         MOVE '7310-UPDATE-TNINREC'                               65990000
660000                                  TO DP013-PARAGRAPH              66000000
660100         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   66010000
660200                                  TO DP013-MESSAGE-TEXT (1)       66020000
660300         MOVE SQLCA               TO DP013-SQLCA                  66030000
660400         MOVE 'TNINREC '          TO DP013-DB2-TABLE-NAME (1)     66040000
660500         SET DP013-DB2-ABEND                                      66050000
660600             DP013-XCTL-DISPLAY-RESTART                           66060000
660700                                  TO TRUE                         66070000
660800         PERFORM DP013-0000-PROCESS-ABEND                         66080000
660900     END-IF.                                                      66090000
661000                                                                  66100000
661100 7400-INSERT-TPOSTRR.                                             66110000
661200                                                                  66120000
661300     INITIALIZE DCLTPOSTRR.                                       66130000
661400                                                                  66140000
661500     MOVE DK-PO-NBR                TO POSTRR-PO-NBR.              66150000
661600     IF ASC-MTCH-LVL-CDE = 'P'                                    66160000
661700        MOVE ZERO                  TO POSTRR-STR-NBR              66170000
661800     END-IF.                                                      66180000
661900     IF ASC-MTCH-LVL-CDE = 'D'                                    66190000
662000        MOVE ASC-KEY-DC-NBR        TO POSTRR-STR-NBR              66200000
662100     END-IF.                                                      66210000
662200     IF ASC-MTCH-LVL-CDE = 'S'                                    66220000
662300        MOVE ASC-KEY-STR-NBR       TO POSTRR-STR-NBR              66230000
662400     END-IF.                                                      66240000
662500     MOVE ASC-CURRENT-TIMESTAMP    TO POSTRR-PAYT-RLSE-TMST.      66250000
662600     MOVE DP020-USERID             TO POSTRR-PAYT-RLSE-USR-ID     66260000
662700     MOVE 'O'                      TO POSTRR-CRE-PRC-CDE.         66270000
662800     MOVE PV-WEIGHTED-DISC-PCT     TO POSTRR-WEIGHTED-DISC-PCT.   66280000
662900     MOVE PV-TOTAL-DISCOUNT-AMT    TO POSTRR-TOTAL-DISC-AMT.      66290000
663000     MOVE ASC-MTCH-LVL-CDE          TO POSTRR-MTCH-LVL-CDE.       66300000
663100                                                                  66310000
663200     PERFORM                                                      66320000
663300         WITH TEST AFTER                                          66330000
663400         VARYING PV-RETRY-COUNTER                                 66340000
663500         FROM 1 BY 1                                              66350000
663600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               66360000
663700             OR (SQLCODE = +0))                                   66370000
663800                                                                  66380000
663900         EXEC SQL                                                 66390000
664000              INSERT INTO TPOSTRR                                 66400000
664100                    ( PO_NBR                                      66410000
664200                     ,STR_NBR                                     66420000
664300                     ,PAYT_RLSE_TMST                              66430000
664400                     ,CRE_PRC_CDE                                 66440000
664500                     ,STATUS_CDE                                  66450000
664600                     ,PAYT_RLSE_USR_ID                            66460000
664700                     ,TOLR_ADJ_CDE                                66470000
664800                     ,TOLR_ADJ_AMT                                66480000
664900                     ,WEIGHTED_DISC_PCT                           66490000
665000                     ,TOTAL_DISC_AMT                              66500000
665100                     ,MTCH_LVL_CDE                                66510000
665200                    )                                             66520000
665300             VALUES  (:POSTRR-PO-NBR                              66530000
665400                     ,:POSTRR-STR-NBR                             66540000
665500                     ,:POSTRR-PAYT-RLSE-TMST                      66550000
665600                     ,:POSTRR-CRE-PRC-CDE                         66560000
665700                     ,:POSTRR-STATUS-CDE                          66570000
665800                     ,:POSTRR-PAYT-RLSE-USR-ID                    66580000
665900                     ,:POSTRR-TOLR-ADJ-CDE                        66590000
666000                     ,:POSTRR-TOLR-ADJ-AMT                        66600000
666100                     ,:POSTRR-WEIGHTED-DISC-PCT                   66610000
666200                     ,:POSTRR-TOTAL-DISC-AMT                      66620000
666300                     ,:POSTRR-MTCH-LVL-CDE                        66630000
666400                    )                                             66640000
666500         END-EXEC                                                 66650000
666600         EVALUATE TRUE                                            66660000
666700             WHEN SQLCODE = +0                                    66670000
666800             WHEN SQLCODE = -904                                  66680000
666900             WHEN SQLCODE = -913                                  66690000
667000                  CONTINUE                                        66700000
667100                                                                  66710000
667200             WHEN SQLWARN0 NOT = SPACES                           66720000
667300             WHEN SQLCODE < +0                                    66730000
667400             WHEN SQLCODE > +0                                    66740000
667500                  MOVE '7400-INSERT-TPOSTRR'                      66750000
667600                                  TO DP013-PARAGRAPH              66760000
667700                  MOVE 'UNSUCCESSFUL INSERT FOR TPOSTRR'          66770000
667800                                  TO DP013-MESSAGE-TEXT (1)       66780000
667900                  MOVE SQLCA      TO DP013-SQLCA                  66790000
668000                  MOVE 'TPOSTRR ' TO DP013-DB2-TABLE-NAME (1)     66800000
668100                  SET DP013-DB2-ABEND                             66810000
668200                      DP013-XCTL-DISPLAY-RESTART                  66820000
668300                                  TO TRUE                         66830000
668400                  PERFORM DP013-0000-PROCESS-ABEND                66840000
668500         END-EVALUATE                                             66850000
668600     END-PERFORM.                                                 66860000
668700                                                                  66870000
668800     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        66880000
668900         MOVE '7400-INSERT-TPOSTRR'                               66890000
669000                                  TO DP013-PARAGRAPH              66900000
669100         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TPOSTRR'        66910000
669200                                  TO DP013-MESSAGE-TEXT (1)       66920000
669300         MOVE SQLCA               TO DP013-SQLCA                  66930000
669400         MOVE 'TPOSTRR '          TO DP013-DB2-TABLE-NAME (1)     66940000
669500         SET DP013-DB2-ABEND                                      66950000
669600             DP013-XCTL-DISPLAY-RESTART                           66960000
669700                                  TO TRUE                         66970000
669800         PERFORM DP013-0000-PROCESS-ABEND                         66980000
669900     END-IF.                                                      66990000
670000                                                                  67000000
670100 7500-INSERT-TPRCCLM.                                             67010000
670200                                                                  67020000
670300     PERFORM 7510-INSERT-TPRCCLM                                  67030000
670400         VARYING PR-IDX FROM +1 BY +1                             67040000
670500             UNTIL T-PR-INVC-ID (PR-IDX) = SPACES OR              67050000
670600                   PR-IDX > PR-MAX.                               67060000
670700                                                                  67070000
670800 7510-INSERT-TPRCCLM.                                             67080000
670900                                                                  67090000
671000     INITIALIZE DCLTPRCCLM.                                       67100000
671100                                                                  67110000
671200     MOVE DK-PO-NBR                   TO PRCCLM-PO-NBR.           67120000
671300     IF ASC-MTCH-LVL-CDE = 'P'                                    67130000
671400        MOVE ZERO                     TO PRCCLM-STR-NBR           67140000
671500     END-IF.                                                      67150000
671600     IF ASC-MTCH-LVL-CDE = 'D'                                    67160000
671700        MOVE ASC-KEY-DC-NBR           TO PRCCLM-STR-NBR           67170000
671800     END-IF.                                                      67180000
671900     IF ASC-MTCH-LVL-CDE = 'S'                                    67190000
672000        MOVE ASC-KEY-STR-NBR          TO PRCCLM-STR-NBR           67200000
672100     END-IF.                                                      67210000
672200     MOVE T-PR-INVC-ID     (PR-IDX)   TO PRCCLM-INVC-ID.          67220000
672300     MOVE T-PR-PO-LINE-NBR (PR-IDX)   TO PRCCLM-PO-LNE-NBR.       67230000
672400     MOVE T-PR-DOC-TYP-CDE (PR-IDX)   TO PRCCLM-DOC-TYP-CDE.      67240000
672500     MOVE T-PR-UNIT-QTY    (PR-IDX)   TO PRCCLM-UNT-QTY.          67250000
672600     MOVE T-PR-UNIT-COST   (PR-IDX)   TO PRCCLM-UNT-COST-AMT.     67260000
672700     MOVE T-PR-ADJ-COST    (PR-IDX)   TO PRCCLM-ADJ-COST-AMT.     67270000
672800     MOVE ASC-CURRENT-TIMESTAMP       TO PRCCLM-PAYT-RLSE-TMST.   67280000
672900                                                                  67290000
673000     PERFORM 7515-GET-PRCCLM-SEQ-NBR.                             67300000
673100                                                                  67310000
673200     PERFORM                                                      67320000
673300         WITH TEST AFTER                                          67330000
673400         VARYING PV-RETRY-COUNTER                                 67340000
673500         FROM 1 BY 1                                              67350000
673600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               67360000
673700             OR (SQLCODE = +0))                                   67370000
673800                                                                  67380000
673900         EXEC SQL                                                 67390000
674000              INSERT INTO TPRCCLM                                 67400000
674100                    ( PO_NBR                                      67410000
674200                     ,STR_NBR                                     67420000
674300                     ,INVC_ID                                     67430000
674400                     ,PO_LNE_NBR                                  67440000
674500                     ,PRCCLM_SEQ_NBR                              67450000
674600                     ,DOC_TYP_CDE                                 67460000
674700                     ,UNT_QTY                                     67470000
674800                     ,UNT_COST_AMT                                67480000
674900                     ,ADJ_COST_AMT                                67490000
675000                     ,PAYT_RLSE_TMST                              67500000
675100                    )                                             67510000
675200             VALUES (:PRCCLM-PO-NBR                               67520000
675300                    ,:PRCCLM-STR-NBR                              67530000
675400                    ,:PRCCLM-INVC-ID                              67540000
675500                    ,:PRCCLM-PO-LNE-NBR                           67550000
675600                    ,:PRCCLM-PRCCLM-SEQ-NBR                       67560000
675700                    ,:PRCCLM-DOC-TYP-CDE                          67570000
675800                    ,:PRCCLM-UNT-QTY                              67580000
675900                    ,:PRCCLM-UNT-COST-AMT                         67590000
676000                    ,:PRCCLM-ADJ-COST-AMT                         67600000
676100                    ,:PRCCLM-PAYT-RLSE-TMST                       67610000
676200                    )                                             67620000
676300         END-EXEC                                                 67630000
676400         EVALUATE TRUE                                            67640000
676500             WHEN SQLCODE = +0                                    67650000
676600             WHEN SQLCODE = -904                                  67660000
676700             WHEN SQLCODE = -913                                  67670000
676800                  CONTINUE                                        67680000
676900                                                                  67690000
677000             WHEN SQLWARN0 NOT = SPACES                           67700000
677100             WHEN SQLCODE < +0                                    67710000
677200             WHEN SQLCODE > +0                                    67720000
677300                  MOVE '7510-INSERT-TPRCCLM'                      67730000
677400                                  TO DP013-PARAGRAPH              67740000
677500                  MOVE 'UNSUCCESSFUL INSERT FOR TPRCCLM'          67750000
677600                                  TO DP013-MESSAGE-TEXT (1)       67760000
677700                  MOVE SQLCA      TO DP013-SQLCA                  67770000
677800                  MOVE 'TPRCCLM ' TO DP013-DB2-TABLE-NAME (1)     67780000
677900                  SET DP013-DB2-ABEND                             67790000
678000                      DP013-XCTL-DISPLAY-RESTART                  67800000
678100                                  TO TRUE                         67810000
678200                  PERFORM DP013-0000-PROCESS-ABEND                67820000
678300         END-EVALUATE                                             67830000
678400     END-PERFORM.                                                 67840000
678500                                                                  67850000
678600     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        67860000
678700         MOVE '7510-INSERT-TPRCCLM'                               67870000
678800                                  TO DP013-PARAGRAPH              67880000
678900         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TPRCCLM'        67890000
679000                                  TO DP013-MESSAGE-TEXT (1)       67900000
679100         MOVE SQLCA               TO DP013-SQLCA                  67910000
679200         MOVE 'TPRCCLM '          TO DP013-DB2-TABLE-NAME (1)     67920000
679300         SET DP013-DB2-ABEND                                      67930000
679400             DP013-XCTL-DISPLAY-RESTART                           67940000
679500                                  TO TRUE                         67950000
679600         PERFORM DP013-0000-PROCESS-ABEND                         67960000
679700     END-IF.                                                      67970000
679800                                                                  67980000
679900     SUBTRACT PRCCLM-UNT-COST-AMT FROM PRCCLM-ADJ-COST-AMT        67990000
680000              GIVING PV-PRCCLM-DIFFERENCE.                        68000000
680100     IF PV-PRCCLM-DIFFERENCE < 0                                  68010000
680200         COMPUTE PV-PRCCLM-DIFFERENCE = PV-PRCCLM-DIFFERENCE * -1 68020000
680300     END-IF.                                                      68030000
680400                                                                  68040000
680500**   PRICE CLAIMS SHOULD NOT BE CONSIDERED PART OF THE DISCOUNT   68050000
680600**   AMOUNT.  THEREFORE, ADD THE AMOUNT OF THE PRICE CLAIM BACK   68060000
680700**   INTO THE TOTAL DISCOUNT IF THE PRICE CLAIM IS A CREDIT TO    68070000
680800**   PAYMENT HISTORY OR SUBTRACT THE AMOUNT OF THE PRICE CLAIM    68080000
680900**   IF IT DEBITS PAYMENT HISTORY.  SIMILAR LOGIC WILL OCCUR IN   68090000
681000**   APKUP254, CLASS DISTRIBUTION, FOR PURCHASE JOURNAL DEBITS    68100000
681100**   AND CREDITS ('DP' AND 'CP').                                 68110000
681200                                                                  68120000
681300     IF PRCCLM-DOC-TYP-CDE        = 'CM'                          68130000
681400         COMPUTE PV-DECIMAL-8 =                                   68140000
681500                 ((PV-PRCCLM-DIFFERENCE * PRCCLM-UNT-QTY)         68150000
681600                 * PV-WEIGHTED-DISC-PCT)                          68160000
681700         COMPUTE PV-TOTAL-DISCOUNT-AMT ROUNDED                    68170000
681800               = PV-TOTAL-DISCOUNT-AMT                            68180000
681900               + PV-DECIMAL-8                                     68190000
682000     ELSE                                                         68200000
682100     IF PRCCLM-DOC-TYP-CDE        = 'DM'                          68210000
682200         COMPUTE PV-DECIMAL-8 =                                   68220000
682300                 ((PV-PRCCLM-DIFFERENCE * PRCCLM-UNT-QTY)         68230000
682400                 * PV-WEIGHTED-DISC-PCT)                          68240000
682500         COMPUTE PV-TOTAL-DISCOUNT-AMT ROUNDED                    68250000
682600               = PV-TOTAL-DISCOUNT-AMT                            68260000
682700               - PV-DECIMAL-8                                     68270000
682800     END-IF.                                                      68280000
682900/                                                                 68290000
683000 7515-GET-PRCCLM-SEQ-NBR.                                         68300000
683100                                                                  68310000
683200     PERFORM WITH TEST AFTER                                      68320000
683300             VARYING PV-RETRY-COUNTER FROM 1 BY 1                 68330000
683400             UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES OR         68340000
683500                     SQLCODE = ZERO OR                            68350000
683600                     SQLCODE = -305                               68360000
683700                                                                  68370000
683800             EXEC SQL                                             68380000
683900                 SELECT MAX(PRCCLM_SEQ_NBR)                       68390000
684000                 INTO :PRCCLM-PRCCLM-SEQ-NBR                      68400000
684100                 FROM TPRCCLM                                     68410000
684200                 WHERE PO_NBR       = :PRCCLM-PO-NBR              68420000
684300                   AND STR_NBR      = :PRCCLM-STR-NBR             68430000
684400                   AND INVC_ID      = :PRCCLM-INVC-ID             68440000
684500                   AND PO_LNE_NBR   = :PRCCLM-PO-LNE-NBR          68450000
684600             END-EXEC                                             68460000
684700                                                                  68470000
684800             EVALUATE TRUE                                        68480000
684900                 WHEN SQLCODE = ZERO                              68490000
685000                     ADD +1  TO PRCCLM-PRCCLM-SEQ-NBR             68500000
685100                                                                  68510000
685200                 WHEN SQLCODE = -305                              68520000
685300                     MOVE +1 TO PRCCLM-PRCCLM-SEQ-NBR             68530000
685400                                                                  68540000
685500                 WHEN SQLCODE = -904                              68550000
685600                 WHEN SQLCODE = -913                              68560000
685700                     CONTINUE                                     68570000
685800                                                                  68580000
685900                 WHEN SQLWARN0 NOT = SPACES                       68590000
686000                 WHEN SQLCODE  NOT = ZERO                         68600000
686100                  MOVE '7515-GET-PRCCLM-SEQ-NBR'                  68610000
686200                                  TO DP013-PARAGRAPH              68620000
686300                  MOVE 'UNSUCCESSFUL SELECT FOR TPRCCLM SEQ NBR'  68630000
686400                                  TO DP013-MESSAGE-TEXT (1)       68640000
686500                  MOVE SQLCA      TO DP013-SQLCA                  68650000
686600                  MOVE 'TPRCCLM ' TO DP013-DB2-TABLE-NAME (1)     68660000
686700                  SET DP013-DB2-ABEND                             68670000
686800                      DP013-XCTL-DISPLAY-RESTART                  68680000
686900                                  TO TRUE                         68690000
687000                  PERFORM DP013-0000-PROCESS-ABEND                68700000
687100             END-EVALUATE                                         68710000
687200     END-PERFORM.                                                 68720000
687300                                                                  68730000
687400     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        68740000
687500         MOVE '7515-GET-PRCCLM-SEQ-NBR'                           68750000
687600                                  TO DP013-PARAGRAPH              68760000
687700         MOVE 'MAX RETRIES EXCEEDED FOR SELECT ON TPRCCLM'        68770000
687800                                  TO DP013-MESSAGE-TEXT (1)       68780000
687900         MOVE SQLCA               TO DP013-SQLCA                  68790000
688000         MOVE 'TPRCCLM '          TO DP013-DB2-TABLE-NAME (1)     68800000
688100         SET DP013-DB2-ABEND                                      68810000
688200             DP013-XCTL-DISPLAY-RESTART                           68820000
688300                                  TO TRUE                         68830000
688400         PERFORM DP013-0000-PROCESS-ABEND                         68840000
688500     END-IF.                                                      68850000
688600                                                                  68860000
688700/                                                                 68870000
688800 7600-UPDATE-TINVOIC.                                             68880000
688900                                                                  68890000
689000     PERFORM VARYING IH-IDX FROM +1 BY +1                         68900000
689100         UNTIL T-IH-INVC-ID (IH-IDX) = SPACES OR                  68910000
689200               IH-IDX > IH-MAX                                    68920000
689300           PERFORM 7610-UPDATE-TINVOIC                            68930000
689400     END-PERFORM.                                                 68940000
689500                                                                  68950000
689600 7610-UPDATE-TINVOIC.                                             68960000
689700                                                                  68970000
689800     MOVE DK-PO-NBR            TO INVOIC-PO-NBR.                  68980000
689900     MOVE T-IH-INVC-ID(IH-IDX) TO INVOIC-INVC-ID.                 68990000
690000                                                                  69000000
690100     PERFORM                                                      69010000
690200         WITH TEST AFTER                                          69020000
690300         VARYING PV-RETRY-COUNTER                                 69030000
690400         FROM 1 BY 1                                              69040000
690500         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               69050000
690600             OR (SQLCODE = +0))                                   69060000
690700                                                                  69070000
690800         EXEC SQL                                                 69080000
690900             UPDATE TINVOIC                                       69090000
691000                SET STATUS_CDE       = 'RL'                       69100000
691100                   ,PAYT_RLSE_TMST   = :ASC-CURRENT-TIMESTAMP     69110000
691200                   ,STATUS_CHG_TMST  = CURRENT TIMESTAMP          69120000
691300              WHERE PO_NBR           = :INVOIC-PO-NBR             69130000
691400                AND INVC_ID          = :INVOIC-INVC-ID            69140000
691500         END-EXEC                                                 69150000
691600                                                                  69160000
691700         EVALUATE TRUE                                            69170000
691800             WHEN SQLCODE = +0                                    69180000
691900             WHEN SQLCODE = -904                                  69190000
692000             WHEN SQLCODE = -913                                  69200000
692100                  CONTINUE                                        69210000
692200                                                                  69220000
692300             WHEN SQLWARN0 NOT = SPACES                           69230000
692400             WHEN SQLCODE < +0                                    69240000
692500             WHEN SQLCODE > +0                                    69250000
692600                  MOVE '7600-UPDATE-TINVOIC'                      69260000
692700                                  TO DP013-PARAGRAPH              69270000
692800                  MOVE 'UNSUCCESSFUL UPDATE'                      69280000
692900                                  TO DP013-MESSAGE-TEXT (1)       69290000
693000                  MOVE SQLCA      TO DP013-SQLCA                  69300000
693100                  MOVE 'INVOIC  ' TO DP013-DB2-TABLE-NAME (1)     69310000
693200                  SET DP013-DB2-ABEND                             69320000
693300                      DP013-XCTL-DISPLAY-RESTART                  69330000
693400                                  TO TRUE                         69340000
693500                  PERFORM DP013-0000-PROCESS-ABEND                69350000
693600         END-EVALUATE                                             69360000
693700     END-PERFORM.                                                 69370000
693800                                                                  69380000
693900     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        69390000
694000         MOVE '7600-UPDATE-TINVOIC'                               69400000
694100                                  TO DP013-PARAGRAPH              69410000
694200         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   69420000
694300                                  TO DP013-MESSAGE-TEXT (1)       69430000
694400         MOVE SQLCA               TO DP013-SQLCA                  69440000
694500         MOVE 'TINVOIC '          TO DP013-DB2-TABLE-NAME (1)     69450000
694600         SET DP013-DB2-ABEND                                      69460000
694700             DP013-XCTL-DISPLAY-RESTART                           69470000
694800                                  TO TRUE                         69480000
694900         PERFORM DP013-0000-PROCESS-ABEND                         69490000
695000     END-IF.                                                      69500000
695100                                                                  69510000
695200/                                                                 69520000
695300 7700-UPDATE-TRECDIS.                                             69530000
695400                                                                  69540000
695500     PERFORM VARYING RD-IDX FROM +1 BY +1                         69550000
695600*        UNTIL T-RD-CRE-TMST (RD-IDX) = SPACES OR                 69560000
695700         UNTIL T-RD-ORD-NBR  (RD-IDX) = ZEROES OR                 69570000
695800               RD-IDX > RD-MAX                                    69580000
695900           PERFORM 7710-UPDATE-TRECDIS                            69590000
696000     END-PERFORM.                                                 69600000
696100                                                                  69610000
696200 7710-UPDATE-TRECDIS.                                             69620000
696300                                                                  69630000
696400     MOVE DK-PO-NBR                 TO RECDIS-ORD-NBR.            69640000
696500     MOVE T-RD-REC-SEQ-NBR (RD-IDX) TO RECDIS-REC-SEQ-NBR.        69650000
696600     MOVE T-RD-ORD-LNE-NBR (RD-IDX) TO RECDIS-ORD-LNE-NBR.        69660000
696700     MOVE T-RD-OPER-UNT-ID (RD-IDX) TO RECDIS-OPER-UNT-ID.        69670000
696800     MOVE T-RD-FCLTY-ID    (RD-IDX) TO RECDIS-FCLTY-ID.           69680000
696900     MOVE T-RD-STR-NBR     (RD-IDX) TO RECDIS-STR-NBR.            69690000
697000     MOVE T-RD-STR-FCLTY-ID(RD-IDX) TO RECDIS-STR-FCLTY-ID.       69700000
697100*    MOVE T-RD-CRE-TMST    (RD-IDX) TO RECDIS-CRE-TMST.           69710000
697200                                                                  69720000
697300     PERFORM                                                      69730000
697400         WITH TEST AFTER                                          69740000
697500         VARYING PV-RETRY-COUNTER                                 69750000
697600         FROM 1 BY 1                                              69760000
697700         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               69770000
697800             OR (SQLCODE = +0))                                   69780000
697900                                                                  69790000
698000         EXEC SQL                                                 69800000
698100             UPDATE TRECDIS                                       69810000
698200                SET AP_PRC_CDE       = 'M'                        69820000
698300                   ,AP_PRC_DTE       = :ASC-CURRENT-DATE          69830000
698400              WHERE ORD_NBR          = :RECDIS-ORD-NBR            69840000
698500                AND REC_SEQ_NBR      = :RECDIS-REC-SEQ-NBR        69850000
698600                AND ORD_LNE_NBR      = :RECDIS-ORD-LNE-NBR        69860000
698700                AND OPER_UNT_ID      = :RECDIS-OPER-UNT-ID        69870000
698800                AND FCLTY_ID         = :RECDIS-FCLTY-ID           69880000
698900                AND STR_NBR          = :RECDIS-STR-NBR            69890000
699000                AND STR_FCLTY_ID     = :RECDIS-STR-FCLTY-ID       69900000
699100*               AND CRE_TMST         = :RECDIS-CRE-TMST           69910000
699200         END-EXEC                                                 69920000
699300                                                                  69930000
699400         EVALUATE TRUE                                            69940000
699500             WHEN SQLCODE = +0                                    69950000
699600             WHEN SQLCODE = -904                                  69960000
699700             WHEN SQLCODE = -913                                  69970000
699800                  CONTINUE                                        69980000
699900                                                                  69990000
700000             WHEN SQLWARN0 NOT = SPACES                           70000000
700100             WHEN SQLCODE < +0                                    70010000
700200             WHEN SQLCODE > +0                                    70020000
700300                  MOVE '7710-UPDATE-TRECDIS'                      70030000
700400                                  TO DP013-PARAGRAPH              70040000
700500                  MOVE 'UNSUCCESSFUL UPDATE'                      70050000
700600                                  TO DP013-MESSAGE-TEXT (1)       70060000
700700                  MOVE SQLCA      TO DP013-SQLCA                  70070000
700800                  MOVE 'TRECDIS ' TO DP013-DB2-TABLE-NAME (1)     70080000
700900                  SET DP013-DB2-ABEND                             70090000
701000                      DP013-XCTL-DISPLAY-RESTART                  70100000
701100                                  TO TRUE                         70110000
701200                  PERFORM DP013-0000-PROCESS-ABEND                70120000
701300         END-EVALUATE                                             70130000
701400     END-PERFORM.                                                 70140000
701500                                                                  70150000
701600     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        70160000
701700         MOVE '7710-UPDATE-TRECDIS'                               70170000
701800                                  TO DP013-PARAGRAPH              70180000
701900         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   70190000
702000                                  TO DP013-MESSAGE-TEXT (1)       70200000
702100         MOVE SQLCA               TO DP013-SQLCA                  70210000
702200         MOVE 'TRECDIS '          TO DP013-DB2-TABLE-NAME (1)     70220000
702300         SET DP013-DB2-ABEND                                      70230000
702400             DP013-XCTL-DISPLAY-RESTART                           70240000
702500                                  TO TRUE                         70250000
702600         PERFORM DP013-0000-PROCESS-ABEND                         70260000
702700     END-IF.                                                      70270000
702800                                                                  70280000
702900/                                                                 70290000
703000 8000-PROCESS-REMAINDER-INVOICE.                                  70300000
703100                                                                  70310000
703200     IF RI-INVC-NOT-CREATED                                       70320000
703300         PERFORM 8100-ADD-REM-INVC-HEADER                         70330000
703400         MOVE +0                      TO ALCHRG-ALW-CHRG-SEQ-NBR  70340000
703500         IF PV-WEIGHTED-ADV-PCT > 0                               70350000
703600            MOVE 'ADV'                TO ALCHRG-ALW-CHRG-CDE      70360000
703700            MOVE PV-WEIGHTED-ADV-PCT  TO ALCHRG-ALW-CHRG-PCT      70370000
703800            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70380000
703900            PERFORM 8600-TALCHRG-INSERT                           70390000
704000         END-IF                                                   70400000
704100         IF PV-WEIGHTED-COOP-PCT > 0                              70410000
704200            MOVE 'COP'                TO ALCHRG-ALW-CHRG-CDE      70420000
704300            MOVE PV-WEIGHTED-COOP-PCT TO ALCHRG-ALW-CHRG-PCT      70430000
704400            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70440000
704500            PERFORM 8600-TALCHRG-INSERT                           70450000
704600         END-IF                                                   70460000
704700         IF PV-WEIGHTED-NSD-PCT > 0                               70470000
704800            MOVE 'NSD'                TO ALCHRG-ALW-CHRG-CDE      70480000
704900            MOVE PV-WEIGHTED-NSD-PCT  TO ALCHRG-ALW-CHRG-PCT      70490000
705000            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70500000
705100            PERFORM 8600-TALCHRG-INSERT                           70510000
705200         END-IF                                                   70520000
705300         IF PV-WEIGHTED-MOS-PCT > 0                               70530000
705400            MOVE 'MOS'                TO ALCHRG-ALW-CHRG-CDE      70540000
705500            MOVE PV-WEIGHTED-MOS-PCT  TO ALCHRG-ALW-CHRG-PCT      70550000
705600            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70560000
705700            PERFORM 8600-TALCHRG-INSERT                           70570000
705800         END-IF                                                   70580000
705900         IF PV-WEIGHTED-TRD-PCT > 0                               70590000
706000            MOVE 'TRD'                TO ALCHRG-ALW-CHRG-CDE      70600000
706100            MOVE PV-WEIGHTED-TRD-PCT  TO ALCHRG-ALW-CHRG-PCT      70610000
706200            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70620000
706300            PERFORM 8600-TALCHRG-INSERT                           70630000
706400         END-IF                                                   70640000
706500         IF PV-WEIGHTED-MISC-PCT > 0                              70650000
706600            MOVE 'DAS'                TO ALCHRG-ALW-CHRG-CDE      70660000
706700            MOVE PV-WEIGHTED-MISC-PCT TO ALCHRG-ALW-CHRG-PCT      70670000
706800            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70680000
706900            PERFORM 8600-TALCHRG-INSERT                           70690000
707000         END-IF                                                   70700000
707100         IF PV-WEIGHTED-ALW-PCT > 0                               70710000
707200            MOVE 'ALW'                TO ALCHRG-ALW-CHRG-CDE      70720000
707300            MOVE PV-WEIGHTED-ALW-PCT  TO ALCHRG-ALW-CHRG-PCT      70730000
707400            ADD +1                    TO ALCHRG-ALW-CHRG-SEQ-NBR  70740000
707500            PERFORM 8600-TALCHRG-INSERT                           70750000
707600         END-IF                                                   70760000
707700         SET RI-INVC-CREATED TO TRUE                              70770000
707800         MOVE +0 TO PV-REMAINDER-INVC-QTY                         70780000
707900                    PV-REMAINDER-TOT-COST                         70790000
708000     END-IF.                                                      70800000
708100                                                                  70810000
708200     COMPUTE PV-RI-ITEM-QTY-MAX =                                 70820000
708300         T-INVC-QTY(PO-IDX) - T-RECV-QTY(PO-IDX).                 70830000
708400                                                                  70840000
708500                                                                  70850000
708600     IF PO-IDX = +1                                               70860000
708700*        -- THE NULL PO LINE (WHERE PO-IDX = +1) USES THE VALUES  70870000
708800*        -- FOUND ON THE TPREQIT TABLE ITSELF.  NON-NULL LINES    70880000
708900*        -- USE A CALCULATED VALUE (WHICH IS DETERMINED IN 8005)  70890000
709000         PERFORM 8060-CREATE-RI-ITEM                              70900000
709100     ELSE                                                         70910000
709200         IF T-MULT-INVC-SW(PO-IDX) = 'Y'                          70920000
709300            MOVE T-KEY-PO-LNE-NBR(PO-IDX) TO PV-PO-LNE-NBR        70930000
709400            SET MORE-INVC-ITEMS TO TRUE                           70940000
709500            PERFORM 8010-OPEN-INVC-ITEM-CSR                       70950000
709600            PERFORM 8020-FETCH-INVC-ITEM                          70960000
709700            PERFORM 8030-PROCESS-MULTI-UCOST-ITEMS                70970000
709800                    UNTIL PV-RI-ITEM-QTY-MAX <= 0                 70980000
709900                       OR NO-MORE-INVC-ITEMS                      70990000
710000            PERFORM 8040-CLOSE-INVC-ITEM-CSR                      71000000
710100         ELSE                                                     71010000
710200            PERFORM 8050-PROCESS-SINGLE-UCOST-ITEM                71020000
710300         END-IF                                                   71030000
710400     END-IF.                                                      71040000
710500                                                                  71050000
710600/                                                                 71060000
710700 8010-OPEN-INVC-ITEM-CSR.                                         71070000
710800                                                                  71080000
710900     PERFORM                                                      71090000
711000         WITH TEST AFTER                                          71100000
711100         VARYING PV-RETRY-COUNTER                                 71110000
711200         FROM 1 BY 1                                              71120000
711300         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               71130000
711400            OR (SQLCODE = +0))                                    71140000
711500                                                                  71150000
711600         EXEC SQL                                                 71160000
711700             OPEN  INVC_ITEM_CSR                                  71170000
711800         END-EXEC                                                 71180000
711900                                                                  71190000
712000         EVALUATE TRUE                                            71200000
712100             WHEN SQLCODE = +0                                    71210000
712200                  CONTINUE                                        71220000
712300             WHEN SQLCODE = -904                                  71230000
712400             WHEN SQLCODE = -913                                  71240000
712500                  CONTINUE                                        71250000
712600             WHEN SQLWARN0 NOT = SPACE                            71260000
712700             WHEN SQLCODE  NOT = +0                               71270000
712800                  MOVE 'OPEN CURSOR'                              71280000
712900                                   TO DP013-MESSAGE-TEXT (1)      71290000
713000                  MOVE SQLCA       TO DP013-SQLCA                 71300000
713100                  SET DP013-DB2-ABEND                             71310000
713200                                   TO TRUE                        71320000
713300                  PERFORM DP013-0000-PROCESS-ABEND                71330000
713400         END-EVALUATE                                             71340000
713500     END-PERFORM.                                                 71350000
713600/                                                                 71360000
713700*----------------------------------------------------------------*71370000
713800*    FETCH TOTAL OF INVOICE ITEM QTY FOR EACH UNIT COST.         *71380000
713900*----------------------------------------------------------------*71390000
714000 8020-FETCH-INVC-ITEM.                                            71400000
714100                                                                  71410000
714200     EXEC SQL                                                     71420000
714300         FETCH INVC_ITEM_CSR                                      71430000
714400          INTO :PV-INVC-SUM-QTY                                   71440000
714500              ,:PREQIT-UNT-COST-AMT                               71450000
714600     END-EXEC.                                                    71460000
714700                                                                  71470000
714800     EVALUATE TRUE                                                71480000
714900         WHEN SQLCODE = +0                                        71490000
715000              CONTINUE                                            71500000
715100                                                                  71510000
715200         WHEN SQLCODE = +100                                      71520000
715300              SET NO-MORE-INVC-ITEMS  TO TRUE                     71530000
715400                                                                  71540000
715500         WHEN SQLWARN0 NOT = SPACE                                71550000
715600         WHEN SQLCODE < +0                                        71560000
715700         WHEN SQLCODE > +0                                        71570000
715800              MOVE '8020-FETCH-INVC-ITEM'                         71580000
715900                                   TO DP013-PARAGRAPH             71590000
716000              MOVE 'FETCH IVNC ITEM CURSOR'                       71600000
716100                                   TO DP013-MESSAGE-TEXT (1)      71610000
716200              MOVE SQLCA           TO DP013-SQLCA                 71620000
716300              MOVE '       '       TO DP013-DB2-TABLE-NAME (1)    71630000
716400              MOVE 'TINVOIC'       TO DP013-DB2-TABLE-NAME (2)    71640000
716500              MOVE 'TPREQIT'       TO DP013-DB2-TABLE-NAME (3)    71650000
716600              MOVE 'TMIITEM'       TO DP013-DB2-TABLE-NAME (4)    71660000
716700              SET DP013-DB2-ABEND  TO TRUE                        71670000
716800              PERFORM DP013-0000-PROCESS-ABEND                    71680000
716900     END-EVALUATE.                                                71690000
717000/                                                                 71700000
717100*----------------------------------------------------------------*71710000
717200*    - IF THE INVOICE AND RECEIVER COSTS ARE THE SAME AND THE    *71720000
717300*      TOTAL INVOICE QTY IS MORE THAN THE REMAINING REMAINDER    *71730000
717400*      INVOICE QTY, USE THE REMAINING REMAINDER INVOICE QTY TO   *71740000
717500*      CREATE THE REMAINDER INVOICE AND SET THE REAMINING        *71750000
717600*      REMAINDER INVOICE QTY TO ZERO.                            *71760000
717700*    - IF THE INVOICE AND RECEIVER COSTS ARE THE SAME AND THE    *71770000
717800*      TOTAL INVOICE QTY IS THE SAME AS OR LESS THAN THE         *71780000
717900*      REMAINING REMAINDER INVOICE QTY, USE THE TOTAL INVOICE    *71790000
718000*      QTY TO CREATE THE REMAINDER INVOICE AND DECREMENT THE     *71800000
718100*      REMAINING REMAINDER INVOICE QTY BY THE TOTAL INVOICE QTY. *71810000
718200*    - IF THE INVOICE AND RECEIVER COSTS ARE NOT THE SAME,       *71820000
718300*      THEN WE NEED TO SEE IF ANY OF THE INVOICE QTY AT THIS     *71830000
718400*      COST HAS BEEN USED FOR PRICE CLAIMS.  THE TOTAL PRICE     *71840000
718500*      CLAIM QTY IS CALCULATED IN 8030.  IF THE TOTAL INVOICE    *71850000
718600*      QTY IS MORE THAN THE CALCULATED TOTAL PRICE CLAIM QTY,    *71860000
718700*      THEN SUBTRACT THE CALCULATED TOTAL PRICE CLAIM QTY FROM   *71870000
718800*      THE TOTAL INVOICE QTY TO GET THE QTY TO USE FOR THE       *71880000
718900*      REMAINDER INVOICE.  THEN:                                 *71890000
719000*      . IF THE REMAINDER INVOICE QTY TO BE USED IS MORE THAN    *71900000
719100*        THE REMAINING REMAINDER INVOICE QTY, USE THE REMAINING  *71910000
719200*        THE REMAINDER INVOICE QTY INSTEAD AND SET THE REMAINING *71920000
719300*        REMAINDER INVOICE QTY TO ZERO.                          *71930000
719400*      . IF THE REMAINDER INVOICE QTY TO BE USED IS THE SAME AS  *71940000
719500*        OR MORE THAN THE REMAINING REMAINDER INVOICE QTY,       *71950000
719600*        DECREMENT THE REMAINING REMAINDER INVOICE QTY BY THE    *71960000
719700*        REMAINDER INVOICE QTY TO BE USED.                       *71970000
719800*----------------------------------------------------------------*71980000
719900 8030-PROCESS-MULTI-UCOST-ITEMS.                                  71990000
720000                                                                  72000000
720100     IF PREQIT-UNT-COST-AMT = T-RECV-UNT-COST-AMT(PO-IDX)         72010000
720200         IF PV-INVC-SUM-QTY > PV-RI-ITEM-QTY-MAX                  72020000
720300             MOVE PV-RI-ITEM-QTY-MAX TO PREQIT-PAY-REQ-LNE-QTY    72030000
720400             MOVE ZERO               TO PV-RI-ITEM-QTY-MAX        72040000
720500         ELSE                                                     72050000
720600             MOVE PV-INVC-SUM-QTY    TO PREQIT-PAY-REQ-LNE-QTY    72060000
720700             SUBTRACT PREQIT-PAY-REQ-LNE-QTY                      72070000
720800                                   FROM PV-RI-ITEM-QTY-MAX        72080000
720900         END-IF                                                   72090000
721000         PERFORM 8060-CREATE-RI-ITEM                              72100000
721100     ELSE                                                         72110000
721200         MOVE ZERO                   TO PV-PRCCLM-QTY-SUMMED      72120000
721300         SET AMT-NOT-SUMMED          TO TRUE                      72130000
721400         PERFORM 8070-SUM-PRCCLM-AMT                              72140000
721500             VARYING PR-IDX FROM 1 BY 1                           72150000
721600               UNTIL AMT-SUMMED                                   72160000
721700                  OR PR-IDX > PR-MAX                              72170000
721800         IF PV-INVC-SUM-QTY > PV-PRCCLM-QTY-SUMMED                72180000
721900             SUBTRACT PV-PRCCLM-QTY-SUMMED FROM PV-INVC-SUM-QTY   72190000
722000                 GIVING PREQIT-PAY-REQ-LNE-QTY                    72200000
722100             IF PREQIT-PAY-REQ-LNE-QTY > PV-RI-ITEM-QTY-MAX       72210000
722200                 MOVE PV-RI-ITEM-QTY-MAX                          72220000
722300                       TO PREQIT-PAY-REQ-LNE-QTY                  72230000
722400                 MOVE ZERO           TO PV-RI-ITEM-QTY-MAX        72240000
722500             ELSE                                                 72250000
722600                 SUBTRACT PREQIT-PAY-REQ-LNE-QTY                  72260000
722700                                   FROM PV-RI-ITEM-QTY-MAX        72270000
722800             END-IF                                               72280000
722900             PERFORM 8060-CREATE-RI-ITEM                          72290000
723000         ELSE                                                     72300000
723100             CONTINUE                                             72310000
723200         END-IF                                                   72320000
723300     END-IF.                                                      72330000
723400                                                                  72340000
723500     PERFORM 8020-FETCH-INVC-ITEM.                                72350000
723600/                                                                 72360000
723700 8040-CLOSE-INVC-ITEM-CSR.                                        72370000
723800                                                                  72380000
723900     EXEC SQL                                                     72390000
724000        CLOSE INVC_ITEM_CSR                                       72400000
724100     END-EXEC.                                                    72410000
724200/                                                                 72420000
724300*----------------------------------------------------------------*72430000
724400*    FOR INVOICES THAT HAVE A SINGLE UNIT COST, THERE IS NO NEED *72440000
724500*    TO CHECK THE INVOICE DB2 TABLES BECAUSE THE SINGLE UNIT     *72450000
724600*    COST IS STORED ON THE INTERNAL TABLE.  ALSO, THERE IS NO    *72460000
724700*    NEED TO CHECK THE PRICE CLAIMS CREATED BECAUSE PRICE        *72470000
724800*    CALIMS WOULD ONLY HAVE BEEN CREATED FOR THE RECEIVED QTY    *72480000
724900*    WHICH IS NOT PART OF THE QTY FOR WHICH THE REMAINDER        *72490000
725000*    INVOICE IS CREATED.                                         *72500000
725100*    TO CREATE THE REMAINDER INVOICE, USE THE DIFFERENCE BETWEEN *72510000
725200*    THE INVOICE QTY AND THE RECEIVED QTY STORED ON THE INTERNAL *72520000
725300*    TABLE.                                                      *72530000
725400*----------------------------------------------------------------*72540000
725500 8050-PROCESS-SINGLE-UCOST-ITEM.                                  72550000
725600                                                                  72560000
725700     SUBTRACT T-RECV-QTY(PO-IDX) FROM T-INVC-QTY(PO-IDX)          72570000
725800         GIVING PREQIT-PAY-REQ-LNE-QTY.                           72580000
725900                                                                  72590000
726000     MOVE T-INVC-UNT-COST-AMT(PO-IDX) TO PREQIT-UNT-COST-AMT.     72600000
726100                                                                  72610000
726200     PERFORM 8060-CREATE-RI-ITEM.                                 72620000
726300/                                                                 72630000
726400 8060-CREATE-RI-ITEM.                                             72640000
726500                                                                  72650000
726600     PERFORM 8200-TPREQIT-INSERT.                                 72660000
726700     PERFORM 8300-TMIITEM-INSERT.                                 72670000
726800                                                                  72680000
726900                                                                  72690000
727000     ADD PREQIT-PAY-REQ-LNE-QTY TO PV-REMAINDER-INVC-QTY.         72700000
727100     COMPUTE PV-REMAINDER-TOT-COST ROUNDED                        72710000
727200       = PV-REMAINDER-TOT-COST                                    72720000
727300       + (PREQIT-PAY-REQ-LNE-QTY * PREQIT-UNT-COST-AMT).          72730000
727400                                                                  72740000
727500/                                                                 72750000
727600*----------------------------------------------------------------*72760000
727700*    TOTALS THE PRICE CLAIM QTY FOR A SPECIFIC INVOICE/PO LINE   *72770000
727800*    COMBINATION AS FOLLOWS:                                     *72780000
727900*    IF THE DOC TYPE IN THE TABLE IS SPACES, WE HAVE REACHED     *72790000
728000*    THE END OF THE PRICE CLAIM ENTRIES AND ARE DONE TOTALLING.  *72800000
728100*    OTHERWISE, IF THE PRICE CLAIM PO LINE NUMBER MATCHES THE    *72810000
728200*    APPROVED PO LINE NUMBER AND THE PRICE CLAIM UNIT COST IS    *72820000
728300*    THE SAME AS THE INVOICE UNIT COST, ADD THE PRICE CLAIM QTY  *72830000
728400*    TO THE TOTAL PRICE CLAIM QTY.                               *72840000
728500*----------------------------------------------------------------*72850000
728600 8070-SUM-PRCCLM-AMT.                                             72860000
728700                                                                  72870000
728800     IF T-PR-DOC-TYP-CDE(PR-IDX) = SPACES                         72880000
728900         SET AMT-SUMMED TO TRUE                                   72890000
729000     ELSE                                                         72900000
729100         IF T-PR-PO-LINE-NBR(PR-IDX) = T-APP-PO-LNE-NBR(PO-IDX)   72910000
729200         AND T-PR-UNIT-COST(PR-IDX)  = PREQIT-UNT-COST-AMT        72920000
729300             COMPUTE PV-PRCCLM-QTY-SUMMED =                       72930000
729400                 PV-PRCCLM-QTY-SUMMED +                           72940000
729500                 T-PR-UNIT-QTY(PR-IDX)                            72950000
729600         END-IF                                                   72960000
729700     END-IF.                                                      72970000
729800                                                                  72980000
729900/                                                                 72990000
730000 8090-UPDATE-TINVOIC-TMDINVC.                                     73000000
730100                                                                  73010000
730200     COMPUTE PV-DECIMAL-8 =                                       73020000
730300            (PV-REMAINDER-TOT-COST * PV-WEIGHTED-DISC-PCT).       73030000
730400                                                                  73040000
730500     COMPUTE PV-TOTAL-DISCOUNT-AMT ROUNDED                        73050000
730600           = PV-TOTAL-DISCOUNT-AMT                                73060000
730700           - PV-DECIMAL-8.                                        73070000
730800                                                                  73080000
730900     MOVE PV-REMAINDER-TOT-COST   TO INVOIC-GRO-COST-AMT          73090000
731000                                     INVOIC-INVC-NET-COST-AMT.    73100000
731100                                                                  73110000
731200     PERFORM                                                      73120000
731300         WITH TEST AFTER                                          73130000
731400         VARYING PV-RETRY-COUNTER                                 73140000
731500         FROM 1 BY 1                                              73150000
731600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               73160000
731700             OR (SQLCODE = +0))                                   73170000
731800                                                                  73180000
731900         EXEC SQL                                                 73190000
732000             UPDATE TINVOIC                                       73200000
732100                SET GRO_COST_AMT      = :INVOIC-GRO-COST-AMT      73210000
732200                   ,INVC_NET_COST_AMT = :INVOIC-INVC-NET-COST-AMT 73220000
732300              WHERE PO_NBR            = :INVOIC-PO-NBR            73230000
732400                AND INVC_ID           = :INVOIC-INVC-ID           73240000
732500         END-EXEC                                                 73250000
732600                                                                  73260000
732700         EVALUATE TRUE                                            73270000
732800             WHEN SQLCODE = +0                                    73280000
732900             WHEN SQLCODE = -904                                  73290000
733000             WHEN SQLCODE = -913                                  73300000
733100                  CONTINUE                                        73310000
733200                                                                  73320000
733300             WHEN SQLWARN0 NOT = SPACES                           73330000
733400             WHEN SQLCODE < +0                                    73340000
733500             WHEN SQLCODE > +0                                    73350000
733600                  MOVE 'UNSUCCESSFUL UPDATE'                      73360000
733700                                  TO DP013-MESSAGE-TEXT (1)       73370000
733800                  MOVE SQLCA      TO DP013-SQLCA                  73380000
733900                  MOVE 'INVOIC  ' TO DP013-DB2-TABLE-NAME (1)     73390000
734000                  SET DP013-DB2-ABEND                             73400000
734100                      DP013-XCTL-DISPLAY-RESTART                  73410000
734200                                  TO TRUE                         73420000
734300                  PERFORM DP013-0000-PROCESS-ABEND                73430000
734400         END-EVALUATE                                             73440000
734500     END-PERFORM.                                                 73450000
734600                                                                  73460000
734700     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        73470000
734800         MOVE '8090-UPDATE-TINVOIC-TMDINVC'                       73480000
734900                                  TO DP013-PARAGRAPH              73490000
735000         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   73500000
735100                                  TO DP013-MESSAGE-TEXT (1)       73510000
735200         MOVE SQLCA               TO DP013-SQLCA                  73520000
735300         MOVE 'TINVOIC '          TO DP013-DB2-TABLE-NAME (1)     73530000
735400         SET DP013-DB2-ABEND                                      73540000
735500             DP013-XCTL-DISPLAY-RESTART                           73550000
735600                                  TO TRUE                         73560000
735700         PERFORM DP013-0000-PROCESS-ABEND                         73570000
735800     END-IF.                                                      73580000
735900                                                                  73590000
736000     MOVE PV-REMAINDER-INVC-QTY   TO MDINVC-TOT-INVC-PC-QTY       73600000
736100                                                                  73610000
736200     PERFORM                                                      73620000
736300         WITH TEST AFTER                                          73630000
736400         VARYING PV-RETRY-COUNTER                                 73640000
736500         FROM 1 BY 1                                              73650000
736600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               73660000
736700             OR (SQLCODE = +0))                                   73670000
736800                                                                  73680000
736900         EXEC SQL                                                 73690000
737000             UPDATE TMDINVC                                       73700000
737100                SET TOT_INVC_PC_QTY = :MDINVC-TOT-INVC-PC-QTY     73710000
737200              WHERE PO_NBR          = :INVOIC-PO-NBR              73720000
737300                AND INVC_ID         = :INVOIC-INVC-ID             73730000
737400         END-EXEC                                                 73740000
737500                                                                  73750000
737600         EVALUATE TRUE                                            73760000
737700             WHEN SQLCODE = +0                                    73770000
737800             WHEN SQLCODE = -904                                  73780000
737900             WHEN SQLCODE = -913                                  73790000
738000                  CONTINUE                                        73800000
738100                                                                  73810000
738200             WHEN SQLWARN0 NOT = SPACES                           73820000
738300             WHEN SQLCODE < +0                                    73830000
738400             WHEN SQLCODE > +0                                    73840000
738500                  MOVE 'UNSUCCESSFUL UPDATE'                      73850000
738600                                  TO DP013-MESSAGE-TEXT (1)       73860000
738700                  MOVE SQLCA      TO DP013-SQLCA                  73870000
738800                  MOVE 'TMDINVC ' TO DP013-DB2-TABLE-NAME (1)     73880000
738900                  SET DP013-DB2-ABEND                             73890000
739000                      DP013-XCTL-DISPLAY-RESTART                  73900000
739100                                  TO TRUE                         73910000
739200                  PERFORM DP013-0000-PROCESS-ABEND                73920000
739300         END-EVALUATE                                             73930000
739400     END-PERFORM.                                                 73940000
739500                                                                  73950000
739600     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        73960000
739700         MOVE '8090-UPDATE-TINVOIC-TMDINVC'                       73970000
739800                                  TO DP013-PARAGRAPH              73980000
739900         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   73990000
740000                                  TO DP013-MESSAGE-TEXT (1)       74000000
740100         MOVE SQLCA               TO DP013-SQLCA                  74010000
740200         MOVE 'TMDINVC '          TO DP013-DB2-TABLE-NAME (1)     74020000
740300         SET DP013-DB2-ABEND                                      74030000
740400             DP013-XCTL-DISPLAY-RESTART                           74040000
740500                                  TO TRUE                         74050000
740600         PERFORM DP013-0000-PROCESS-ABEND                         74060000
740700     END-IF.                                                      74070000
740800/                                                                 74080000
740900                                                                  74090000
741000 8100-ADD-REM-INVC-HEADER.                                        74100000
741100                                                                  74110000
741200     PERFORM 8130-INSERT-TINVOIC.                                 74120000
741300     PERFORM 8140-INSERT-TMDINVC.                                 74130000
741400     PERFORM 8150-INSERT-TINVCTM.                                 74140000
741500                                                                  74150000
741600                                                                  74160000
741700                                                                  74170000
741800*----------------------------------------------------------------*74180000
741900* INSERTS RECORD INTO TINVOIC TABLE                              *74190000
742000*----------------------------------------------------------------*74200000
742100 8130-INSERT-TINVOIC.                                             74210000
742200                                                                  74220000
742300     INITIALIZE DCLTINVOIC.                                       74230000
742400                                                                  74240000
742500     MOVE DK-PO-NBR               TO INVOIC-PO-NBR.               74250000
742600     MOVE ASC-DUN-NBR             TO INVOIC-RMIT-VND-ID.          74260000
742700     MOVE DP020-USERID            TO INVOIC-CRE-BY-USR-ID.        74270000
742800     MOVE ASC-CURRENT-DATE        TO INVOIC-CRE-DTE.              74280000
742900     MOVE 'RI'                    TO INVOIC-INVC-TYP-CDE.         74290000
743000     MOVE 'EN'                    TO INVOIC-STATUS-CDE.           74300000
743100     MOVE PV-REMAINDER-INVC-DTE   TO INVOIC-INVC-DTE.             74310000
743200     MOVE ASC-HOLD-IND                                            74320000
743300                                  TO INVOIC-HOLD-IND.             74330000
743400     MOVE 'MN'                    TO INVOIC-ENTR-MTHD-CDE.        74340000
743500     MOVE PC-NULL-TIMESTAMP       TO INVOIC-PAYT-RLSE-TMST.       74350000
743600     MOVE PC-NULL-DATE            TO INVOIC-PAYT-DTE.             74360000
743700                                                                  74370000
743800     MOVE 'N'                     TO INVOIC-SPLIT-TERMS-IND.      74380000
743900     MOVE SPACE                   TO INVOIC-PPD-RVRSL-IND.        74390000
744000                                                                  74400000
744100     MOVE 0                       TO INVOIC-INVC-CART-CT.         74410000
744200     MOVE 'Y'                     TO INVOIC-DTL-ENTR-IND.         74420000
744300                                                                  74430000
744400     MOVE '0001-01-01'            TO INVOIC-CALC-DUE-DTE.         74440000
744500     MOVE SPACE                   TO INVOIC-DUE-DTE-SRC-CDE.      74450000
744600     MOVE INVOIC-GRO-COST-AMT     TO INVOIC-INVC-NET-COST-AMT.    74460000
744700                                                                  74470000
744800     MOVE SPACE                   TO INVOIC-AP-PRC-CDE.           74480000
744900     MOVE '9999-09-09'            TO INVOIC-AP-PRC-DTE.           74490000
745000     IF ASC-MTCH-LVL-CDE = 'P'                                    74500000
745100        MOVE ZEROES             TO INVOIC-STR-NBR                 74510000
745200                                   INVOIC-DC-NBR                  74520000
745300     END-IF.                                                      74530000
745400     IF ASC-MTCH-LVL-CDE = 'D'                                    74540000
745500        MOVE ASC-KEY-DC-NBR     TO INVOIC-STR-NBR                 74550000
745600                                   INVOIC-DC-NBR                  74560000
745700     END-IF.                                                      74570000
745800     IF ASC-MTCH-LVL-CDE = 'S'                                    74580000
745900        MOVE ASC-KEY-STR-NBR    TO INVOIC-STR-NBR                 74590000
746000        MOVE ASC-KEY-STR-DC-NBR TO INVOIC-DC-NBR                  74600000
746100     END-IF.                                                      74610000
746200     MOVE ASC-MTCH-LVL-CDE        TO INVOIC-MTCH-LVL-CDE.         74620000
746300                                                                  74630000
746400     PERFORM                                                      74640000
746500         WITH TEST AFTER                                          74650000
746600         VARYING PV-RETRY-COUNTER                                 74660000
746700         FROM 1 BY 1                                              74670000
746800         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               74680000
746900             OR (SQLCODE = +0))                                   74690000
747000                                                                  74700000
747100         EXEC SQL                                                 74710000
747200              SET :PV-TIMESTAMP = CURRENT TIMESTAMP               74720000
747300         END-EXEC                                                 74730000
747400                                                                  74740000
747500         IF SQLCODE NOT = ZERO                                    74750000
747600             MOVE '8130-INSERT-TINVOIC'                           74760000
747700                             TO DP013-PARAGRAPH                   74770000
747800             MOVE 'UNSUCCESSFUL SET CURRENT TIMESTAMP'            74780000
747900                             TO DP013-MESSAGE-TEXT (1)            74790000
748000             MOVE SQLCA      TO DP013-SQLCA                       74800000
748100             SET DP013-DB2-ABEND                                  74810000
748200                 DP013-XCTL-DISPLAY-RESTART                       74820000
748300                             TO TRUE                              74830000
748400             PERFORM DP013-0000-PROCESS-ABEND                     74840000
748500         END-IF                                                   74850000
748600                                                                  74860000
748700         MOVE PV-NANOSEC-2      TO PV-RANDOM-KEY-NANOSEC-1        74870000
748800         MOVE PV-NANOSEC-1      TO PV-RANDOM-KEY-NANOSEC-2        74880000
748900         MOVE PV-MINUTE         TO PV-RANDOM-KEY-MINUTE           74890000
749000         MOVE PV-SECOND         TO PV-RANDOM-KEY-SECOND           74900000
749100         MOVE PV-RANDOM-KEY     TO PV-RANDOM-KEY-INT              74910000
749200         MOVE PV-RANDOM-KEY-INT TO PV-PAYREQ-PAYT-REQ-SEQ-NBR     74920000
749300                                                                  74930000
749400         MOVE PV-PAYREQ-PAYT-REQ-SEQ-NBR                          74940000
749500                                TO INVOIC-PAYT-REQ-SEQ-NBR        74950000
749600                                   PV-PAYT-REQ-SEQ-NBR-NUM        74960000
749700                                                                  74970000
749800         MOVE PV-PAYT-REQ-SEQ-NBR-X                               74980000
749900                                TO INVOIC-INVC-ID                 74990000
750000                                                                  75000000
750100         EXEC SQL                                                 75010000
750200              INSERT INTO TINVOIC                                 75020000
750300                     ( PO_NBR                                     75030000
750400                      ,INVC_ID                                    75040000
750500                      ,PAYT_REQ_SEQ_NBR                           75050000
750600                      ,INVC_TYP_CDE                               75060000
750700                      ,ENTR_MTHD_CDE                              75070000
750800                      ,CRE_BY_USR_ID                              75080000
750900                      ,BAR_CDE                                    75090000
751000                      ,SPLIT_TERMS_IND                            75100000
751100                      ,DTL_ENTR_IND                               75110000
751200                      ,INVC_CART_CT                               75120000
751300                      ,CRE_DTE                                    75130000
751400                      ,PPD_RVRSL_IND                              75140000
751500                      ,INVC_DTE                                   75150000
751600                      ,GRO_COST_AMT                               75160000
751700                      ,INVC_NET_COST_AMT                          75170000
751800                      ,RMIT_VND_ID                                75180000
751900                      ,STR_NBR                                    75190000
752000                      ,HOLD_IND                                   75200000
752100                      ,DUE_DTE_SRC_CDE                            75210000
752200                      ,CALC_DUE_DTE                               75220000
752300                      ,PAYT_DTE                                   75230000
752400                      ,AP_PRC_DTE                                 75240000
752500                      ,AP_PRC_CDE                                 75250000
752600                      ,PAYT_RLSE_TMST                             75260000
752700                      ,STATUS_CDE                                 75270000
752800                      ,STATUS_CHG_TMST                            75280000
752900                      ,DC_NBR                                     75290000
753000                      ,MTCH_LVL_CDE )                             75300000
753100              VALUES ( :INVOIC-PO-NBR                             75310000
753200                      ,:INVOIC-INVC-ID                            75320000
753300                      ,:INVOIC-PAYT-REQ-SEQ-NBR                   75330000
753400                      ,:INVOIC-INVC-TYP-CDE                       75340000
753500                      ,:INVOIC-ENTR-MTHD-CDE                      75350000
753600                      ,:INVOIC-CRE-BY-USR-ID                      75360000
753700                      ,:INVOIC-BAR-CDE                            75370000
753800                      ,:INVOIC-SPLIT-TERMS-IND                    75380000
753900                      ,:INVOIC-DTL-ENTR-IND                       75390000
754000                      ,:INVOIC-INVC-CART-CT                       75400000
754100                      ,CURRENT DATE                               75410000
754200                      ,:INVOIC-PPD-RVRSL-IND                      75420000
754300                      ,:INVOIC-INVC-DTE                           75430000
754400                      ,:INVOIC-GRO-COST-AMT                       75440000
754500                      ,:INVOIC-INVC-NET-COST-AMT                  75450000
754600                      ,:INVOIC-RMIT-VND-ID                        75460000
754700                      ,:INVOIC-STR-NBR                            75470000
754800                      ,:INVOIC-HOLD-IND                           75480000
754900                      ,:INVOIC-DUE-DTE-SRC-CDE                    75490000
755000                      ,:INVOIC-CALC-DUE-DTE                       75500000
755100                      ,:INVOIC-PAYT-DTE                           75510000
755200                      ,:INVOIC-AP-PRC-DTE                         75520000
755300                      ,:INVOIC-AP-PRC-CDE                         75530000
755400                      ,:INVOIC-PAYT-RLSE-TMST                     75540000
755500                      ,:INVOIC-STATUS-CDE                         75550000
755600                      ,CURRENT TIMESTAMP                          75560000
755700                      ,:INVOIC-DC-NBR                             75570000
755800                      ,:INVOIC-MTCH-LVL-CDE )                     75580000
755900         END-EXEC                                                 75590000
756000                                                                  75600000
756100         EVALUATE TRUE                                            75610000
756200             WHEN SQLCODE = +0                                    75620000
756300             WHEN SQLCODE = -803                                  75630000
756400             WHEN SQLCODE = -904                                  75640000
756500             WHEN SQLCODE = -913                                  75650000
756600                  CONTINUE                                        75660000
756700                                                                  75670000
756800             WHEN SQLWARN0 NOT = SPACES                           75680000
756900             WHEN SQLCODE < +0                                    75690000
757000             WHEN SQLCODE > +0                                    75700000
757100                  MOVE '8130-INSERT-TINVOIC'                      75710000
757200                                  TO DP013-PARAGRAPH              75720000
757300                  MOVE 'UNSUCCESSFUL INSERT FOR TINVOIC'          75730000
757400                                  TO DP013-MESSAGE-TEXT (1)       75740000
757500                  MOVE SQLCA      TO DP013-SQLCA                  75750000
757600                  MOVE 'TINVOIC ' TO DP013-DB2-TABLE-NAME (1)     75760000
757700                  SET DP013-DB2-ABEND                             75770000
757800                      DP013-XCTL-DISPLAY-RESTART                  75780000
757900                                  TO TRUE                         75790000
758000                  PERFORM DP013-0000-PROCESS-ABEND                75800000
758100         END-EVALUATE                                             75810000
758200     END-PERFORM.                                                 75820000
758300                                                                  75830000
758400     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        75840000
758500         MOVE '8130-INSERT-TINVOIC'                               75850000
758600                                  TO DP013-PARAGRAPH              75860000
758700         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TINVOIC'        75870000
758800                                  TO DP013-MESSAGE-TEXT (1)       75880000
758900         MOVE SQLCA               TO DP013-SQLCA                  75890000
759000         MOVE 'TINVOIC '          TO DP013-DB2-TABLE-NAME (1)     75900000
759100         SET DP013-DB2-ABEND                                      75910000
759200             DP013-XCTL-DISPLAY-RESTART                           75920000
759300                                  TO TRUE                         75930000
759400         PERFORM DP013-0000-PROCESS-ABEND                         75940000
759500     END-IF.                                                      75950000
759600                                                                  75960000
759700                                                                  75970000
759800*----------------------------------------------------------------*75980000
759900* INSERTS RECORD INTO TMDINVC TABLE                              *75990000
760000*----------------------------------------------------------------*76000000
760100 8140-INSERT-TMDINVC.                                             76010000
760200                                                                  76020000
760300     INITIALIZE DCLTMDINVC                                        76030000
760400                                                                  76040000
760500     MOVE PV-PAYREQ-PAYT-REQ-SEQ-NBR TO MDINVC-PAYT-REQ-SEQ-NBR.  76050000
760600     MOVE DK-PO-NBR               TO MDINVC-PO-NBR.               76060000
760700     MOVE PV-PAYT-REQ-SEQ-NBR-X   TO MDINVC-INVC-ID.              76070000
760800     MOVE 'I'                     TO MDINVC-TERM-SEL-CDE          76080000
760900     MOVE +1                      TO MDINVC-VEND-FRGT-PCT         76090000
761000                                                                  76100000
761100     PERFORM                                                      76110000
761200         WITH TEST AFTER                                          76120000
761300         VARYING PV-RETRY-COUNTER                                 76130000
761400         FROM 1 BY 1                                              76140000
761500         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               76150000
761600             OR (SQLCODE = +0))                                   76160000
761700                                                                  76170000
761800         EXEC SQL                                                 76180000
761900              INSERT INTO TMDINVC                                 76190000
762000                     ( PO_NBR                                     76200000
762100                      ,INVC_ID                                    76210000
762200                      ,BOL_ID                                     76220000
762300                      ,VEND_FRGT_PCT                              76230000
762400                      ,KOHLS_FRGT_PCT                             76240000
762500                      ,TERM_SEL_CDE                               76250000
762600                      ,TOT_INVC_PC_QTY                            76260000
762700                      ,IMPRT_CHRG_PRC_CDE                         76270000
762800                      ,PAYT_REQ_SEQ_NBR )                         76280000
762900              VALUES ( :MDINVC-PO-NBR                             76290000
763000                      ,:MDINVC-INVC-ID                            76300000
763100                      ,:MDINVC-BOL-ID                             76310000
763200                      ,:MDINVC-VEND-FRGT-PCT                      76320000
763300                      ,:MDINVC-KOHLS-FRGT-PCT                     76330000
763400                      ,:MDINVC-TERM-SEL-CDE                       76340000
763500                      ,:MDINVC-TOT-INVC-PC-QTY                    76350000
763600                      ,:MDINVC-IMPRT-CHRG-PRC-CDE                 76360000
763700                      ,:MDINVC-PAYT-REQ-SEQ-NBR )                 76370000
763800         END-EXEC                                                 76380000
763900                                                                  76390000
764000         EVALUATE TRUE                                            76400000
764100             WHEN SQLCODE = +0                                    76410000
764200             WHEN SQLCODE = -904                                  76420000
764300             WHEN SQLCODE = -913                                  76430000
764400                  CONTINUE                                        76440000
764500                                                                  76450000
764600             WHEN SQLWARN0 NOT = SPACES                           76460000
764700             WHEN SQLCODE < +0                                    76470000
764800             WHEN SQLCODE > +0                                    76480000
764900                  MOVE '8140-INSERT-TMDINVC'                      76490000
765000                                  TO DP013-PARAGRAPH              76500000
765100                  MOVE 'UNSUCCESSFUL INSERT FOR TMDINVC'          76510000
765200                                  TO DP013-MESSAGE-TEXT (1)       76520000
765300                  MOVE SQLCA      TO DP013-SQLCA                  76530000
765400                  MOVE 'TMDINVC ' TO DP013-DB2-TABLE-NAME (1)     76540000
765500                  SET DP013-DB2-ABEND                             76550000
765600                      DP013-XCTL-DISPLAY-RESTART                  76560000
765700                                  TO TRUE                         76570000
765800                  PERFORM DP013-0000-PROCESS-ABEND                76580000
765900         END-EVALUATE                                             76590000
766000     END-PERFORM.                                                 76600000
766100                                                                  76610000
766200     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        76620000
766300         MOVE '8140-INSERT-TMDINVC'                               76630000
766400                                  TO DP013-PARAGRAPH              76640000
766500         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TINVOIC'        76650000
766600                                  TO DP013-MESSAGE-TEXT (1)       76660000
766700         MOVE SQLCA               TO DP013-SQLCA                  76670000
766800         MOVE 'TMDINVC '          TO DP013-DB2-TABLE-NAME (1)     76680000
766900         SET DP013-DB2-ABEND                                      76690000
767000             DP013-XCTL-DISPLAY-RESTART                           76700000
767100                                  TO TRUE                         76710000
767200         PERFORM DP013-0000-PROCESS-ABEND                         76720000
767300     END-IF.                                                      76730000
767400/                                                                 76740000
767500 8150-INSERT-TINVCTM.                                             76750000
767600                                                                  76760000
767700     PERFORM 8151-GET-TERMS-DATA.                                 76770000
767800                                                                  76780000
767900     MOVE DK-PO-NBR                TO INVCTM-PO-NBR.              76790000
768000     MOVE PV-PAYT-REQ-SEQ-NBR-X    TO INVCTM-INVC-ID.             76800000
768100     MOVE +1                       TO INVCTM-TERM-SEQ-NBR.        76810000
768200     IF PAYTRM-DUE-DAY-FR-DTE-TXT = 'EOM'                         76820000
768300         MOVE '02'                 TO INVCTM-TERM-TYP-CDE         76830000
768400     ELSE                                                         76840000
768500         MOVE '01'                 TO INVCTM-TERM-TYP-CDE         76850000
768600     END-IF.                                                      76860000
768700     MOVE '03'                     TO INVCTM-TERM-BASIS-DTE-CDE.  76870000
768800     MOVE '9999-09-09'             TO INVCTM-EFF-DTE.             76880000
768900     MOVE PV-WEIGHTED-DISC-PCT     TO INVCTM-DISC-PCT.            76890000
769000     MOVE ZERO                     TO INVCTM-DISC-AMT.            76900000
769100     MOVE '9999-09-09'             TO INVCTM-DISC-DUE-DTE.        76910000
769200     MOVE '9999-09-09'             TO INVCTM-NET-DUE-DTE.         76920000
769300     IF PAYTRM-DISCOUNT-DAYS-QTY > 0                              76930000
769400         MOVE PAYTRM-DISCOUNT-DAYS-QTY TO INVCTM-DISC-DUE-DAY-QTY 76940000
769500         MOVE 0                        TO INVCTM-NET-DUE-DAY-QTY  76950000
769600     ELSE                                                         76960000
769700         MOVE PAYTRM-DISCOUNT-DAYS-QTY TO INVCTM-DISC-DUE-DAY-QTY 76970000
769800         MOVE PAYTRM-DUE-DAY-QTY       TO INVCTM-NET-DUE-DAY-QTY  76980000
769900     END-IF.                                                      76990000
770000     MOVE POAGMT-DISC-PAY-DAY-QTY  TO INVCTM-EXTD-DAYS-QTY.       77000000
770100                                                                  77010000
770200     PERFORM                                                      77020000
770300         WITH TEST AFTER                                          77030000
770400         VARYING PV-RETRY-COUNTER                                 77040000
770500         FROM 1 BY 1                                              77050000
770600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               77060000
770700             OR (SQLCODE = +0))                                   77070000
770800                                                                  77080000
770900         EXEC SQL                                                 77090000
771000              INSERT INTO TINVCTM                                 77100000
771100                      (PO_NBR                                     77110000
771200                      ,INVC_ID                                    77120000
771300                      ,TERM_SEQ_NBR                               77130000
771400                      ,TERM_TYP_CDE                               77140000
771500                      ,TERM_BASIS_DTE_CDE                         77150000
771600                      ,EFF_DTE                                    77160000
771700                      ,DISC_PCT                                   77170000
771800                      ,DISC_AMT                                   77180000
771900                      ,DISC_DUE_DTE                               77190000
772000                      ,DISC_DUE_DAY_QTY                           77200000
772100                      ,NET_DUE_DTE                                77210000
772200                      ,NET_DUE_DAY_QTY                            77220000
772300                      ,EXTD_DAYS_QTY                              77230000
772400                      )                                           77240000
772500              VALUES ( :INVCTM-PO-NBR                             77250000
772600                      ,:INVCTM-INVC-ID                            77260000
772700                      ,:INVCTM-TERM-SEQ-NBR                       77270000
772800                      ,:INVCTM-TERM-TYP-CDE                       77280000
772900                      ,:INVCTM-TERM-BASIS-DTE-CDE                 77290000
773000                      ,:INVCTM-EFF-DTE                            77300000
773100                      ,:INVCTM-DISC-PCT                           77310000
773200                      ,:INVCTM-DISC-AMT                           77320000
773300                      ,:INVCTM-DISC-DUE-DTE                       77330000
773400                      ,:INVCTM-DISC-DUE-DAY-QTY                   77340000
773500                      ,:INVCTM-NET-DUE-DTE                        77350000
773600                      ,:INVCTM-NET-DUE-DAY-QTY                    77360000
773700                      ,:INVCTM-EXTD-DAYS-QTY                      77370000
773800                      )                                           77380000
773900         END-EXEC                                                 77390000
774000                                                                  77400000
774100         EVALUATE TRUE                                            77410000
774200             WHEN SQLCODE = +0                                    77420000
774300             WHEN SQLCODE = -904                                  77430000
774400             WHEN SQLCODE = -913                                  77440000
774500                  CONTINUE                                        77450000
774600                                                                  77460000
774700             WHEN SQLWARN0 NOT = SPACES                           77470000
774800             WHEN SQLCODE < +0                                    77480000
774900             WHEN SQLCODE > +0                                    77490000
775000                  MOVE '8150-INSERT-TINVCTM'                      77500000
775100                                  TO DP013-PARAGRAPH              77510000
775200                  MOVE 'UNSUCCESSFUL INSERT FOR TINVCTM'          77520000
775300                                  TO DP013-MESSAGE-TEXT (1)       77530000
775400                  MOVE SQLCA      TO DP013-SQLCA                  77540000
775500                  MOVE 'TINVCTM ' TO DP013-DB2-TABLE-NAME (1)     77550000
775600                  SET DP013-DB2-ABEND                             77560000
775700                      DP013-XCTL-DISPLAY-RESTART                  77570000
775800                                  TO TRUE                         77580000
775900                  PERFORM DP013-0000-PROCESS-ABEND                77590000
776000         END-EVALUATE                                             77600000
776100     END-PERFORM.                                                 77610000
776200                                                                  77620000
776300     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        77630000
776400         MOVE '8150-INSERT-TINVCTM'                               77640000
776500                                  TO DP013-PARAGRAPH              77650000
776600         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TINVCTM'        77660000
776700                                  TO DP013-MESSAGE-TEXT (1)       77670000
776800         MOVE SQLCA               TO DP013-SQLCA                  77680000
776900         MOVE 'TINVCTM '          TO DP013-DB2-TABLE-NAME (1)     77690000
777000         SET DP013-DB2-ABEND                                      77700000
777100             DP013-XCTL-DISPLAY-RESTART                           77710000
777200                                  TO TRUE                         77720000
777300         PERFORM DP013-0000-PROCESS-ABEND                         77730000
777400     END-IF.                                                      77740000
777500                                                                  77750000
777600/                                                                 77760000
777700 8151-GET-TERMS-DATA.                                             77770000
777800                                                                  77780000
777900     INITIALIZE DCLTPOAGMT                                        77790000
778000                DCLTPAYTRM.                                       77800000
778100                                                                  77810000
778200     PERFORM                                                      77820000
778300         WITH TEST AFTER                                          77830000
778400         VARYING PV-RETRY-COUNTER                                 77840000
778500         FROM 1 BY 1                                              77850000
778600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               77860000
778700            OR (SQLCODE = +0)                                     77870000
778800            OR (SQLCODE = +100))                                  77880000
778900                                                                  77890000
779000         EXEC SQL                                                 77900000
779100             SELECT                                               77910000
779200                 PA.DISC_PAY_DAY_QTY                              77920000
779300                ,PT.DUE_DAY_QTY                                   77930000
779400                ,PT.DISCOUNT_DAYS_QTY                             77940000
779500                ,PT.DUE_DAY_FR_DTE_TXT                            77950000
779600             INTO                                                 77960000
779700                 :POAGMT-DISC-PAY-DAY-QTY                         77970000
779800                ,:PAYTRM-DUE-DAY-QTY                              77980000
779900                ,:PAYTRM-DISCOUNT-DAYS-QTY                        77990000
780000                ,:PAYTRM-DUE-DAY-FR-DTE-TXT                       78000000
780100             FROM                                                 78010000
780200                 TPOAGMT PA                                       78020000
780300                ,TPAYTRM PT                                       78030000
780400             WHERE PA.PO_NBR         = :ASC-KEY-PO-NBR            78040000
780500               AND PA.PAYT_TERM_ID   = PT.PAY_TERM_ID             78050000
780600               AND PA.AGRMT_TYP_ID   = '2'                        78060000
780700               AND PA.VER_STATUS_CDE = 'A'                        78070000
780800         END-EXEC                                                 78080000
780900                                                                  78090000
781000         EVALUATE TRUE                                            78100000
781100             WHEN SQLCODE = +0                                    78110000
781200             WHEN SQLCODE = +100                                  78120000
781300             WHEN SQLCODE = -904                                  78130000
781400             WHEN SQLCODE = -913                                  78140000
781500                 CONTINUE                                         78150000
781600                                                                  78160000
781700             WHEN SQLWARN0 NOT = SPACES                           78170000
781800             WHEN SQLCODE < ZERO                                  78180000
781900             WHEN SQLCODE > ZERO                                  78190000
782000                 MOVE '8151-GET-TERMS-DATA'                       78200000
782100                                   TO DP013-PARAGRAPH             78210000
782200                 MOVE 'SELECT ON TPOAGMT/TPAYTRM'                 78220000
782300                                   TO DP013-MESSAGE-TEXT (1)      78230000
782400                 MOVE SQLCA        TO DP013-SQLCA                 78240000
782500                 MOVE 'TPOAGMT'    TO DP013-DB2-TABLE-NAME (1)    78250000
782600                 MOVE 'TPAYTRM'    TO DP013-DB2-TABLE-NAME (2)    78260000
782700                 SET DP013-DB2-ABEND                              78270000
782800                     DP013-XCTL-DISPLAY-RESTART                   78280000
782900                                   TO TRUE                        78290000
783000                 PERFORM DP013-0000-PROCESS-ABEND                 78300000
783100         END-EVALUATE                                             78310000
783200     END-PERFORM.                                                 78320000
783300                                                                  78330000
783400     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        78340000
783500         MOVE '8151-GET-TERMS-DATA'                               78350000
783600                                   TO DP013-PARAGRAPH             78360000
783700         MOVE 'MAXIMUM RETRIES EXCEEDED ATTEMPTING TO SELECT'     78370000
783800                                   TO DP013-MESSAGE-TEXT (1)      78380000
783900         MOVE SQLCA                TO DP013-SQLCA                 78390000
784000         MOVE 'TPOAGMT'            TO DP013-DB2-TABLE-NAME (1)    78400000
784100         MOVE 'TPAYTRM'            TO DP013-DB2-TABLE-NAME (2)    78410000
784200         SET DP013-DB2-ABEND                                      78420000
784300             DP013-XCTL-DISPLAY-RESTART                           78430000
784400                                   TO TRUE                        78440000
784500         PERFORM DP013-0000-PROCESS-ABEND                         78450000
784600     END-IF.                                                      78460000
784700                                                                  78470000
784800     PERFORM 8152-GET-ADDL-TERMS-DATA.                            78480000
784900                                                                  78490000
785000/                                                                 78500000
785100 8152-GET-ADDL-TERMS-DATA.                                        78510000
785200                                                                  78520000
785300     MOVE ZERO TO PV-DISC-PAY-DAY-QTY.                            78530000
785400                                                                  78540000
785500     PERFORM                                                      78550000
785600         WITH TEST AFTER                                          78560000
785700         VARYING PV-RETRY-COUNTER                                 78570000
785800         FROM 1 BY 1                                              78580000
785900         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               78590000
786000            OR (SQLCODE = +0)                                     78600000
786100            OR (SQLCODE = +100))                                  78610000
786200                                                                  78620000
786300         EXEC SQL                                                 78630000
786400             SELECT                                               78640000
786500                 PA.DISC_PAY_DAY_QTY                              78650000
786600             INTO                                                 78660000
786700                 :PV-DISC-PAY-DAY-QTY                             78670000
786800             FROM                                                 78680000
786900                 TPOAGMT PA                                       78690000
787000             WHERE PA.PO_NBR         = :ASC-KEY-PO-NBR            78700000
787100               AND PA.VER_STATUS_CDE = 'A'                        78710000
787200               AND PA.AGRMT_TYP_ID   = '5'                        78720000
787300               AND PA.TYP_CDE        =  1                         78730000
787400         END-EXEC                                                 78740000
787500                                                                  78750000
787600         EVALUATE TRUE                                            78760000
787700             WHEN SQLCODE = +0                                    78770000
787800                ADD PV-DISC-PAY-DAY-QTY TO POAGMT-DISC-PAY-DAY-QTY78780000
787900             WHEN SQLCODE = +100                                  78790000
788000             WHEN SQLCODE = -904                                  78800000
788100             WHEN SQLCODE = -913                                  78810000
788200                 CONTINUE                                         78820000
788300                                                                  78830000
788400             WHEN SQLWARN0 NOT = SPACES                           78840000
788500             WHEN SQLCODE < ZERO                                  78850000
788600             WHEN SQLCODE > ZERO                                  78860000
788700                 MOVE '8152-GET-ADDL-TERMS-DATA'                  78870000
788800                                   TO DP013-PARAGRAPH             78880000
788900                 MOVE 'SELECT ON TPOAGMT        '                 78890000
789000                                   TO DP013-MESSAGE-TEXT (1)      78900000
789100                 MOVE SQLCA        TO DP013-SQLCA                 78910000
789200                 MOVE 'TPOAGMT'    TO DP013-DB2-TABLE-NAME (1)    78920000
789300                 MOVE SPACE        TO DP013-DB2-TABLE-NAME (2)    78930000
789400                 SET DP013-DB2-ABEND                              78940000
789500                     DP013-XCTL-DISPLAY-RESTART                   78950000
789600                                   TO TRUE                        78960000
789700                 PERFORM DP013-0000-PROCESS-ABEND                 78970000
789800         END-EVALUATE                                             78980000
789900     END-PERFORM.                                                 78990000
790000                                                                  79000000
790100     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        79010000
790200         MOVE '8152-GET-ADDL-TERMS-DATA'                          79020000
790300                                   TO DP013-PARAGRAPH             79030000
790400         MOVE 'MAXIMUM RETRIES EXCEEDED ATTEMPTING TO SELECT'     79040000
790500                                   TO DP013-MESSAGE-TEXT (1)      79050000
790600         MOVE SQLCA                TO DP013-SQLCA                 79060000
790700         MOVE 'TPOAGMT'            TO DP013-DB2-TABLE-NAME (1)    79070000
790800         MOVE SPACE                TO DP013-DB2-TABLE-NAME (2)    79080000
790900         SET DP013-DB2-ABEND                                      79090000
791000             DP013-XCTL-DISPLAY-RESTART                           79100000
791100                                   TO TRUE                        79110000
791200         PERFORM DP013-0000-PROCESS-ABEND                         79120000
791300     END-IF.                                                      79130000
791400/                                                                 79140000
791500 8200-TPREQIT-INSERT.                                             79150000
791600                                                                  79160000
791700     SET INSERT-NOT-SUCCESSFUL TO TRUE.                           79170000
791800                                                                  79180000
791900     MOVE PV-PAYREQ-PAYT-REQ-SEQ-NBR  TO PREQIT-PAYT-REQ-SEQ-NBR. 79190000
792000     MOVE 'EA'                     TO PREQIT-QTY-UNT-OF-MSMT.     79200000
792100                                                                  79210000
792200     PERFORM                                                      79220000
792300         WITH TEST AFTER                                          79230000
792400         VARYING PV-RETRY-COUNTER                                 79240000
792500         FROM 1 BY 1                                              79250000
792600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               79260000
792700             OR  INSERT-SUCCESSFUL)                               79270000
792800                                                                  79280000
792900         PERFORM 8210-GET-MAX-LNE-NBR                             79290000
793000                                                                  79300000
793100         EXEC SQL                                                 79310000
793200              INSERT INTO TPREQIT                                 79320000
793300                      ( PAYT_REQ_SEQ_NBR                          79330000
793400                       ,PAYT_REQ_LNE_NBR                          79340000
793500                       ,PAY_REQ_LNE_QTY                           79350000
793600                       ,QTY_UNT_OF_MSMT                           79360000
793700                       ,UNT_COST_AMT)                             79370000
793800              VALUES ( :PREQIT-PAYT-REQ-SEQ-NBR                   79380000
793900                      ,:PREQIT-PAYT-REQ-LNE-NBR                   79390000
794000                      ,:PREQIT-PAY-REQ-LNE-QTY                    79400000
794100                      ,:PREQIT-QTY-UNT-OF-MSMT                    79410000
794200                      ,:PREQIT-UNT-COST-AMT)                      79420000
794300         END-EXEC                                                 79430000
794400                                                                  79440000
794500         EVALUATE TRUE                                            79450000
794600             WHEN SQLCODE = +0                                    79460000
794700                  SET INSERT-SUCCESSFUL TO TRUE                   79470000
794800             WHEN SQLCODE = -904                                  79480000
794900             WHEN SQLCODE = -913                                  79490000
795000             WHEN SQLCODE = -803                                  79500000
795100                  CONTINUE                                        79510000
795200                                                                  79520000
795300             WHEN SQLWARN0 NOT = SPACES                           79530000
795400             WHEN SQLCODE < +0                                    79540000
795500             WHEN SQLCODE > +0                                    79550000
795600                  MOVE '8200-INSERT-TPREQIT'                      79560000
795700                                  TO DP013-PARAGRAPH              79570000
795800                  MOVE 'UNSUCCESSFUL INSERT'                      79580000
795900                                  TO DP013-MESSAGE-TEXT (1)       79590000
796000                  MOVE SQLCA      TO DP013-SQLCA                  79600000
796100                  MOVE 'TPREQIT ' TO DP013-DB2-TABLE-NAME (1)     79610000
796200                  SET DP013-DB2-ABEND                             79620000
796300                      DP013-XCTL-DISPLAY-RESTART                  79630000
796400                                  TO TRUE                         79640000
796500                  PERFORM DP013-0000-PROCESS-ABEND                79650000
796600         END-EVALUATE                                             79660000
796700     END-PERFORM.                                                 79670000
796800                                                                  79680000
796900     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        79690000
797000         MOVE '8200-INSERT-TPREQIT'                               79700000
797100                                  TO DP013-PARAGRAPH              79710000
797200         MOVE 'MAX RETRIES EXCEEDED FOR INSERT'                   79720000
797300                                  TO DP013-MESSAGE-TEXT (1)       79730000
797400         MOVE SQLCA               TO DP013-SQLCA                  79740000
797500         MOVE 'TPREQIT '          TO DP013-DB2-TABLE-NAME (1)     79750000
797600         SET DP013-DB2-ABEND                                      79760000
797700             DP013-XCTL-DISPLAY-RESTART                           79770000
797800                                  TO TRUE                         79780000
797900         PERFORM DP013-0000-PROCESS-ABEND                         79790000
798000     END-IF.                                                      79800000
798100                                                                  79810000
798200 8210-GET-MAX-LNE-NBR.                                            79820000
798300                                                                  79830000
798400     PERFORM                                                      79840000
798500         WITH TEST AFTER                                          79850000
798600         VARYING PV-RETRY-COUNTER                                 79860000
798700         FROM 1 BY 1                                              79870000
798800         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               79880000
798900            OR (SQLCODE = +0)                                     79890000
799000            OR (SQLCODE = -305))                                  79900000
799100                                                                  79910000
799200         EXEC SQL                                                 79920000
799300           SELECT  MAX(PAYT_REQ_LNE_NBR)                          79930000
799400            INTO   :PREQIT-PAYT-REQ-LNE-NBR                       79940000
799500             FROM   TPREQIT                                       79950000
799600            WHERE   PAYT_REQ_SEQ_NBR = :PV-PAYREQ-PAYT-REQ-SEQ-NBR79960000
799700         END-EXEC                                                 79970000
799800                                                                  79980000
799900         EVALUATE TRUE                                            79990000
800000             WHEN SQLCODE = +0                                    80000000
800100                 ADD  +1 TO PREQIT-PAYT-REQ-LNE-NBR               80010000
800200             WHEN SQLCODE = -305                                  80020000
800300                 MOVE +1 TO PREQIT-PAYT-REQ-LNE-NBR               80030000
800400             WHEN SQLCODE = -904                                  80040000
800500             WHEN SQLCODE = -913                                  80050000
800600                 CONTINUE                                         80060000
800700             WHEN SQLWARN0 NOT = SPACES                           80070000
800800             WHEN SQLCODE < ZERO                                  80080000
800900             WHEN SQLCODE > ZERO                                  80090000
801000                 MOVE '8210-GET-MAX-LNE-NBR'                      80100000
801100                                   TO DP013-PARAGRAPH             80110000
801200                 MOVE 'SELECT ON TPREQIT'                         80120000
801300                                   TO DP013-MESSAGE-TEXT (1)      80130000
801400                 MOVE SQLCA        TO DP013-SQLCA                 80140000
801500                 MOVE 'TINVOIC'    TO DP013-DB2-TABLE-NAME (1)    80150000
801600                 SET DP013-DB2-ABEND                              80160000
801700                     DP013-XCTL-DISPLAY-RESTART                   80170000
801800                                   TO TRUE                        80180000
801900                 PERFORM DP013-0000-PROCESS-ABEND                 80190000
802000         END-EVALUATE                                             80200000
802100     END-PERFORM.                                                 80210000
802200                                                                  80220000
802300     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        80230000
802400         MOVE '8210-SELECT-TINVOIC'                               80240000
802500                                   TO DP013-PARAGRAPH             80250000
802600         MOVE 'MAXIMUM RETRIES EXCEEDED ATTEMPTING TO SELECT'     80260000
802700                                   TO DP013-MESSAGE-TEXT (1)      80270000
802800         MOVE SQLCA                TO DP013-SQLCA                 80280000
802900         MOVE 'TPREQIT'            TO DP013-DB2-TABLE-NAME (1)    80290000
803000         SET DP013-DB2-ABEND                                      80300000
803100             DP013-XCTL-DISPLAY-RESTART                           80310000
803200                                   TO TRUE                        80320000
803300         PERFORM DP013-0000-PROCESS-ABEND                         80330000
803400     END-IF.                                                      80340000
803500/                                                                 80350000
803600 8300-TMIITEM-INSERT.                                             80360000
803700                                                                  80370000
803800     INITIALIZE DCLTMIITEM.                                       80380000
803900                                                                  80390000
804000     MOVE PV-PAYREQ-PAYT-REQ-SEQ-NBR  TO MIITEM-PAYT-REQ-SEQ-NBR. 80400000
804100     MOVE PREQIT-PAYT-REQ-LNE-NBR  TO MIITEM-PAYT-REQ-LNE-NBR.    80410000
804200     MOVE 'I'                      TO MIITEM-UNT-COST-SEL-CDE.    80420000
804300     MOVE DK-PO-NBR                TO MIITEM-PO-NBR.              80430000
804400     IF T-KEY-PO-LNE-NBR(PO-IDX) = +0                             80440000
804500         MOVE -1                   TO MIITEM-PO-LNE-NBR-NN        80450000
804600     ELSE                                                         80460000
804700         MOVE +1                   TO MIITEM-PO-LNE-NBR-NN        80470000
804800     END-IF                                                       80480000
804900     MOVE T-KEY-PO-LNE-NBR(PO-IDX) TO MIITEM-PO-LNE-NBR.          80490000
805000     MOVE -1                       TO MIITEM-VER-NBR-NN.          80500000
805100                                                                  80510000
805200     PERFORM                                                      80520000
805300         WITH TEST AFTER                                          80530000
805400         VARYING PV-RETRY-COUNTER                                 80540000
805500         FROM 1 BY 1                                              80550000
805600         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               80560000
805700             OR (SQLCODE = +0))                                   80570000
805800                                                                  80580000
805900         EXEC SQL                                                 80590000
806000              INSERT INTO TMIITEM                                 80600000
806100                      ( PAYT_REQ_SEQ_NBR                          80610000
806200                       ,PAYT_REQ_LNE_NBR                          80620000
806300                       ,UNT_COST_SEL_CDE                          80630000
806400                       ,PO_NBR                                    80640000
806500                       ,VER_NBR                                   80650000
806600                       ,PO_LNE_NBR)                               80660000
806700              VALUES ( :MIITEM-PAYT-REQ-SEQ-NBR                   80670000
806800                      ,:MIITEM-PAYT-REQ-LNE-NBR                   80680000
806900                      ,:MIITEM-UNT-COST-SEL-CDE                   80690000
807000                      ,:MIITEM-PO-NBR                             80700000
807100                      ,:MIITEM-VER-NBR                            80710000
807200                          :MIITEM-VER-NBR-NN                      80720000
807300                      ,:MIITEM-PO-LNE-NBR                         80730000
807400                          :MIITEM-PO-LNE-NBR-NN )                 80740000
807500         END-EXEC                                                 80750000
807600                                                                  80760000
807700         EVALUATE TRUE                                            80770000
807800             WHEN SQLCODE = +0                                    80780000
807900             WHEN SQLCODE = -904                                  80790000
808000             WHEN SQLCODE = -913                                  80800000
808100                  CONTINUE                                        80810000
808200                                                                  80820000
808300             WHEN SQLWARN0 NOT = SPACES                           80830000
808400             WHEN SQLCODE < +0                                    80840000
808500             WHEN SQLCODE > +0                                    80850000
808600                  MOVE '8300-INSERT-TMIITEM'                      80860000
808700                                  TO DP013-PARAGRAPH              80870000
808800                  MOVE 'UNSUCCESSFUL INSERT'                      80880000
808900                                  TO DP013-MESSAGE-TEXT (1)       80890000
809000                  MOVE SQLCA      TO DP013-SQLCA                  80900000
809100                  MOVE 'TMIITEM ' TO DP013-DB2-TABLE-NAME (1)     80910000
809200                  SET DP013-DB2-ABEND                             80920000
809300                      DP013-XCTL-DISPLAY-RESTART                  80930000
809400                                  TO TRUE                         80940000
809500                  PERFORM DP013-0000-PROCESS-ABEND                80950000
809600         END-EVALUATE                                             80960000
809700     END-PERFORM.                                                 80970000
809800                                                                  80980000
809900     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        80990000
810000         MOVE '8300-INSERT-TMIITEM'                               81000000
810100                                  TO DP013-PARAGRAPH              81010000
810200         MOVE 'MAX RETRIES EXCEEDED FOR INSERT'                   81020000
810300                                  TO DP013-MESSAGE-TEXT (1)       81030000
810400         MOVE SQLCA               TO DP013-SQLCA                  81040000
810500         MOVE 'TMIITEM '          TO DP013-DB2-TABLE-NAME (1)     81050000
810600         SET DP013-DB2-ABEND                                      81060000
810700             DP013-XCTL-DISPLAY-RESTART                           81070000
810800                                  TO TRUE                         81080000
810900         PERFORM DP013-0000-PROCESS-ABEND                         81090000
811000     END-IF.                                                      81100000
811100                                                                  81110000
811200/                                                                 81120000
811300 8400-NULL-LNE-NBR-PROCESSING.                                    81130000
811400                                                                  81140000
811500     MOVE T-PAYT-REQ-SEQ-NBR (1) TO DK-PAYT-REQ-SEQ-NBR.          81150000
811600                                                                  81160000
811700     PERFORM VARYING IH-IDX FROM +1 BY +1                         81170000
811800         UNTIL T-IH-PAYT-REQ-SEQ-NBR (IH-IDX) =                   81180000
811900               DK-PAYT-REQ-SEQ-NBR                                81190000
812000     END-PERFORM.                                                 81200000
812100                                                                  81210000
812200     PERFORM 8401-OPEN-NULL-LNE-NBR-CSR.                          81220000
812300                                                                  81230000
812400     SET ASC-ITEMS-LEFT-ON-DB TO TRUE.                            81240000
812500                                                                  81250000
812600     PERFORM                                                      81260000
812700         VARYING PV-READ-COUNT                                    81270000
812800         FROM 1 BY 1                                              81280000
812900         UNTIL ((PV-READ-COUNT > PC-MAX-ITEMS)                    81290000
813000            OR (ASC-NO-ITEMS-LEFT-ON-DB))                         81300000
813100                                                                  81310000
813200         PERFORM 8410-FETCH-TPREQIT                               81320000
813300                                                                  81330000
813400         IF  ASC-ITEMS-LEFT-ON-DB                                 81340000
813500             SET PO-IDX TO +1                                     81350000
813600             PERFORM 8000-PROCESS-REMAINDER-INVOICE               81360000
813700         END-IF                                                   81370000
813800     END-PERFORM.                                                 81380000
813900                                                                  81390000
814000     EXEC SQL                                                     81400000
814100        CLOSE PREQIT_NULL_PO_CSR                                  81410000
814200     END-EXEC.                                                    81420000
814300/                                                                 81430000
814400 8401-OPEN-NULL-LNE-NBR-CSR.                                      81440000
814500                                                                  81450000
814600     MOVE '8401-OPEN-CURSOR'   TO DP013-PARAGRAPH                 81460000
814700     MOVE 'TPREQIT'            TO DP013-DB2-TABLE-NAME (1)        81470000
814800                                                                  81480000
814900     PERFORM                                                      81490000
815000         WITH TEST AFTER                                          81500000
815100         VARYING PV-RETRY-COUNTER                                 81510000
815200         FROM 1 BY 1                                              81520000
815300         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               81530000
815400            OR (SQLCODE = +0))                                    81540000
815500                                                                  81550000
815600         EXEC SQL                                                 81560000
815700             OPEN  PREQIT_NULL_PO_CSR                             81570000
815800         END-EXEC                                                 81580000
815900                                                                  81590000
816000         EVALUATE TRUE                                            81600000
816100             WHEN SQLCODE = +0                                    81610000
816200                  CONTINUE                                        81620000
816300             WHEN SQLCODE = -904                                  81630000
816400             WHEN SQLCODE = -913                                  81640000
816500                  CONTINUE                                        81650000
816600             WHEN SQLWARN0 NOT = SPACE                            81660000
816700             WHEN SQLCODE  NOT = +0                               81670000
816800                  MOVE 'OPEN CURSOR'                              81680000
816900                                   TO DP013-MESSAGE-TEXT (1)      81690000
817000                  MOVE SQLCA       TO DP013-SQLCA                 81700000
817100                  SET DP013-DB2-ABEND                             81710000
817200                                   TO TRUE                        81720000
817300                  PERFORM DP013-0000-PROCESS-ABEND                81730000
817400         END-EVALUATE                                             81740000
817500     END-PERFORM.                                                 81750000
817600/                                                                 81760000
817700*----------------------------------------------------------------*81770000
817800*    FETCH A TPREQIT ROW                                         *81780000
817900*----------------------------------------------------------------*81790000
818000                                                                  81800000
818100 8410-FETCH-TPREQIT.                                              81810000
818200                                                                  81820000
818300     EXEC SQL                                                     81830000
818400         FETCH PREQIT_NULL_PO_CSR                                 81840000
818500          INTO :PREQIT-PAYT-REQ-SEQ-NBR                           81850000
818600              ,:PREQIT-PAYT-REQ-LNE-NBR                           81860000
818700              ,:PREQIT-PAY-REQ-LNE-QTY                            81870000
818800              ,:PREQIT-UNT-COST-AMT                               81880000
818900     END-EXEC.                                                    81890000
819000                                                                  81900000
819100     EVALUATE TRUE                                                81910000
819200         WHEN SQLCODE = +0                                        81920000
819300              CONTINUE                                            81930000
819400                                                                  81940000
819500         WHEN SQLCODE = +100                                      81950000
819600              SET ASC-NO-ITEMS-LEFT-ON-DB                         81960000
819700                                   TO TRUE                        81970000
819800                                                                  81980000
819900         WHEN SQLWARN0 NOT = SPACE                                81990000
820000         WHEN SQLCODE < +0                                        82000000
820100         WHEN SQLCODE > +0                                        82010000
820200              MOVE '8410-FETCH-TPREQIT'                           82020000
820300                                   TO DP013-PARAGRAPH             82030000
820400              MOVE 'FETCH TPREQIT CURSOR'                         82040000
820500                                   TO DP013-MESSAGE-TEXT (1)      82050000
820600              MOVE SQLCA           TO DP013-SQLCA                 82060000
820700              MOVE 'TPREQIT'       TO DP013-DB2-TABLE-NAME (1)    82070000
820800              SET DP013-DB2-ABEND  TO TRUE                        82080000
820900              PERFORM DP013-0000-PROCESS-ABEND                    82090000
821000     END-EVALUATE.                                                82100000
821100                                                                  82110000
821200/                                                                 82120000
821300**  AN ENTRY IS MADE TO THE ALCHRG TABLE TO INCLUDE THE WEIGHTED  82130000
821400**  DISCOUNT PERCENT USED WHEN THE REMAINDER INVOICE IS CREATED.  82140000
821500                                                                  82150000
821600 8600-TALCHRG-INSERT.                                             82160000
821700                                                                  82170000
821800     MOVE DK-PO-NBR               TO ALCHRG-PO-NBR.               82180000
821900     MOVE PV-PAYT-REQ-SEQ-NBR-X   TO ALCHRG-INVC-ID.              82190000
822000     MOVE 'A'                     TO ALCHRG-ALW-CHRG-TYP-CDE.     82200000
822100     MOVE SPACES                  TO ALCHRG-ALW-CHRG-SER-CDE.     82210000
822200     MOVE +0                      TO ALCHRG-ALW-CHRG-AMT.         82220000
822300                                                                  82230000
822400     PERFORM                                                      82240000
822500         WITH TEST AFTER                                          82250000
822600         VARYING PV-RETRY-COUNTER                                 82260000
822700         FROM 1 BY 1                                              82270000
822800         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               82280000
822900             OR (SQLCODE = +0))                                   82290000
823000                                                                  82300000
823100         EXEC SQL                                                 82310000
823200              INSERT INTO TALCHRG                                 82320000
823300                     ( PO_NBR                                     82330000
823400                      ,INVC_ID                                    82340000
823500                      ,ALW_CHRG_SEQ_NBR                           82350000
823600                      ,ALW_CHRG_TYP_CDE                           82360000
823700                      ,ALW_CHRG_CDE                               82370000
823800                      ,ALW_CHRG_SER_CDE                           82380000
823900                      ,ALW_CHRG_PCT                               82390000
824000                      ,ALW_CHRG_AMT )                             82400000
824100              VALUES ( :ALCHRG-PO-NBR                             82410000
824200                      ,:ALCHRG-INVC-ID                            82420000
824300                      ,:ALCHRG-ALW-CHRG-SEQ-NBR                   82430000
824400                      ,:ALCHRG-ALW-CHRG-TYP-CDE                   82440000
824500                      ,:ALCHRG-ALW-CHRG-CDE                       82450000
824600                      ,:ALCHRG-ALW-CHRG-SER-CDE                   82460000
824700                      ,:ALCHRG-ALW-CHRG-PCT                       82470000
824800                      ,:ALCHRG-ALW-CHRG-AMT )                     82480000
824900         END-EXEC                                                 82490000
825000                                                                  82500000
825100         EVALUATE TRUE                                            82510000
825200             WHEN SQLCODE = +0                                    82520000
825300             WHEN SQLCODE = -904                                  82530000
825400             WHEN SQLCODE = -913                                  82540000
825500                  CONTINUE                                        82550000
825600                                                                  82560000
825700             WHEN SQLWARN0 NOT = SPACES                           82570000
825800             WHEN SQLCODE < +0                                    82580000
825900             WHEN SQLCODE > +0                                    82590000
826000                  MOVE '8600-TALCHRG-INSERT'                      82600000
826100                                  TO DP013-PARAGRAPH              82610000
826200                  MOVE 'UNSUCCESSFUL INSERT FOR TALCHRG'          82620000
826300                                  TO DP013-MESSAGE-TEXT (1)       82630000
826400                  MOVE SQLCA      TO DP013-SQLCA                  82640000
826500                  MOVE 'TALCHRG ' TO DP013-DB2-TABLE-NAME (1)     82650000
826600                  SET DP013-DB2-ABEND                             82660000
826700                      DP013-XCTL-DISPLAY-RESTART                  82670000
826800                                  TO TRUE                         82680000
826900                  PERFORM DP013-0000-PROCESS-ABEND                82690000
827000         END-EVALUATE                                             82700000
827100     END-PERFORM.                                                 82710000
827200                                                                  82720000
827300     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        82730000
827400         MOVE '8600-TALCHRG-INSERT'                               82740000
827500                                  TO DP013-PARAGRAPH              82750000
827600         MOVE 'MAX RETRIES EXCEEDED FOR INSERT ON TALCHRG'        82760000
827700                                  TO DP013-MESSAGE-TEXT (1)       82770000
827800         MOVE SQLCA               TO DP013-SQLCA                  82780000
827900         MOVE 'TALCHRG '          TO DP013-DB2-TABLE-NAME (1)     82790000
828000         SET DP013-DB2-ABEND                                      82800000
828100             DP013-XCTL-DISPLAY-RESTART                           82810000
828200                                  TO TRUE                         82820000
828300         PERFORM DP013-0000-PROCESS-ABEND                         82830000
828400     END-IF.                                                      82840000
828500                                                                  82850000
828600/                                                                 82860000
828700 8810-OPEN-TMIITEM-CSR.                                           82870000
828800                                                                  82880000
828900     PERFORM                                                      82890000
829000         WITH TEST AFTER                                          82900000
829100         VARYING PV-RETRY-COUNTER                                 82910000
829200         FROM 1 BY 1                                              82920000
829300         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               82930000
829400            OR (SQLCODE = +0))                                    82940000
829500                                                                  82950000
829600         EXEC SQL                                                 82960000
829700             OPEN  TMIITEM_CSR                                    82970000
829800         END-EXEC                                                 82980000
829900                                                                  82990000
830000         EVALUATE TRUE                                            83000000
830100             WHEN SQLCODE = +0                                    83010000
830200                  CONTINUE                                        83020000
830300             WHEN SQLCODE = -904                                  83030000
830400             WHEN SQLCODE = -913                                  83040000
830500                  CONTINUE                                        83050000
830600             WHEN SQLWARN0 NOT = SPACE                            83060000
830700             WHEN SQLCODE  NOT = +0                               83070000
830800                  MOVE '8810-OPEN-TMIITEM-CSR'                    83080000
830900                                   TO DP013-PARAGRAPH             83090000
831000                  MOVE 'OPEN CURSOR'                              83100000
831100                                   TO DP013-MESSAGE-TEXT (1)      83110000
831200                  MOVE SQLCA       TO DP013-SQLCA                 83120000
831300                  SET DP013-DB2-ABEND                             83130000
831400                                   TO TRUE                        83140000
831500                  PERFORM DP013-0000-PROCESS-ABEND                83150000
831600         END-EVALUATE                                             83160000
831700     END-PERFORM.                                                 83170000
831800/                                                                 83180000
831900 8820-PROCESS-UNT-COST-SEL-CDE.                                   83190000
832000                                                                  83200000
832100     PERFORM 8830-FETCH-TMIITEM-CSR.                              83210000
832200                                                                  83220000
832300     IF SQLCODE = +0                                              83230000
832400        PERFORM 8840-SET-UNT-COST-SEL-CDE                         83240000
832500     END-IF.                                                      83250000
832600                                                                  83260000
832700/                                                                 83270000
832800 8830-FETCH-TMIITEM-CSR.                                          83280000
832900                                                                  83290000
833000     EXEC SQL                                                     83300000
833100         FETCH TMIITEM_CSR                                        83310000
833200          INTO :PV-PURITM-PO-LNE-NBR                              83320000
833300              ,:PV-PURITM-PRD-1ST-COST-AMT                        83330000
833400              ,:PV-INVOIC-PO-NBR                                  83340000
833500              ,:PV-INVOIC-PAYT-REQ-SEQ-NBR                        83350000
833600              ,:PV-MIITEM-PO-NBR                                  83360000
833700              ,:PV-MIITEM-PAYT-REQ-SEQ-NBR                        83370000
833800              ,:PV-MIITEM-PAYT-REQ-LNE-NBR                        83380000
833900              ,:PV-MIITEM-UNT-COST-SEL-CDE                        83390000
834000              ,:PV-MIITEM-PO-LNE-NBR                              83400000
834100              ,:PV-PREQIT-UNT-COST-AMT                            83410000
834200     END-EXEC.                                                    83420000
834300                                                                  83430000
834400     EVALUATE TRUE                                                83440000
834500         WHEN SQLCODE = +0                                        83450000
834600              CONTINUE                                            83460000
834700                                                                  83470000
834800         WHEN SQLCODE = +100                                      83480000
834900              SET ASC-NO-ITEMS-LEFT-ON-DB                         83490000
835000                                   TO TRUE                        83500000
835100                                                                  83510000
835200         WHEN SQLWARN0 NOT = SPACE                                83520000
835300         WHEN SQLCODE < +0                                        83530000
835400         WHEN SQLCODE > +0                                        83540000
835500              MOVE '8830-FETCH-TMIITEM-CSR'                       83550000
835600                                   TO DP013-PARAGRAPH             83560000
835700              MOVE 'FETCH TMIITEM CURSOR'                         83570000
835800                                   TO DP013-MESSAGE-TEXT (1)      83580000
835900              MOVE SQLCA           TO DP013-SQLCA                 83590000
836000              MOVE 'TINVOIC'       TO DP013-DB2-TABLE-NAME (1)    83600000
836100              MOVE 'TPREQIT'       TO DP013-DB2-TABLE-NAME (2)    83610000
836200              MOVE 'TMIITEM'       TO DP013-DB2-TABLE-NAME (3)    83620000
836300              MOVE 'TPURITM'       TO DP013-DB2-TABLE-NAME (4)    83630000
836400              SET DP013-DB2-ABEND  TO TRUE                        83640000
836500              PERFORM DP013-0000-PROCESS-ABEND                    83650000
836600     END-EVALUATE.                                                83660000
836700                                                                  83670000
836800/                                                                 83680000
836900 8840-SET-UNT-COST-SEL-CDE.                                       83690000
837000                                                                  83700000
837100     IF PV-PURITM-PRD-1ST-COST-AMT < PV-PREQIT-UNT-COST-AMT       83710000
837200        MOVE 'P' TO PV-NEW-UNT-COST-SEL-CDE                       83720000
837300     ELSE                                                         83730000
837400        MOVE 'I' TO PV-NEW-UNT-COST-SEL-CDE                       83740000
837500     END-IF.                                                      83750000
837600                                                                  83760000
837700     IF PV-NEW-UNT-COST-SEL-CDE = PV-MIITEM-UNT-COST-SEL-CDE      83770000
837800        CONTINUE                                                  83780000
837900     ELSE                                                         83790000
838000        PERFORM 8850-UPDATE-TMIITEM                               83800000
838100     END-IF.                                                      83810000
838200                                                                  83820000
838300/                                                                 83830000
838400 8850-UPDATE-TMIITEM.                                             83840000
838500                                                                  83850000
838600     PERFORM                                                      83860000
838700         WITH TEST AFTER                                          83870000
838800         VARYING PV-RETRY-COUNTER                                 83880000
838900         FROM 1 BY 1                                              83890000
839000         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               83900000
839100             OR (SQLCODE = +0))                                   83910000
839200                                                                  83920000
839300         EXEC SQL                                                 83930000
839400             UPDATE TMIITEM                                       83940000
839500                SET UNT_COST_SEL_CDE = :PV-NEW-UNT-COST-SEL-CDE   83950000
839600              WHERE PO_NBR           = :PV-MIITEM-PO-NBR          83960000
839700                AND PAYT_REQ_SEQ_NBR = :PV-MIITEM-PAYT-REQ-SEQ-NBR83970000
839800                AND PAYT_REQ_LNE_NBR = :PV-MIITEM-PAYT-REQ-LNE-NBR83980000
839900                AND PO_LNE_NBR       = :PV-MIITEM-PO-LNE-NBR      83990000
840000         END-EXEC                                                 84000000
840100                                                                  84010000
840200         EVALUATE TRUE                                            84020000
840300             WHEN SQLCODE = +0                                    84030000
840400             WHEN SQLCODE = -904                                  84040000
840500             WHEN SQLCODE = -913                                  84050000
840600                  CONTINUE                                        84060000
840700                                                                  84070000
840800             WHEN SQLWARN0 NOT = SPACES                           84080000
840900             WHEN SQLCODE < +0                                    84090000
841000             WHEN SQLCODE > +0                                    84100000
841100                  MOVE '8850-UPDATE-TMIITEM'                      84110000
841200                                  TO DP013-PARAGRAPH              84120000
841300                  MOVE 'UNSUCCESSFUL UPDATE'                      84130000
841400                                  TO DP013-MESSAGE-TEXT (1)       84140000
841500                  MOVE SQLCA      TO DP013-SQLCA                  84150000
841600                  MOVE 'TMIITEM ' TO DP013-DB2-TABLE-NAME (1)     84160000
841700                  SET DP013-DB2-ABEND                             84170000
841800                      DP013-XCTL-DISPLAY-RESTART                  84180000
841900                                  TO TRUE                         84190000
842000                  PERFORM DP013-0000-PROCESS-ABEND                84200000
842100         END-EVALUATE                                             84210000
842200     END-PERFORM.                                                 84220000
842300                                                                  84230000
842400     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES                        84240000
842500         MOVE '8850-UPDATE-TMIITEM'                               84250000
842600                                  TO DP013-PARAGRAPH              84260000
842700         MOVE 'MAX RETRIES EXCEEDED FOR UPDATE'                   84270000
842800                                  TO DP013-MESSAGE-TEXT (1)       84280000
842900         MOVE SQLCA               TO DP013-SQLCA                  84290000
843000         MOVE 'TMIITEM '          TO DP013-DB2-TABLE-NAME (1)     84300000
843100         SET DP013-DB2-ABEND                                      84310000
843200             DP013-XCTL-DISPLAY-RESTART                           84320000
843300                                  TO TRUE                         84330000
843400         PERFORM DP013-0000-PROCESS-ABEND                         84340000
843500     END-IF.                                                      84350000
843600                                                                  84360000
843700/                                                                 84370000
843800 8860-CLOSE-TMIITEM-CSR.                                          84380000
843900                                                                  84390000
844000     EXEC SQL                                                     84400000
844100        CLOSE TMIITEM_CSR                                         84410000
844200     END-EXEC.                                                    84420000
844300                                                                  84430000
844400/                                                                 84440000
844500 9000-FORMAT-COMMAREA.                                            84450000
844600                                                                  84460000
844700     INITIALIZE AP300-KEY-DATA.                                   84470000
844800                                                                  84480000
844900     MOVE ASC-KEY-PO-NBR      TO AP300-PO-NBR.                    84490000
845000     MOVE ASC-KEY-PO-LNE-NBR  TO AP300-PO-LNE-NBR.                84500000
845100     MOVE ASC-KEY-STR-NBR     TO AP300-STORE-NBR.                 84510000
845200     MOVE ASC-KEY-DC-NBR      TO AP300-DC-NBR.                    84520000
845300     MOVE ASC-MTCH-LVL-CDE    TO AP300-MTCH-LVL-IND.              84530000
845400/                                                                 84540000
845500******************************************************************84550000
845600* READ AN ITEM FROM THE INPUT SELECTED ITEMS TEMP STORAGE QUEUE. *84560000
845700******************************************************************84570000
845800 9100-READ-SEL-QUEUE.                                             84580000
845900     EXEC CICS                                                    84590000
846000         READQ TS                                                 84600000
846100             QUEUE (ASC-SEL-QUEUE-NAME-IN)                        84610000
846200             INTO  (AP301-INVC-LIST-TS-RCRD)                      84620000
846300             ITEM  (ASC-SEL-ITEM)                                 84630000
846400             RESP  (PV-CICS-RESP)                                 84640000
846500     END-EXEC.                                                    84650000
846600                                                                  84660000
846700     IF PV-CICS-RESP EQUAL DFHRESP(NORMAL)                        84670000
846800         CONTINUE                                                 84680000
846900     ELSE                                                         84690000
847000         SET DP013-LOGIC-ABEND                                    84700000
847100             DP013-NO-ROLLBACK     TO TRUE                        84710000
847200         MOVE '9100-READ-SEL-QUEUE'                               84720000
847300                                   TO DP013-PARAGRAPH             84730000
847400         MOVE 'ATTEMPTING TO READ TO LIST SELECTIONS TS QUEUE'    84740000
847500                                   TO DP013-MESSAGE-TEXT (1)      84750000
847600         PERFORM DP013-0000-PROCESS-ABEND                         84760000
847700     END-IF.                                                      84770000
847800                                                                  84780000
847900/                                                                 84790000
848000******************************************************************84800000
848100* UPDATE AN ITEM IN THE INPUT SELECTED ITEMS TEMP STORAGE QUEUE. *84810000
848200******************************************************************84820000
848300 9200-REWRITE-LIST-QUEUE.                                         84830000
848400     EXEC CICS                                                    84840000
848500          WRITEQ TS                                               84850000
848600              QUEUE   (ASC-SEL-QUEUE-NAME-IN)                     84860000
848700              FROM    (AP301-INVC-LIST-TS-RCRD)                   84870000
848800              ITEM    (ASC-SEL-ITEM)                              84880000
848900              RESP    (PV-CICS-RESP)                              84890000
849000              REWRITE                                             84900000
849100     END-EXEC.                                                    84910000
849200                                                                  84920000
849300     IF PV-CICS-RESP NOT EQUAL DFHRESP(NORMAL)                    84930000
849400         SET DP013-CICS-ABEND                                     84940000
849500             DP013-NO-ROLLBACK     TO TRUE                        84950000
849600         MOVE '9200-REWRITE-LIST-QUEUE'                           84960000
849700                                   TO DP013-PARAGRAPH             84970000
849800         MOVE 'ATTEMPTING TO REWRITE THE LIST SELECTIONS QUEUE'   84980000
849900                                   TO DP013-MESSAGE-TEXT (1)      84990000
850000         PERFORM DP013-0000-PROCESS-ABEND                         85000000
850100     END-IF.                                                      85010000
850200                                                                  85020000
850300/                                                                 85030000
850400*----------------------------------------------------------------*85040000
850500*    READ THE STORE TEMP QUEUE RECORD                            *85050000
850600*----------------------------------------------------------------*85060000
850700                                                                  85070000
850800 9300-READ-STORE-QUEUE.                                           85080000
850900                                                                  85090000
851000     MOVE +1 TO PV-STORE-ITEM.                                    85100000
851100                                                                  85110000
851200     EXEC CICS                                                    85120000
851300          READQ TS                                                85130000
851400              QUEUE (ASC-STORE-QUEUE-NAME)                        85140000
851500              INTO  (SQW-STORE-TABLE)                             85150000
851600              ITEM  (PV-STORE-ITEM)                               85160000
851700              RESP  (PV-CICS-RESP)                                85170000
851800     END-EXEC.                                                    85180000
851900                                                                  85190000
852000     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          85200000
852100         CONTINUE                                                 85210000
852200     ELSE                                                         85220000
852300         SET DP013-CICS-ABEND      TO TRUE                        85230000
852400         SET DP013-NO-ROLLBACK     TO TRUE                        85240000
852500         MOVE '9300-READ-STORE-QUEUE'                             85250000
852600                                   TO DP013-PARAGRAPH             85260000
852700         MOVE 'ATTEMPTING TO READ STORE ITEMS QUEUE'              85270000
852800                                   TO DP013-MESSAGE-TEXT(1)       85280000
852900         PERFORM DP013-0000-PROCESS-ABEND                         85290000
853000     END-IF.                                                      85300000
853100                                                                  85310000
853200/                                                                 85320000
853300*----------------------------------------------------------------*85330000
853400*    WRITE THE STORE TEMP STORAGE QUEUE.                          85340000
853500*----------------------------------------------------------------*85350000
853600                                                                  85360000
853700 9400-WRITE-STORE-QUEUE.                                          85370000
853800                                                                  85380000
853900     MOVE +1 TO PV-STORE-ITEM.                                    85390000
854000                                                                  85400000
854100     EXEC CICS                                                    85410000
854200          WRITEQ TS                                               85420000
854300              QUEUE (ASC-STORE-QUEUE-NAME)                        85430000
854400              FROM  (SQW-STORE-TABLE)                             85440000
854500              ITEM  (PV-STORE-ITEM)                               85450000
854600              RESP  (PV-CICS-RESP)                                85460000
854700     END-EXEC.                                                    85470000
854800                                                                  85480000
854900     IF  PV-CICS-RESP = DFHRESP (NORMAL)                          85490000
855000         CONTINUE                                                 85500000
855100     ELSE                                                         85510000
855200         SET DP013-CICS-ABEND      TO TRUE                        85520000
855300         SET DP013-NO-ROLLBACK     TO TRUE                        85530000
855400         MOVE '9400-WRITE-STORE-QUEUE'                            85540000
855500                                   TO DP013-PARAGRAPH             85550000
855600         MOVE 'ATTEMPTING TO WRITE STORE TEMP STORAGE QUEUE'      85560000
855700                                   TO DP013-MESSAGE-TEXT(1)       85570000
855800         PERFORM DP013-0000-PROCESS-ABEND                         85580000
855900     END-IF.                                                      85590000
856000                                                                  85600000
856100/                                                                 85610000
856200*----------------------------------------------------------------*85620000
856300*  DELETE THE STORE TEMP STORAGE QUEUE.                          *85630000
856400*----------------------------------------------------------------*85640000
856500 9500-DELETE-STORE-QUEUE.                                         85650000
856600                                                                  85660000
856700     EXEC CICS                                                    85670000
856800         DELETEQ TS                                               85680000
856900           QUEUE (ASC-STORE-QUEUE-NAME)                           85690000
857000            RESP (PV-CICS-RESP)                                   85700000
857100     END-EXEC.                                                    85710000
857200                                                                  85720000
857300     IF (PV-CICS-RESP = DFHRESP(NORMAL)) OR                       85730000
857400        (PV-CICS-RESP = DFHRESP(QIDERR))                          85740000
857500         CONTINUE                                                 85750000
857600     ELSE                                                         85760000
857700         SET DP013-CICS-ABEND      TO TRUE                        85770000
857800         SET DP013-NO-ROLLBACK     TO TRUE                        85780000
857900                                                                  85790000
858000         MOVE '9500-DELETE-STORE-QUEUE'                           85800000
858100                                   TO DP013-PARAGRAPH             85810000
858200         MOVE 'ERROR TRYING TO DELETE STORE TEMP STORAGE QUEUE'   85820000
858300                                   TO DP013-MESSAGE-TEXT (1)      85830000
858400         PERFORM DP013-0000-PROCESS-ABEND                         85840000
858500     END-IF.                                                      85850000
858600                                                                  85860000
858700/                                                                 85870000
858800*----------------------------------------------------------------*85880000
858900*    ABEND PROCESSOR MODULE                                      *85890000
859000*----------------------------------------------------------------*85900000
859100                                                                  85910000
859200     COPY DPPD013.                                                85920000
859300                                                                  85930060
859400*--------------------------------------------------------------*  85940060
859500* COPYBOOK FOR SEPHORA PROCESSES                               *  85950060
859600*--------------------------------------------------------------*  85960060
859700     COPY APPD021.                                                85970060
859800                                                                  85980060
