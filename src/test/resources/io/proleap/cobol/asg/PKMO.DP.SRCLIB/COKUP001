000100* ------------------------------------------------------------- * 00010000
000200 IDENTIFICATION DIVISION.                                         00020000
000300* ------------------------------------------------------------- * 00030000
000400 PROGRAM-ID.      COKUP001.                                       00040000
000500 AUTHOR.          LYNN KELLING.                                   00050000
000600 INSTALLATION.    KOHLS DEPARTMENT STORES.                        00060000
000700 DATE-WRITTEN.    04-19-1999.                                     00070000
000800                                                                  00080000
000900***************************************************************** 00090000
001000*  THIS PROGRAM GETS MESSAGES OFF OF THE CO.SALES.AUDIT.Q       * 00100000
001100*  AND PROCESSES THE CONTENTS OF THE MESSAGE.                   * 00110000
001200*  IT WILL CHECK THE VALUE IN THE CORRELATION ID AND PROCEED TO * 00120000
001300*  THE CORRESPONDING PARAGRAPH FOR PROCESSING OF THE INFORMATION* 00130000
001400*                                                               * 00140000
001500***************************************************************** 00150000
001600*   changed 06/26/2000 by matt stiff                              00160000
001700*                                                                 00170000
001800*   certain stores were being deleted when transmitted.  the      00180000
001900*   sd-store-index was not being set back if a store was found    00190000
002000*   in the working storage delete tracking table.  it is now      00200000
002100*   being set back.                                               00210000
002200*---------------------------------------------------------------*Ù00220000
002300*   CHNAGED 06/28/2000 BY MATT STIFF                              00230000
002400*                                                                 00240000
002500*   ADDED A CONDITION THAT THE STORE GROUP CODE MUST BE A IN THE  00250000
002600*   SELECT PARTITON NUMBER SQL.  THIS WILL ELMINATE ERRORS THAT   00260000
002700*   WERE BEING GENERATED DUE TO HAVING MORE THAN ONE PARTITON     00270000
002800*   NUMBER FOR A DATE (PARALLEL PROCESSING).                      00280000
002900*---------------------------------------------------------------*Ù00290000
003000*   CHNAGED 11/16/2000 BY MATT STIFF                              00300000
003100*                                                                 00310000
003200*   ADDED 'WITH UR' TO THE STORE CURSOR.  THE PROGRAM WAS GOING   00320000
003300*   DOWN WITH DB2 DEADLOCKS AGAINST THE STORE TABLE.  THIS WILL   00330000
003400*   ELIMINATE THE PROBLEM.                                        00340000
003500*---------------------------------------------------------------*Ù00350000
003600*   CHANGED 01/10/2002 BY GAYLE HAUPT     WR# 23086               00360000
003700*                                                                 00370000
003800*   HAD THE PROGRAM PERFORM A COMMIT PRIOR TO ABENDING IN ORDER   00380000
003900*   TO DELETE 'BAD' DATA FROM THE QUEUE DURING THE ABEND.  THE    00390000
004000*   PROGRAM WILL NOW BE ABLE TO START UP AGAIN WITHOUT ABENDING   00400000
004100*   DUE TO THE BAD DATA.  ALSO ADDED LOGIC TO PREVENT ABNORMALLY  00410000
004200*   LARGE TOTAL AMOUNTS (BILLIONS) FROM BEING INSERTED INTO THE   00420000
004300*   DB2 TABLES.  THIS WILL FIX THE ISSUE OF THE SALES AUDITORS    00430000
004400*   NOT BEING ABLE TO UPDATE INFORMATION ON THE CICS SCREENS DUE  00440000
004500*---------------------------------------------------------------*Ù00450000
004600*   CHANGED 08/07/2002 BY GAYLE HAUPT     WR# PM000484668         00460000
004700*                                                                 00470000
004800*   ROLLED BACK TO VERSION THAT DOES NOT CONTAIN ANY REFERENCES   00480000
004900*   TO CASH OFFICE TRAINING MODE STORE (499).  WILL STOP CASH     00490000
005000*   OFFICE TRAINING MODE DATA FROM COMING UP TO CORPORATE THROUGH 00500000
005100*   COSA_EXTRACT.EXE RATHER THAN THROUGH PROGRAMS.                00510000
005200*---------------------------------------------------------------*Ù00520000
PK5087*   CHANGED 09/02/2010 BY Cognizant       WR# PKE000005087        00530000
PK5087*                                                                 00540000
PK5087*   TO WRITE THE MESSAGES INTO OUPUT FILE FOR FUTURE REFERENCES.  00550000
PK5087*                                                                 00560000
PK5087*---------------------------------------------------------------*Ù00570000
P11718*   CHANGED 01/02/2013 BY Cognizant       WR# PKE000000011718     00580000
P11718*                                                                 00590000
P11718*   CODE FIX TO STOP TRAINING DATA SEND FROM STORES THAT ARE YET  00600000
P11718*   TO OPEN AND CONSIDER DATA SEND FROM CURRENTLY OPEN STORES.    00610000
P11718*---------------------------------------------------------------*Ù00620000
8446E *   CHANGED 03/31/2014 BY BARB SCHULTZ    PROJECT 8446E           00630000
8446E *                                                                 00640000
8446E *   CANNOT DELETE SFS OR BPS TSASUM TRANSACTIONS FROM REGISTERS   00650000
8446E *   90 THROUGH 95. THIS CHANGE WAS DONE FOR THE BOPUS PROJECT     00660000
8446E *   AND IS NEEDED SO THE BUSINESS HAS THE REGISTER TOTALS IN      00670000
8446E *   CASH OFFICE SALES.                                            00680000
8446E *---------------------------------------------------------------*Ù00690000
012815*   CHANGED 01/28/2015 BY DAN PAYNTER     PROJECT 5208P           00700000
012815*                                         CHG0102523              00710000
012815*   ALLOW CASH OFFICE DATA TO BE RECEIVED FOR BOTH POC AND POS    00720000
012815*   FOR A SINGLE STORE.  POC WILL ONLY POPULATE TSASUM AND        00730000
012815*   TSAADSU AT THIS TIME BECAUSE IT DOESN'T YET INCLUDE CHECK OR  00740000
012815*   CASH TENDERS.  POC CASH OFFICE WILL BE FURTHER EXPANDED IN    00750000
012815*   FUTURE DEPLOYMENTS TO BEGIN POPULATING ALL OF THE OTHER       00760000
012815*   CASH OFFICE RELATED TABLES.                                   00770000
012815*---------------------------------------------------------------*Ù00780000
219606*   CHANGED 03/08/2019 BY JIM HUNTER      CHG0219606              00790005
219606*   COMMENTED PARA. 7100-PUT-MSG-ON-DLQ TO PREVENT MESSAGES FROM  00800005
219606*   BEING WRITTEN TO THE DEAD LETTER QUEUE.  ADDED DISPLAYS       00810005
219606*   FOR ERROR RECORDS TO PARA. 2000-PROCESS-MESSAGES.             00820005
219606*---------------------------------------------------------------*Ù00830005
223808*   CHANGED 05/15/2019 BY JIM HUNTER      CHG0223808              00840009
223808*   Converted the ASCII definitions of the MQ Correlid values     00850009
223808*   to hex.  Refactored code did not work with the ASCII values.  00860009
223808*   Also converting PV-MSG-END-OF-FIELD and PV-MSG-END-OF-RECORD  00870009
223808*   values from ASCII to hex.                                     00880009
254099*---------------------------------------------------------------*Ù00880115
254099*   CHANGED 02/15/2021 BY JIM HUNTER      CHG0254099              00881015
254099*   Backing out some of the POC code added since Cash Office is   00882015
254099*   not sending the Correlation Id's ending in -POC that will     00883015
254099*   cause it to be executed. At this time it is not expected      00884015
254099*   that it ever will, but the code to look for it will be        00884115
254099*   kept, including all logic for the SAT_ADJ_SLS_STR_SUM table.  00884215
254099*   Deleting paragraph's 5625-DELETE-TSAADSU-POC and              00884315
254099*   5635-DELETE-TSASUM-POC - If POC codes are received, the       00884415
254099*   original 5620- and 5630- delete para's will be performed.     00884515
254099*   Also, increasing the registers that are not deleted in the    00884615
254099*   TSASUM Delete from 90 - 95 to 90 - 99 and removing the check  00885015
254099*   of the SUM_TYP_CDE <> 'C'.                                    00886015
223808*---------------------------------------------------------------*Ù00890009
005300 ENVIRONMENT DIVISION.                                            00900000
005400* ------------------------------------------------------------- * 00910000
005500                                                                  00920000
005600 CONFIGURATION SECTION.                                           00930000
005700                                                                  00940000
005800 SOURCE-COMPUTER.       IBM-3090.                                 00950000
005900 OBJECT-COMPUTER.       IBM-3090.                                 00960000
006000                                                                  00970000
006100 INPUT-OUTPUT SECTION.                                            00980000
006200                                                                  00990000
006300 FILE-CONTROL.                                                    01000000
006400     SELECT CONTROL-CARD-1                                        01010000
006500            ASSIGN TO INP01.                                      01020000
006600     SELECT CONTROL-CARD-2                                        01030000
006700            ASSIGN TO INP02.                                      01040000
006800     SELECT VOID-AFTER-FILE                                       01050000
006900            ASSIGN TO OUT01.                                      01060000
PK5087     SELECT MESSAGE-LOG                                           01070000
PK5087            ASSIGN TO OUT02.                                      01080000
007000                                                                  01090000
007100                                                                  01100000
007200* ------------------------------------------------------------- * 01110000
007300 DATA DIVISION.                                                   01120000
007400* ------------------------------------------------------------- * 01130000
007500 FILE SECTION.                                                    01140000
007600                                                                  01150000
007700 FD  CONTROL-CARD-1                                               01160000
007800     RECORDING MODE F                                             01170000
007900     BLOCK CONTAINS 0 RECORDS                                     01180000
008000     LABEL RECORDS ARE OMITTED.                                   01190000
008100 01  CONTROL-CARD-1-LINE              PIC  X(80).                 01200000
008200                                                                  01210000
008300 FD  CONTROL-CARD-2                                               01220000
008400     RECORDING MODE F                                             01230000
008500     BLOCK CONTAINS 0 RECORDS                                     01240000
008600     LABEL RECORDS ARE OMITTED.                                   01250000
008700 01  CONTROL-CARD-2-LINE              PIC  X(80).                 01260000
008800                                                                  01270000
008900 FD  VOID-AFTER-FILE                                              01280000
009000     RECORDING MODE IS F                                          01290000
009100     LABEL RECORDS ARE STANDARD                                   01300000
009200     BLOCK CONTAINS 0 RECORDS                                     01310000
009300     RECORD CONTAINS 80 CHARACTERS                                01320000
009400     DATA RECORDS ARE VA-VOID-AFTER-RECORD.                       01330000
009500                                                                  01340000
009600 01  VA-VOID-AFTER-RECORD        PIC X(80).                       01350000
009700                                                                  01360000
PK5087 FD  MESSAGE-LOG                                                  01370000
PK5087     RECORDING MODE F                                             01380000
PK5087     BLOCK CONTAINS 0 RECORDS                                     01390000
PK5087     LABEL RECORDS ARE OMITTED                                    01400000
PK5087     DATA RECORD IS MESSAGE-LOG-RECORD.                           01410000
PK5087 01  MESSAGE-LOG-RECORD              PIC X(4000).                 01420000
009800* ------------------------------------------------------------- * 01430000
009900 WORKING-STORAGE SECTION.                                         01440000
010000* ------------------------------------------------------------- * 01450000
010100                                                                  01460000
010200 01  WS-MQCONN               PIC X(8)  VALUE 'CSQBCONN'.          01470000
010300 01  WS-MQOPEN               PIC X(8)  VALUE 'CSQBOPEN'.          01480000
010400 01  WS-MQINQ                PIC X(8)  VALUE 'CSQBINQ'.           01490000
010500 01  WS-MQGET                PIC X(8)  VALUE 'CSQBGET'.           01500000
010600 01  WS-MQPUT1               PIC X(8)  VALUE 'CSQBPUT1'.          01510000
010700 01  WS-MQBACK               PIC X(8)  VALUE 'CSQBBACK'.          01520000
010800 01  WS-MQCMIT               PIC X(8)  VALUE 'CSQBCOMM'.          01530000
010900 01  WS-MQCLOSE              PIC X(8)  VALUE 'CSQBCLOS'.          01540000
011000 01  WS-MQDISC               PIC X(8)  VALUE 'CSQBDISC'.          01550000
011100 01  WS-GET-MORE-STORES-RETRY PIC X(1)  VALUE 'N'.                01560000
219606*01  WS-DEAD-LETTER-QUEUE-NAME PIC X(48).                         01570005
011300                                                                  01580000
011400*    API control blocks                                           01590000
011500                                                                  01600000
011600 01  MQM-OBJECT-DESCRIPTOR.                                       01610000
011700     COPY CMQODV.                                                 01620000
011800 01  MQM-MESSAGE-DESCRIPTOR.                                      01630000
011900     COPY CMQMDV.                                                 01640000
012000 01  MQM-GET-MESSAGE-OPTIONS.                                     01650000
012100     COPY CMQGMOV.                                                01660000
012200 01  MQM-PUT-MESSAGE-OPTIONS.                                     01670000
012300     COPY CMQPMOV.                                                01680000
012400                                                                  01690000
012500*    MQV contains constants (for filling in the control blocks)   01700000
012600*    and return codes (for testing the result of a call)          01710000
012700                                                                  01720000
012800 01  MQM-CONSTANTS.                                               01730000
012900     COPY CMQV.                                                   01740000
013000*                                                                 01750000
013100*----------------------------------------------------------------*01760000
013200*    CONTROL CARD                                                 01770000
013300*----------------------------------------------------------------*01780000
013400 01  CC-CONTROL-CARD-1.                                           01790000
013500     05  CC-QMGR-NAME              PIC X(48).                     01800000
013600     05  FILLER                    PIC X(32).                     01810000
013700                                                                  01820000
013800 01  CC-CONTROL-CARD-2.                                           01830000
013900     05  CC-SALES-AUDIT-QNAME      PIC X(48).                     01840000
014000     05  FILLER                    PIC X(32).                     01850000
014100                                                                  01860000
014200 01  PA-PROGRAM-ACCUMULATORS.                                     01870000
014300     05  PA-RETRY-COUNT          PIC S9(03)  VALUE 0 COMP.        01880000
014400                                                                  01890000
014500*----------------------------------------------------------------*01900000
014600*    PROGRAM CONSTANTS                                            01910000
014700*----------------------------------------------------------------*01920000
014800 01  PC-PROGRAM-CONSTANTS.                                        01930000
014900     05  PC-PGM-NAME               PIC X(09) VALUE 'COKUP001 '.   01940000
015000     05  PC-FIFTY-STARS            PIC X(50) VALUE ALL '*'.       01950000
015100     05  PC-MAXIMUM-STORE-COUNT    PIC S9(4) VALUE +2500          01960000
015200                                             COMP SYNC.           01970000
015300     05  PC-SUCCESSFUL-SQLCODE     PIC S9(9) VALUE ZEROS          01980000
015400                                             COMP SYNC.           01990000
015500     05  PC-END-OF-CURSOR-SQLCODE                                 02000000
015600                                   PIC S9(9) VALUE +100           02010000
015700                                             COMP SYNC.           02020000
015800     05  PC-DEPARTMENT-STORE-TYPE                                 02030000
015900                                   PIC X(2)  VALUE 'DS'.          02040000
016000     05  PC-NON-UNIQUE-KEY         PIC S9(9) VALUE -803           02050000
016100                                             COMP SYNC.           02060000
016200     05  PC-COSA-STATUS-LEVEL                                     02070000
016300                                   PIC S9(4) VALUE +7 COMP.       02080000
016400     05  PC-MAX-RETRY              PIC S9(4) VALUE 3 COMP.        02090000
016500     05  PC-MAX-POS-AMT            PIC S9(8)V99                   02100000
016600                                             VALUE 99999999.99.   02110000
016700     05  PC-MAX-NEG-AMT            PIC S9(8)V99                   02120000
016800                                             VALUE -99999999.99.  02130000
016900                                                                  02140000
017000*----------------------------------------------------------------*02150000
017100*  When a specific value is assigned to the MQ Msgid or the       02160000
017200*  MQ Correlid the data representation of the fields is NOT       02170000
017300*  converted when going to another platform. In this example,     02180000
017400*  a message is sent from the NT server to the mainframe, the     02190000
017500*  field contents for the correlid represent the ascii values.    02200000
017600*  The table name that the message information should be loaded to02210000
017700*  is specified in the correl id field, but in order to           02220000
017800*  interrogate the contents of the field, the program             02230000
017900*  needs to define the ascii representation for this value.       02240000
018000*----------------------------------------------------------------*02250000
223808*   May, 2019 - Mainframe Refactoring project                     02260009
223808*   Converted the ASCII definitions of the MQ Correlid values     02270009
223808*   to hex.  Refactored code did not work with the ASCII values.  02280009
223808*---------------------------------------------------------------*Ù02290009
018100                                                                  02300000
018200*    ascii value of TSAADDP                                       02310008
018300     05  PC-CORRELID-TSAADDP   PIC X(24)                          02320000
223808       VALUE X'545341414444502020202020202020202020202020202020'. 02330009
223808*                          VALUE 'Û¦¦ëë&'.      02340009
018500*    ascii value of TSAADPC                                       02350008
018600     05  PC-CORRELID-TSAADPC   PIC X(24)                          02360000
223808       VALUE X'545341414450432020202020202020202020202020202020'. 02370009
223808*                          VALUE 'Û¦¦ë&'.      02380009
018800*    ascii value of TSASUM                                        02390008
018900     05  PC-CORRELID-TSASUM    PIC X(24)                          02400000
223808       VALUE X'54534153554D202020202020202020202020202020202020'. 02410009
223808*                          VALUE 'Û¦¥('.      02420009
019100*    ascii value of TSAADSU                                       02430008
019200     05  PC-CORRELID-TSAADSU   PIC X(24)                          02440000
223808       VALUE X'545341414453552020202020202020202020202020202020'. 02450009
223808*                          VALUE 'Û¦¦ë¥'.      02460009
019400*    ascii value of SAT_TRN_VOID_AFT                              02470010
019500     05  PC-CORRELID-VOIDAFTER PIC X(24)                          02480000
223808       VALUE X'564F49444146544552202020202020202020202020202020'. 02490009
223808*                          VALUE '|ë¦Ûª'.      02500009
019700*    ascii value of SAT_RGST_BAL_OVSH                             02510008
019800     05  PC-CORRELID-RGST-OVSH PIC X(24)                          02520000
223808       VALUE X'5341545F524753545F42414C5F4F56534820202020202020'. 02530009
223808*                          VALUE '¦Û^ªâÛ^á¦<^|«'.      02540009
020000*    ascii value of SAT_SAFE_OVSH                                 02550008
020100     05  PC-CORRELID-SAFE-OVSH PIC X(24)                          02560000
223808       VALUE X'5341545F534146455F4F5653482020202020202020202020'. 02570009
223808*                          VALUE '¦Û^¦^|«'.      02580009
012815*    ascii value of TSASUM_POC                                    02590008
012815     05  PC-CORRELID-TSASUM-POC   PIC X(24)                       02600000
223808       VALUE X'54534153554D5F504F432020202020202020202020202020'. 02610009
223808*                          VALUE 'Û¦¥(^&|              '.      02620009
012815*    ascii value of TSAADSU_POC                                   02630008
012815     05  PC-CORRELID-TSAADSU-POC  PIC X(24)                       02640000
223808       VALUE X'545341414453555F504F4320202020202020202020202020'. 02650009
223808*                          VALUE 'Û¦¦ë¥^&|             '.      02660009
020300                                                                  02670000
020400*----------------------------------------------------------------*02680000
020500*    PROGRAM SWITCHES                                             02690000
020600*----------------------------------------------------------------*02700000
020700 01  PS-PROGRAM-SWITCHES.                                         02710000
020800     05  PS-CONTROL-CARD-1-SW      PIC X(01) VALUE 'N'.           02720000
020900         88  PS-CONTROL-CARD-1-END           VALUE 'Y'.           02730000
021000         88  PS-CONTROL-CARD-1-START         VALUE 'N'.           02740000
021100     05  PS-CONTROL-CARD-2-SW      PIC X(01) VALUE 'N'.           02750000
021200         88  PS-CONTROL-CARD-2-END           VALUE 'Y'.           02760000
021300         88  PS-CONTROL-CARD-2-START         VALUE 'N'.           02770000
021400     05  PS-MQGET-SUCCESSFUL-SW    PIC X(01) VALUE 'N'.           02780000
021500         88  PS-MQGET-SUCCESSFUL             VALUE 'Y'.           02790000
021600     05  PS-STORE-FOUND-IND        PIC X(01) VALUE 'N'.           02800000
021700         88  PS-STORE-NOT-FOUND              VALUE 'N'.           02810000
021800         88  PS-STORE-FOUND                  VALUE 'Y'.           02820000
021900     05  PS-CALL-COMPLETE-IND      PIC X(01) VALUE 'N'.           02830000
022000         88  PS-CALL-COMPLETED               VALUE 'Y'.           02840000
022100     05  PS-END-OF-ITEM-IND        PIC X(01) VALUE 'N'.           02850000
022200         88  PS-END-OF-ITEM                  VALUE 'Y'.           02860000
022300     05  PS-END-OF-RECORD-IND      PIC X(01) VALUE 'N'.           02870000
022400         88  PS-END-OF-RECORD                VALUE 'Y'.           02880000
022500     05  PS-CASH-ADVANCE-IND       PIC X(01) VALUE 'N'.           02890000
022600         88  PS-CASH-ADVANCE                 VALUE 'Y'.           02900000
022700     05  PS-NO-RECORD-FOUND-IND    PIC X(01) VALUE 'N'.           02910000
022800         88  PS-NO-RECORD-FOUND              VALUE 'Y'.           02920000
022900     05  PS-DELETED-STORE-FOUND-SW PIC X(01) VALUE ' '.           02930000
023000         88  PS-DELETED-STORE-FOUND          VALUE 'Y'.           02940000
023100         88  PS-DELETED-STORE-NOT-FOUND      VALUE 'N'.           02950000
023200     05  PS-COMMIT-NEEDED-SW       PIC X(01) VALUE 'N'.           02960000
023300         88  PS-COMMIT-NEEDED                VALUE 'Y'.           02970000
023400     05  PS-STORE-LOCKED-SW        PIC X(01) VALUE 'N'.           02980000
023500         88  PS-STORE-LOCKED                 VALUE 'Y'.           02990000
023600         88  PS-STORE-NOT-LOCKED             VALUE 'N'.           03000000
023700     05  PS-STORE-LOCK-FOUND-SW    PIC X(01) VALUE 'N'.           03010000
023800         88  PS-STORE-LOCK-FOUND             VALUE 'Y'.           03020000
023900         88  PS-STORE-LOCK-NOT-FOUND         VALUE 'N'.           03030000
012815     05  PS-POC-STORE-FOUND-SW     PIC X(01) VALUE 'N'.           03040000
012815         88  PS-POC-STORE-FOUND              VALUE 'Y'.           03050000
012815         88  PS-POC-STORE-NOT-FOUND          VALUE 'N'.           03060000
024000                                                                  03070000
024100*----------------------------------------------------------------*03080000
024200*    PROGRAM VARIABLES                                            03090000
024300*----------------------------------------------------------------*03100000
024400 01  PV-PROGRAM-VARIABLES.                                        03110000
024500     05  PV-PARAGRAPH              PIC X(50).                     03120000
024600     05  PV-LAST-DB2-ACTION             PIC X(45) VALUE SPACES.   03130000
024700         88  PV-OPEN-STORE-CURSOR             VALUE               03140000
024800             'OPEN THE STORE CURSOR'.                             03150000
024900         88  PV-CLOSE-STORE-CURSOR            VALUE               03160000
025000             'CLOSE THE STORE CURSOR'.                            03170000
025100         88  PV-FETCH-STORE-ROW               VALUE               03180000
025200             'FETCH A ROW FROM THE STORE CURSOR'.                 03190000
025300         88  PV-INSERT-ADJ-DEPOSIT-RCD        VALUE               03200000
025400             'INSERT ADJUSTED DEPOSIT INTO TSAADDP'.              03210000
025500         88  PV-INSERT-PAIDOUT-CASHRCVD-RCD   VALUE               03220000
025600             'INSERT PAID OUT/CASH RECVD INTO TSAADPC'.           03230000
025700         88  PV-INSERT-ADJ-SUMMARY-RCD        VALUE               03240000
025800             'INSERT ADJUSTED SUMMARY INTO TSAADSU'.              03250000
012815         88  PV-INSERT-ADJ-STR-SUM-RCD        VALUE               03260000
012815             'INSERT ADJ SUM INTO SAT_ADJ_SLS_STR_SUM'.           03270000
012815         88  PV-SELECT-CTG-SUM-TOT-RCD        VALUE               03280000
012815             'SELECT CTG SUM FROM SAT_ADJ_SLS_STR_SUM'.           03290000
012815         88  PV-UPDATE-ADJ-SUMMARY-RCD        VALUE               03300000
012815             'UPDATE ADJUSTED SUMMARY IN TSAADSU'.                03310000
025900         88  PV-INSERT-SUMMARY-TOT-RCD        VALUE               03320000
026000             'INSERT SUMMARY TOTALS RCD INTO TSASUM'.             03330000
026100         88  PV-INSERT-RGST-OVSH              VALUE               03340000
026200             'INSERT ROWS INTO SAT_RGST_BAL_OVSH'.                03350000
026300         88  PV-INSERT-SAFE-OVSH              VALUE               03360000
026400             'INSERT ROWS INTO SAT_SAFE_OVSH'.                    03370000
026300         88  PV-INSERT-SAT-TRN-VOID-AFT       VALUE               03380000
026400             'INSERT ROWS INTO SAT_TRN_VOID_AFT'.                 03390000
026500         88  PV-SELECT-TSASUM-CASH-RCD        VALUE               03400000
026600             'SELECT TSASUM CASH RECORD FOR UPDATING'.            03410000
026700         88  PV-UPDATE-TSASUM-CASH-RCD        VALUE               03420000
026800             'UPDATE TSASUM CASH RECORD '.                        03430000
026900         88  PV-COMMIT-DB2-INSERTS            VALUE               03440000
027000             'ATTEMPT TO COMMIT INSERTS TO DB2 TABLE'.            03450000
027100         88  PV-GET-MAX-SEQ-NUMBER            VALUE               03460000
027200             'ATTEMPT TO GET MAX SEQ NUM FOR STORE'.              03470000
027300         88  PV-GET-PARTITION-NUMBER          VALUE               03480000
027400             'ATTEMPT TO GET PARTITION NUMBER FOR BAL DATE'.      03490000
027500         88  PV-UPDATE-TSASUM-TOTALS          VALUE               03500000
027600             'ATTEMPT TO UPDATE TSASUM '.                         03510000
027700         88  PV-DELETE-TSASUM-TOTALS          VALUE               03520000
027800             'ATTEMPT TO UPDATE TSASUM '.                         03530000
027900         88  PV-DELETE-TSAADDP-ROWS           VALUE               03540000
028000             'ATTEMPT TO DELETE TSAADDP ROWS'.                    03550000
028100         88  PV-DELETE-TSAADPC-ROWS           VALUE               03560000
028200             'ATTEMPT TO DELETE TSAADPC ROWS'.                    03570000
028300         88  PV-DELETE-TSAADSU-ROWS           VALUE               03580000
028400             'ATTEMPT TO DELETE TSAADSU ROWS'.                    03590000
012815         88  PV-DELETE-TSAADSU-POC-ROWS       VALUE               03600000
012815             'ATTEMPT TO DELETE TSAADSU POC ROWS'.                03610000
012815         88  PV-DELETE-ADJ-SUM-ROWS           VALUE               03620000
012815             'ATTEMPT TO DELETE SAT_ADJ_SLS_STR_SUM ROWS'.        03630000
028500         88  PV-DELETE-TSASUM-ROWS            VALUE               03640000
028600             'ATTEMPT TO DELETE TSASUM ROWS'.                     03650000
012815         88  PV-DELETE-TSASUM-POC-ROWS        VALUE               03660000
012815             'ATTEMPT TO DELETE TSASUM POC ROWS'.                 03670000
028700         88  PV-DELETE-RGST-OVSH-ROWS         VALUE               03680000
028800             'ATTEMPT TO DELETE SAT_RGST_BAL_OVSH ROWS'.          03690000
028900         88  PV-DELETE-SAFE-OVSH-ROWS         VALUE               03700000
029000             'ATTEMPT TO DELETE SAT_SAFE_OVSH ROWS'.              03710000
050707         88  PV-DELETE-VOID-AFTR-ROWS         VALUE               03720000
050707             'ATTEMPT TO DELETE SAT_TRN_VOID_AFT ROWS'.           03730000
029100     05  PV-ABEND-STR-NBR           PIC X(04)  VALUE SPACES.      03740000
029200     05  PV-ERROR-MESSAGE           PIC X(48)  VALUE SPACES.      03750000
029300     05  PV-HOLD-FIELD              PIC X(100) VALUE SPACES.      03760000
029400     05  PV-LOOP-COUNT              PIC 9(04).                    03770000
029500     05  PV-COUNT-1                 PIC 9(04).                    03780000
029600     05  PV-HOLD-NUM                PIC S9(09)V99.                03790000
029700     05  PV-HOLD-NUM-5              PIC S9(09) VALUE ZEROES.      03800000
029800     05  PV-HOLD-NUM-7              PIC S9(11) VALUE ZEROES.      03810000
029900     05  PV-HOLD-NUM-9              PIC S9(09) VALUE ZEROES.      03820000
030000     05  PV-HOLD-NUM-11             PIC S9(11) VALUE ZEROES.      03830000
030100     05  PV-HOLD-NUM-DECIMAL        PIC S9(02).                   03840000
030200     05  PV-HOLD-NUM2               PIC  X(01).                   03850000
030300     05  PV-HOLD-FIELD-POS          PIC 9(03)  VALUE 1.           03860000
030400     05  PV-RECORD-ELEMENT          PIC 9(02)  VALUE 1.           03870000
030500     05  PV-CMNT-TXT-LEN            PIC 9(04)  VALUE ZEROES.      03880000
030600     05  PV-CMNT-TXT-LEN-SIGN       PIC S9(04) VALUE ZEROES.      03890000
030700     05  PV-CMNT-TXT-LEN-COMP       PIC S9(04) COMP               03900000
030800                                               VALUE ZEROES.      03910000
030900     05  PV-QM-NAME                 PIC X(48).                    03920000
031000     05  PV-DUMMY                   PIC X(01).                    03930000
031100     05  PV-MSGBUFFER               PIC X(4194304) VALUE SPACES.  03940000
031200     05  FILLER                     REDEFINES PV-MSGBUFFER.       03950000
031300         10  PV-MSG-CHARACTER-ENTRY   OCCURS 4194304 TIMES        03960000
031400                                      INDEXED BY PV-MSG-INDEX.    03970000
031500             15  PV-MSG-CHARACTER             PIC X(1).           03980000
223808                 88  PV-MSG-END-OF-FIELD      VALUE X'A1'.        03990009
223808                 88  PV-MSG-END-OF-RECORD     VALUE X'79'.        04000009
223808*                88  PV-MSG-END-OF-FIELD      VALUE '~'.          04010011
223808*                88  PV-MSG-END-OF-RECORD     VALUE '`'.          04020011
PK5087     05  PV-MQ-MSG-LOG              REDEFINES PV-MSGBUFFER.       04030000
PK5087         10 PV-MESSAGE-LOG       PIC X(4000).                     04040000
PK5087         10 FILLER               PIC X(4190304).                  04050000
031800     05  PV-NUMPUTS              PIC S9(9) BINARY VALUE 0.        04060000
031900     05  PV-MSGLENGTH            PIC S9(9) BINARY VALUE +4194304. 04070000
032000     05  PV-DATA-LENGTH          PIC S9(9) BINARY.                04080000
032100     05  PV-SELECT-COUNT         PIC S9(9) BINARY VALUE 1.        04090000
032200     05  PV-PV-SELECTOR-TABLE.                                    04100000
032300         10  PV-SELECTOR         PIC S9(9) BINARY OCCURS 1 TIMES. 04110000
032400     05  PV-INT-ATTR-COUNT       PIC S9(9) BINARY VALUE 0.        04120000
032500     05  PV-INT-ATTR-TABLE.                                       04130000
032600         10  PV-INT-ATTR         PIC S9(9) BINARY OCCURS 1 TIMES. 04140000
032700     05  PV-CHAR-ATTR-LENGTH     PIC S9(9) BINARY VALUE 48.       04150000
032800     05  PV-CHAR-ATTRS           PIC X(48).                       04160000
032900     05  PV-HCONN                PIC S9(9) BINARY VALUE 0.        04170000
033000     05  PV-GQ-HANDLE            PIC S9(9) BINARY VALUE 0.        04180000
033100     05  PV-OPEN-OPTIONS         PIC S9(9) BINARY.                04190000
033200     05  PV-COMPLETION-CODE      PIC S9(9) BINARY.                04200000
033300     05  PV-REASON               PIC S9(9) BINARY.                04210000
033400     05  PV-CON-REASON           PIC S9(9) BINARY.                04220000
033500     05  PV-ISP-QMGR-NAME.                                        04230000
033600         10 PV-ISP-VALUE         PIC X(03) VALUE SPACES.          04240000
033700         10 PV-ISP-STORE-NUMBER  PIC 9(04) VALUE ZEROS.           04250000
033800         10 PV-ISP-PRIM-SECD     PIC X(01) VALUE SPACES.          04260000
033900                                                                  04270000
034000 01  PH-PROGRAM-HOLD-VARIABLES.                                   04280000
034100     05  PH-HOLD-SAADDP-TNDR-AMT     PIC  S9(09)V99.              04290000
034200     05  PH-HOLD-SAADPC-ORIG-CSH     PIC  S9(05)V99.              04300000
034300     05  PH-HOLD-SAADSU-ORIG-AMT     PIC  S9(09)V99.              04310000
034400     05  PH-HOLD-SASUM-CTG-AMT       PIC  S9(07)V99.              04320000
034500     05  PH-HOLD-MEDIA-AMT           PIC  S9(07)V99.              04330000
034600     05  PH-HOLD-RGST-OVSH-AMT       PIC  S9(07)V99.              04340000
034700     05  PH-HOLD-SAFE-OVSH-AMT       PIC  S9(07)V99.              04350000
034800     05  PH-STR-CHRGD-NBR            PIC   X(04).                 04360000
034900     05  PH-HOLD-SEQ-NBR             PIC  S9(04)  COMP.           04370000
035000     05  PH-HOLD-PARTN-NBR           PIC  S9(04)  COMP.           04380000
035100     05  PH-ACTIVITY-TYPE-CODE       PIC   X(03).                 04390000
035200     05  PH-COMPLETION-CODE          PIC  S9(09) BINARY.          04400000
035300     05  PH-REASON                   PIC  S9(09) BINARY.          04410000
035400     05  PH-HOLD-SLS-DTE             PIC   X(10).                 04420000
035500     05  PH-HOLD-STR-NBR             PIC  S9(04) COMP.            04430000
012815     05  PH-HOLD-REG-TYP-CDE         PIC  X(01).                  04440000
012815     05  PV-HOLD-CTG-TOT-AMT         PIC S9(9)V9(2) USAGE COMP-3. 04450000
012815     05  PV-HOLD-CTG-TOT-AMT-IND     PIC S9(4) COMP VALUE +0.     04460000
035600                                                                  04470000
035700 01  PV-PROGRAM-CHECK-VARIABLES.                                  04480000
035800     05  PV-CHECK-INDEX              PIC S9(05)  COMP-3.          04490000
035900     05  PV-CHECK-STR-NBR            PIC S9(04)  COMP.            04500000
036000     05  PV-CHECK-SLS-DTE            PIC  X(10).                  04510000
036100                                                                  04520000
036200*----------------------------------------------------------------*04530000
036300*    WORKING STORAGE STORE NUMBER TABLE                           04540000
036400*----------------------------------------------------------------*04550000
036500 01  SN-STORE-NUMBER-TABLE.                                       04560000
036600     05  SN-STORE-NUMBER-ENTRY   OCCURS 9999 TIMES                04570000
036700                                 ASCENDING KEY SN-STORE-NUMBER    04580000
036800                                 INDEXED BY SN-STORE-INDEX.       04590000
036900         10  SN-STORE-NUMBER     PIC X(4).                        04600000
037000                                                                  04610000
037100*----------------------------------------------------------------*04620000
037200*    WORKING STORAGE STORE DELETE TABLE TO KEEP TRACK OF WHAT    *04630000
037300*    STORES HAVE BEEN DELETED                                    *04640000
037400*----------------------------------------------------------------*04650000
037500 01  SD-STORE-DELETE-TABLE.                                       04660000
037600    05  SD-STORE-DELETE-ENTRY    OCCURS 9999 TIMES                04670000
037700                                 INDEXED BY SD-STORE-INDEX.       04680000
037800        10  SD-SLS-DTE           PIC  X(10).                      04690000
037900        10  SD-STR-NBR           PIC S9(04) COMP.                 04700000
038000                                                                  04710000
038100*----------------------------------------------------------------*04720000
038200*    WORKING STORAGE STORE DELETE TABLE TO KEEP TRACK OF WHAT    *04730000
038300*    STORES HAVE BEEN DELETED                                    *04740000
038400*----------------------------------------------------------------*04750000
038500 01  SL-STORE-LOCKING-TABLE.                                      04760000
038600    05  SL-STORE-LOCKING-ENTRY   OCCURS 9999 TIMES                04770000
038700                                 INDEXED BY SL-LOCK-INDEX.        04780000
038800        10  SL-SLS-DTE           PIC  X(10).                      04790000
038900        10  SL-STR-NBR           PIC S9(04) COMP.                 04800000
039000                                                                  04810000
039100*----------------------------------------------------------------*04820000
039200*    ABEND CODES THE ARE APPLICATION DEFINED                      04830000
039300*----------------------------------------------------------------*04840000
039400 01  ABEND-CODE                  PIC S9(4)    VALUE ZEROS         04850000
039500                                              COMP SYNC.          04860000
039600     88  AC-TABLE-OVERFLOW-ERROR              VALUE +4004.        04870000
039700     88  AC-DB2-ERROR                         VALUE +4013.        04880000
039800     88  AC-MQ-ERROR                          VALUE +4020.        04890000
039900                                                                  04900000
040000* ------------------------------------------------------------- * 04910000
040100*  VARIABLE DECLARATIONS FOR THE VOID AFTER FILE LAYOUT           04920000
040200                                                                  04930000
040300     COPY CORD001.                                                04940000
040400                                                                  04950000
040500*  VARIABLES REQUIRED FOR THE FORMAT SQLCA ROUTINE DPPD004        04960000
040600                                                                  04970000
040700     COPY DPWS004.                                                04980000
040800                                                                  04990000
040900*  SQL AND COBOL DECLARATIONS FOR THE STORE TABLE (XST_LOC)       05000000
041000                                                                  05010000
041100     EXEC SQL                                                     05020000
041200         INCLUDE XST00001                                         05030000
041300     END-EXEC.                                                    05040000
041400                                                                  05050000
041500*  SQL AND COBOL DECLARATIONS FOR DEPOSIT TENDER TABLE (TSAADDP)  05060000
041600                                                                  05070000
041700     EXEC SQL                                                     05080000
041800         INCLUDE TSAADDP                                          05090000
041900     END-EXEC.                                                    05100000
042000                                                                  05110000
042100*  SQL AND COBOL DECLARATIONS FOR PAID OUT/CASH RCVD (TSAADPC)    05120000
042200                                                                  05130000
042300     EXEC SQL                                                     05140000
042400         INCLUDE TSAADPC                                          05150000
042500     END-EXEC.                                                    05160000
042600                                                                  05170000
042700*  SQL AND COBOL DECLARATIONS FOR SUMMARY TOTALS TABLE (TSASUM)   05180000
042800                                                                  05190000
042900     EXEC SQL                                                     05200000
043000         INCLUDE TSASUM                                           05210000
043100     END-EXEC.                                                    05220000
043200                                                                  05230000
043300*  SQL AND COBOL DECLARATIONS FOR REGISTER CLOSING READ (TSAADSU) 05240000
043400                                                                  05250000
043500     EXEC SQL                                                     05260000
043600         INCLUDE TSAADSU                                          05270000
043700     END-EXEC.                                                    05280000
043800                                                                  05290000
043900*  SQL AND COBOL DECLARATIONS FOR REGISTER BAL OVER/SHORT         05300000
044000*  SAT_RGST_BAL_OVSH                                              05310000
044100                                                                  05320000
044200     EXEC SQL                                                     05330000
044300         INCLUDE SAT00000                                         05340000
044400     END-EXEC.                                                    05350000
012815                                                                  05360000
012815*  SQL AND COBOL DECLARATIONS FOR SUMMARY ADJ STORE TOTALS        05370000
012815*  SAT_ADJ_SLS_STR_SUM                                            05380000
012815                                                                  05390000
012815     EXEC SQL                                                     05400000
012815         INCLUDE SAT00002                                         05410000
012815     END-EXEC.                                                    05420000
044500                                                                  05430000
044600*  SQL AND COBOL DECLARATIONS FOR SAFE OVER/SHORT SAT_SAFE_OVSH   05440000
044700                                                                  05450000
044800     EXEC SQL                                                     05460000
044900         INCLUDE SAT00001                                         05470000
045000     END-EXEC.                                                    05480000
045100                                                                  05490000
045200*  SQL AND COBOL DECLARATIONS FOR SUMMARY TOTALS PARTITION BY     05500000
045300*      SALES DATE (TEPPART)                                       05510000
045400                                                                  05520000
045500     EXEC SQL                                                     05530000
045600         INCLUDE TEPPART                                          05540000
045700     END-EXEC.                                                    05550000
045800                                                                  05560000
045900*  SQL AND COBOL DECLARATIONS FOR STORE LOCKING TABLE             05570000
046000                                                                  05580000
046100     EXEC SQL                                                     05590000
046200         INCLUDE TSALOCK                                          05600000
046300     END-EXEC.                                                    05610000
045800                                                                  05620000
050707*  SQL AND COBOL DECLARATIONS FOR VOID AFTER TABLE                05630000
050707                                                                  05640000
050707     EXEC SQL                                                     05650000
050707         INCLUDE SAT00007                                         05660000
050707     END-EXEC.                                                    05670000
046400                                                                  05680000
046500*  STANDARD LAYOUT FOR THE SQL COMMUNICATIONS AREA                05690000
046600                                                                  05700000
046700     EXEC SQL                                                     05710000
046800         INCLUDE SQLCA                                            05720000
046900     END-EXEC.                                                    05730000
047000                                                                  05740000
047100*  CURSOR USED TO RETRIEVE ALL STORE ROWS FOR DEPARTMENT          05750000
047200*  STORES WITHIN THE KOHL'S OPERATING COMPANY THAT HAVE           05760000
047300*  REACHED THE COSA (CASH OFFICE) PROCESSING LEVEL.               05770000
047400                                                                  05780000
047500     EXEC SQL                                                     05790000
047600         DECLARE STORE_CURSOR CURSOR FOR                          05800000
047700             SELECT LOC_NBR                                       05810000
047800                 FROM XST_LOC                                     05820000
047900                 WHERE LOC_TYP_CDE  =                             05830000
048000                               :PC-DEPARTMENT-STORE-TYPE          05840000
P11718                 AND OPN_DTE <= CURRENT DATE                      05850000
P11718                 AND CLO_DTE >= CURRENT DATE                      05860000
048100                 ORDER BY LOC_NBR                                 05870000
048200             WITH UR                                              05880000
048300     END-EXEC.                                                    05890000
048400                                                                  05900000
048500* ------------------------------------------------------------- * 05910000
048600 PROCEDURE DIVISION.                                              05920000
048700* ------------------------------------------------------------- * 05930000
048800 0000-MAINLINE.                                                   05940000
048900                                                                  05950000
049000     PERFORM 1000-INITIALIZE.                                     05960000
049100                                                                  05970000
049200     IF NOT (PS-CONTROL-CARD-1-END) AND                           05980000
049300        NOT (PS-CONTROL-CARD-2-END)                               05990000
049400        THEN                                                      06000000
049500           PERFORM 1200-LOAD-STORE-NUMBER-TABLE                   06010000
049600           PERFORM 1500-MQ-SETUP                                  06020000
049700                                                                  06030000
049800           PERFORM 7000-MQGET-MSG                                 06040000
049900           PERFORM 2000-PROCESS-MESSAGES UNTIL                    06050000
050000                       NOT(PS-MQGET-SUCCESSFUL)                   06060000
050100     END-IF.                                                      06070000
050200                                                                  06080000
050300     PERFORM 1600-CLOSE-QUEUE.                                    06090000
050400     PERFORM 1700-DISCONNECT-QMGR.                                06100000
050500     CLOSE VOID-AFTER-FILE.                                       06110000
PK5087     CLOSE MESSAGE-LOG.                                           06120000
050600     STOP RUN.                                                    06130000
050700                                                                  06140000
050800*----------------------------------------------------------------*06150000
050900*  INITIALIZATION ROUTINE.                                        06160000
051000*----------------------------------------------------------------*06170000
051100 1000-INITIALIZE.                                                 06180000
051200                                                                  06190000
051300     OPEN EXTEND VOID-AFTER-FILE.                                 06200000
PK5087     OPEN EXTEND MESSAGE-LOG.                                     06210000
051400                                                                  06220000
051500*****                                                             06230000
051600*  READ CONTROL CARD TO GET QUEUE MANAGER NAME                    06240000
051700*****                                                             06250000
051800      SET PS-CONTROL-CARD-1-START TO TRUE.                        06260000
051900      OPEN INPUT CONTROL-CARD-1.                                  06270000
052000      READ CONTROL-CARD-1 INTO CC-CONTROL-CARD-1                  06280000
052100          AT END                                                  06290000
052200              SET PS-CONTROL-CARD-1-END                           06300000
052300                                  TO TRUE.                        06310000
052400                                                                  06320000
052500      IF PS-CONTROL-CARD-1-END                                    06330000
052600          DISPLAY PC-PGM-NAME                                     06340000
052700              'CONTROL CARD MISSING - FOR QMGR NAME'              06350000
052800      ELSE                                                        06360000
052900          DISPLAY PC-PGM-NAME                                     06370000
053000                  '- '                                            06380000
053100                  PC-FIFTY-STARS                                  06390000
053200          DISPLAY PC-PGM-NAME                                     06400000
053300                  '- CONTROL CARD: '                              06410000
053400                  CC-CONTROL-CARD-1                               06420000
053500      END-IF.                                                     06430000
053600                                                                  06440000
053700      CLOSE CONTROL-CARD-1.                                       06450000
053800                                                                  06460000
053900*****                                                             06470000
054000*  READ CONTROL CARD TO GET STORE EOD MSG QUEUE NAME              06480000
054100*****                                                             06490000
054200                                                                  06500000
054300      SET PS-CONTROL-CARD-2-START TO TRUE.                        06510000
054400      OPEN INPUT CONTROL-CARD-2.                                  06520000
054500      READ CONTROL-CARD-2 INTO CC-CONTROL-CARD-2                  06530000
054600          AT END                                                  06540000
054700              SET PS-CONTROL-CARD-2-END                           06550000
054800                                  TO TRUE.                        06560000
054900                                                                  06570000
055000      IF PS-CONTROL-CARD-2-END                                    06580000
055100          DISPLAY PC-PGM-NAME                                     06590000
055200             'CONTROL CARD MISSING - SALES AUDIT QUEUE NAME'      06600000
055300      ELSE                                                        06610000
055400          DISPLAY PC-PGM-NAME                                     06620000
055500                  '- '                                            06630000
055600                  PC-FIFTY-STARS                                  06640000
055700          DISPLAY PC-PGM-NAME                                     06650000
055800                  '- CONTROL CARD: '                              06660000
055900                  CC-CONTROL-CARD-2                               06670000
056000      END-IF.                                                     06680000
056100                                                                  06690000
056200      CLOSE CONTROL-CARD-2.                                       06700000
056300                                                                  06710000
056400      INITIALIZE SD-STORE-DELETE-TABLE                            06720000
056500                 SL-STORE-LOCKING-TABLE                           06730000
056600                 PV-PROGRAM-CHECK-VARIABLES.                      06740000
056700      SET SD-STORE-INDEX                                          06750000
056800          SL-LOCK-INDEX            TO +1.                         06760000
056900                                                                  06770000
057000*1000-END-INITIALIZE.                                             06780000
057100                                                                  06790000
057200******************************************************************06800000
057300*  LOAD A CORE STORE TABLE FOR BINARY SEARCHES TO VALIDATE A     *06810000
057400*  STORE NUMBER, AND ACQUIRE NAME AND DISTRICT INFORMATION.      *06820000
057500*  TAKE ALL VALID DEPARTMENT STORES FROM THE DB2 STORE TABLE.    *06830000
057600******************************************************************06840000
057700                                                                  06850000
057800 1200-LOAD-STORE-NUMBER-TABLE.                                    06860000
057900     INITIALIZE SN-STORE-NUMBER-TABLE.                            06870000
058000     INITIALIZE SN-STORE-NUMBER-TABLE                             06880000
058100         REPLACING ALPHANUMERIC DATA BY HIGH-VALUES.              06890000
058200                                                                  06900000
058300     EXEC SQL                                                     06910000
058400         OPEN STORE_CURSOR                                        06920000
058500     END-EXEC.                                                    06930000
058600                                                                  06940000
058700     IF SQLCODE NOT = PC-SUCCESSFUL-SQLCODE                       06950000
058800         SET PV-OPEN-STORE-CURSOR TO TRUE                         06960000
058900         PERFORM 9100-DB2-ERROR                                   06970000
059000     END-IF.                                                      06980000
059100                                                                  06990000
059200     PERFORM 8200-FETCH-STORE-ROW.                                07000000
059300                                                                  07010000
059400     PERFORM                                                      07020000
059500             VARYING SN-STORE-INDEX                               07030000
059600             FROM 1 BY 1                                          07040000
059700             UNTIL ((SN-STORE-INDEX > PC-MAXIMUM-STORE-COUNT)     07050000
059800                     OR (SQLCODE = PC-END-OF-CURSOR-SQLCODE))     07060000
059900         MOVE XST00001-LOC-NBR TO                                 07070000
060000                   SN-STORE-NUMBER (SN-STORE-INDEX)               07080000
060100         PERFORM 8200-FETCH-STORE-ROW                             07090000
060200     END-PERFORM.                                                 07100000
060300                                                                  07110000
060400     IF SN-STORE-INDEX > PC-MAXIMUM-STORE-COUNT                   07120000
060500         DISPLAY '** ABEND **'                                    07130000
060600         DISPLAY PC-PGM-NAME  ' - MAXIMUM NUMBER OF '             07140000
060700                   'STORE TABLE ENTRIES EXCEEDED WHILE LOADING  ' 07150000
060800                   ' STORE TABLE'                                 07160000
060900         DISPLAY PC-PGM-NAME  ' - EXPAND THE TABLE '              07170000
061000                   'AND RERUN'                                    07180000
061100         SET AC-TABLE-OVERFLOW-ERROR TO TRUE                      07190000
061200         CALL 'ILBOABN0' USING ABEND-CODE                         07200000
061300     END-IF.                                                      07210000
061400                                                                  07220000
061500     EXEC SQL                                                     07230000
061600         CLOSE STORE_CURSOR                                       07240000
061700     END-EXEC.                                                    07250000
061800                                                                  07260000
061900                                                                  07270000
062000     IF SQLCODE NOT = PC-SUCCESSFUL-SQLCODE                       07280000
062100         SET PV-CLOSE-STORE-CURSOR TO TRUE                        07290000
062200         PERFORM 9100-DB2-ERROR                                   07300000
062300     END-IF.                                                      07310000
062400*1200-EXIT.                                                       07320000
062500                                                                  07330000
062600* ------------------------------------------------------------- * 07340000
062700*  SETUP MQ VALUES                                                07350000
062800* ------------------------------------------------------------- * 07360000
062900                                                                  07370000
063000 1500-MQ-SETUP.                                                   07380000
063100*    Connect to the queue manager                                 07390000
063200                                                                  07400000
063300     MOVE CC-QMGR-NAME TO PV-QM-NAME.                             07410000
063400     CALL WS-MQCONN USING PV-QM-NAME                              07420000
063500                         PV-HCONN                                 07430000
063600                         PV-COMPLETION-CODE                       07440000
063700                         PV-REASON.                               07450000
063800                                                                  07460000
063900*    If connection failed then display error message              07470000
064000*    and exit                                                     07480000
064100                                                                  07490000
064200     MOVE PV-REASON TO PV-CON-REASON.                             07500000
064300     IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   07510000
064400        MOVE 'MQCONN ERROR'   TO PV-ERROR-MESSAGE                 07520000
064500        PERFORM 9000-DISPLAY-MQ-ERROR                             07530000
064600     END-IF.                                                      07540000
064700     DISPLAY 'MQCONN SUCCESSFUL TO ', PV-QM-NAME.                 07550000
064800                                                                  07560000
064900*    Open queue manager for inquiry of Dead Letter Queue Name     07570004
219606*                                                                 07580005
219606*    COMPUTE PV-OPEN-OPTIONS = MQOO-INQUIRE +                     07590005
219606*                           MQOO-FAIL-IF-QUIESCING.               07600005
219606*    MOVE MQOT-Q-MGR        TO MQOD-OBJECTTYPE.                   07610005
219606*    MOVE PV-QM-NAME        TO MQOD-OBJECTQMGRNAME.               07620005
219606*    MOVE SPACES            TO MQOD-OBJECTNAME.                   07630005
219606*                                                                 07640005
219606*    CALL WS-MQOPEN USING PV-HCONN                                07650005
219606*                        MQM-OBJECT-DESCRIPTOR                    07660005
219606*                        PV-OPEN-OPTIONS                          07670005
219606*                        PV-GQ-HANDLE                             07680005
219606*                        PV-COMPLETION-CODE                       07690005
219606*                        PV-REASON.                               07700005
219606*                                                                 07710005
066400*    If open failed then display error message                    07720000
066500*    and exit.                                                    07730000
219606*                                                                 07740005
219606*    IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   07750005
219606*       MOVE 'MQOPEN ERROR'   TO PV-ERROR-MESSAGE                 07760005
219606*       PERFORM 1700-DISCONNECT-QMGR                              07770005
219606*       PERFORM 9000-DISPLAY-MQ-ERROR                             07780005
219606*    END-IF.                                                      07790005
219606*    DISPLAY 'MQOPEN SUCCESSFUL - INQUIRE OF QMGR'.               07800005
219606*                                                                 07810005
067400*    Inquire on queue manager                                     07820000
219606*                                                                 07830005
219606*    MOVE MQCA-DEAD-LETTER-Q-NAME  TO  PV-SELECTOR(1).            07840005
219606*    CALL WS-MQINQ USING  PV-HCONN,                               07850005
219606*                         PV-GQ-HANDLE,                           07860005
219606*                         PV-SELECT-COUNT,                        07870005
219606*                         PV-PV-SELECTOR-TABLE,                   07880005
219606*                         PV-INT-ATTR-COUNT,                      07890005
219606*                         PV-INT-ATTR-TABLE,                      07900005
219606*                         PV-CHAR-ATTR-LENGTH,                    07910005
219606*                         PV-CHAR-ATTRS,                          07920005
219606*                         PV-COMPLETION-CODE,                     07930005
219606*                         PV-REASON.                              07940005
219606*                                                                 07950005
219606*    IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   07960005
219606*       MOVE 'MQINQ ERROR'   TO PV-ERROR-MESSAGE                  07970005
219606*       PERFORM 9000-DISPLAY-MQ-ERROR                             07980005
219606*    ELSE                                                         07990005
219606*       DISPLAY 'MQINQ SUCCESSFUL, DEAD LETTER Q: ', PV-CHAR-ATTRS08000005
219606*       MOVE PV-CHAR-ATTRS TO WS-DEAD-LETTER-QUEUE-NAME           08010005
219606*    END-IF.                                                      08020005
219606*                                                                 08030005
219606*    CALL WS-MQCLOSE USING PV-HCONN                               08040005
219606*                         PV-GQ-HANDLE                            08050005
219606*                         MQCO-NONE                               08060005
219606*                         PV-COMPLETION-CODE                      08070005
219606*                         PV-REASON.                              08080005
219606*    IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   08090005
219606*       MOVE 'MQCLOSE ERROR'  TO PV-ERROR-MESSAGE                 08100005
219606*       PERFORM 9000-DISPLAY-MQ-ERROR                             08110005
219606*    ELSE                                                         08120005
219606*       DISPLAY 'MQCLOSE SUCCESSFUL - INQUIRE OF QMGR'            08130005
219606*    END-IF.                                                      08140005
070700                                                                  08150000
070800*    Open the SALES AUDIT queue for input                         08160000
070900                                                                  08170000
071000     COMPUTE PV-OPEN-OPTIONS = MQOO-INPUT-SHARED +                08180000
071100                               MQOO-FAIL-IF-QUIESCING.            08190000
071200     MOVE MQOT-Q                   TO MQOD-OBJECTTYPE.            08200000
071300     MOVE CC-SALES-AUDIT-QNAME     TO MQOD-OBJECTNAME.            08210000
071400     MOVE PV-QM-NAME               TO MQOD-OBJECTQMGRNAME.        08220000
071500*                                                                 08230000
071600     CALL WS-MQOPEN USING PV-HCONN                                08240000
071700                         MQM-OBJECT-DESCRIPTOR                    08250000
071800                         PV-OPEN-OPTIONS                          08260000
071900                         PV-GQ-HANDLE                             08270000
072000                         PV-COMPLETION-CODE                       08280000
072100                         PV-REASON.                               08290000
072200*                                                                 08300000
072300*    If open failed then display error message                    08310000
072400*    and exit.                                                    08320000
072500*                                                                 08330000
072600     IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   08340000
072700        MOVE 'MQOPEN ERROR'   TO PV-ERROR-MESSAGE                 08350000
072800        PERFORM 1700-DISCONNECT-QMGR                              08360000
072900        PERFORM 9000-DISPLAY-MQ-ERROR                             08370000
073000     END-IF.                                                      08380000
073100     DISPLAY 'MQOPEN SUCCESSFUL TO ' MQOD-OBJECTNAME.             08390000
073200                                                                  08400000
073300*1500-END-MQ-SETUP.                                               08410000
073400                                                                  08420000
073500* ------------------------------------------------------------- * 08430000
073600*  CLOSE MQ QUEUE                                                 08440000
073700* ------------------------------------------------------------- * 08450000
073800                                                                  08460000
073900 1600-CLOSE-QUEUE.                                                08470000
074000                                                                  08480000
074100     CALL WS-MQCLOSE USING PV-HCONN                               08490000
074200                           PV-GQ-HANDLE                           08500000
074300                           MQCO-NONE                              08510000
074400                           PV-COMPLETION-CODE                     08520000
074500                           PV-REASON.                             08530000
074600     IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   08540000
074700        MOVE 'MQCLOSE ERROR' TO PV-ERROR-MESSAGE                  08550000
074800        PERFORM 9000-DISPLAY-MQ-ERROR                             08560000
074900     ELSE                                                         08570000
075000        DISPLAY 'MQCLOSE SUCCESSFUL'                              08580000
075100     END-IF.                                                      08590000
075200                                                                  08600000
075300*1600-END-CLOSE-QUEUE.                                            08610000
075400                                                                  08620000
075500* ------------------------------------------------------------- * 08630000
075600*  DISCONNECT QUEUE MANAGER                                       08640000
075700* ------------------------------------------------------------- * 08650000
075800                                                                  08660000
075900 1700-DISCONNECT-QMGR.                                            08670000
076000                                                                  08680000
076100     IF PV-CON-REASON IS NOT EQUAL TO MQRC-ALREADY-CONNECTED      08690000
076200        CALL WS-MQDISC USING PV-HCONN                             08700000
076300                            PV-COMPLETION-CODE                    08710000
076400                            PV-REASON                             08720000
076500        IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                08730000
076600           MOVE 'MQDISC ERROR'   TO PV-ERROR-MESSAGE              08740000
076700           PERFORM 9000-DISPLAY-MQ-ERROR                          08750000
076800        ELSE                                                      08760000
076900           DISPLAY 'MQDISC SUCCESSFUL'                            08770000
077000        END-IF                                                    08780000
077100     END-IF.                                                      08790000
077200                                                                  08800000
077300*1700-END-DISCONNECT-QMGR.                                        08810000
077400                                                                  08820000
077500* ------------------------------------------------------------- * 08830000
077600*  PROCESS MESSAGES                                               08840000
077700* ------------------------------------------------------------- * 08850000
077800                                                                  08860000
077900 2000-PROCESS-MESSAGES.                                           08870000
078000                                                                  08880000
012815     SET PS-POC-STORE-NOT-FOUND TO TRUE                           08890000
PK5087     PERFORM 8600-WRITE-MQMSG-LOG-FILE                            08900000
078100     EVALUATE TRUE                                                08910000
078200        WHEN MQMD-CORRELID = PC-CORRELID-TSAADDP                  08920000
078300           DISPLAY "*** CORRELATION ID IS: TSAADDP"               08930000
078400           PERFORM 3100-LOAD-TSAADDP                              08940000
078500        WHEN MQMD-CORRELID = PC-CORRELID-TSAADPC                  08950000
078600           DISPLAY "*** CORRELATION ID IS: TSAADPC"               08960000
078700           PERFORM 3200-LOAD-TSAADPC                              08970000
078800        WHEN MQMD-CORRELID = PC-CORRELID-TSAADSU                  08980000
078900           DISPLAY "*** CORRELATION ID IS: TSAADSU"               08990000
079000           PERFORM 3300-LOAD-TSAADSU                              09000000
079100        WHEN MQMD-CORRELID = PC-CORRELID-TSASUM                   09010000
079200           DISPLAY "*** CORRELATION ID IS: TSASUM"                09020000
079300           PERFORM 3400-LOAD-TSASUM                               09030000
012815        WHEN MQMD-CORRELID = PC-CORRELID-TSASUM-POC               09040000
012815           SET PS-POC-STORE-FOUND TO TRUE                         09050000
012815           DISPLAY "*** CORRELATION ID IS: TSASUM_POC"            09060000
012815           PERFORM 3400-LOAD-TSASUM                               09070000
012815        WHEN MQMD-CORRELID = PC-CORRELID-TSAADSU-POC              09080000
012815           SET PS-POC-STORE-FOUND TO TRUE                         09090000
012815           DISPLAY "*** CORRELATION ID IS: TSAADSU_POC"           09100000
012815           PERFORM 3300-LOAD-TSAADSU                              09110000
079400        WHEN MQMD-CORRELID = PC-CORRELID-VOIDAFTER                09120000
079500           DISPLAY "*** CORRELATION ID IS: VOIDAFTER"             09130000
079600           PERFORM 3500-CREATE-VOIDAFTER-FILE                     09140000
079700        WHEN MQMD-CORRELID = PC-CORRELID-RGST-OVSH                09150000
079800           DISPLAY "*** CORRELATION ID IS: SAT_RGST_BAL_OVSH"     09160000
079900           PERFORM 3600-LOAD-RGST-OVSH                            09170000
080000        WHEN MQMD-CORRELID = PC-CORRELID-SAFE-OVSH                09180000
080100           DISPLAY "*** CORRELATION ID IS: SAT_SAFE_OVSH"         09190000
080200           PERFORM 3700-LOAD-SAFE-OVSH                            09200000
080300        WHEN OTHER                                                09210000
219606*          PERFORM 7100-PUT-MSG-ON-DLQ                            09220005
219606           DISPLAY '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'     09230005
219606           DISPLAY ' ERROR IN 2000-PROCESS-MESSAGES'              09240005
219606           DISPLAY ' CANNOT PROCESS CORRELID ' MQMD-CORRELID      09250005
219606           DISPLAY ' INPUT REC = ' PV-MESSAGE-LOG                 09260005
219606           DISPLAY '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'     09270005
080500     END-EVALUATE.                                                09280000
080600                                                                  09290000
080700     PERFORM 8000-COMMIT-DB2.                                     09300000
080800     PERFORM 8100-COMMIT-MQ.                                      09310000
080900     PERFORM 7000-MQGET-MSG.                                      09320000
081000                                                                  09330000
081100*2000-END-PROCESS-MESSAGES.                                       09340000
081200                                                                  09350000
081300* ------------------------------------------------------------- * 09360000
081400* LOAD ADJUSTED DEPOSITS INFORMATION TO TSAADDP                   09370000
081500* ------------------------------------------------------------- * 09380000
081600                                                                  09390000
081700 3100-LOAD-TSAADDP.                                               09400000
081800                                                                  09410000
081900     SET PV-MSG-INDEX TO 1.                                       09420000
082000                                                                  09430000
082100     SET PV-MSG-INDEX DOWN BY 1.                                  09440000
082200     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 09450000
082300       INITIALIZE PS-END-OF-RECORD-IND                            09460000
082400                  DCLTSAADDP                                      09470000
082500       MOVE 1 TO PV-RECORD-ELEMENT                                09480000
082600       PERFORM UNTIL PS-END-OF-RECORD                             09490000
082700         MOVE 1 TO PV-HOLD-FIELD-POS                              09500000
082800         INITIALIZE PS-END-OF-ITEM-IND                            09510000
082900                    PV-HOLD-FIELD                                 09520000
083000         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       09530000
083100            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                09540000
083200            IF NOT(PS-END-OF-ITEM)                                09550000
083300               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       09560000
083400                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          09570000
083500               ADD 1 TO PV-HOLD-FIELD-POS                         09580000
083600            END-IF                                                09590000
083700                                                                  09600000
083800         END-PERFORM                                              09610000
083900         IF NOT PS-END-OF-RECORD                                  09620000
084000           EVALUATE TRUE                                          09630000
084100              WHEN PV-RECORD-ELEMENT = 1                          09640000
084200                   MOVE PV-HOLD-FIELD      TO SAADDP-SLS-DTE      09650000
084300              WHEN PV-RECORD-ELEMENT = 2                          09660000
084400                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  09670000
084500                                         TO SAADDP-STR-NBR        09680000
084600              WHEN PV-RECORD-ELEMENT = 3                          09690000
084700                   MOVE PV-HOLD-FIELD      TO SAADDP-TNDR-TYP-CDE 09700000
084800              WHEN PV-RECORD-ELEMENT = 4                          09710000
084900                   MOVE PV-HOLD-FIELD      TO SAADDP-STRT-TMST    09720000
085000              WHEN PV-RECORD-ELEMENT = 5                          09730000
085100                   MOVE 0 TO PV-COUNT-1                           09740000
085200**        insert a decimal and 00 for the whole dollar values     09750000
085300**        coming from the store. This will aid in breaking apart  09760000
085400**        the field between left of decimal and right of decimal. 09770000
085500                   INSPECT PV-HOLD-FIELD                          09780000
085600                      REPLACING ALL "   " BY ".00"                09790000
085700                   INSPECT PV-HOLD-FIELD                          09800000
085800                      TALLYING PV-COUNT-1                         09810000
085900                             FOR CHARACTERS BEFORE INITIAL '.'    09820000
086000                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            09830000
086100                      PV-HOLD-NUM-9                               09840000
086200***     check if amount supplied by the store does not contain    09850000
086300***     a cents column. (i.e. 4.5 for 4.50) and replace the       09860000
086400***     inserted decimal point with a 0.                          09870000
086500                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      09880000
086600                        PV-HOLD-NUM2                              09890000
086700                   IF PV-HOLD-NUM2 = "."                          09900000
086800                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   09910000
086900                           PV-HOLD-NUM-DECIMAL                    09920000
087000                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   09930000
087100                           PV-HOLD-NUM-DECIMAL                    09940000
087200                   ELSE                                           09950000
087300                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   09960000
087400                           PV-HOLD-NUM-DECIMAL                    09970000
087500                   END-IF                                         09980000
087600                   COMPUTE PV-HOLD-NUM-11 = PV-HOLD-NUM-9  *  100 09990000
087700***       check to see if amount had a negative sign and multiply 10000000
087800***       by -1. The negative sign is lost in the conversion      10010000
087900                   MOVE 0 TO PV-COUNT-1                           10020000
088000                   INSPECT PV-HOLD-FIELD                          10030000
088100                      TALLYING PV-COUNT-1 FOR ALL '-'             10040000
088200                   IF PV-COUNT-1 >= 1                             10050000
088300                     COMPUTE PV-HOLD-NUM-11 = PV-HOLD-NUM-11 * -1 10060000
088400                     COMPUTE PV-HOLD-NUM-DECIMAL =                10070000
088500                             PV-HOLD-NUM-DECIMAL * -1             10080000
088600                   END-IF                                         10090000
088700                   ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-11      10100000
088800                       GIVING PV-HOLD-NUM-11                      10110000
088900                   COMPUTE PH-HOLD-SAADDP-TNDR-AMT                10120000
089000                                 = PV-HOLD-NUM-11 / 100           10130000
089100                  MOVE PH-HOLD-SAADDP-TNDR-AMT TO SAADDP-TNDR-AMT 10140000
089200              WHEN PV-RECORD-ELEMENT = 6                          10150000
089300                   MOVE PV-HOLD-FIELD      TO SAADDP-SRC-CDE      10160000
089400           END-EVALUATE                                           10170000
089500           ADD 1 TO PV-RECORD-ELEMENT                             10180000
089600         END-IF                                                   10190000
089700       END-PERFORM                                                10200000
P11718                                                                  10210000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             10220000
P11718       MOVE SAADDP-STR-NBR    TO PH-STR-CHRGD-NBR                 10230000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         10240000
P11718                                                                  10250000
P11718       IF PS-STORE-FOUND                                          10260000
089800          INITIALIZE PS-CALL-COMPLETE-IND                         10270000
089900                     PA-RETRY-COUNT                               10280000
090000          MOVE SAADDP-STR-NBR         TO PH-HOLD-STR-NBR          10290000
090100          MOVE SAADDP-SLS-DTE         TO PH-HOLD-SLS-DTE          10300000
012815          IF PS-POC-STORE-FOUND                                   10310000
012815              MOVE 'C'                TO PH-HOLD-REG-TYP-CDE      10320000
012815          ELSE                                                    10330000
012815              MOVE 'S'                TO PH-HOLD-REG-TYP-CDE      10340000
012815          END-IF                                                  10350000
090200          PERFORM 5400-CHECK-DELETE-DATA                          10360000
090300          PERFORM 5520-SEARCH-LOCK-TABLE                          10370000
090400          IF PS-STORE-NOT-LOCKED                                  10380000
090500             PERFORM 6100-INSERT-ADJ-DEPOSIT                      10390000
090600               UNTIL PS-CALL-COMPLETED                            10400000
090700          END-IF                                                  10410000
P11718       END-IF                                                     10420000
090800     END-PERFORM.                                                 10430000
090900                                                                  10440000
091000*3100-END-LOAD-TSAADDP.                                           10450000
091100                                                                  10460000
091200* ------------------------------------------------------------- * 10470000
091300* LOAD ADJUSTED PAID OUT/CASH RECEIVED TO TSAADPC                 10480000
091400* ------------------------------------------------------------- * 10490000
091500                                                                  10500000
091600 3200-LOAD-TSAADPC.                                               10510000
091700                                                                  10520000
091800     SET PV-MSG-INDEX TO 1.                                       10530000
091900                                                                  10540000
092000     SET PV-MSG-INDEX DOWN BY 1.                                  10550000
092100     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 10560000
092200       INITIALIZE PS-END-OF-RECORD-IND                            10570000
092300                  DCLTSAADPC                                      10580000
092400       MOVE 1 TO PV-RECORD-ELEMENT                                10590000
092500       PERFORM UNTIL PS-END-OF-RECORD                             10600000
092600         MOVE 1 TO  PV-HOLD-FIELD-POS                             10610000
092700         INITIALIZE PS-END-OF-ITEM-IND                            10620000
092800                    PV-HOLD-FIELD                                 10630000
092900         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       10640000
093000            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                10650000
093100            IF NOT(PS-END-OF-ITEM)                                10660000
093200               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       10670000
093300                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          10680000
093400               ADD 1 TO PV-HOLD-FIELD-POS                         10690000
093500            END-IF                                                10700000
093600                                                                  10710000
093700         END-PERFORM                                              10720000
093800         IF NOT PS-END-OF-RECORD                                  10730000
093900           EVALUATE TRUE                                          10740000
094000              WHEN PV-RECORD-ELEMENT = 1                          10750000
094100                   MOVE PV-HOLD-FIELD      TO SAADPC-SLS-DTE      10760000
094200              WHEN PV-RECORD-ELEMENT = 2                          10770000
094300                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  10780000
094400                                            TO SAADPC-STR-NBR     10790000
094500              WHEN PV-RECORD-ELEMENT = 3                          10800000
094600                   MOVE 0 TO PV-COUNT-1                           10810000
094700**        insert a decimal and 00 for the whole dollar values     10820000
094800**        coming from the store. This will aid in breaking apart  10830000
094900**        the field between left of decimal and right of decimal. 10840000
095000                   INSPECT PV-HOLD-FIELD                          10850000
095100                      REPLACING ALL "   " BY ".00"                10860000
095200                   INSPECT PV-HOLD-FIELD                          10870000
095300                      TALLYING PV-COUNT-1                         10880000
095400                             FOR CHARACTERS BEFORE INITIAL '.'    10890000
095500                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            10900000
095600                      PV-HOLD-NUM-5                               10910000
095700***     check if amount supplied by the store does not contain    10920000
095800***     a cents column. (i.e. 4.5 for 4.50) and replace the       10930000
095900***     inserted decimal point with a 0.                          10940000
096000                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      10950000
096100                       PV-HOLD-NUM2                               10960000
096200                   IF PV-HOLD-NUM2 = "."                          10970000
096300                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   10980000
096400                           PV-HOLD-NUM-DECIMAL                    10990000
096500                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   11000000
096600                           PV-HOLD-NUM-DECIMAL                    11010000
096700                   ELSE                                           11020000
096800                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   11030000
096900                           PV-HOLD-NUM-DECIMAL                    11040000
097000                   END-IF                                         11050000
097100                   COMPUTE PV-HOLD-NUM-7 = PV-HOLD-NUM-5  *  100  11060000
097200***       check to see if amount had a negative sign and multiply 11070000
097300***       by -1. The negative sign is lost in the conversion      11080000
097400                   MOVE 0 TO PV-COUNT-1                           11090000
097500                   INSPECT PV-HOLD-FIELD                          11100000
097600                      TALLYING PV-COUNT-1 FOR ALL '-'             11110000
097700                   IF PV-COUNT-1 >= 1                             11120000
097800                      COMPUTE PV-HOLD-NUM-7 = PV-HOLD-NUM-7 * -1  11130000
097900                      COMPUTE PV-HOLD-NUM-DECIMAL =               11140000
098000                              PV-HOLD-NUM-DECIMAL * -1            11150000
098100                   END-IF                                         11160000
098200                  ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-7 GIVING 11170000
098300                      PV-HOLD-NUM-7                               11180000
098400                   COMPUTE PH-HOLD-SAADPC-ORIG-CSH =              11190000
098500                                     PV-HOLD-NUM-7   /  100       11200000
098600                   MOVE PH-HOLD-SAADPC-ORIG-CSH TO                11210000
098700                                     SAADPC-ORIG-CSH-AMT          11220000
098800              WHEN PV-RECORD-ELEMENT = 4                          11230000
098900                   MOVE PV-HOLD-FIELD      TO SAADPC-ADJ-IND      11240000
099000              WHEN PV-RECORD-ELEMENT = 5                          11250000
099100                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  11260000
099200                                         TO SAADPC-STR-CHRGD-NBR  11270000
099300              WHEN PV-RECORD-ELEMENT = 6                          11280000
099400                   MOVE PV-HOLD-FIELD      TO SAADPC-RSN-CDE      11290000
099500              WHEN PV-RECORD-ELEMENT = 7                          11300000
099600                   MOVE PV-HOLD-FIELD      TO SAADPC-CMNT-TXT     11310000
099700              WHEN PV-RECORD-ELEMENT = 8                          11320000
099800                   MOVE PV-HOLD-FIELD TO PH-ACTIVITY-TYPE-CODE    11330000
099900           END-EVALUATE                                           11340000
100000           ADD 1 TO PV-RECORD-ELEMENT                             11350000
100100         END-IF                                                   11360000
100200       END-PERFORM                                                11370000
100300                                                                  11380000
100400       INITIALIZE PS-CALL-COMPLETE-IND                            11390000
100500                  PA-RETRY-COUNT                                  11400000
100600       PERFORM 5200-GET-MAX-SEQ-TSAADPC UNTIL PS-CALL-COMPLETED   11410000
100700       MOVE PH-HOLD-SEQ-NBR      TO SAADPC-SEQ-NBR                11420000
100800       MOVE SAADPC-STR-CHRGD-NBR TO PH-STR-CHRGD-NBR              11430000
100900       PERFORM 5000-DETERMINE-VALID-STORE                         11440000
101000       IF PS-STORE-FOUND THEN                                     11450000
101100          MOVE "Y" TO SAADPC-VLD-STR-CHRGD-IND                    11460000
101200       ELSE                                                       11470000
101300          MOVE "N" TO SAADPC-VLD-STR-CHRGD-IND                    11480000
101400       END-IF                                                     11490000
101500       EVALUATE TRUE                                              11500000
101600          WHEN PH-ACTIVITY-TYPE-CODE = "PO"                       11510000
101700               MOVE "P" TO SAADPC-TYP-CDE                         11520000
101800          WHEN PH-ACTIVITY-TYPE-CODE = "CR"                       11530000
101900               MOVE "C" TO SAADPC-TYP-CDE                         11540000
102000       END-EVALUATE                                               11550000
102100       MOVE SAADPC-ORIG-CSH-AMT TO SAADPC-ADJ-CSH-AMT             11560000
P11718                                                                  11570000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             11580000
P11718       MOVE SAADPC-STR-NBR    TO PH-STR-CHRGD-NBR                 11590000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         11600000
P11718                                                                  11610000
P11718       IF PS-STORE-FOUND                                          11620000
102200          INITIALIZE PS-CALL-COMPLETE-IND                         11630000
102300                     PA-RETRY-COUNT                               11640000
102400          MOVE SAADPC-STR-NBR         TO PH-HOLD-STR-NBR          11650000
102500          MOVE SAADPC-SLS-DTE         TO PH-HOLD-SLS-DTE          11660000
012815          IF PS-POC-STORE-FOUND                                   11670000
012815              MOVE 'C'                TO PH-HOLD-REG-TYP-CDE      11680000
012815          ELSE                                                    11690000
012815              MOVE 'S'                TO PH-HOLD-REG-TYP-CDE      11700000
012815          END-IF                                                  11710000
102600          PERFORM 5400-CHECK-DELETE-DATA                          11720000
102700          PERFORM 5520-SEARCH-LOCK-TABLE                          11730000
102800          IF PS-STORE-NOT-LOCKED                                  11740000
102900             PERFORM 6200-INSERT-PAIDOUT-CASHRCVD                 11750000
103000                    UNTIL PS-CALL-COMPLETED                       11760000
103100          END-IF                                                  11770000
P11718       END-IF                                                     11780000
103200     END-PERFORM.                                                 11790000
103300                                                                  11800000
103400*3200-END-LOAD-TSAADPC.                                           11810000
103500                                                                  11820000
103600* ------------------------------------------------------------- * 11830000
103700* LOAD ADJUSTED SUMMARY INFORMATION TO TSAADSU                    11840000
103800* ------------------------------------------------------------- * 11850000
103900                                                                  11860000
104000 3300-LOAD-TSAADSU.                                               11870000
104100                                                                  11880000
104200     SET PV-MSG-INDEX TO 1.                                       11890000
104300                                                                  11900000
104400     SET PV-MSG-INDEX DOWN BY 1.                                  11910000
104500     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 11920000
104600       INITIALIZE PS-END-OF-RECORD-IND                            11930000
104700                  DCLTSAADSU                                      11940000
104800       MOVE 1 TO PV-RECORD-ELEMENT                                11950000
104900       PERFORM UNTIL PS-END-OF-RECORD                             11960000
105000         MOVE 1 TO PV-HOLD-FIELD-POS                              11970000
105100         INITIALIZE PS-END-OF-ITEM-IND                            11980000
105200                    PV-HOLD-FIELD                                 11990000
105300         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       12000000
105400            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                12010000
105500            IF NOT(PS-END-OF-ITEM)                                12020000
105600               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       12030000
105700                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          12040000
105800               ADD 1 TO PV-HOLD-FIELD-POS                         12050000
105900            END-IF                                                12060000
106000                                                                  12070000
106100         END-PERFORM                                              12080000
106200         IF NOT PS-END-OF-RECORD                                  12090000
106300           EVALUATE TRUE                                          12100000
106400              WHEN PV-RECORD-ELEMENT = 1                          12110000
106500                   MOVE PV-HOLD-FIELD      TO SAADSU-SLS-DTE      12120000
012815                                              SAT00002-SLS-DTE    12130000
106600              WHEN PV-RECORD-ELEMENT = 2                          12140000
106700                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  12150000
106800                                         TO SAADSU-STR-NBR        12160000
012815                                            SAT00002-STR-NBR      12170000
106900              WHEN PV-RECORD-ELEMENT = 3                          12180000
107000                   MOVE PV-HOLD-FIELD      TO SAADSU-SUM-CTG-CDE  12190000
012815                                            SAT00002-SUM-CTG-CDE  12200000
107100              WHEN PV-RECORD-ELEMENT = 4                          12210000
107200                   MOVE 0 TO PV-COUNT-1                           12220000
107300**        insert a decimal and 00 for the whole dollar values     12230000
107400**        coming from the store. This will aid in breaking apart  12240000
107500**        the field between left of decimal and right of decimal. 12250000
107600                   INSPECT PV-HOLD-FIELD                          12260000
107700                      REPLACING ALL "   " BY ".00"                12270000
107800                   INSPECT PV-HOLD-FIELD                          12280000
107900                      TALLYING PV-COUNT-1                         12290000
108000                             FOR CHARACTERS BEFORE INITIAL '.'    12300000
108100                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            12310000
108200                      PV-HOLD-NUM-9                               12320000
108300***     check if amount supplied by the store does not contain    12330000
108400***     a cents column. (i.e. 4.5 for 4.50) and replace the       12340000
108500***     inserted decimal point with a 0.                          12350000
108600                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      12360000
108700                       PV-HOLD-NUM2                               12370000
108800                   IF PV-HOLD-NUM2 = "."                          12380000
108900                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   12390000
109000                           PV-HOLD-NUM-DECIMAL                    12400000
109100                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   12410000
109200                           PV-HOLD-NUM-DECIMAL                    12420000
109300                   ELSE                                           12430000
109400                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   12440000
109500                           PV-HOLD-NUM-DECIMAL                    12450000
109600                   END-IF                                         12460000
109700                   COMPUTE PV-HOLD-NUM-11 = PV-HOLD-NUM-9  *  100 12470000
109800***       check to see if amount had a negative sign and multiply 12480000
109900***       by -1. The negative sign is lost in the conversion      12490000
110000                   MOVE 0 TO PV-COUNT-1                           12500000
110100                   INSPECT PV-HOLD-FIELD                          12510000
110200                      TALLYING PV-COUNT-1 FOR ALL '-'             12520000
110300                   IF PV-COUNT-1 >= 1                             12530000
110400                     COMPUTE PV-HOLD-NUM-11 = PV-HOLD-NUM-11 * -1 12540000
110500                      COMPUTE PV-HOLD-NUM-DECIMAL =               12550000
110600                              PV-HOLD-NUM-DECIMAL * -1            12560000
110700                   END-IF                                         12570000
110800                   ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-11      12580000
110900                       GIVING PV-HOLD-NUM-11                      12590000
111000                   COMPUTE PH-HOLD-SAADSU-ORIG-AMT =              12600000
111100                                     PV-HOLD-NUM-11  /  100       12610000
111200                   MOVE PH-HOLD-SAADSU-ORIG-AMT TO                12620000
111300                                     SAADSU-ORIG-AMT              12630000
012815                                   SAT00002-ORIG-AMT              12640000
111400              WHEN PV-RECORD-ELEMENT = 5                          12650000
111500                   MOVE PV-HOLD-FIELD      TO SAADSU-ADJ-IND      12660000
012815                                            SAT00002-ADJ-IND      12670000
111600           END-EVALUATE                                           12680000
111700           ADD 1 TO PV-RECORD-ELEMENT                             12690000
111800         END-IF                                                   12700000
111900       END-PERFORM                                                12710000
112000                                                                  12720000
112100***   For register over/short and safe over/short,                12730000
112200***   corporate needs to store the value                          12740000
112300***   as positive. (Just the opposite of the stores cash office.) 12750000
112400       IF SAADSU-SUM-CTG-CDE  = 'ROS' OR                          12760000
112500          SAADSU-SUM-CTG-CDE  = 'SOS' THEN                        12770000
112600          MULTIPLY SAADSU-ORIG-AMT BY -1 GIVING SAADSU-ORIG-AMT   12780000
012815          MOVE SAADSU-ORIG-AMT TO SAT00002-ORIG-AMT               12790000
112700       END-IF                                                     12800000
112800                                                                  12810000
112900       MOVE SAADSU-ORIG-AMT TO SAADSU-ADJ-AMT                     12820000
012815                               SAT00002-ADJ-AMT                   12830000
P11718                                                                  12840000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             12850000
P11718       MOVE SAADSU-STR-NBR    TO PH-STR-CHRGD-NBR                 12860000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         12870000
P11718                                                                  12880000
P11718       IF PS-STORE-FOUND                                          12890000
113000          INITIALIZE PS-CALL-COMPLETE-IND                         12900000
113100                     PA-RETRY-COUNT                               12910000
113200          MOVE SAADSU-STR-NBR         TO PH-HOLD-STR-NBR          12920000
113300          MOVE SAADSU-SLS-DTE         TO PH-HOLD-SLS-DTE          12930000
012815          IF PS-POC-STORE-FOUND                                   12940000
012815              MOVE 'C'                TO PH-HOLD-REG-TYP-CDE      12950000
012815          ELSE                                                    12960000
012815              MOVE 'S'                TO PH-HOLD-REG-TYP-CDE      12970000
012815          END-IF                                                  12980000
113400          PERFORM 5400-CHECK-DELETE-DATA                          12990000
113500          PERFORM 5520-SEARCH-LOCK-TABLE                          13000000
113600          IF PS-STORE-NOT-LOCKED                                  13010000
012815             PERFORM 6350-INSERT-ADJ-SUMMARY                      13020000
012815                    UNTIL PS-CALL-COMPLETED                       13030000
012815             PERFORM 6365-SELECT-CTG-SUM-TOT                      13040000
012815             PERFORM 6375-INSERT-ADJ-SUMMARY                      13050000
113900          END-IF                                                  13060000
P11718       END-IF                                                     13070000
114000     END-PERFORM.                                                 13080000
114100                                                                  13090000
114200*3300-END-LOAD-TSAADSU                                            13100000
114300                                                                  13110000
114400* ------------------------------------------------------------- * 13120000
114500* LOAD SUMMARY TOTALS INFORMATION TO TSASUM                       13130000
114600* ------------------------------------------------------------- * 13140000
114700                                                                  13150000
114800 3400-LOAD-TSASUM.                                                13160000
114900                                                                  13170000
115000     SET PV-MSG-INDEX TO 1.                                       13180000
115100                                                                  13190000
115200     SET PV-MSG-INDEX DOWN BY 1.                                  13200000
115300     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 13210000
115400       INITIALIZE PS-END-OF-RECORD-IND                            13220000
115500                  PS-CASH-ADVANCE-IND                             13230000
115600                  PS-NO-RECORD-FOUND-IND                          13240000
115700                  DCLTSASUM                                       13250000
115800       MOVE 1 TO PV-RECORD-ELEMENT                                13260000
115900       PERFORM UNTIL PS-END-OF-RECORD                             13270000
116000         MOVE 1 TO  PV-HOLD-FIELD-POS                             13280000
116100         INITIALIZE PS-END-OF-ITEM-IND                            13290000
116200                    PV-HOLD-FIELD                                 13300000
116300         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       13310000
116400            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                13320000
116500            IF NOT(PS-END-OF-ITEM)                                13330000
116600               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       13340000
116700                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          13350000
116800               ADD 1 TO PV-HOLD-FIELD-POS                         13360000
116900            END-IF                                                13370000
117000                                                                  13380000
117100         END-PERFORM                                              13390000
117200         IF NOT PS-END-OF-RECORD                                  13400000
117300           EVALUATE TRUE                                          13410000
117400              WHEN PV-RECORD-ELEMENT = 1                          13420000
117500                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  13430000
117600                                         TO SASUM-STR-NBR         13440000
117700              WHEN PV-RECORD-ELEMENT = 2                          13450000
117800                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  13460000
117900                                         TO SASUM-RGST-ID         13470000
118000              WHEN PV-RECORD-ELEMENT = 3                          13480000
118100                   MOVE PV-HOLD-FIELD    TO SASUM-SUM-TYP-CDE     13490000
118200              WHEN PV-RECORD-ELEMENT = 4                          13500000
118300                   IF PV-HOLD-FIELD = "CSHA"                      13510000
118400                      SET PS-CASH-ADVANCE TO TRUE                 13520000
118500                      MOVE "CSH" TO  SASUM-SUM-CTG-CDE            13530000
118600                   ELSE                                           13540000
118700                      MOVE PV-HOLD-FIELD TO SASUM-SUM-CTG-CDE     13550000
118800                   END-IF                                         13560000
118900              WHEN PV-RECORD-ELEMENT = 5                          13570000
119000                   MOVE 0 TO PV-COUNT-1                           13580000
119100**        insert a decimal and 00 for the whole dollar values     13590000
119200**        coming from the store. This will aid in breaking apart  13600000
119300**        the field between left of decimal and right of decimal. 13610000
119400                   INSPECT PV-HOLD-FIELD                          13620000
119500                      REPLACING ALL "   " BY ".00"                13630000
119600                   INSPECT PV-HOLD-FIELD                          13640000
119700                      TALLYING PV-COUNT-1                         13650000
119800                             FOR CHARACTERS BEFORE INITIAL '.'    13660000
119900                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            13670000
120000                      PV-HOLD-NUM-7                               13680000
120100***     check if amount supplied by the store does not contain    13690000
120200***     a cents column. (i.e. 4.5 for 4.50) and replace the       13700000
120300***     inserted decimal point with a 0.                          13710000
120400                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      13720000
120500                        PV-HOLD-NUM2                              13730000
120600                   IF PV-HOLD-NUM2 = "."                          13740000
120700                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   13750000
120800                           PV-HOLD-NUM-DECIMAL                    13760000
120900                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   13770000
121000                           PV-HOLD-NUM-DECIMAL                    13780000
121100                   ELSE                                           13790000
121200                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   13800000
121300                           PV-HOLD-NUM-DECIMAL                    13810000
121400                   END-IF                                         13820000
121500                   COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-7  *  100  13830000
121600***       check to see if amount had a negative sign and multiply 13840000
121700***       by -1. The negative sign is lost in the conversion      13850000
121800                   MOVE 0 TO PV-COUNT-1                           13860000
121900                   INSPECT PV-HOLD-FIELD                          13870000
122000                      TALLYING PV-COUNT-1 FOR ALL '-'             13880000
122100                   IF PV-COUNT-1 >= 1                             13890000
122200                      COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-9 * -1  13900000
122300                      COMPUTE PV-HOLD-NUM-DECIMAL =               13910000
122400                              PV-HOLD-NUM-DECIMAL * -1            13920000
122500                   END-IF                                         13930000
122600                   ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-9       13940000
122700                       GIVING PV-HOLD-NUM-9                       13950000
122800                   COMPUTE PH-HOLD-SASUM-CTG-AMT =                13960000
122900                                     PV-HOLD-NUM-9   /  100       13970000
123000                   MOVE PH-HOLD-SASUM-CTG-AMT TO SASUM-CTG-AMT    13980000
123100              WHEN PV-RECORD-ELEMENT = 6                          13990000
123200                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  14000000
123300                                         TO SASUM-CTG-NBR-OF-ITM  14010000
123400              WHEN PV-RECORD-ELEMENT = 7                          14020000
123500                   MOVE PV-HOLD-FIELD      TO SASUM-CTG-SRC-CDE   14030000
123600              WHEN PV-RECORD-ELEMENT = 8                          14040000
123700                   MOVE PV-HOLD-FIELD      TO EPPART-SLS-DTE      14050000
123800           END-EVALUATE                                           14060000
123900           ADD 1 TO PV-RECORD-ELEMENT                             14070000
124000         END-IF                                                   14080000
124100       END-PERFORM                                                14090000
124200                                                                  14100000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             14110000
P11718       MOVE SASUM-STR-NBR     TO PH-STR-CHRGD-NBR                 14120000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         14130000
P11718                                                                  14140000
P11718       IF PS-STORE-FOUND                                          14150000
124300          INITIALIZE PS-CALL-COMPLETE-IND                         14160000
124400                     PA-RETRY-COUNT                               14170000
124500          PERFORM 5300-GET-PARTITION-NBR                          14180000
124600                    UNTIL PS-CALL-COMPLETED                       14190000
124700          MOVE PH-HOLD-PARTN-NBR   TO SASUM-PARTN-NBR             14200000
124800** For cash advances, read the table and get the current cash amt.14210000
124900** Subtract from that value the amount of the cash advance        14220000
125000          IF PS-CASH-ADVANCE                                      14230000
125100             INITIALIZE PS-CALL-COMPLETE-IND                      14240000
125200                        PA-RETRY-COUNT                            14250000
125300             PERFORM 6500-SELECT-SUMMARY-TOTALS                   14260000
125400                    UNTIL PS-CALL-COMPLETED                       14270000
125500             IF PS-NO-RECORD-FOUND                                14280000
125600                COMPUTE SASUM-CTG-AMT = SASUM-CTG-AMT * -1        14290000
125700                INITIALIZE PS-CALL-COMPLETE-IND                   14300000
125800                           PA-RETRY-COUNT                         14310000
125900                MOVE SASUM-STR-NBR    TO PH-HOLD-STR-NBR          14320000
126000                MOVE EPPART-SLS-DTE   TO PH-HOLD-SLS-DTE          14330000
012815                IF PS-POC-STORE-FOUND                             14340000
012815                    MOVE 'C'          TO PH-HOLD-REG-TYP-CDE      14350000
012815                ELSE                                              14360000
012815                    MOVE 'S'          TO PH-HOLD-REG-TYP-CDE      14370000
012815                END-IF                                            14380000
126100                PERFORM 5400-CHECK-DELETE-DATA                    14390000
126200                PERFORM 5520-SEARCH-LOCK-TABLE                    14400000
126300                IF PS-STORE-NOT-LOCKED                            14410000
126400                   PERFORM 6400-INSERT-SUMMARY-TOTALS             14420000
126500                       UNTIL PS-CALL-COMPLETED                    14430000
126600                END-IF                                            14440000
126700             ELSE                                                 14450000
126800                COMPUTE SASUM-CTG-AMT =  SASUM-CTG-AMT +          14460000
126900                                    (PH-HOLD-SASUM-CTG-AMT * -1)  14470000
127000                INITIALIZE PS-CALL-COMPLETE-IND                   14480000
127100                           PA-RETRY-COUNT                         14490000
127200                MOVE SASUM-STR-NBR    TO PH-HOLD-STR-NBR          14500000
127300                MOVE EPPART-SLS-DTE   TO PH-HOLD-SLS-DTE          14510000
012815                IF PS-POC-STORE-FOUND                             14520000
012815                    MOVE 'C'          TO PH-HOLD-REG-TYP-CDE      14530000
012815                ELSE                                              14540000
012815                    MOVE 'S'          TO PH-HOLD-REG-TYP-CDE      14550000
012815                END-IF                                            14560000
127400                PERFORM 5400-CHECK-DELETE-DATA                    14570000
127500                PERFORM 5520-SEARCH-LOCK-TABLE                    14580000
127600                IF PS-STORE-NOT-LOCKED                            14590000
127700                   PERFORM 6600-UPDATE-SUMMARY-TOTALS             14600000
127800                       UNTIL PS-CALL-COMPLETED                    14610000
127900                END-IF                                            14620000
128000             END-IF                                               14630000
128100          ELSE                                                    14640000
128200             INITIALIZE PS-CALL-COMPLETE-IND                      14650000
128300                        PA-RETRY-COUNT                            14660000
128400             MOVE SASUM-STR-NBR       TO PH-HOLD-STR-NBR          14670000
128500             MOVE EPPART-SLS-DTE      TO PH-HOLD-SLS-DTE          14680000
012815             IF PS-POC-STORE-FOUND                                14690000
012815                 MOVE 'C'             TO PH-HOLD-REG-TYP-CDE      14700000
012815             ELSE                                                 14710000
012815                 MOVE 'S'             TO PH-HOLD-REG-TYP-CDE      14720000
012815             END-IF                                               14730000
128600             PERFORM 5400-CHECK-DELETE-DATA                       14740000
128700             PERFORM 5520-SEARCH-LOCK-TABLE                       14750000
128800             IF PS-STORE-NOT-LOCKED                               14760000
128900                PERFORM 6400-INSERT-SUMMARY-TOTALS                14770000
129000                    UNTIL PS-CALL-COMPLETED                       14780000
129100             END-IF                                               14790000
129200          END-IF                                                  14800000
P11718       END-IF                                                     14810000
129300     END-PERFORM.                                                 14820000
129400                                                                  14830000
129500*3400-END-LOAD-TSASUM                                             14840000
129600                                                                  14850000
129700* ------------------------------------------------------------- * 14860000
129800* CREATE VOID AFTER FILE                                          14870000
129900* ------------------------------------------------------------- * 14880000
130000                                                                  14890000
130100 3500-CREATE-VOIDAFTER-FILE.                                      14900000
130200                                                                  14910000
130300     SET PV-MSG-INDEX TO 1.                                       14920000
130400                                                                  14930000
130500     SET PV-MSG-INDEX DOWN BY 1.                                  14940000
130600     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 14950000
130700       INITIALIZE PS-END-OF-RECORD-IND                            14960000
130800       MOVE 1 TO PV-RECORD-ELEMENT                                14970000
130900       INITIALIZE CO001-VOID-AFTER-RECORD                         14980000
131000       PERFORM UNTIL PS-END-OF-RECORD                             14990000
131100         MOVE 1 TO PV-HOLD-FIELD-POS                              15000000
131200         INITIALIZE PS-END-OF-ITEM-IND                            15010000
131300                    PV-HOLD-FIELD                                 15020000
131400         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       15030000
131500            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                15040000
131600            IF NOT(PS-END-OF-ITEM)                                15050000
131700               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       15060000
131800                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          15070000
131900               ADD 1 TO PV-HOLD-FIELD-POS                         15080000
132000            END-IF                                                15090000
132100                                                                  15100000
132200         END-PERFORM                                              15110000
132300         IF NOT PS-END-OF-RECORD                                  15120000
132400           EVALUATE TRUE                                          15130000
132500              WHEN PV-RECORD-ELEMENT = 1                          15140000
132600                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  15150000
132700                                     TO CO001-STORE-NUMBER        15160000
132800              WHEN PV-RECORD-ELEMENT = 2                          15170000
132900                   MOVE PV-HOLD-FIELD  TO CO001-BALANCE-DATE      15180000
133000              WHEN PV-RECORD-ELEMENT = 3                          15190000
133100                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  15200000
133200                                     TO CO001-REGISTER-ID         15210000
133300              WHEN PV-RECORD-ELEMENT = 4                          15220000
133400                   MOVE PV-HOLD-FIELD  TO CO001-START-TIMESTAMP   15230000
133500              WHEN PV-RECORD-ELEMENT = 5                          15240000
133600                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  15250000
133700                                     TO CO001-READ-TRANS-NBR      15260000
133800              WHEN PV-RECORD-ELEMENT = 6                          15270000
133900                   MOVE PV-HOLD-FIELD  TO CO001-TENDER-TYPE-CODE  15280000
134000              WHEN PV-RECORD-ELEMENT = 7                          15290000
134100                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  15300000
134200                                     TO CO001-SEQUENCE-NUMBER     15310000
134300              WHEN PV-RECORD-ELEMENT = 8                          15320000
134400                   MOVE PV-HOLD-FIELD  TO CO001-MATCHED-CODE      15330000
134500              WHEN PV-RECORD-ELEMENT = 9                          15340000
134600                   MOVE 0 TO PV-COUNT-1                           15350000
134700**        insert a decimal and 00 for the whole dollar values     15360000
134800**        coming from the store. This will aid in breaking apart  15370000
134900**        the field between left of decimal and right of decimal. 15380000
135000                   INSPECT PV-HOLD-FIELD                          15390000
135100                      REPLACING ALL "   " BY ".00"                15400000
135200                   INSPECT PV-HOLD-FIELD                          15410000
135300                      TALLYING PV-COUNT-1                         15420000
135400                             FOR CHARACTERS BEFORE INITIAL '.'    15430000
135500                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            15440000
135600                      PV-HOLD-NUM-7                               15450000
135700***     check if amount supplied by the store does not contain    15460000
135800***     a cents column. (i.e. 4.5 for 4.50) and replace the       15470000
135900***     inserted decimal point with a 0.                          15480000
136000                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      15490000
136100                        PV-HOLD-NUM2                              15500000
136200                   IF PV-HOLD-NUM2 = "."                          15510000
136300                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   15520000
136400                           PV-HOLD-NUM-DECIMAL                    15530000
136500                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   15540000
136600                           PV-HOLD-NUM-DECIMAL                    15550000
136700                   ELSE                                           15560000
136800                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   15570000
136900                           PV-HOLD-NUM-DECIMAL                    15580000
137000                   END-IF                                         15590000
137100                   COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-7  *  100  15600000
137200***       check to see if amount had a negative sign and multiply 15610000
137300***       by -1. The negative sign is lost in the conversion      15620000
137400                   MOVE 0 TO PV-COUNT-1                           15630000
137500                   INSPECT PV-HOLD-FIELD                          15640000
137600                      TALLYING PV-COUNT-1 FOR ALL '-'             15650000
137700                   IF PV-COUNT-1 >= 1                             15660000
137800                      COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-9 * -1  15670000
137900                      COMPUTE PV-HOLD-NUM-DECIMAL =               15680000
138000                              PV-HOLD-NUM-DECIMAL * -1            15690000
138100                   END-IF                                         15700000
138200                  ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-9 GIVING 15710000
138300                       PV-HOLD-NUM-9                              15720000
138400                   COMPUTE PH-HOLD-MEDIA-AMT                      15730000
138500                               = PV-HOLD-NUM-9 / 100              15740000
138600                   MOVE PH-HOLD-MEDIA-AMT  TO CO001-MEDIA-AMOUNT  15750000
138700              WHEN PV-RECORD-ELEMENT = 10                         15760000
138800                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  15770000
138900                                     TO CO001-TRANSACTION-NBR     15780000
139000           END-EVALUATE                                           15790000
139100           ADD 1 TO PV-RECORD-ELEMENT                             15800000
139200         END-IF                                                   15810000
139300       END-PERFORM                                                15820000
P11718                                                                  15830000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             15840000
P11718       MOVE CO001-STORE-NUMBER TO PH-STR-CHRGD-NBR                15850000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         15860000
P11718                                                                  15870000
P11718       IF PS-STORE-FOUND                                          15880000
139400          INITIALIZE PS-CALL-COMPLETE-IND                         15890000
139500                                                                  15900000
139600          PERFORM 6000-WRITE-VOID-AFTER-RECORD                    15910000
050707                                                                  15920000
      ***  Transfer copybook fields to DCLGEN fields for Insert         15930000
      ***  into the SAT_TRN_VOID_AFT DB2 table.                         15940000
050707          MOVE CO001-BALANCE-DATE     TO SAT00007-SLS-DTE         15950000
050707          MOVE CO001-START-TIMESTAMP  TO SAT00007-STRT-TMST       15960000
050707          MOVE CO001-STORE-NUMBER     TO SAT00007-STR-NBR         15970000
050707          MOVE CO001-REGISTER-ID      TO SAT00007-RGST-ID         15980000
050707          MOVE CO001-SEQUENCE-NUMBER TO SAT00007-TRN-TNDR-SEQ-NBR 15990000
050707          MOVE CO001-TRANSACTION-NBR  TO SAT00007-TRN-NBR         16000000
050707          MOVE CO001-READ-TRANS-NBR   TO SAT00007-VOIDD-TRN-NBR   16010000
050707          MOVE CO001-TENDER-TYPE-CODE TO SAT00007-TNDR-TYP-ID     16020000
050707          MOVE CO001-MEDIA-AMOUNT     TO SAT00007-TRN-TNDR-AMT    16030000
050707          MOVE CO001-MATCHED-CODE   TO SAT00007-TRN-TNDR-MTCH-CDE 16040000
                                                                        16050000
050707          INITIALIZE PS-CALL-COMPLETE-IND                         16060000
050707          PERFORM 6950-INSERT-SAT-TRN-VOID-AFT                    16070000
050707                    UNTIL PS-CALL-COMPLETED                       16080000
050707                                                                  16090000
P11718       END-IF                                                     16100000
139700     END-PERFORM.                                                 16110000
139800                                                                  16120000
139900*3500-END-CREATE-VOIDAFTER-FILE.                                  16130000
140000                                                                  16140000
140100* ------------------------------------------------------------- * 16150000
140200* LOAD REGISTER BALANCE OVER/SHORT TO SAT_RGST_BAL_OVSH           16160000
140300* ------------------------------------------------------------- * 16170000
140400                                                                  16180000
140500 3600-LOAD-RGST-OVSH.                                             16190000
140600                                                                  16200000
140700     SET PV-MSG-INDEX TO 1.                                       16210000
140800                                                                  16220000
140900     SET PV-MSG-INDEX DOWN BY 1.                                  16230000
141000     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 16240000
141100       INITIALIZE PS-END-OF-RECORD-IND                            16250000
141200                  DCLSAT00000                                     16260000
141300       MOVE 1 TO PV-RECORD-ELEMENT                                16270000
141400       PERFORM UNTIL PS-END-OF-RECORD                             16280000
141500         MOVE 1 TO  PV-HOLD-FIELD-POS                             16290000
141600         INITIALIZE PS-END-OF-ITEM-IND                            16300000
141700                    PV-HOLD-FIELD                                 16310000
141800         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       16320000
141900            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                16330000
142000            IF NOT(PS-END-OF-ITEM)                                16340000
142100               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       16350000
142200                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          16360000
142300               ADD 1 TO PV-HOLD-FIELD-POS                         16370000
142400            END-IF                                                16380000
142500                                                                  16390000
142600         END-PERFORM                                              16400000
142700         IF NOT PS-END-OF-RECORD                                  16410000
142800           EVALUATE TRUE                                          16420000
142900              WHEN PV-RECORD-ELEMENT = 1                          16430000
143000                   MOVE PV-HOLD-FIELD      TO SAT00000-SLS-DTE    16440000
143100              WHEN PV-RECORD-ELEMENT = 2                          16450000
143200                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  16460000
143300                                           TO SAT00000-STR-NBR    16470000
143400              WHEN PV-RECORD-ELEMENT = 3                          16480000
143500                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  16490000
143600                                           TO SAT00000-RGST-ID    16500000
143700              WHEN PV-RECORD-ELEMENT = 4                          16510000
143800                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  16520000
143900                                           TO SAT00000-TRN-NBR    16530000
144000              WHEN PV-RECORD-ELEMENT = 5                          16540000
144100                   MOVE PV-HOLD-FIELD      TO SAT00000-TNDR-TYP-ID16550000
144200              WHEN PV-RECORD-ELEMENT = 6                          16560000
144300                   MOVE 0 TO PV-COUNT-1                           16570000
144400**        insert a decimal and 00 for the whole dollar values     16580000
144500**        coming from the store. This will aid in breaking apart  16590000
144600**        the field between left of decimal and right of decimal. 16600000
144700                   INSPECT PV-HOLD-FIELD                          16610000
144800                      REPLACING ALL "   " BY ".00"                16620000
144900                   INSPECT PV-HOLD-FIELD                          16630000
145000                      TALLYING PV-COUNT-1                         16640000
145100                             FOR CHARACTERS BEFORE INITIAL '.'    16650000
145200                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            16660000
145300                      PV-HOLD-NUM-7                               16670000
145400***     check if amount supplied by the store does not contain    16680000
145500***     a cents column. (i.e. 4.5 for 4.50) and replace the       16690000
145600***     inserted decimal point with a 0.                          16700000
145700                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      16710000
145800                       PV-HOLD-NUM2                               16720000
145900                   IF PV-HOLD-NUM2 = "."                          16730000
146000                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   16740000
146100                           PV-HOLD-NUM-DECIMAL                    16750000
146200                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   16760000
146300                           PV-HOLD-NUM-DECIMAL                    16770000
146400                   ELSE                                           16780000
146500                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   16790000
146600                           PV-HOLD-NUM-DECIMAL                    16800000
146700                   END-IF                                         16810000
146800                   COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-7  *  100  16820000
146900***       check to see if amount had a negative sign and multiply 16830000
147000***       by -1. The negative sign is lost in the conversion      16840000
147100                   MOVE 0 TO PV-COUNT-1                           16850000
147200                   INSPECT PV-HOLD-FIELD                          16860000
147300                      TALLYING PV-COUNT-1 FOR ALL '-'             16870000
147400                   IF PV-COUNT-1 >= 1                             16880000
147500                      COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-9 * -1  16890000
147600                      COMPUTE PV-HOLD-NUM-DECIMAL =               16900000
147700                              PV-HOLD-NUM-DECIMAL * -1            16910000
147800                   END-IF                                         16920000
147900                  ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-9 GIVING 16930000
148000                      PV-HOLD-NUM-9                               16940000
148100                   COMPUTE PH-HOLD-RGST-OVSH-AMT =                16950000
148200                                     PV-HOLD-NUM-9   /  100       16960000
148300                   MOVE PH-HOLD-RGST-OVSH-AMT TO                  16970000
148400                                     SAT00000-OVSH-AMT            16980000
148500              WHEN PV-RECORD-ELEMENT = 7                          16990000
148600                   COMPUTE PV-CMNT-TXT-LEN                        17000000
148700                                          = PV-HOLD-FIELD-POS - 1 17010000
148800                   MOVE PV-CMNT-TXT-LEN  TO PV-CMNT-TXT-LEN-SIGN  17020000
148900                   MOVE PV-CMNT-TXT-LEN-SIGN                      17030000
149000                                         TO PV-CMNT-TXT-LEN-COMP  17040000
149100                   MOVE PV-CMNT-TXT-LEN-COMP                      17050000
149200                                         TO SAT00000-CMNT-TXT-LEN 17060000
149300                   MOVE PV-HOLD-FIELD    TO SAT00000-CMNT-TXT-TEXT17070000
149400           END-EVALUATE                                           17080000
149500           ADD 1 TO PV-RECORD-ELEMENT                             17090000
149600         END-IF                                                   17100000
149700       END-PERFORM                                                17110000
149800                                                                  17120000
149900***   For register over/short and safe over/short,                17130000
150000***   corporate needs to store the value                          17140000
150100***   as positive. (Just the opposite of the stores cash office.) 17150000
150200       MULTIPLY SAT00000-OVSH-AMT BY -1 GIVING SAT00000-OVSH-AMT  17160000
150300                                                                  17170000
P11718                                                                  17180000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             17190000
P11718       MOVE SAT00000-STR-NBR  TO PH-STR-CHRGD-NBR                 17200000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         17210000
P11718                                                                  17220000
P11718       IF PS-STORE-FOUND                                          17230000
150400          INITIALIZE PS-CALL-COMPLETE-IND                         17240000
150500                     PA-RETRY-COUNT                               17250000
150600          MOVE SAT00000-STR-NBR       TO PH-HOLD-STR-NBR          17260000
150700          MOVE SAT00000-SLS-DTE       TO PH-HOLD-SLS-DTE          17270000
012815          IF PS-POC-STORE-FOUND                                   17280000
012815              MOVE 'C'                TO PH-HOLD-REG-TYP-CDE      17290000
012815          ELSE                                                    17300000
012815              MOVE 'S'                TO PH-HOLD-REG-TYP-CDE      17310000
012815          END-IF                                                  17320000
150800          PERFORM 5400-CHECK-DELETE-DATA                          17330000
150900          PERFORM 5520-SEARCH-LOCK-TABLE                          17340000
151000          IF PS-STORE-NOT-LOCKED                                  17350000
151100             PERFORM 6800-INSERT-RGST-OVSH                        17360000
151200                    UNTIL PS-CALL-COMPLETED                       17370000
151300          END-IF                                                  17380000
P11718       END-IF                                                     17390000
151400     END-PERFORM.                                                 17400000
151500                                                                  17410000
151600*3600-END-LOAD-RGST-OVSH.                                         17420000
151700                                                                  17430000
151800* ------------------------------------------------------------- * 17440000
151900* LOAD SAFE OVER/SHORT TO SAT_SAFE_OVSH                           17450000
152000* ------------------------------------------------------------- * 17460000
152100                                                                  17470000
152200 3700-LOAD-SAFE-OVSH.                                             17480000
152300                                                                  17490000
152400     SET PV-MSG-INDEX TO 1.                                       17500000
152500                                                                  17510000
152600     SET PV-MSG-INDEX DOWN BY 1.                                  17520000
152700     PERFORM UNTIL PV-MSG-INDEX >= PV-DATA-LENGTH                 17530000
152800       INITIALIZE PS-END-OF-RECORD-IND                            17540000
152900                  DCLSAT00001                                     17550000
153000       MOVE 1 TO PV-RECORD-ELEMENT                                17560000
153100       PERFORM UNTIL PS-END-OF-RECORD                             17570000
153200         MOVE 1 TO  PV-HOLD-FIELD-POS                             17580000
153300         INITIALIZE PS-END-OF-ITEM-IND                            17590000
153400                    PV-HOLD-FIELD                                 17600000
153500         PERFORM UNTIL (PS-END-OF-ITEM OR PS-END-OF-RECORD)       17610000
153600            PERFORM 5100-ADVANCE-N-CHECK-NEXT-BYTE                17620000
153700            IF NOT(PS-END-OF-ITEM)                                17630000
153800               MOVE PV-MSG-CHARACTER-ENTRY(PV-MSG-INDEX) TO       17640000
153900                    PV-HOLD-FIELD (PV-HOLD-FIELD-POS: 1)          17650000
154000               ADD 1 TO PV-HOLD-FIELD-POS                         17660000
154100            END-IF                                                17670000
154200                                                                  17680000
154300         END-PERFORM                                              17690000
154400         IF NOT PS-END-OF-RECORD                                  17700000
154500           EVALUATE TRUE                                          17710000
154600              WHEN PV-RECORD-ELEMENT = 1                          17720000
154700                   MOVE PV-HOLD-FIELD      TO SAT00001-SLS-DTE    17730000
154800              WHEN PV-RECORD-ELEMENT = 2                          17740000
154900                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  17750000
155000                                           TO SAT00001-STR-NBR    17760000
155100              WHEN PV-RECORD-ELEMENT = 3                          17770000
155200                   MOVE PV-HOLD-FIELD      TO SAT00001-CRE-TMST   17780000
155300              WHEN PV-RECORD-ELEMENT = 4                          17790000
155400                   MOVE PV-HOLD-FIELD(1:(PV-HOLD-FIELD-POS - 1))  17800000
155500                                      TO SAT00001-SAFE-CPT-TYP-CDE17810000
155600              WHEN PV-RECORD-ELEMENT = 5                          17820000
155700                   MOVE PV-HOLD-FIELD      TO SAT00001-TNDR-TYP-ID17830000
155800              WHEN PV-RECORD-ELEMENT = 6                          17840000
155900                   MOVE PV-HOLD-FIELD    TO SAT00001-ACTVY-TYP-CDE17850000
156000              WHEN PV-RECORD-ELEMENT = 7                          17860000
156100                   MOVE 0 TO PV-COUNT-1                           17870000
156200**        insert a decimal and 00 for the whole dollar values     17880000
156300**        coming from the store. This will aid in breaking apart  17890000
156400**        the field between left of decimal and right of decimal. 17900000
156500                   INSPECT PV-HOLD-FIELD                          17910000
156600                      REPLACING ALL "   " BY ".00"                17920000
156700                   INSPECT PV-HOLD-FIELD                          17930000
156800                      TALLYING PV-COUNT-1                         17940000
156900                             FOR CHARACTERS BEFORE INITIAL '.'    17950000
157000                   MOVE PV-HOLD-FIELD(1:PV-COUNT-1) TO            17960000
157100                      PV-HOLD-NUM-7                               17970000
157200***     check if amount supplied by the store does not contain    17980000
157300***     a cents column. (i.e. 4.5 for 4.50) and replace the       17990000
157400***     inserted decimal point with a 0.                          18000000
157500                   MOVE PV-HOLD-FIELD((PV-COUNT-1 + 3):1) TO      18010000
157600                       PV-HOLD-NUM2                               18020000
157700                   IF PV-HOLD-NUM2 = "."                          18030000
157800                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):1) TO   18040000
157900                           PV-HOLD-NUM-DECIMAL                    18050000
158000                      MULTIPLY PV-HOLD-NUM-DECIMAL BY 10 GIVING   18060000
158100                           PV-HOLD-NUM-DECIMAL                    18070000
158200                   ELSE                                           18080000
158300                      MOVE PV-HOLD-FIELD((PV-COUNT-1 + 2):2) TO   18090000
158400                           PV-HOLD-NUM-DECIMAL                    18100000
158500                   END-IF                                         18110000
158600                   COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-7  *  100  18120000
158700***       check to see if amount had a negative sign and multiply 18130000
158800***       by -1. The negative sign is lost in the conversion      18140000
158900                   MOVE 0 TO PV-COUNT-1                           18150000
159000                   INSPECT PV-HOLD-FIELD                          18160000
159100                      TALLYING PV-COUNT-1 FOR ALL '-'             18170000
159200                   IF PV-COUNT-1 >= 1                             18180000
159300                      COMPUTE PV-HOLD-NUM-9 = PV-HOLD-NUM-9 * -1  18190000
159400                      COMPUTE PV-HOLD-NUM-DECIMAL =               18200000
159500                              PV-HOLD-NUM-DECIMAL * -1            18210000
159600                   END-IF                                         18220000
159700                  ADD PV-HOLD-NUM-DECIMAL TO PV-HOLD-NUM-9 GIVING 18230000
159800                      PV-HOLD-NUM-9                               18240000
159900                   COMPUTE PH-HOLD-SAFE-OVSH-AMT =                18250000
160000                                     PV-HOLD-NUM-9   /  100       18260000
160100                   MOVE PH-HOLD-SAFE-OVSH-AMT TO                  18270000
160200                                     SAT00001-OVSH-AMT            18280000
160300              WHEN PV-RECORD-ELEMENT = 8                          18290000
160400                   COMPUTE PV-CMNT-TXT-LEN                        18300000
160500                                          = PV-HOLD-FIELD-POS - 1 18310000
160600                   MOVE PV-CMNT-TXT-LEN  TO PV-CMNT-TXT-LEN-SIGN  18320000
160700                   MOVE PV-CMNT-TXT-LEN-SIGN                      18330000
160800                                         TO PV-CMNT-TXT-LEN-COMP  18340000
160900                   MOVE PV-CMNT-TXT-LEN-COMP                      18350000
161000                                         TO SAT00001-CMNT-TXT-LEN 18360000
161100                   MOVE PV-HOLD-FIELD    TO SAT00001-CMNT-TXT-TEXT18370000
161200           END-EVALUATE                                           18380000
161300           ADD 1 TO PV-RECORD-ELEMENT                             18390000
161400         END-IF                                                   18400000
161500       END-PERFORM                                                18410000
161600                                                                  18420000
161700***   For register over/short and safe over/short,                18430000
161800***   corporate needs to store the value                          18440000
161900***   as positive. (Just the opposite of the stores cash office.) 18450000
162000       MULTIPLY SAT00001-OVSH-AMT BY -1 GIVING SAT00001-OVSH-AMT  18460000
162100                                                                  18470000
P11718       SET PS-STORE-NOT-FOUND TO TRUE                             18480000
P11718       MOVE SAT00001-STR-NBR  TO PH-STR-CHRGD-NBR                 18490000
P11718       PERFORM 5000-DETERMINE-VALID-STORE                         18500000
P11718                                                                  18510000
P11718       IF PS-STORE-FOUND                                          18520000
162200          INITIALIZE PS-CALL-COMPLETE-IND                         18530000
162300                     PA-RETRY-COUNT                               18540000
162400          MOVE SAT00001-STR-NBR       TO PH-HOLD-STR-NBR          18550000
162500          MOVE SAT00001-SLS-DTE       TO PH-HOLD-SLS-DTE          18560000
012815          IF PS-POC-STORE-FOUND                                   18570000
012815              MOVE 'C'                TO PH-HOLD-REG-TYP-CDE      18580000
012815          ELSE                                                    18590000
012815              MOVE 'S'                TO PH-HOLD-REG-TYP-CDE      18600000
012815          END-IF                                                  18610000
162600          PERFORM 5400-CHECK-DELETE-DATA                          18620000
162700          PERFORM 5520-SEARCH-LOCK-TABLE                          18630000
162800          IF PS-STORE-NOT-LOCKED                                  18640000
162900             PERFORM 6900-INSERT-SAFE-OVSH                        18650000
163000                    UNTIL PS-CALL-COMPLETED                       18660000
163100          END-IF                                                  18670000
P11718       END-IF                                                     18680000
163200     END-PERFORM.                                                 18690000
163300                                                                  18700000
163400*3700-END-LOAD-SAFE-OVSH.                                         18710000
163500                                                                  18720000
163600* ------------------------------------------------------------- * 18730000
163700* DETERMINE IF STORE IS VALID                                     18740000
163800* ------------------------------------------------------------- * 18750000
163900 5000-DETERMINE-VALID-STORE.                                      18760000
164000     IF PS-STORE-NOT-FOUND                                        18770000
164100        SEARCH ALL SN-STORE-NUMBER-ENTRY                          18780000
164200           AT END                                                 18790000
164300             SET PS-STORE-NOT-FOUND TO TRUE                       18800000
164400           WHEN SN-STORE-NUMBER (SN-STORE-INDEX) =                18810000
164500                                 PH-STR-CHRGD-NBR                 18820000
164600             SET PS-STORE-FOUND TO TRUE                           18830000
164700        END-SEARCH                                                18840000
164800     END-IF.                                                      18850000
164900*5000-EXIT.                                                       18860000
165000                                                                  18870000
165100******************************************************************18880000
165200*  EVALUATE THE NEXT BYTE FOR THE SPECIAL CHARACTERS INSERTED TO *18890000
165300*  DELIMIT THE END OF A FIELD OR A RECORD.                       *18900000
165400******************************************************************18910000
165500                                                                  18920000
165600 5100-ADVANCE-N-CHECK-NEXT-BYTE.                                  18930000
165700                                                                  18940000
165800     SET PV-MSG-INDEX UP BY 1.                                    18950000
165900                                                                  18960000
166000     EVALUATE TRUE                                                18970000
166100         WHEN PV-MSG-END-OF-FIELD (PV-MSG-INDEX)                  18980000
166200             SET PS-END-OF-ITEM TO TRUE                           18990000
166300         WHEN (PV-MSG-END-OF-RECORD (PV-MSG-INDEX) AND            19000000
166400               PV-MSG-END-OF-FIELD (PV-MSG-INDEX - 1) )           19010000
166500             SET PS-END-OF-ITEM   TO TRUE                         19020000
166600             SET PS-END-OF-RECORD TO TRUE                         19030000
166700         WHEN OTHER                                               19040000
166800             CONTINUE                                             19050000
166900     END-EVALUATE.                                                19060000
167000*5100-EXIT.                                                       19070000
167100******************************************************************19080000
167200*  GET MAX SEQ NUMBER FOR A STORE FOR A GIVEN SALES DATE         *19090000
167300*  TABLE IS TSAADPC                                              *19100000
167400******************************************************************19110000
167500                                                                  19120000
167600 5200-GET-MAX-SEQ-TSAADPC.                                        19130000
167700                                                                  19140000
167800     EXEC SQL                                                     19150000
167900         SELECT MAX(SEQ_NBR)                                      19160000
168000          INTO  :PH-HOLD-SEQ-NBR                                  19170000
168100          FROM  TSAADPC                                           19180000
168200         WHERE  SLS_DTE  = :SAADPC-SLS-DTE  AND                   19190000
168300                STR_NBR  = :SAADPC-STR-NBR                        19200000
168400     END-EXEC.                                                    19210000
168500                                                                  19220000
168600     EVALUATE TRUE                                                19230000
168700         WHEN SQLCODE = +100                                      19240000
168800         WHEN SQLCODE = -305                                      19250000
168900             MOVE 1 TO PH-HOLD-SEQ-NBR                            19260000
169000             SET PS-CALL-COMPLETED TO TRUE                        19270000
169100         WHEN SQLCODE = +0                                        19280000
169200             ADD 1 TO PH-HOLD-SEQ-NBR                             19290000
169300             SET PS-CALL-COMPLETED TO TRUE                        19300000
169400         WHEN OTHER                                               19310000
169500             DISPLAY "*** STORE SERVER IS: ", SAADPC-STR-NBR      19320000
169600             DISPLAY "*** MSGBUFFER =      ", PV-MSGBUFFER        19330000
169700             MOVE '5200-GET-MAX-SEQ-TSAADPC' TO PV-PARAGRAPH      19340000
169800             SET PV-GET-MAX-SEQ-NUMBER TO TRUE                    19350000
169900             PERFORM 8900-SQL-CHECK-RETRY                         19360000
170000     END-EVALUATE.                                                19370000
170100                                                                  19380000
170200*5200-EXIT.                                                       19390000
170300                                                                  19400000
170400******************************************************************19410000
170500*  GET THE PARTITION NUMBER REPRESENTING TODAYS SUMMARY TOTALS   *19420000
170600*  TABLE IS TEPPART                                              *19430000
170700******************************************************************19440000
170800                                                                  19450000
170900 5300-GET-PARTITION-NBR.                                          19460000
171000                                                                  19470000
171100     EXEC SQL                                                     19480000
171200         SELECT PARTN_NBR                                         19490000
171300          INTO  :PH-HOLD-PARTN-NBR                                19500000
171400          FROM  TEPPART                                           19510000
171500         WHERE  SLS_DTE      = :EPPART-SLS-DTE                    19520000
171600           AND  DB_STRUC_CDE = 'O'                                19530000
171700           AND  STR_GP_CDE   = 'A'                                19540000
171800     END-EXEC.                                                    19550000
171900                                                                  19560000
172000     EVALUATE TRUE                                                19570000
172100         WHEN SQLCODE = +0                                        19580000
172200             SET PS-CALL-COMPLETED TO TRUE                        19590000
172300         WHEN OTHER                                               19600000
172400             MOVE '5300-GET-PARTITION-NBR' TO PV-PARAGRAPH        19610000
172500             SET PV-GET-PARTITION-NUMBER TO TRUE                  19620000
172600             PERFORM 8900-SQL-CHECK-RETRY                         19630000
172700     END-EVALUATE.                                                19640000
172800                                                                  19650000
172900*5300-EXIT.                                                       19660000
173000                                                                  19670000
173100***************************************************************** 19680000
173200*  CHECK TO SEE IF THERE IS DATA ON TSASUM THAT NEEDS TO BE     * 19690000
173300*  DELETED.  THIS WOULD BE THE CASE IN A RERUN SITUATION.       * 19700000
173400*  ON A CHANGE IN STORE OR PARTITON, A TABLE WILL BE SEARCHED   * 19710000
173500*  TO SE IF THE STORE HAS BEEN CLEARED.  IF IT HAS, IT WILL NOT * 19720000
173600*  BE CLEARED AGAIN.  IT SHOULD ONLY GET CLEARED ON THE FIRST   * 19730000
173700*  LOOP THROUGH THE TSASUM PROCESS.                             * 19740000
173800***************************************************************** 19750000
173900 5400-CHECK-DELETE-DATA.                                          19760000
174000                                                                  19770000
174100     MOVE SPACES                  TO PS-DELETED-STORE-FOUND-SW.   19780000
174200     SET PV-CHECK-INDEX           TO SD-STORE-INDEX.              19790000
174300     IF ((PV-CHECK-SLS-DTE        = PH-HOLD-SLS-DTE)              19800000
174400       AND (PV-CHECK-STR-NBR      = PH-HOLD-STR-NBR))             19810000
174500         CONTINUE                                                 19820000
174600     ELSE                                                         19830000
174700         SET SD-STORE-INDEX       TO +1                           19840000
174800         SEARCH SD-STORE-DELETE-ENTRY                             19850000
174900            AT END                                                19860000
175000              SET PS-DELETED-STORE-NOT-FOUND                      19870000
175100                                  TO TRUE                         19880000
175200            WHEN ((SD-SLS-DTE (SD-STORE-INDEX) =                  19890000
175300                                  PH-HOLD-SLS-DTE)                19900000
175400              AND (SD-STR-NBR (SD-STORE-INDEX) =                  19910000
175500                                  PH-HOLD-STR-NBR))               19920000
175600                  SET PS-DELETED-STORE-FOUND                      19930000
175700                                  TO TRUE                         19940000
175800         END-SEARCH                                               19950000
175900     END-IF.                                                      19960000
176000     SET SD-STORE-INDEX           TO PV-CHECK-INDEX.              19970000
176100                                                                  19980000
176200     IF PS-DELETED-STORE-NOT-FOUND                                19990000
176300         MOVE PH-HOLD-SLS-DTE     TO SD-SLS-DTE                   20000000
176400                                     (SD-STORE-INDEX)             20010000
176500                                     PV-CHECK-SLS-DTE             20020000
176600         MOVE PH-HOLD-STR-NBR     TO SD-STR-NBR (SD-STORE-INDEX)  20030000
176700                                     PV-CHECK-STR-NBR             20040000
176800         SET SD-STORE-INDEX UP BY 1                               20050000
176900         PERFORM 5500-CHECK-TSALOCK                               20060000
177000         IF PS-STORE-LOCK-FOUND                                   20070000
177100             PERFORM 5510-LOAD-LOCK-TABLE                         20080000
177200         ELSE                                                     20090000
012815             IF PS-POC-STORE-FOUND                                20100000
254099                 PERFORM 5630-DELETE-TSASUM                       20111015
012815                 PERFORM 5670-DELETE-ADJ-SUM                      20120000
254099                 PERFORM 5620-DELETE-TSAADSU                      20131015
012815             ELSE                                                 20140000
177300                 PERFORM 5600-DELETE-TSAADDP                      20150000
177400                 PERFORM 5610-DELETE-TSAADPC                      20160000
012815                 PERFORM 5670-DELETE-ADJ-SUM                      20170000
177500                 PERFORM 5620-DELETE-TSAADSU                      20180000
177600                 PERFORM 5630-DELETE-TSASUM                       20190000
177700                 PERFORM 5640-DELETE-RGST-OVSH                    20200000
177800                 PERFORM 5650-DELETE-SAFE-OVSH                    20210000
050707                 PERFORM 5660-DELETE-VOID-AFTR                    20220000
012815             END-IF                                               20230000
177900             IF PS-COMMIT-NEEDED                                  20240000
178000                 PERFORM 8000-COMMIT-DB2                          20250000
178100                 MOVE SPACES       TO PS-COMMIT-NEEDED-SW         20260000
178200             END-IF                                               20270000
178300         END-IF                                                   20280000
178400     END-IF.                                                      20290000
178500                                                                  20300000
178600***************************************************************   20310000
178700*  LOAD THE WORKING STORAGE LOCK TABLE WHEN A LOCK IS         *   20320000
178800*  ENCOUNTERED                                                *   20330000
178900***************************************************************   20340000
179000 5510-LOAD-LOCK-TABLE.                                            20350000
179100                                                                  20360000
179200     MOVE PH-HOLD-SLS-DTE          TO SL-SLS-DTE (SL-LOCK-INDEX). 20370000
179300     MOVE PH-HOLD-STR-NBR          TO SL-STR-NBR (SL-LOCK-INDEX). 20380000
179400     SET SL-LOCK-INDEX             UP BY +1.                      20390000
179500                                                                  20400000
179600****************************************************************  20410000
179700*  SEARCH THE WORKING STORAGE TABLE TO DETERMINE IF A STORE IS *  20420000
179800*  LOCKED BEFORE PERFORMING UPDATES                            *  20430000
179900****************************************************************  20440000
180000 5520-SEARCH-LOCK-TABLE.                                          20450000
180100                                                                  20460000
180200     MOVE SPACES                  TO PS-STORE-LOCKED-SW.          20470000
180300     SET PV-CHECK-INDEX           TO SL-LOCK-INDEX.               20480000
180400     SET SL-LOCK-INDEX            TO +1.                          20490000
180500                                                                  20500000
180600     SEARCH SL-STORE-LOCKING-ENTRY                                20510000
180700        AT END                                                    20520000
180800          SET PS-STORE-NOT-LOCKED  TO TRUE                        20530000
180900        WHEN ((SL-SLS-DTE (SL-LOCK-INDEX) =                       20540000
181000                                   PH-HOLD-SLS-DTE)               20550000
181100          AND (SL-STR-NBR (SL-LOCK-INDEX) =                       20560000
181200                                   PH-HOLD-STR-NBR))              20570000
181300              SET PS-STORE-LOCKED  TO TRUE                        20580000
181400     END-SEARCH.                                                  20590000
181500                                                                  20600000
181600     SET SL-LOCK-INDEX             TO PV-CHECK-INDEX.             20610000
181700                                                                  20620000
181800***************************************************************** 20630000
181900*  CHECK TO SEE IF THE STORE IS LOCKED BEFORE DELETING          * 20640000
182000***************************************************************** 20650000
182100 5500-CHECK-TSALOCK.                                              20660000
182200                                                                  20670000
182300     EXEC SQL                                                     20680000
182400         SELECT '1'                                               20690000
182500           INTO :PV-DUMMY                                         20700000
182600         FROM   TSALOCK                                           20710000
182700         WHERE  SLS_DTE           = :PH-HOLD-SLS-DTE              20720000
182800         AND    STR_NBR           = :PH-HOLD-STR-NBR              20730000
182900         AND    LCKD_IND          = 'Y'                           20740000
183000     END-EXEC.                                                    20750000
183100                                                                  20760000
183200     EVALUATE TRUE                                                20770000
183300         WHEN SQLCODE = +0                                        20780000
183400             SET PS-STORE-LOCK-FOUND                              20790000
183500                                   TO TRUE                        20800000
183600         WHEN SQLCODE = +100                                      20810000
183700             SET PS-STORE-LOCK-NOT-FOUND                          20820000
183800                                   TO TRUE                        20830000
183900         WHEN OTHER                                               20840000
184000             MOVE '5500-DELETE-TSASUM-TOTALS' TO PV-PARAGRAPH     20850000
184100             SET PV-DELETE-TSASUM-TOTALS TO TRUE                  20860000
184200             PERFORM 8900-SQL-CHECK-RETRY                         20870000
184300     END-EVALUATE.                                                20880000
184400                                                                  20890000
184500***************************************************************** 20900000
184600*  DELETE THE CURRENT ROWS ON THE TSAADDP TABLE                 * 20910000
184700***************************************************************** 20920000
184800 5600-DELETE-TSAADDP.                                             20930000
184900                                                                  20940000
185000     EXEC SQL                                                     20950000
185100         DELETE FROM TSAADDP                                      20960000
185200         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             20970000
185300           AND  STR_NBR            = :PH-HOLD-STR-NBR             20980000
185400     END-EXEC.                                                    20990000
185500                                                                  21000000
185600     EVALUATE TRUE                                                21010000
185700         WHEN SQLCODE = +0                                        21020000
185800             SET PS-COMMIT-NEEDED  TO TRUE                        21030000
185900         WHEN SQLCODE = +100                                      21040000
186000             CONTINUE                                             21050000
186100         WHEN OTHER                                               21060000
186200             MOVE '5600-DELETE-TSAADDP' TO PV-PARAGRAPH           21070000
186300             SET PV-DELETE-TSAADDP-ROWS TO TRUE                   21080000
186400             PERFORM 8900-SQL-CHECK-RETRY                         21090000
186500     END-EVALUATE.                                                21100000
186600                                                                  21110000
186700***************************************************************** 21120000
186800*  DELETE THE CURRENT ROWS ON THE TSAADPC TABLE                 * 21130000
186900***************************************************************** 21140000
187000 5610-DELETE-TSAADPC.                                             21150000
187100                                                                  21160000
187200     EXEC SQL                                                     21170000
187300         DELETE FROM TSAADPC                                      21180000
187400         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             21190000
187500           AND  STR_NBR            = :PH-HOLD-STR-NBR             21200000
187600     END-EXEC.                                                    21210000
187700                                                                  21220000
187800     EVALUATE TRUE                                                21230000
187900         WHEN SQLCODE = +0                                        21240000
188000             SET PS-COMMIT-NEEDED  TO TRUE                        21250000
188100         WHEN SQLCODE = +100                                      21260000
188200             CONTINUE                                             21270000
188300         WHEN OTHER                                               21280000
188400             MOVE '5610-DELETE-TSAADPC' TO PV-PARAGRAPH           21290000
188500             SET PV-DELETE-TSAADPC-ROWS TO TRUE                   21300000
188600             PERFORM 8900-SQL-CHECK-RETRY                         21310000
188700     END-EVALUATE.                                                21320000
188800                                                                  21330000
188900***************************************************************** 21340000
189000*  DELETE THE CURRENT ROWS ON THE TSAADSU TABLE                 * 21350000
189100***************************************************************** 21360000
189200 5620-DELETE-TSAADSU.                                             21370000
189300                                                                  21381012
189400     EXEC SQL                                                     21390000
189500         DELETE FROM TSAADSU                                      21400000
189600         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             21410000
189700           AND  STR_NBR            = :PH-HOLD-STR-NBR             21420000
189800     END-EXEC.                                                    21430000
189900                                                                  21440000
190000     EVALUATE TRUE                                                21450000
190100         WHEN SQLCODE = +0                                        21460000
190200             SET PS-COMMIT-NEEDED  TO TRUE                        21470000
190300         WHEN SQLCODE = +100                                      21480000
190400             CONTINUE                                             21490000
190500         WHEN OTHER                                               21500000
190600             MOVE '5620-DELETE-TSAADSU' TO PV-PARAGRAPH           21510000
190700             SET PV-DELETE-TSAADSU-ROWS TO TRUE                   21520000
190800             PERFORM 8900-SQL-CHECK-RETRY                         21530000
190900     END-EVALUATE.                                                21540000
191000                                                                  21550000
012815                                                                  21810000
012815***************************************************************** 21820000
012815*  DELETE THE CURRENT ROWS ON THE SAT_ADJ_SLS_STR_SUM TABLE     * 21830000
012815***************************************************************** 21840000
012815 5670-DELETE-ADJ-SUM.                                             21850000
012815                                                                  21860000
012815     EXEC SQL                                                     21870000
012815         DELETE FROM SAT_ADJ_SLS_STR_SUM                          21880000
012815         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             21890000
012815           AND  STR_NBR            = :PH-HOLD-STR-NBR             21900000
012815           AND  REG_TYP_CDE        = :PH-HOLD-REG-TYP-CDE         21910000
012815     END-EXEC.                                                    21920000
012815                                                                  21930000
012815     EVALUATE TRUE                                                21940000
012815         WHEN SQLCODE = +0                                        21950000
012815             SET PS-COMMIT-NEEDED  TO TRUE                        21960000
012815         WHEN SQLCODE = +100                                      21970000
012815             CONTINUE                                             21980000
012815         WHEN OTHER                                               21990000
012815             MOVE '5670-DELETE-ADJ-SUM' TO PV-PARAGRAPH           22000000
012815             SET PV-DELETE-ADJ-SUM-ROWS TO TRUE                   22010000
012815             PERFORM 8900-SQL-CHECK-RETRY                         22020000
012815     END-EVALUATE.                                                22030000
012815                                                                  22040000
191100***************************************************************** 22050000
191200*  DELETE THE CURRENT ROWS ON THE TSASUM TABLE                  * 22060000
8446E *  ACCEPT FOR THE SFS/BPS REGISTERS                             * 22070000
191300***************************************************************** 22080000
191400 5630-DELETE-TSASUM.                                              22090000
191500                                                                  22100000
191600     MOVE PH-HOLD-SLS-DTE          TO EPPART-SLS-DTE.             22110000
191700     PERFORM  5300-GET-PARTITION-NBR.                             22120000
191800     INITIALIZE PS-CALL-COMPLETE-IND.                             22130000
191900                                                                  22140000
192000     EXEC SQL                                                     22150000
192100         DELETE FROM TSASUM                                       22160000
192200         WHERE  PARTN_NBR          = :PH-HOLD-PARTN-NBR           22170000
192300           AND  STR_NBR            = :PH-HOLD-STR-NBR             22180000
192400           AND  SUM_TYP_CDE        = 'C'                          22190000
254099           AND  RGST_ID            < 90                           22211015
192500     END-EXEC.                                                    22220000
192600                                                                  22230000
192700     EVALUATE TRUE                                                22240000
192800         WHEN SQLCODE = +0                                        22250000
192900             SET PS-COMMIT-NEEDED  TO TRUE                        22260000
193000         WHEN SQLCODE = +100                                      22270000
193100             CONTINUE                                             22280000
193200         WHEN OTHER                                               22290000
193300             MOVE '5630-DELETE-TSASUM' TO PV-PARAGRAPH            22300000
193400             SET PV-DELETE-TSASUM-ROWS TO TRUE                    22310000
193500             PERFORM 8900-SQL-CHECK-RETRY                         22320000
193600     END-EVALUATE.                                                22330000
193700                                                                  22340000
193800***************************************************************** 22650000
193900*  DELETE THE CURRENT ROWS ON THE SAT_RGST_BAL_OVSH TABLE       * 22660000
194000***************************************************************** 22670000
194100 5640-DELETE-RGST-OVSH.                                           22680000
194200                                                                  22690000
194300     EXEC SQL                                                     22700000
194400         DELETE FROM SAT_RGST_BAL_OVSH                            22710000
194500         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             22720000
194600           AND  STR_NBR            = :PH-HOLD-STR-NBR             22730000
194700     END-EXEC.                                                    22740000
194800                                                                  22750000
194900     EVALUATE TRUE                                                22760000
195000         WHEN SQLCODE = +0                                        22770000
195100             SET PS-COMMIT-NEEDED  TO TRUE                        22780000
195200         WHEN SQLCODE = +100                                      22790000
195300             CONTINUE                                             22800000
195400         WHEN OTHER                                               22810000
195500             MOVE '5640-DELETE-RGST-OVSH' TO PV-PARAGRAPH         22820000
195600             SET PV-DELETE-RGST-OVSH-ROWS TO TRUE                 22830000
195700             PERFORM 8900-SQL-CHECK-RETRY                         22840000
195800     END-EVALUATE.                                                22850000
195900                                                                  22860000
196000***************************************************************** 22870000
196100*  DELETE THE CURRENT ROWS ON THE SAT_SAFE_OVSH TABLE       *     22880000
196200***************************************************************** 22890000
196300 5650-DELETE-SAFE-OVSH.                                           22900000
196400                                                                  22910000
196500     EXEC SQL                                                     22920000
196600         DELETE FROM SAT_SAFE_OVSH                                22930000
196700         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             22940000
196800           AND  STR_NBR            = :PH-HOLD-STR-NBR             22950000
196900     END-EXEC.                                                    22960000
197000                                                                  22970000
197100     EVALUATE TRUE                                                22980000
197200         WHEN SQLCODE = +0                                        22990000
197300             SET PS-COMMIT-NEEDED  TO TRUE                        23000000
197400         WHEN SQLCODE = +100                                      23010000
197500             CONTINUE                                             23020000
197600         WHEN OTHER                                               23030000
197700             MOVE '5650-DELETE-SAFE-OVSH' TO PV-PARAGRAPH         23040000
197800             SET PV-DELETE-SAFE-OVSH-ROWS TO TRUE                 23050000
197900             PERFORM 8900-SQL-CHECK-RETRY                         23060000
198000     END-EVALUATE.                                                23070000
198000                                                                  23080000
050707***************************************************************** 23090000
050707*  DELETE THE CURRENT ROWS ON THE SAT_TRN_VOID_AFT TABLE          23100000
050707***************************************************************** 23110000
050707 5660-DELETE-VOID-AFTR.                                           23120000
050707                                                                  23130000
050707     EXEC SQL                                                     23140000
050707         DELETE FROM SAT_TRN_VOID_AFT                             23150000
050707         WHERE  SLS_DTE            = :PH-HOLD-SLS-DTE             23160000
050707           AND  STR_NBR            = :PH-HOLD-STR-NBR             23170000
050707     END-EXEC.                                                    23180000
050707                                                                  23190000
050707     EVALUATE TRUE                                                23200000
050707         WHEN SQLCODE = +0                                        23210000
050707             SET PS-COMMIT-NEEDED  TO TRUE                        23220000
050707         WHEN SQLCODE = +100                                      23230000
050707             CONTINUE                                             23240000
050707         WHEN OTHER                                               23250000
050707             MOVE '5660-DELETE-VOID-AFTR' TO PV-PARAGRAPH         23260000
050707             SET PV-DELETE-VOID-AFTR-ROWS TO TRUE                 23270000
050707             PERFORM 8900-SQL-CHECK-RETRY                         23280000
050707     END-EVALUATE.                                                23290000
050707                                                                  23300000
198200******************************************************************23310000
198300*  WRITE OUT VOID AFTER RECORD                                   *23320000
198400******************************************************************23330000
198500                                                                  23340000
198600 6000-WRITE-VOID-AFTER-RECORD.                                    23350000
198700     WRITE VA-VOID-AFTER-RECORD                                   23360000
198800         FROM CO001-VOID-AFTER-RECORD.                            23370000
198900                                                                  23380000
199000*6000-EXIT.                                                       23390000
199100                                                                  23400000
199200* ------------------------------------------------------------- * 23410000
199300* INSERT ROW INTO ADJUSTED DEPOSITS TABLE - TSAADDP               23420000
199400* ------------------------------------------------------------- * 23430000
199500 6100-INSERT-ADJ-DEPOSIT.                                         23440000
199600                                                                  23450000
199700     EXEC SQL                                                     23460000
199800         INSERT  INTO TSAADDP                                     23470000
199900              (  SLS_DTE                                          23480000
200000              ,  STR_NBR                                          23490000
200100              ,  TNDR_TYP_CDE                                     23500000
200200              ,  STRT_TMST                                        23510000
200300              ,  TNDR_AMT                                         23520000
200400              ,  SRC_CDE)                                         23530000
200500          VALUES                                                  23540000
200600              (  :SAADDP-SLS-DTE                                  23550000
200700              ,  :SAADDP-STR-NBR                                  23560000
200800              ,  :SAADDP-TNDR-TYP-CDE                             23570000
200900              ,  CURRENT TIMESTAMP                                23580000
201000              ,  :SAADDP-TNDR-AMT                                 23590000
201100              ,  :SAADDP-SRC-CDE)                                 23600000
201200     END-EXEC.                                                    23610000
201300                                                                  23620000
201400     EVALUATE TRUE                                                23630000
201500         WHEN SQLCODE = +0                                        23640000
201600         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         23650000
201700             SET PS-CALL-COMPLETED TO TRUE                        23660000
201800         WHEN OTHER                                               23670000
201900             MOVE '6100-INSERT-ADJ-DEPOSIT' TO PV-PARAGRAPH       23680000
202000             SET PV-INSERT-ADJ-DEPOSIT-RCD TO TRUE                23690000
202100             PERFORM 8900-SQL-CHECK-RETRY                         23700000
202200     END-EVALUATE.                                                23710000
202300                                                                  23720000
202400*6100-EXIT.                                                       23730000
202500                                                                  23740000
202600* ------------------------------------------------------------- * 23750000
202700* INSERT ROW INTO ADJUSTED PAID OUT/CASH RECEIVED - TSAADPC       23760000
202800* ------------------------------------------------------------- * 23770000
202900 6200-INSERT-PAIDOUT-CASHRCVD.                                    23780000
203000                                                                  23790000
203100     EXEC SQL                                                     23800000
203200         INSERT  INTO TSAADPC                                     23810000
203300              (  SLS_DTE                                          23820000
203400              ,  STR_NBR                                          23830000
203500              ,  SEQ_NBR                                          23840000
203600              ,  TYP_CDE                                          23850000
203700              ,  ORIG_CSH_AMT                                     23860000
203800              ,  ADJ_CSH_AMT                                      23870000
203900              ,  ADJ_IND                                          23880000
204000              ,  STR_CHRGD_NBR                                    23890000
204100              ,  VLD_STR_CHRGD_IND                                23900000
204200              ,  RSN_CDE                                          23910000
204300              ,  CMNT_TXT)                                        23920000
204400          VALUES                                                  23930000
204500              (  :SAADPC-SLS-DTE                                  23940000
204600              ,  :SAADPC-STR-NBR                                  23950000
204700              ,  :SAADPC-SEQ-NBR                                  23960000
204800              ,  :SAADPC-TYP-CDE                                  23970000
204900              ,  :SAADPC-ORIG-CSH-AMT                             23980000
205000              ,  :SAADPC-ADJ-CSH-AMT                              23990000
205100              ,  :SAADPC-ADJ-IND                                  24000000
205200              ,  :SAADPC-STR-CHRGD-NBR                            24010000
205300              ,  :SAADPC-VLD-STR-CHRGD-IND                        24020000
205400              ,  :SAADPC-RSN-CDE                                  24030000
205500              ,  :SAADPC-CMNT-TXT)                                24040000
205600     END-EXEC.                                                    24050000
205700                                                                  24060000
205800     EVALUATE TRUE                                                24070000
205900         WHEN SQLCODE = +0                                        24080000
206000         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         24090000
206100             SET PS-CALL-COMPLETED TO TRUE                        24100000
206200         WHEN OTHER                                               24110000
206300             MOVE '6200-INSERT-PAIDOUT-CASHRCVD' TO PV-PARAGRAPH  24120000
206400             SET PV-INSERT-PAIDOUT-CASHRCVD-RCD TO TRUE           24130000
206500             PERFORM 8900-SQL-CHECK-RETRY                         24140000
206600     END-EVALUATE.                                                24150000
206700                                                                  24160000
206800*6200-EXIT.                                                       24170000
206900                                                                  24180000
012815* ------------------------------------------------------------- * 24190000
012815* INSERT ROW INTO ADJ STORE SUMMARY TABLE - SAT_ADJ_SLS_STR_SUM   24200000
012815* ------------------------------------------------------------- * 24210000
012815 6350-INSERT-ADJ-SUMMARY.                                         24220000
012815                                                                  24230000
012815**  12/15/2014  CHANGE COPIED OVER FROM TSAADSU PARAGRAPH         24240000
012815**  ABOVE WHILE ALLOWING FOR POC CASH OFFICE ENTRIES              24250000
012815**  01/15/2002  Change to prevent an abnormally large amount      24260000
012815**  from loading into the TSAADSU table.  If the amount is        24270000
012815**  greater than 99,999,999.99 and less than -99,999,999.99,      24280000
012815**  the adjusted amount will be changed to zero so that the       24290000
012815**  Sales Auditors are able to edit the numbers.                  24300000
012815     IF SAT00002-ORIG-AMT    > (PC-MAX-POS-AMT)    OR             24310000
012815        SAT00002-ORIG-AMT    < (PC-MAX-NEG-AMT)                   24320000
012815         MOVE ZERO           TO SAT00002-ORIG-AMT                 24330000
012815     END-IF.                                                      24340000
012815     IF PS-POC-STORE-FOUND                                        24350000
012815         MOVE 'C'                TO SAT00002-REG-TYP-CDE          24360000
012815     ELSE                                                         24370000
012815         MOVE 'S'                TO SAT00002-REG-TYP-CDE          24380000
012815     END-IF                                                       24390000
012815                                                                  24400000
012815     EXEC SQL                                                     24410000
012815         INSERT  INTO SAT_ADJ_SLS_STR_SUM                         24420000
012815              (  SLS_DTE                                          24430000
012815              ,  STR_NBR                                          24440000
012815              ,  SUM_CTG_CDE                                      24450000
012815              ,  ORIG_AMT                                         24460000
012815              ,  ADJ_AMT                                          24470000
012815              ,  ADJ_IND                                          24480000
012815              ,  REG_TYP_CDE)                                     24490000
012815          VALUES                                                  24500000
012815              (  :SAT00002-SLS-DTE                                24510000
012815              ,  :SAT00002-STR-NBR                                24520000
012815              ,  :SAT00002-SUM-CTG-CDE                            24530000
012815              ,  :SAT00002-ORIG-AMT                               24540000
012815              ,  :SAT00002-ADJ-AMT                                24550000
012815              ,  :SAT00002-ADJ-IND                                24560000
012815              ,  :SAT00002-REG-TYP-CDE)                           24570000
012815     END-EXEC.                                                    24580000
012815                                                                  24590000
012815     EVALUATE TRUE                                                24600000
012815         WHEN SQLCODE = +0                                        24610000
012815             SET PS-CALL-COMPLETED TO TRUE                        24620000
012815         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         24630000
012815             SET PS-CALL-COMPLETED TO TRUE                        24640000
012815         WHEN OTHER                                               24650000
012815             MOVE '6350-INSERT-ADJ-SUMMARY' TO PV-PARAGRAPH       24660000
012815             SET PV-INSERT-ADJ-STR-SUM-RCD TO TRUE                24670000
012815             PERFORM 8900-SQL-CHECK-RETRY                         24680000
012815     END-EVALUATE.                                                24690000
012815                                                                  24700000
012815*6350-EXIT.                                                       24710000
012815                                                                  24720000
012815* ------------------------------------------------------------- * 24730000
012815* SELECT SUM OF ORIG_AMT FROM SAT_ADJ_SLS_STR_SUM TABLE FOR A     24740000
012815* GIVEN CATEGORY                                                  24750000
012815* ------------------------------------------------------------- * 24760000
012815 6365-SELECT-CTG-SUM-TOT.                                         24770000
012815                                                                  24780000
012815     EXEC SQL                                                     24790000
012815      SELECT                                                      24800000
012815             SUM(ORIG_AMT)                                        24810000
012815       INTO  :PV-HOLD-CTG-TOT-AMT :PV-HOLD-CTG-TOT-AMT-IND        24820000
012815       FROM SAT_ADJ_SLS_STR_SUM                                   24830000
012815      WHERE  SLS_DTE            = :SAT00002-SLS-DTE               24840000
012815        AND  STR_NBR            = :SAT00002-STR-NBR               24850000
012815        AND  SUM_CTG_CDE        = :SAT00002-SUM-CTG-CDE           24860000
012815      WITH UR                                                     24870000
012815     END-EXEC.                                                    24880000
012815                                                                  24890000
012815     EVALUATE TRUE                                                24900000
012815         WHEN SQLCODE = +0                                        24910000
012815             IF PV-HOLD-CTG-TOT-AMT-IND = -1                      24920000
012815                 MOVE ZEROES TO PV-HOLD-CTG-TOT-AMT               24930000
012815             END-IF                                               24940000
012815         WHEN SQLCODE = +100                                      24950000
012815             MOVE ZEROES TO PV-HOLD-CTG-TOT-AMT                   24960000
012815         WHEN OTHER                                               24970000
012815             MOVE '6365-SELECT-CTG-SUM-TOT' TO PV-PARAGRAPH       24980000
012815             SET PV-SELECT-CTG-SUM-TOT-RCD TO TRUE                24990000
012815             PERFORM 8900-SQL-CHECK-RETRY                         25000000
012815     END-EVALUATE.                                                25010000
012815                                                                  25020000
012815*6365-EXIT.                                                       25030000
012815                                                                  25040000
012815* ------------------------------------------------------------- * 25050000
012815* INSERT ROW INTO ADJ STORE SUMMARY TABLE - TSAADSU USING THE     25060000
012815* SUM OF THE POS & POC ROWS FOUND ON SAT_ADJ_SLS_STR_SUM          25070000
012815* ------------------------------------------------------------- * 25080000
012815 6375-INSERT-ADJ-SUMMARY.                                         25090000
012815                                                                  25100000
012815     MOVE PV-HOLD-CTG-TOT-AMT TO SAADSU-ORIG-AMT                  25110000
012815                                 SAADSU-ADJ-AMT.                  25120000
012815     EXEC SQL                                                     25130000
012815         INSERT  INTO TSAADSU                                     25140000
012815              (  SLS_DTE                                          25150000
012815              ,  STR_NBR                                          25160000
012815              ,  SUM_CTG_CDE                                      25170000
012815              ,  ORIG_AMT                                         25180000
012815              ,  ADJ_AMT                                          25190000
012815              ,  ADJ_IND)                                         25200000
012815          VALUES                                                  25210000
012815              (  :SAADSU-SLS-DTE                                  25220000
012815              ,  :SAADSU-STR-NBR                                  25230000
012815              ,  :SAADSU-SUM-CTG-CDE                              25240000
012815              ,  :SAADSU-ORIG-AMT                                 25250000
012815              ,  :SAADSU-ADJ-AMT                                  25260000
012815              ,  :SAADSU-ADJ-IND)                                 25270000
012815     END-EXEC.                                                    25280000
012815                                                                  25290000
012815     EVALUATE TRUE                                                25300000
012815         WHEN SQLCODE = +0                                        25310000
012815             CONTINUE                                             25320000
012815         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         25330000
012815             PERFORM 6385-UPDATE-ADJ-SUMMARY                      25340000
012815         WHEN OTHER                                               25350000
012815             MOVE '6375-INSERT-ADJ-SUMMARY' TO PV-PARAGRAPH       25360000
012815             SET PV-INSERT-ADJ-SUMMARY-RCD TO TRUE                25370000
012815             PERFORM 8900-SQL-CHECK-RETRY                         25380000
012815     END-EVALUATE.                                                25390000
012815                                                                  25400000
012815*6375-EXIT.                                                       25410000
012815                                                                  25420000
012815* ------------------------------------------------------------- * 25430000
012815* UPDATE THE EXISTING TSAADSU ORIG_AMT AND ADJ_AMT TO THE SUM     25440000
012815* OF THE ORIG_AMT ON THE SAT_ADJ_SLS_STR_SUM TABLE                25450000
012815* ------------------------------------------------------------- * 25460000
012815 6385-UPDATE-ADJ-SUMMARY.                                         25470000
012815                                                                  25480000
012815     MOVE PV-HOLD-CTG-TOT-AMT TO SAADSU-ORIG-AMT                  25490000
012815                                 SAADSU-ADJ-AMT.                  25500000
012815     EXEC SQL                                                     25510000
012815         UPDATE TSAADSU                                           25520000
012815           SET  ORIG_AMT = :SAADSU-ORIG-AMT,                      25530000
012815                ADJ_AMT  = :SAADSU-ADJ-AMT                        25540000
012815         WHERE SLS_DTE     = :SAADSU-SLS-DTE                      25550000
012815           AND STR_NBR     = :SAADSU-STR-NBR                      25560000
012815           AND SUM_CTG_CDE = :SAADSU-SUM-CTG-CDE                  25570000
012815     END-EXEC.                                                    25580000
012815                                                                  25590000
012815     EVALUATE TRUE                                                25600000
012815         WHEN SQLCODE = +0                                        25610000
012815             CONTINUE                                             25620000
012815         WHEN OTHER                                               25630000
012815             MOVE '6385-UPDATE-ADJ-SUMMARY' TO PV-PARAGRAPH       25640000
012815             SET PV-UPDATE-ADJ-SUMMARY-RCD TO TRUE                25650000
012815             PERFORM 8900-SQL-CHECK-RETRY                         25660000
012815     END-EVALUATE.                                                25670000
012815                                                                  25680000
012815*6385-EXIT.                                                       25690000
012815                                                                  25700000
211500* ------------------------------------------------------------- * 25710000
211600* INSERT ROW INTO SUMMARY TOTALS TABLE - TSASUM                   25720000
211700* ------------------------------------------------------------- * 25730000
211800 6400-INSERT-SUMMARY-TOTALS.                                      25740000
211900                                                                  25750000
212000     EXEC SQL                                                     25760000
212100         INSERT  INTO TSASUM                                      25770000
212200              (  PARTN_NBR                                        25780000
212300              ,  STR_NBR                                          25790000
212400              ,  RGST_ID                                          25800000
212500              ,  SUM_TYP_CDE                                      25810000
212600              ,  SUM_CTG_CDE                                      25820000
212700              ,  CTG_AMT                                          25830000
212800              ,  CTG_NBR_OF_ITM                                   25840000
212900              ,  CTG_SRC_CDE)                                     25850000
213000          VALUES                                                  25860000
213100              (  :SASUM-PARTN-NBR                                 25870000
213200              ,  :SASUM-STR-NBR                                   25880000
213300              ,  :SASUM-RGST-ID                                   25890000
213400              ,  :SASUM-SUM-TYP-CDE                               25900000
213500              ,  :SASUM-SUM-CTG-CDE                               25910000
213600              ,  :SASUM-CTG-AMT                                   25920000
213700              ,  :SASUM-CTG-NBR-OF-ITM                            25930000
213800              ,  :SASUM-CTG-SRC-CDE)                              25940000
213900     END-EXEC.                                                    25950000
214000                                                                  25960000
214100     EVALUATE TRUE                                                25970000
214200         WHEN SQLCODE = +0                                        25980000
214300             SET PS-CALL-COMPLETED TO TRUE                        25990000
214400         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         26000000
214500             PERFORM 6700-UPDATE-TSASUM-TOTALS                    26010000
214600         WHEN OTHER                                               26020000
214700             MOVE '6400-INSERT-SUMMARY-TOTALS' TO PV-PARAGRAPH    26030000
214800             SET PV-INSERT-SUMMARY-TOT-RCD TO TRUE                26040000
214900             PERFORM 8900-SQL-CHECK-RETRY                         26050000
215000     END-EVALUATE.                                                26060000
215100                                                                  26070000
215200*6400-EXIT.                                                       26080000
215300                                                                  26090000
215400* ------------------------------------------------------------- * 26100000
215500* SELECT ROW INTO SUMMARY TOTALS TABLE FOR CASH ADVANCE - TSASUM  26110000
215600* ------------------------------------------------------------- * 26120000
215700 6500-SELECT-SUMMARY-TOTALS.                                      26120112
215800                                                                  26140000
215900     EXEC SQL                                                     26150000
216000         SELECT CTG_AMT                                           26160000
216100          INTO  :SASUM-CTG-AMT                                    26170000
216200          FROM TSASUM                                             26180000
216300         WHERE PARTN_NBR   = :SASUM-PARTN-NBR AND                 26190000
216400               STR_NBR     = :SASUM-STR-NBR AND                   26200000
216500               RGST_ID     = :SASUM-RGST-ID AND                   26210000
216600               SUM_TYP_CDE = :SASUM-SUM-TYP-CDE AND               26220000
216700               SUM_CTG_CDE = :SASUM-SUM-CTG-CDE                   26230000
216800     END-EXEC.                                                    26240000
216900                                                                  26250000
217000     EVALUATE TRUE                                                26260000
217100         WHEN SQLCODE = +0                                        26270000
217200             SET PS-CALL-COMPLETED TO TRUE                        26280000
217300         WHEN SQLCODE = +100                                      26290000
217400         WHEN SQLCODE = -305                                      26300000
217500             SET PS-NO-RECORD-FOUND TO TRUE                       26310000
217600             SET PS-CALL-COMPLETED TO TRUE                        26320000
217700         WHEN OTHER                                               26330000
217800             MOVE '6500-SELECT-SUMMARY-TOTALS' TO PV-PARAGRAPH    26340000
217900             SET PV-SELECT-TSASUM-CASH-RCD  TO TRUE               26350000
218000             PERFORM 8900-SQL-CHECK-RETRY                         26360000
218100     END-EVALUATE.                                                26370000
218200                                                                  26380000
218300*6500-EXIT.                                                       26390000
218400                                                                  26400000
218500* ------------------------------------------------------------- * 26410000
218600* UPDATE ROW INTO SUMMARY TOTALS TABLE FOR CASH ADVANCE - TSASUM  26420000
218700* ------------------------------------------------------------- * 26430000
218800 6600-UPDATE-SUMMARY-TOTALS.                                      26440000
218900                                                                  26450000
219000     EXEC SQL                                                     26460000
219100         UPDATE TSASUM                                            26470000
219200           SET  CTG_AMT = :SASUM-CTG-AMT                          26480000
219300         WHERE PARTN_NBR   = :SASUM-PARTN-NBR AND                 26490000
219400               STR_NBR     = :SASUM-STR-NBR AND                   26500000
219500               RGST_ID     = :SASUM-RGST-ID AND                   26510000
219600               SUM_TYP_CDE = :SASUM-SUM-TYP-CDE AND               26520000
219700               SUM_CTG_CDE = :SASUM-SUM-CTG-CDE                   26530000
219800     END-EXEC.                                                    26540000
219900                                                                  26550000
220000     EVALUATE TRUE                                                26560000
220100         WHEN SQLCODE = +0                                        26570000
220200             SET PS-CALL-COMPLETED TO TRUE                        26580000
220300         WHEN SQLCODE = +100                                      26590000
220400             SET PS-CALL-COMPLETED TO TRUE                        26600000
220500         WHEN OTHER                                               26610000
220600             MOVE '6600-UPDATE-SUMMARY-TOTALS' TO PV-PARAGRAPH    26620000
220700             SET PV-UPDATE-TSASUM-CASH-RCD TO TRUE                26630000
220800             PERFORM 8900-SQL-CHECK-RETRY                         26640000
220900     END-EVALUATE.                                                26650000
221000                                                                  26660000
221100*6600-EXIT.                                                       26670000
221200                                                                  26680000
221300* ------------------------------------------------------------- * 26690000
221400* UPDATE ROW INTO SUMMARY TOTALS TABLE WHEN ROWS ALREADY EXIST  * 26700000
221500* ------------------------------------------------------------- * 26710000
221600 6700-UPDATE-TSASUM-TOTALS.                                       26720000
221700                                                                  26730000
221800     EXEC SQL                                                     26740000
221900         UPDATE TSASUM                                            26750000
222000           SET  CTG_AMT        = :SASUM-CTG-AMT + CTG_AMT         26760000
222100               ,CTG_NBR_OF_ITM = :SASUM-CTG-NBR-OF-ITM +          26770000
222200                                 CTG_NBR_OF_ITM                   26780000
222300         WHERE PARTN_NBR   = :SASUM-PARTN-NBR AND                 26790000
222400               STR_NBR     = :SASUM-STR-NBR AND                   26800000
222500               RGST_ID     = :SASUM-RGST-ID AND                   26810000
222600               SUM_TYP_CDE = :SASUM-SUM-TYP-CDE AND               26820000
222700               SUM_CTG_CDE = :SASUM-SUM-CTG-CDE                   26830000
222800     END-EXEC.                                                    26840000
222900                                                                  26850000
223000     EVALUATE TRUE                                                26860000
223100         WHEN SQLCODE = +0                                        26870000
223200             SET PS-CALL-COMPLETED TO TRUE                        26880000
223300         WHEN OTHER                                               26890000
223400             MOVE '6700-UPDATE-TSASUM-TOTALS' TO PV-PARAGRAPH     26900000
223500             SET PV-UPDATE-TSASUM-TOTALS TO TRUE                  26910000
223600             PERFORM 8900-SQL-CHECK-RETRY                         26920000
223700     END-EVALUATE.                                                26930000
223800                                                                  26940000
223900* ------------------------------------------------------------- * 26950000
224000* INSERT ROW INTO SAT_RGST_BAL_OVSH TABLE                         26960000
224100* ------------------------------------------------------------- * 26970000
224200 6800-INSERT-RGST-OVSH.                                           26980000
224300                                                                  26990000
224400     EXEC SQL                                                     27000000
224500         INSERT  INTO SAT_RGST_BAL_OVSH                           27010000
224600              (  SLS_DTE                                          27020000
224700              ,  STR_NBR                                          27030000
224800              ,  RGST_ID                                          27040000
224900              ,  TRN_NBR                                          27050000
225000              ,  TNDR_TYP_ID                                      27060000
225100              ,  OVSH_AMT                                         27070000
225200              ,  CMNT_TXT)                                        27080000
225300          VALUES                                                  27090000
225400              (  :SAT00000-SLS-DTE                                27100000
225500              ,  :SAT00000-STR-NBR                                27110000
225600              ,  :SAT00000-RGST-ID                                27120000
225700              ,  :SAT00000-TRN-NBR                                27130000
225800              ,  :SAT00000-TNDR-TYP-ID                            27140000
225900              ,  :SAT00000-OVSH-AMT                               27150000
226000              ,  :SAT00000-CMNT-TXT)                              27160000
226100     END-EXEC.                                                    27170000
226200                                                                  27180000
226300     EVALUATE TRUE                                                27190000
226400         WHEN SQLCODE = +0                                        27200000
226500         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         27210000
226600             SET PS-CALL-COMPLETED TO TRUE                        27220000
226700         WHEN OTHER                                               27230000
226800             MOVE '6800-INSERT-RGST-OVSH' TO PV-PARAGRAPH         27240000
226900             SET PV-INSERT-RGST-OVSH TO TRUE                      27250000
227000             PERFORM 8900-SQL-CHECK-RETRY                         27260000
227100     END-EVALUATE.                                                27270000
227200                                                                  27280000
227300*6800-INSERT-RGST-OVSH-EXIT.                                      27290000
227400                                                                  27300000
227500* ------------------------------------------------------------- * 27310000
227600* INSERT ROW INTO SAT_SAFE_OVSH TABLE                             27320000
227700* ------------------------------------------------------------- * 27330000
227800 6900-INSERT-SAFE-OVSH.                                           27340000
227900                                                                  27350000
228000     EXEC SQL                                                     27360000
228100         INSERT  INTO SAT_SAFE_OVSH                               27370000
228200              (  SLS_DTE                                          27380000
228300              ,  STR_NBR                                          27390000
228400              ,  CRE_TMST                                         27400000
228500              ,  SAFE_CPT_TYP_CDE                                 27410000
228600              ,  TNDR_TYP_ID                                      27420000
228700              ,  ACTVY_TYP_CDE                                    27430000
228800              ,  OVSH_AMT                                         27440000
228900              ,  CMNT_TXT)                                        27450000
229000          VALUES                                                  27460000
229100              (  :SAT00001-SLS-DTE                                27470000
229200              ,  :SAT00001-STR-NBR                                27480000
229300              ,  :SAT00001-CRE-TMST                               27490000
229400              ,  :SAT00001-SAFE-CPT-TYP-CDE                       27500000
229500              ,  :SAT00001-TNDR-TYP-ID                            27510000
229600              ,  :SAT00001-ACTVY-TYP-CDE                          27520000
229700              ,  :SAT00001-OVSH-AMT                               27530000
229800              ,  :SAT00001-CMNT-TXT)                              27540000
229900     END-EXEC.                                                    27550000
230000                                                                  27560000
230100     EVALUATE TRUE                                                27570000
230200         WHEN SQLCODE = +0                                        27580000
230300         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         27590000
230400             SET PS-CALL-COMPLETED TO TRUE                        27600000
230500         WHEN OTHER                                               27610000
230600             MOVE '6900-INSERT-RGST-OVSH' TO PV-PARAGRAPH         27620000
230700             SET PV-INSERT-SAFE-OVSH TO TRUE                      27630000
230800             PERFORM 8900-SQL-CHECK-RETRY                         27640000
230900     END-EVALUATE.                                                27650000
231000                                                                  27660000
231100*6900-INSERT-SAFE-OVSH-EXIT.                                      27670000
231200                                                                  27680000
050707* ------------------------------------------------------------- * 27690000
050707* INSERT ROW INTO SAT_TRN_VOID_AFT TABLE                          27700000
050707* ------------------------------------------------------------- * 27710000
050707 6950-INSERT-SAT-TRN-VOID-AFT.                                    27720000
050707                                                                  27730000
050707     EXEC SQL                                                     27740000
050707         INSERT  INTO SAT_TRN_VOID_AFT                            27750000
050707              (  SLS_DTE                                          27760000
050707               , STRT_TMST                                        27770000
050707               , STR_NBR                                          27780000
050707               , RGST_ID                                          27790000
050707               , TRN_TNDR_SEQ_NBR                                 27800000
050707               , TRN_NBR                                          27810000
050707               , VOIDD_TRN_NBR                                    27820000
050707               , TNDR_TYP_ID                                      27830000
050707               , TRN_TNDR_AMT                                     27840000
050707               , TRN_TNDR_MTCH_CDE  )                             27850000
050707          VALUES                                                  27860000
050707              (  :SAT00007-SLS-DTE                                27870000
050707               , :SAT00007-STRT-TMST                              27880000
050707               , :SAT00007-STR-NBR                                27890000
050707               , :SAT00007-RGST-ID                                27900000
050707               , :SAT00007-TRN-TNDR-SEQ-NBR                       27910000
050707               , :SAT00007-TRN-NBR                                27920000
050707               , :SAT00007-VOIDD-TRN-NBR                          27930000
050707               , :SAT00007-TNDR-TYP-ID                            27940000
050707               , :SAT00007-TRN-TNDR-AMT                           27950000
050707               , :SAT00007-TRN-TNDR-MTCH-CDE )                    27960000
050707     END-EXEC.                                                    27970000
050707                                                                  27980000
050707     EVALUATE TRUE                                                27990000
050707         WHEN SQLCODE = +0                                        28000000
050707         WHEN SQLCODE = PC-NON-UNIQUE-KEY                         28010000
050707             SET PS-CALL-COMPLETED TO TRUE                        28020000
050707         WHEN OTHER                                               28030000
050707             MOVE '6950-INSERT-SAT-TRN-VOID-AFT' to pv-paragraph  28040000
050707             SET PV-INSERT-SAT-TRN-VOID-AFT TO TRUE               28050000
050707             PERFORM 8900-SQL-CHECK-RETRY                         28060000
050707     END-EVALUATE.                                                28070000
050707                                                                  28080000
050707*6950-INSERT-SAT-TRN-VOID-AFT                                     28090000
231200                                                                  28100000
231300* ------------------------------------------------------------- * 28110000
231400* GET SALES AUDIT MESSAGE OFF OF MQ QUEUE                         28120000
231500* ------------------------------------------------------------- * 28130000
231600 7000-MQGET-MSG.                                                  28140000
231700                                                                  28150000
231800     INITIALIZE PS-MQGET-SUCCESSFUL-SW.                           28160000
231900     INITIALIZE PV-MSGBUFFER.                                     28170000
232000     MOVE MQMI-NONE            TO MQMD-MSGID.                     28180000
232100     MOVE MQCI-NONE            TO MQMD-CORRELID.                  28190000
232200     MOVE CC-SALES-AUDIT-QNAME TO MQOD-OBJECTNAME.                28200000
232300     MOVE 60000               TO MQGMO-WAITINTERVAL.              28210000
232400     COMPUTE MQGMO-OPTIONS  = MQGMO-SYNCPOINT +                   28220000
232500                              MQGMO-CONVERT +                     28230000
232600                              MQGMO-WAIT.                         28240000
232700                                                                  28250000
232800     CALL WS-MQGET USING PV-HCONN                                 28260000
232900                         PV-GQ-HANDLE                             28270000
233000                         MQM-MESSAGE-DESCRIPTOR                   28280000
233100                         MQM-GET-MESSAGE-OPTIONS                  28290000
233200                         PV-MSGLENGTH                             28300000
233300                         PV-MSGBUFFER                             28310000
233400                         PV-DATA-LENGTH                           28320000
233500                         PV-COMPLETION-CODE                       28330000
233600                         PV-REASON.                               28340000
233700                                                                  28350000
233800*        If put failed then display error message                 28360000
233900*        and break out of loop                                    28370000
234000                                                                  28380000
234100     IF (PV-COMPLETION-CODE NOT = MQCC-OK)                        28390000
234200        IF (PV-REASON NOT = MQRC-NO-MSG-AVAILABLE) THEN           28400000
234300           MOVE PV-COMPLETION-CODE TO PH-COMPLETION-CODE          28410000
234400           MOVE PV-REASON TO PH-REASON                            28420000
234500           PERFORM 8500-BACK-OUT-MQ                               28430000
234600           PERFORM 1600-CLOSE-QUEUE                               28440000
234700           PERFORM 1700-DISCONNECT-QMGR                           28450000
234800           MOVE 'MQGET ERROR'     TO PV-ERROR-MESSAGE             28460000
234900           MOVE PH-COMPLETION-CODE TO PV-COMPLETION-CODE          28470000
235000           MOVE PH-REASON TO PV-REASON                            28480000
235100           PERFORM 9000-DISPLAY-MQ-ERROR                          28490000
235200        ELSE                                                      28500000
235300           DISPLAY 'NO MORE MESSAGES AVAILABLE'                   28510000
235400        END-IF                                                    28520000
235500     ELSE                                                         28530000
235600        MOVE MQMD-REPLYTOQMGR TO PV-ISP-QMGR-NAME                 28540000
235700        DISPLAY "*** REPLY TO QUEUE MANAGER NAME OF MSG : ",      28550000
235800                MQMD-REPLYTOQMGR                                  28560000
235900        SET PS-MQGET-SUCCESSFUL TO TRUE                           28570000
236000     END-IF.                                                      28580000
236100                                                                  28590000
236200* 7000-END-MQGET-MSG.                                             28600000
236300                                                                  28610000
236400* ------------------------------------------------------------- * 28620003
236500* MESSAGE COULD NOT BE PROCESSED,                                 28630003
236600* SO PUT MESSAGE ON THE DEAD LETTER QUEUE                         28640003
236700* ------------------------------------------------------------- * 28650003
219606*7100-PUT-MSG-ON-DLQ.                                             28660005
219606*                                                                 28670005
237000* Don't set any values to attributes, just pass along context     28680003
237100* from the original message, to the Dead Letter Queue.            28690003
219606*                                                                 28700005
219606*    COMPUTE PV-OPEN-OPTIONS = MQOO-FAIL-IF-QUIESCING +           28710005
219606*                              MQOO-OUTPUT.                       28720005
219606*    MOVE PV-QM-NAME                TO MQOD-OBJECTQMGRNAME.       28730005
219606*    MOVE WS-DEAD-LETTER-QUEUE-NAME TO MQOD-OBJECTNAME.           28740005
219606*                                                                 28750005
219606*    CALL WS-MQPUT1 USING PV-HCONN                                28760005
219606*                        MQM-OBJECT-DESCRIPTOR                    28770005
219606*                        MQM-MESSAGE-DESCRIPTOR                   28780005
219606*                        MQM-PUT-MESSAGE-OPTIONS                  28790005
219606*                        PV-MSGLENGTH                             28800005
219606*                        PV-MSGBUFFER                             28810005
219606*                        PV-COMPLETION-CODE                       28820005
219606*                        PV-REASON.                               28830005
219606*                                                                 28840005
238700*        If put failed then display error message                 28850003
238800*        and break out of loop                                    28860003
219606*                                                                 28870005
219606*    IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   28880005
219606*       MOVE 'MQPUT ERROR'     TO PV-ERROR-MESSAGE                28890005
219606*       PERFORM 9000-DISPLAY-MQ-ERROR                             28900005
219606*    ELSE                                                         28910005
219606*       ADD 1 TO PV-NUMPUTS                                       28920005
219606*    END-IF.                                                      28930005
219606*                                                                 28940005
239700*7100-END-PUT-MSG-ON-DLQ.                                         28950003
239800                                                                  28960000
239900******************************************************************28970000
240000*  COMMIT DB2 PROCESSING SINCE THE POINT OF THE LAST COMMIT      *28980000
240100******************************************************************28990000
240200                                                                  29000000
240300 8000-COMMIT-DB2.                                                 29010000
240400                                                                  29020000
240500     EXEC SQL                                                     29030000
240600        COMMIT                                                    29040000
240700     END-EXEC.                                                    29050000
240800                                                                  29060000
240900     IF SQLCODE NOT = +0                                          29070000
241000        SET PV-COMMIT-DB2-INSERTS TO TRUE                         29080000
241100* 01/17/2002  Because we do not want the invalid message put back 29090000
241200* on the CO.SALES.AUDIT.Q, an MQBACK will not be performed;       29100000
241300* instead an MQ COMMIT will be performed in the 9100-DB2-ERROR    29110000
241400* routine to eliminate the invalid message.                       29120000
241500*       PERFORM 8500-BACK-OUT-MQ                                  29130000
241600        MOVE PH-HOLD-STR-NBR   TO PV-ABEND-STR-NBR                29140000
241700        MOVE '8000-COMMIT-DB2' TO PV-PARAGRAPH                    29150000
241800        PERFORM 9100-DB2-ERROR                                    29160000
241900     END-IF.                                                      29170000
242000                                                                  29180000
242100*8000-END-COMMIT-DB2.                                             29190000
242200                                                                  29200000
242300******************************************************************29210000
242400*  COMMIT MQ PROCESSING SINCE THE POINT OF THE LAST COMMIT       *29220000
242500******************************************************************29230000
242600                                                                  29240000
242700 8100-COMMIT-MQ.                                                  29250000
242800                                                                  29260000
242900     CALL WS-MQCMIT USING PV-HCONN                                29270000
243000                          PV-COMPLETION-CODE                      29280000
243100                          PV-REASON.                              29290000
243200                                                                  29300000
243300     IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   29310000
243400        MOVE '8100-COMMIT-MQ'  TO PV-PARAGRAPH                    29320000
243500        MOVE 'MQCMIT ERROR'    TO PV-ERROR-MESSAGE                29330000
243600        PERFORM 8500-BACK-OUT-MQ                                  29340000
243700        PERFORM 9000-DISPLAY-MQ-ERROR                             29350000
243800     END-IF.                                                      29360000
243900                                                                  29370000
244000*8100-END-COMMIT-MQ.                                              29380000
244100                                                                  29390000
244200******************************************************************29400000
244300*  FETCH A STORE ROW FROM THE DB2 STORE TABLE CURSOR.            *29410000
244400******************************************************************29420000
244500                                                                  29430000
244600 8200-FETCH-STORE-ROW.                                            29440000
244700     EXEC SQL                                                     29450000
244800         FETCH STORE_CURSOR                                       29460000
244900             INTO :XST00001-LOC-NBR                               29470000
245000     END-EXEC.                                                    29480000
245100                                                                  29490000
245200     IF ((SQLCODE NOT = PC-SUCCESSFUL-SQLCODE)                    29500000
245300             AND (SQLCODE NOT = PC-END-OF-CURSOR-SQLCODE))        29510000
245400* 01/17/2002  Because we do not want the invalid message put back 29520000
245500* on the CO.SALES.AUDIT.Q, an MQBACK will not be performed;       29530000
245600* instead an MQ COMMIT will be performed in the 9100-DB2-ERROR    29540000
245700* routine to eliminate the invalid message.                       29550000
245800*        PERFORM 8500-BACK-OUT-MQ                                 29560000
245900         SET PV-FETCH-STORE-ROW TO TRUE                           29570000
246000         MOVE XST00001-LOC-NBR TO PV-ABEND-STR-NBR                29580000
246100         PERFORM 9100-DB2-ERROR                                   29590000
246200     END-IF.                                                      29600000
246300*8200-EXIT.                                                       29610000
246400                                                                  29620000
246500******************************************************************29630000
246600* BACK OUT MQ PROCESSING SINCE THE POINT OF THE LAST COMMIT      *29640000
246700******************************************************************29650000
246800                                                                  29660000
246900 8500-BACK-OUT-MQ.                                                29670000
247000                                                                  29680000
247100     CALL WS-MQBACK USING PV-HCONN                                29690000
247200                          PV-COMPLETION-CODE                      29700000
247300                          PV-REASON.                              29710000
247400                                                                  29720000
247500     IF (PV-COMPLETION-CODE NOT = MQCC-OK) THEN                   29730000
247600        MOVE '8500-BACK-OUT-MQ'  TO PV-PARAGRAPH                  29740000
247700        MOVE 'MQBACK ERROR'    TO PV-ERROR-MESSAGE                29750000
247800        PERFORM 9000-DISPLAY-MQ-ERROR                             29760000
247900     END-IF.                                                      29770000
248000                                                                  29780000
PK5087*                                                                 29790000
PK5087************************************************************      29800000
PK5087*    WRITE THE PROCESSED RECOPRD TO MQ LOG MESSAGE FILE           29810000
PK5087************************************************************      29820000
PK5087  8600-WRITE-MQMSG-LOG-FILE.                                      29830000
PK5087                                                                  29840000
PK5087     WRITE MESSAGE-LOG-RECORD  FROM PV-MESSAGE-LOG.               29850000
PK5087                                                                  29860000
248100************************************************************      29870000
248200*    CHECK SQLCODE.  IF -911 TRY AGAIN UP TO 3 RETRIES.           29880000
248300*    IF > 3 RETRIES, SET-UP ABEND.                                29890000
248400************************************************************      29900000
248500 8900-SQL-CHECK-RETRY.                                            29910000
248600                                                                  29920000
248700     EVALUATE TRUE                                                29930000
248800         WHEN SQLCODE = -911                                      29940000
248900             ADD 1 TO PA-RETRY-COUNT                              29950000
249000             IF PA-RETRY-COUNT > PC-MAX-RETRY                     29960000
249100* 01/17/2002  Because we do not want the invalid message put back 29970000
249200* on the CO.SALES.AUDIT.Q, an MQBACK will not be performed;       29980000
249300* instead an MQ COMMIT will be performed in the 9100-DB2-ERROR    29990000
249400* routine to eliminate the invalid message.                       30000000
249500*                PERFORM 8500-BACK-OUT-MQ                         30010000
249600                 PERFORM 9100-DB2-ERROR                           30020000
249700                 MOVE PH-HOLD-STR-NBR TO PV-ABEND-STR-NBR         30030000
249800             END-IF                                               30040000
249900         WHEN ANY                                                 30050000
250000*            PERFORM 8500-BACK-OUT-MQ                             30060000
250100             MOVE PH-HOLD-STR-NBR     TO PV-ABEND-STR-NBR         30070000
250200             PERFORM 9100-DB2-ERROR                               30080000
250300      END-EVALUATE.                                               30090000
250400                                                                  30100000
250500* ------------------------------------------------------------- * 30110000
250600* DISPLAY THE VALUES OF A FAILED MQ API COMMAND                   30120000
250700* ------------------------------------------------------------- * 30130000
250800 9000-DISPLAY-MQ-ERROR.                                           30140000
250900                                                                  30150000
251000     DISPLAY '**** ABEND *************************************'.  30160000
251100     DISPLAY '** MQSERIES ERROR **'                               30170000
251200     DISPLAY '** PROGRAM:    ', PC-PGM-NAME                       30180000
251300     DISPLAY '** PARAGRAPH:  ', PV-PARAGRAPH                      30190000
251400     DISPLAY '** MESSAGE:    ', PV-ERROR-MESSAGE.                 30200000
251500     DISPLAY '** COMP CODE:  ', PV-COMPLETION-CODE.               30210000
251600     DISPLAY '** RSN CODE:   ', PV-REASON.                        30220000
251700     DISPLAY '************************************************'.  30230000
251800     SET AC-MQ-ERROR TO TRUE.                                     30240000
251900     CALL 'ILBOABN0' USING ABEND-CODE.                            30250000
252000                                                                  30260000
252100* 9000-END-DISPLAY-MQ-ERROR.                                      30270000
252200                                                                  30280000
252300*----------------------------------------------------------------*30290000
252400*  FORMAT A DB2 ERROR MESSAGE, AND ABEND THE PROGRAM.            *30300000
252500*----------------------------------------------------------------*30310000
252600                                                                  30320000
252700 9100-DB2-ERROR.                                                  30330000
252800                                                                  30340000
252900     DISPLAY '9100-DB2-ERROR'.                                    30350000
253000     DISPLAY '**  ABEND     **'.                                  30360000
253100     DISPLAY '**  PROGRAM   **  = ' PC-PGM-NAME.                  30370000
253200     DISPLAY '**  PARAGRAPH **  = ' PV-PARAGRAPH.                 30380000
253300     DISPLAY '**  OPERATION **  = ' PV-LAST-DB2-ACTION.           30390000
253400     DISPLAY '**  STORE NBR **  = ' PV-ABEND-STR-NBR              30400000
253500                                                                  30410000
253600*                                                                 30420000
253700*  ROUTINE TO CONVERT THE SQLCA INTO A READABLE FORMAT, USING     30430000
253800*  THE CALLED MODULE DSNTIAR.                                     30440000
253900*                                                                 30450000
254000                                                                  30460000
254100     COPY DPPD004.                                                30470000
254200                                                                  30480000
254300     SET AC-DB2-ERROR TO TRUE.                                    30490000
254400*  01/17/2002  Because we are now performing an MQ COMMIT to      30500000
254500*  delete the defective messate off the CO.SALES.AUDIT.Q, we no   30510000
254600*  longer need to perform 8500-BACK-OUT-MQ.                       30520000
254700     PERFORM 8100-COMMIT-MQ.                                      30530000
254800*    PERFORM 8500-BACK-OUT-MQ.                                    30540000
254900     CALL 'ILBOABN0' USING ABEND-CODE.                            30550000
255000*9100-EXIT.                                                       30560000
