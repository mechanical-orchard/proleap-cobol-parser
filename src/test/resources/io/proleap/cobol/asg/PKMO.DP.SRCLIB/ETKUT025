00001  ID  DIVISION.                                                    02/17/95
00002  PROGRAM-ID.         ETKUT025.                                    ETKUT025
00003  AUTHOR.             TROY BIRK.                                      LV036
00004  INSTALLATION.       KOHLS DEPARTMENT STORES.                     ETKUT025
00005  DATE-WRITTEN.       JULY 1994.                                   ETKUT025
00006  DATE-COMPILED.                                                   ETKUT025
00007                                                                   ETKUT025
00008 ******************************************************************ETKUT025
00009 *  ETKUT025 - BUILD FILE OF RECORDS TO BE DELETED.                   CL*28
00010 *  WORK REQUEST #  - 2026                                            CL**7
00011 ******************************************************************   CL**7
00012 *  THIS PROGRAM WILL CREATE AN OUTPUT FILE OF ROWS TO BE             CL**7
00013 *  DELETED FROM THE EDI TRANMISSION TABLES. ROWS WHICH ARE A         CL**6
00014 *  CERTAIN NUMBER OF DAYS OLD ARE THE ONES WHICH WILL BE DELETED.    CL**6
00015 *                                                                    CL**6
00016 *  A CURSOR IS OPENED ON THE TINTTRN TABLE, RETURNING ALL DKEY/      CL**6
00017 *  DKEY TIMESTAMPS OVER 2 MONTHS OLD. FOR EACH ROW FETCHED FROM      CL**2
00018 *  THIS CURSOR, ANOTHER CURSOR IS OPENED ON THE FUNCTIONAL GROUP     CL**2
00019 *  TABLE, RETURNING THE TRAN SET. IF EVERY ROW                       CL**6
00020 *  FROM THIS CURSOR IS OLD ENOUGH TO BE DELETED, THEN ALL RECORDS    CL**6
00021 *  FROM TINTTRN, TINTERR, AND TINTNOT WILL ALSO BE DELETED.          CL**6
00022 *                                                                    CL**6
00023 *  THE OUTPUT FILE FROM THIS PROGRAM WILL CONTAIN THE TABLE NAME     CL**6
00024 *  AND THE PRIMARY KEY OF THE ROW(S) TO BE DELETED. THIS FILE WILL   CL**7
00025 *  BE USED BY ANOTHER PROGRAM TO DO THE ACTUAL DELETION.             CL*35
************************************************************************        
JF0703* 07-22-2003 JON FIEDLER      WR/IR #: WR24423                            
JF0703* ADDED LOGIC TO EXTRACT ROWS ON TINTTRN WITHOUT CHILDREN THAT ARE        
JF0703* OLDER THAN TWO MONTHS. ALSO CHANGED THE LOGIC TO NOT ABEND IF AN        
JF0703* INVALID TRANSACTION SET IS FOUND, BUT TO SYSOUT AN ERROR                
JF0703* MESSAGE AND TO EXTRACT THIS TRANSACTION SET SO IT IS DELETED            
JF0703* FROM THE TFGTRST TABLE.                                                 
***********************************************************************         
00027                                                                      CL**2
00028  ENVIRONMENT DIVISION.                                            ETKUT025
00029 *                                                                 ETKUT025
00030  CONFIGURATION SECTION.                                           ETKUT025
00031 *                                                                 ETKUT025
00032  SOURCE-COMPUTER.        IBM-3090.                                ETKUT025
00033  OBJECT-COMPUTER.        IBM-3090.                                ETKUT025
00034 *                                                                 ETKUT025
00035  INPUT-OUTPUT SECTION.                                            ETKUT025
00036  FILE-CONTROL.                                                    ETKUT025
00037      SELECT  TRAN-SET-LIFE-FILE                                      CL**2
00038          ASSIGN TO INP01.                                         ETKUT025
00039      SELECT  TO-BE-DELETED-FILE                                      CL**5
00040          ASSIGN TO OUT01.                                            CL**5
00041                                                                   ETKUT025
00042  DATA DIVISION.                                                   ETKUT025
00043  FILE SECTION.                                                    ETKUT025
00044  FD  TRAN-SET-LIFE-FILE                                              CL**2
00045      LABEL RECORDS ARE STANDARD                                   ETKUT025
00046      RECORDING MODE IS F                                          ETKUT025
00047      BLOCK CONTAINS 0 RECORDS.                                    ETKUT025
00048  01  TRAN-SET-LIFE-RECORD.                                           CL**2
00049      05  TSL-TRAN-SET            PIC X(03).                          CL**2
00050      05  FILLER                  PIC X(10).                          CL**2
00051      05  TSL-DIRECTION           PIC X(01).                          CL**2
00052      05  FILLER                  PIC X(10).                          CL**2
00053      05  TSL-TIME-IN-DAYS        PIC 9(03).                          CL**2
00054      05  FILLER                  PIC X(53).                          CL**2
00055                                                                   ETKUT025
00056  FD  TO-BE-DELETED-FILE                                              CL**5
00057      LABEL RECORDS ARE STANDARD                                   ETKUT025
00058      RECORDING MODE IS F                                          ETKUT025
00059      BLOCK CONTAINS 0 RECORDS.                                    ETKUT025
00060  01  TO-BE-DELETED-RECORD        PIC X(80).                          CL**6
00061                                                                   ETKUT025
00062                                                                   ETKUT025
00063  WORKING-STORAGE SECTION.                                         ETKUT025
00064 *                                                                 ETKUT025
00065  01  DK-DATABASE-KEYS.                                            ETKUT025
00066      05  DK-TWO-MONTHS-AGO               PIC X(10)  VALUE SPACE.     CL**7
00067 *                                                                 ETKUT025
00068  01  PC-PROGRAM-CONSTANTS.                                        ETKUT025
00069      05  PC-MAX-RETRIES          PIC S9(03)   VALUE +03           ETKUT025
00070                                               COMP-3.             ETKUT025
00071      05  PC-PGM-DPKUT500          PIC X(08)   VALUE 'DPKUT500'.      CL*10
00072 *                                                                 ETKUT025
00073  01  PV-PROGRAM-VARIABLES.                                        ETKUT025
00074      05  PV-TODAY.                                                   CL*15
00075          10  PV-TODAY-MM            PIC 9(02) VALUE 0.               CL*15
00076          10  PV-TODAY-DD            PIC 9(02) VALUE 0.               CL*15
00077          10  PV-TODAY-YY            PIC 9(02) VALUE 0.               CL*15
00078      05  PV-TMST-DATE               PIC X(10) VALUE SPACES.          CL*15
00079      05  PV-PARAGRAPH-NAME          PIC X(30) VALUE SPACES.          CL*14
00080      05  PV-DB2-OPER-ATTEMPTED      PIC X(30) VALUE SPACES.       ETKUT025
00081      05  PV-SQL-SUB                 PIC 9(03) VALUE ZERO.         ETKUT025
00082      05  PV-TRAN-SET-LIFE-TABLE OCCURS 20.                           CL**4
00083          10  PV-TS-TABLE-TSET       PIC X(03) VALUE SPACE.           CL**4
00084          10  PV-TS-TABLE-DIR        PIC X(01) VALUE SPACE.           CL**4
00085          10  PV-TS-TABLE-MAX-DATE   PIC X(10) VALUE SPACE.           CL**4
00086      05  PV-HOLD-TABLE-NUM-ITEMS    PIC 9(02) VALUE 00.              CL*29
00087 *                                                                 ETKUT025
00088  01  PS-PROGRAM-SUBSCRIPTS.                                          CL**4
00089      05  PS-SUB1                 PIC 9(02)    VALUE ZERO.            CL**4
00090 *                                                                    CL**4
00091  01  PS-PROGRAM-SWITCHES.                                            CL**4
00092      05  PS-END-OF-FILE          PIC X        VALUE 'N'.             CL**4
00093          88  PS-EOF                           VALUE 'Y'.          ETKUT025
00094      05  PS-MORE-TFGTRST-ROWS-SW PIC X        VALUE 'Y'.             CL**3
00095          88  PS-MORE-TFGTRST-ROWS             VALUE 'Y'.             CL**3
00096          88  PS-NO-MORE-TFGTRST-ROWS          VALUE 'N'.             CL**3
00097      05  PS-MORE-TINTTRN-ROWS-SW PIC X        VALUE 'Y'.             CL**3
00098          88  PS-MORE-TINTTRN-ROWS             VALUE 'Y'.             CL**3
00099          88  PS-NO-MORE-TINTTRN-ROWS          VALUE 'N'.             CL**3
00100      05  PS-TSET-FOUND-SW        PIC X        VALUE 'Y'.             CL*24
00101          88  PS-TSET-FOUND                    VALUE 'Y'.             CL**4
00102          88  PS-TSET-NOT-FOUND                VALUE 'N'.             CL**4
00103      05  PS-ROW-FOUND-SW         PIC X        VALUE 'Y'.             CL*24
00104          88  PS-ROW-FOUND                     VALUE 'Y'.             CL*24
00105          88  PS-ROW-NOT-FOUND                 VALUE 'N'.             CL*24
00106      05  PS-ALL-RECORDS-DELETED-SW  PIC X     VALUE 'Y'.             CL**4
00107          88  PS-ALL-RECORDS-DELETED           VALUE 'Y'.             CL**4
00108          88  PS-NOT-ALL-RECORDS-DELETED       VALUE 'N'.             CL**4
00109 *                                                                 ETKUT025
00110 ******************************************************************   CL*10
00111 *    CALENDAR ROUTINE                                                CL*10
00112 ******************************************************************   CL*10
00113      COPY DPWS500.                                                   CL*10
00114 *                                                                    CL*10
00115 *****************************************************************    CL**7
00116 *****  TO BE DELETED FILE RECORD LAYOUT.                             CL*10
00117 *****************************************************************    CL**7
00118 *                                                                    CL**7
00119      COPY ETWS035.                                                   CL*36
00120      EJECT                                                           CL**7
00121 *                                                                    CL**7
00122 ******************************************************************   CL*10
00123 *  SQL ABEND WORKING STORAGE                                         CL*10
00124 ******************************************************************   CL*10
00125      COPY DPWS004.                                                   CL*10
00126      EJECT                                                           CL*10
00127 *                                                                    CL*10
00128 ***************************************************************** ETKUT025
00129 *****  DB2 EDI INTERCHANGE TRANMISSION TABLE DCLGEN                  CL**3
00130 ***************************************************************** ETKUT025
00131 *                                                                 ETKUT025
00132      EXEC SQL                                                     ETKUT025
00133          INCLUDE TINTTRN                                             CL**3
00134      END-EXEC.                                                    ETKUT025
00135 *                                                                    CL*33
00136 *****************************************************************    CL*33
00137 *****  DB2 EDI INTERCHANGE TRANMISSION ERROR TABLE DCLGEN            CL*33
00138 *****************************************************************    CL*33
00139 *                                                                    CL*33
00140      EXEC SQL                                                        CL*33
00141          INCLUDE TINTERR                                             CL*33
00142      END-EXEC.                                                       CL*33
00143 *                                                                    CL*33
00144 *****************************************************************    CL**3
00145 *****  DB2 EDI FUNCTIONAL GROUP/TRAN SET TABLE DCLGEN                CL**3
00146 *****************************************************************    CL**3
00147 *                                                                    CL**3
00148      EXEC SQL                                                        CL**3
00149          INCLUDE TFGTRST                                             CL**3
00150      END-EXEC.                                                       CL**3
00151 *                                                                    CL**3
00144 *****************************************************************    CL**3
00145 *****  DB2 EDI TRANSACTION LIFE CYCLE TABLE DCLGEN                   CL**3
00146 *****************************************************************    CL**3
00147 *                                                                    CL**3
00148      EXEC SQL                                                        CL**3
00149          INCLUDE TTNSTLC                                             CL**3
00150      END-EXEC.                                                       CL**3
00151 *                                                                    CL**3
00152 *****************************************************************    CL*33
00153 * DB2 INTERCHANGE TRANSMISSION CURSOR                                CL*33
00154 *****************************************************************    CL*33
00155      EXEC SQL                                                     ETKUT025
00156          DECLARE  TINTTRN_CURSOR    CURSOR FOR                       CL**3
00157          SELECT   TP_DKEY,                                           CL**3
00158                   TP_DKEY_TMST,                                      CL**3
00159                   DATE(TP_DKEY_TMST),                                CL*23
00160                   DIR_IND                                            CL**3
00161          FROM     TINTTRN                                            CL**3
00162          WHERE  (DATE(TP_DKEY_TMST) < :DK-TWO-MONTHS-AGO)            CL**3
00163          ORDER BY TP_DKEY_TMST                                       CL**3
00164      END-EXEC.                                                    ETKUT025
00165 *                                                                 ETKUT025
00166 *****************************************************************    CL**3
00167 * DB2 FG/TSET CURSOR                                                 CL**3
00168 *****************************************************************    CL**3
00169      EXEC SQL                                                        CL**3
00170          DECLARE  TFGTRST_CURSOR    CURSOR FOR                       CL**3
00171          SELECT   TRN_SET_CDE,                                       CL**7
00172                   FUNC_CDE_SEQ_NBR,                                  CL**9
00173                   TRN_SET_SEQ_NBR                                    CL**9
00174          FROM     TFGTRST                                            CL**3
00175          WHERE  (TP_DKEY      = :INTTRN-TP-DKEY)        AND          CL*22
00176                 (TP_DKEY_TMST = :INTTRN-TP-DKEY-TMST)                CL*22
00177      END-EXEC.                                                       CL**3
00178 *                                                                    CL*33
00179 *                                                                    CL**3
00180 ***************************************************************** ETKUT025
00181 * DB2 COMMUNICATIONS AREA                                         ETKUT025
00182 ***************************************************************** ETKUT025
00183                                                                   ETKUT025
00184      EXEC SQL                                                     ETKUT025
00185          INCLUDE SQLCA                                            ETKUT025
00186      END-EXEC.                                                    ETKUT025
00187 *                                                                 ETKUT025
00188      COPY SQLCA2.                                                 ETKUT025
00189                                                                   ETKUT025
00190  01  ABEND-CODE               PIC S9(04)  VALUE ZERO              ETKUT025
00191                                           COMP SYNC.              ETKUT025
00192      EJECT                                                        ETKUT025
00193  LINKAGE SECTION.                                                 ETKUT025
00194 *                                                                 ETKUT025
00195  PROCEDURE DIVISION.                                              ETKUT025
00196 *                                                                 ETKUT025
00197 ******************************************************************ETKUT025
00198 * MAIN-LINE LOGIC.                                                   CL**3
00199 ******************************************************************ETKUT025
00200  A100-MAIN-MODULE.                                                ETKUT025
00201                                                                   ETKUT025
00202      PERFORM B100-OPEN-FILES.                                     ETKUT025
00203      PERFORM B150-INITIALIZE.                                        CL*10
00204                                                                      CL*10
00205      PERFORM Z100-READ-INPUT-FILE.                                   CL**9
00206      PERFORM B200-LOAD-TSET-LIFE-TABLE                               CL*16
00207          UNTIL PS-EOF.                                               CL*16
00208                                                                      CL*16
00209      MOVE PS-SUB1 TO PV-HOLD-TABLE-NUM-ITEMS.                        CL**9
00210                                                                      CL**9
00211      PERFORM Z200-OPEN-TINTTRN-CURSOR.                               CL**3
00212      PERFORM Z300-FETCH-TINTTRN-ROW.                                 CL**3
00213                                                                      CL**3
00214      PERFORM B300-PROCESS-TINTTRN-ROWS  UNTIL                        CL**5
00215          PS-NO-MORE-TINTTRN-ROWS.                                    CL**3
00216                                                                   ETKUT025
00217      PERFORM Z400-CLOSE-TINTTRN-CURSOR.                              CL**3
00218                                                                   ETKUT025
00219      PERFORM B400-CLOSE-FILES.                                       CL**5
00220      STOP RUN.                                                       CL**5
00221                                                                      CL**9
00222 ******************************************************************ETKUT025
00223 *  OPEN ALL FILES USED BY THE PROGRAM.                               CL*10
00224 ******************************************************************ETKUT025
00225  B100-OPEN-FILES.                                                 ETKUT025
00226 *                                                                 ETKUT025
00227      OPEN INPUT  TRAN-SET-LIFE-FILE                                  CL**5
00228           OUTPUT TO-BE-DELETED-FILE.                                 CL**5
00229 *                                                                    CL**3
00230 ******************************************************************   CL*10
00231 * CALL THE CALENDAR ROUTINE TO GET THE DATE SIX MONTHS AGO.          CL*10
00232 ******************************************************************   CL*10
00233  B150-INITIALIZE.                                                    CL*10
00234 *                                                                    CL*10
00235                                                                      CL*10
00236      ACCEPT DPG51-SYSTEM-DATE FROM DATE.                             CL*10
00237      SET DPG51-ACTUAL-CALENDAR-ONLY                                  CL*10
00238          DPG51-DECREMENT-DATE       TO TRUE.                         CL*10
00239                                                                      CL*15
00240      MOVE DPG51-SYSTEM-DATE-YR      TO PV-TODAY-YY.                  CL*15
00241      MOVE DPG51-SYSTEM-DATE-MO      TO PV-TODAY-MM.                  CL*15
00242      MOVE DPG51-SYSTEM-DATE-DY      TO PV-TODAY-DD.                  CL*15
00243                                                                      CL*15
00244      MOVE PV-TODAY TO DPG52-LK-DATE-INPUT.                           CL*15
00245      SET  DPG52-LK-DTE-GREG TO TRUE.                                 CL*15
00246                                                                      CL*15
00247 *    MOVE 181 TO  DPG51-INCR-DECR-DAYS-9.                            CL*19
00248      MOVE  60 TO  DPG51-INCR-DECR-DAYS-9.                            CL*19
00249                                                                      CL*10
00250      CALL PC-PGM-DPKUT500 USING DPG51 DPG52                          CL*10
00251                                 DPG53 DPG54                          CL*10
00252                                 DPG55 DPG56.                         CL*10
00253                                                                      CL*10
00254      IF DPG54-NO-ERROR                                               CL*10
00255          MOVE DPG55-DB2-ISO-DATE-FMT TO DK-TWO-MONTHS-AGO            CL*13
00256      ELSE                                                            CL*11
00257          DISPLAY '** ABEND ** IN ETKUT025'                           CL*11
00258          DISPLAY 'DATE ERROR : ' DPG54-ERROR-MESSAGE                 CL*11
00259          MOVE +4019 TO ABEND-CODE                                    CL*11
00260          CALL 'ILBOABN0' USING ABEND-CODE                            CL*11
00261      END-IF.                                                         CL*11
00262 *                                                                    CL*10
00263 ******************************************************************   CL**3
00264 * LOAD THE DATA FROM THE TRANSACTION SET TRANSMISISON LIFE FILE      CL*10
00265 * INTO A TABLE IN WORKING STORAGE.                                   CL*10
00266 ******************************************************************   CL**3
00267  B200-LOAD-TSET-LIFE-TABLE.                                          CL**3
00268                                                                      CL**9
00269      ADD 1 TO PS-SUB1.                                               CL**9
00270                                                                      CL**9
00271      MOVE TSL-TRAN-SET      TO PV-TS-TABLE-TSET     (PS-SUB1).       CL**9
00272      MOVE TSL-DIRECTION     TO PV-TS-TABLE-DIR      (PS-SUB1).       CL**9
00273                                                                      CL**9
00274      SET DPG51-ACTUAL-CALENDAR-ONLY                                  CL*17
00275          DPG51-DECREMENT-DATE       TO TRUE.                         CL*17
00276                                                                      CL*17
00277      MOVE PV-TODAY TO DPG52-LK-DATE-INPUT.                           CL*17
00278      SET  DPG52-LK-DTE-GREG TO TRUE.                                 CL*17
00279                                                                      CL*17
00280      MOVE TSL-TIME-IN-DAYS  TO  DPG51-INCR-DECR-DAYS-9.              CL*17
00281                                                                      CL*17
00282      CALL PC-PGM-DPKUT500 USING DPG51 DPG52                          CL*17
00283                                 DPG53 DPG54                          CL*17
00284                                 DPG55 DPG56.                         CL*17
00285                                                                      CL*17
00286      IF DPG54-NO-ERROR                                               CL*17
00287          MOVE DPG55-DB2-ISO-DATE-FMT                                 CL*17
00288                             TO PV-TS-TABLE-MAX-DATE (PS-SUB1)        CL*18
00289      ELSE                                                            CL*17
00290          DISPLAY '** ABEND ** IN ETKUT025'                           CL*17
00291          DISPLAY 'DATE ERROR : ' DPG54-ERROR-MESSAGE                 CL*17
00292          MOVE +4019 TO ABEND-CODE                                    CL*17
00293          CALL 'ILBOABN0' USING ABEND-CODE                            CL*17
00294      END-IF.                                                         CL*17
00295      PERFORM Z100-READ-INPUT-FILE.                                   CL**4
00296 *                                                                    CL**3
00297 ******************************************************************ETKUT025
00298 *  FOR EACH ROW RETRUNED FROM THE DRIVER CURSOR (TINTTRN), OPEN      CL*10
00299 *  ANOTHER CURSOR ON THE TFGTRST TABLE. IF ALL ROWS RETURNED BY      CL*10
00300 *  THE TFGTRST CURSOR ARE ELIGLBE TO BE DELETED, THEN WRITE          CL*10
00301 *  RECORDS TO THE OUTPUT FILE FOR TINTTRN, TINTERR, AND TINTNOT.     CL*10
00302 ******************************************************************ETKUT025
00303  B300-PROCESS-TINTTRN-ROWS.                                          CL**5
00304                                                                   ETKUT025
00305      SET PS-ALL-RECORDS-DELETED                                      CL**7
00306          PS-ROW-NOT-FOUND                                            CL*24
00307          PS-MORE-TFGTRST-ROWS    TO TRUE.                            CL**7
00308                                                                      CL**7
00309      PERFORM Z500-OPEN-TFGTRST-CURSOR.                               CL**3
00310      PERFORM Z600-FETCH-TFGTRST-ROW.                                 CL**3
00311                                                                      CL**3
00312      PERFORM C100-PROCESS-TFGTRST-ROWS UNTIL                         CL**3
00313          PS-NO-MORE-TFGTRST-ROWS.                                    CL**3
00314                                                                   ETKUT025
00315      PERFORM Z700-CLOSE-TFGTRST-CURSOR.                              CL**3
00316 *                                                                 ETKUT025
JF0703     IF (PS-ALL-RECORDS-DELETED AND                                  CL*24
JF0703        PS-ROW-FOUND) OR PS-ROW-NOT-FOUND                            CL*24
00319          INITIALIZE ET035-TRANS-TO-BE-DELETED                        CL*13
00320                                                                      CL**7
00321          MOVE INTTRN-TP-DKEY      TO ET035-TP-DKEY                   CL**7
00322          MOVE INTTRN-TP-DKEY-TMST TO ET035-TP-DKEY-TMST              CL**7
00323          MOVE 'TINTTRN'           TO ET035-TABLE-NAME                CL**7
00324          PERFORM Z800-WRITE-TO-BE-DELETED-REC                        CL*13
00325                                                                      CL**7
00326          PERFORM Z825-SELECT-TINTERR                                 CL*33
00327                                                                      CL*33
00328          IF SQLCODE = +000 OR                                        CL*33
00329             SQLCODE = -811                                           CL*33
00330              MOVE 'TINTERR' TO ET035-TABLE-NAME                      CL*33
00331                                                                      CL*33
00332              PERFORM Z800-WRITE-TO-BE-DELETED-REC                    CL*33
00333                                                                      CL*33
00334              MOVE 'TINTNOT' TO ET035-TABLE-NAME                      CL*33
00335                                                                      CL*33
00336              PERFORM Z800-WRITE-TO-BE-DELETED-REC                    CL*33
00337          END-IF                                                      CL*33
00338                                                                           
00339          PERFORM Z850-SELECT-TTNSTLC                                      
00340                                                                           
00328          IF SQLCODE = +000 OR                                        CL*33
00329             SQLCODE = -811                                           CL*33
00330              MOVE 'TTNSTLC' TO ET035-TABLE-NAME                      CL*33
00331                                                                      CL*33
00332              PERFORM Z800-WRITE-TO-BE-DELETED-REC                    CL*33
00333                                                                           
00337          END-IF                                                      CL*33
00338                                                                      CL**7
00339      END-IF.                                                         CL**3
00340 *                                                                    CL**3
00341      PERFORM Z300-FETCH-TINTTRN-ROW.                                 CL**3
00342 *                                                                    CL**3
00343 ******************************************************************   CL**5
00344 *  CLOSE ALL FILES USED BY THIS PROGRAM.                             CL**5
00345 ******************************************************************   CL**5
00346  B400-CLOSE-FILES.                                                   CL**5
00347 *                                                                    CL**5
00348      CLOSE  TRAN-SET-LIFE-FILE                                       CL**5
00349             TO-BE-DELETED-FILE.                                      CL**5
00350 *                                                                    CL*10
00351 ******************************************************************   CL**4
00352 *  SCAN THROUGH THE TRAN SET LIFE TABLE TO GET THE MAX DATE.         CL*10
00353 *  IF THE DATE FROM THE CURSOR IS LESS THAN OR = TO THE MAX DATE,    CL*10
00354 *  WRITE THE KEY FOR THIS ROW TO THE TO BE DELETED FILE.             CL*10
00355 *  IF ANY ROW RETURNED BY THIS CURSOR CANNOT BE DELETED, SET A       CL*10
00356 *  FLAG.  IF THE TRAN SET / DIRECTION FROM THE CURSOR IS NOT FOUND   CL*10
00357 *  IN THE TABLE, ABEND.                                              CL*10
00358 ******************************************************************   CL**4
00359  C100-PROCESS-TFGTRST-ROWS.                                          CL**4
00360 *                                                                    CL**4
00361      SET PS-ROW-FOUND      TO TRUE.                                  CL*24
00362      SET PS-TSET-NOT-FOUND TO TRUE.                                  CL**4
00363      PERFORM D100-MATCH-TSET                                         CL**4
00364          VARYING PS-SUB1 FROM 1 BY 1                                 CL**4
00365          UNTIL PS-TSET-FOUND OR                                      CL*13
00366               PS-SUB1 > PV-HOLD-TABLE-NUM-ITEMS.                     CL**4
00367                                                                      CL**4
00368      SUBTRACT 1 FROM PS-SUB1.                                        CL*32
00369                                                                      CL*31
00370      IF PS-TSET-FOUND                                                CL**4
00371          IF PV-TS-TABLE-MAX-DATE (PS-SUB1) > PV-TMST-DATE            CL*23
00372              INITIALIZE ET035-TRANS-TO-BE-DELETED                    CL*13
00373                                                                      CL**7
00374              MOVE INTTRN-TP-DKEY      TO ET035-TP-DKEY               CL**7
00375              MOVE INTTRN-TP-DKEY-TMST TO ET035-TP-DKEY-TMST          CL**7
00376              MOVE FGTRST-FUNC-CDE-SEQ-NBR TO                         CL**7
00377                   ET035-TFGTRST-FUNC-CDE-SEQ-NBR                     CL*13
00378              MOVE FGTRST-TRN-SET-SEQ-NBR  TO                         CL**7
00379                   ET035-TFGTRST-TRN-SET-SEQ-NBR                      CL**7
00380              MOVE 'TFGTRST'           TO ET035-TABLE-NAME            CL**7
00381              PERFORM Z800-WRITE-TO-BE-DELETED-REC                    CL*13
00382                                                                      CL**7
00383          ELSE                                                        CL**4
00384              SET PS-NOT-ALL-RECORDS-DELETED TO TRUE                  CL**4
00385          END-IF                                                      CL*13
00386      ELSE                                                            CL**4
JF0703         INITIALIZE ET035-TRANS-TO-BE-DELETED                        CL*13
JF0703                                                                     CL**7
JF0703         MOVE INTTRN-TP-DKEY      TO ET035-TP-DKEY                   CL**7
JF0703         MOVE INTTRN-TP-DKEY-TMST TO ET035-TP-DKEY-TMST              CL**7
JF0703         MOVE FGTRST-FUNC-CDE-SEQ-NBR TO                             CL**7
JF0703              ET035-TFGTRST-FUNC-CDE-SEQ-NBR                         CL*13
JF0703         MOVE FGTRST-TRN-SET-SEQ-NBR  TO                             CL**7
JF0703              ET035-TFGTRST-TRN-SET-SEQ-NBR                          CL**7
JF0703         MOVE 'TFGTRST'           TO ET035-TABLE-NAME                CL**7
JF0703         PERFORM Z800-WRITE-TO-BE-DELETED-REC                        CL*13
JF0703                                                                          
JF0703         DISPLAY ' '                                                      
JF0703         DISPLAY '**  PROGRAM   **  =  ETKUT025'                     CL**4
JF0703         DISPLAY 'TRAN SET FOUND THAT IS NOT IN THE TABLE'           CL**4
JF0703         DISPLAY 'TRAN SET: '    FGTRST-TRN-SET-CDE                  CL**4
JF0703         DISPLAY 'DIRECTION:  '  INTTRN-DIR-IND                      CL**4
JF0703         DISPLAY 'TP-DKEY:    '  INTTRN-TP-DKEY                      CL**7
JF0703         DISPLAY 'TIMESTAMP:  '  INTTRN-TP-DKEY-TMST                 CL**7
JF0703                                                                     CL**4
00395      END-IF.                                                         CL**4
00396                                                                      CL**4
00397      PERFORM Z600-FETCH-TFGTRST-ROW.                                 CL**4
00398 *                                                                    CL**4
00399 ******************************************************************   CL**4
00400 * IF THE TRAN SET/DIRECTION FROM THE CURSOR MATCH THE TABLE,         CL*10
00401 * SET A FLAG.                                                        CL*10
00402 ******************************************************************   CL**4
00403  D100-MATCH-TSET.                                                    CL**4
00404      IF (FGTRST-TRN-SET-CDE   = PV-TS-TABLE-TSET (PS-SUB1)) AND      CL**4
00405         (INTTRN-DIR-IND = PV-TS-TABLE-DIR  (PS-SUB1))                CL*13
00406          SET PS-TSET-FOUND TO TRUE                                   CL**4
00407      END-IF.                                                         CL*14
00408 *                                                                    CL**4
00409 ******************************************************************ETKUT025
00410 * Z100-READ-INPUT-FILE                                               CL**4
00411 ******************************************************************ETKUT025
00412  Z100-READ-INPUT-FILE.                                               CL**4
00413                                                                   ETKUT025
00414      READ TRAN-SET-LIFE-FILE                                         CL**4
00415              AT END                                               ETKUT025
00416                  SET PS-EOF TO TRUE.                              ETKUT025
00417 *                                                                 ETKUT025
00418 ******************************************************************ETKUT025
00419 * OPEN THE TINTTRN CURSOR.                                           CL*10
00420 ******************************************************************ETKUT025
00421  Z200-OPEN-TINTTRN-CURSOR.                                           CL**3
00422                                                                   ETKUT025
00423      PERFORM                                                      ETKUT025
00424          WITH TEST AFTER                                          ETKUT025
00425          VARYING PV-SQL-SUB                                       ETKUT025
00426          FROM 1 BY 1                                              ETKUT025
00427          UNTIL (PV-SQL-SUB > PC-MAX-RETRIES                       ETKUT025
00428                    OR SQLCODE = 0                                 ETKUT025
00429                    OR SQLCODE = +100)                             ETKUT025
00430                                                                   ETKUT025
00431          EXEC SQL                                                 ETKUT025
00432              OPEN TINTTRN_CURSOR                                     CL**3
00433          END-EXEC                                                 ETKUT025
00434                                                                   ETKUT025
00435          EVALUATE TRUE                                            ETKUT025
00436              WHEN SQLCODE = -904                                  ETKUT025
00437              WHEN SQLCODE = -911                                  ETKUT025
00438              WHEN SQLCODE = 0                                     ETKUT025
00439                  CONTINUE                                         ETKUT025
00440              WHEN SQLWARN NOT = SPACES                            ETKUT025
00441              WHEN SQLCODE NOT = ZERO                              ETKUT025
00442                  MOVE 'Z200-OPEN-TINTTRN-CURSOR'                     CL**3
00443                                TO  PV-PARAGRAPH-NAME              ETKUT025
00444                  MOVE 'OPEN ON TINTTRN CURSOR'                       CL**7
00445                                TO  PV-DB2-OPER-ATTEMPTED          ETKUT025
00446                  PERFORM Z900-SQL-ABEND                           ETKUT025
00447          END-EVALUATE                                             ETKUT025
00448      END-PERFORM.                                                 ETKUT025
00449 *                                                                 ETKUT025
00450      IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        ETKUT025
00451          MOVE 'Z200-OPEN-TINTTRN-CURSOR'                             CL**3
00452                                TO  PV-PARAGRAPH-NAME              ETKUT025
00453          MOVE 'OPEN RETRIES EXCEEDED'                             ETKUT025
00454                                TO  PV-DB2-OPER-ATTEMPTED          ETKUT025
00455          PERFORM Z900-SQL-ABEND                                   ETKUT025
00456      END-IF.                                                      ETKUT025
00457                                                                   ETKUT025
00458 *                                                                 ETKUT025
00459 ******************************************************************ETKUT025
00460 * FETCH THE NEXT ROW FROM THE TINTTRN CURSOR                         CL*10
00461 ******************************************************************ETKUT025
00462  Z300-FETCH-TINTTRN-ROW.                                             CL**3
00463                                                                   ETKUT025
00464      EXEC SQL                                                     ETKUT025
00465          FETCH TINTTRN_CURSOR                                        CL**7
00466          INTO  :INTTRN-TP-DKEY,                                      CL*12
00467                :INTTRN-TP-DKEY-TMST,                                 CL*12
00468                :PV-TMST-DATE,                                        CL*23
00469                :INTTRN-DIR-IND                                       CL*12
00470      END-EXEC.                                                    ETKUT025
00471                                                                   ETKUT025
00472      IF SQLCODE = +100                                            ETKUT025
00473          SET PS-NO-MORE-TINTTRN-ROWS  TO TRUE                        CL**3
00474      ELSE                                                         ETKUT025
00475          IF SQLCODE NOT = 0                                       ETKUT025
00476               MOVE 'Z300-FETCH-TINTTRN-ROW' TO PV-PARAGRAPH-NAME     CL**3
00477               MOVE 'FETCH ROW FROM TINTTRN CURSOR'                   CL**7
00478                                       TO PV-DB2-OPER-ATTEMPTED    ETKUT025
00479              PERFORM Z900-SQL-ABEND                               ETKUT025
00480          END-IF                                                   ETKUT025
00481      END-IF.                                                      ETKUT025
00482 *                                                                 ETKUT025
00483 ******************************************************************ETKUT025
00484 * CLOSE THE TINTTRN CURSOR.                                          CL*10
00485 ******************************************************************ETKUT025
00486  Z400-CLOSE-TINTTRN-CURSOR.                                          CL**3
00487                                                                   ETKUT025
00488      PERFORM                                                      ETKUT025
00489          WITH TEST AFTER                                          ETKUT025
00490          VARYING PV-SQL-SUB                                       ETKUT025
00491          FROM 1 BY 1                                              ETKUT025
00492          UNTIL (PV-SQL-SUB > PC-MAX-RETRIES                       ETKUT025
00493                    OR SQLCODE = 0)                                ETKUT025
00494                                                                   ETKUT025
00495          EXEC SQL                                                 ETKUT025
00496              CLOSE TINTTRN_CURSOR                                    CL**7
00497          END-EXEC                                                 ETKUT025
00498                                                                   ETKUT025
00499          EVALUATE TRUE                                            ETKUT025
00500              WHEN SQLCODE = -904                                  ETKUT025
00501              WHEN SQLCODE = -911                                  ETKUT025
00502              WHEN SQLCODE = 0                                     ETKUT025
00503                  CONTINUE                                         ETKUT025
00504              WHEN SQLWARN NOT = SPACES                            ETKUT025
00505              WHEN SQLCODE NOT = ZERO                              ETKUT025
00506                  MOVE 'Z400-CLOSE-TINTTRN-CURSOR'                    CL**3
00507                                TO  PV-PARAGRAPH-NAME              ETKUT025
00508                  MOVE 'CLOSE ON TINTTRN CURSOR'                      CL**7
00509                                TO  PV-DB2-OPER-ATTEMPTED          ETKUT025
00510                  PERFORM Z900-SQL-ABEND                           ETKUT025
00511          END-EVALUATE                                             ETKUT025
00512      END-PERFORM.                                                 ETKUT025
00513 *                                                                 ETKUT025
00514      IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                        ETKUT025
00515          MOVE 'Z400-CLOSE-TINTTRN-CURSOR'                            CL**3
00516                                TO  PV-PARAGRAPH-NAME              ETKUT025
00517          MOVE 'CLOSE RETRIES EXCEEDED'                            ETKUT025
00518                                TO  PV-DB2-OPER-ATTEMPTED          ETKUT025
00519          PERFORM Z900-SQL-ABEND                                   ETKUT025
00520      END-IF.                                                      ETKUT025
00521 *                                                                 ETKUT025
00522 *                                                                    CL**7
00523 ******************************************************************   CL**7
00524 *  OPEN THE TFGTRST CURSOR.                                          CL*10
00525 ******************************************************************   CL*10
00526  Z500-OPEN-TFGTRST-CURSOR.                                           CL**7
00527                                                                      CL**7
00528      PERFORM                                                         CL**7
00529          WITH TEST AFTER                                             CL**7
00530          VARYING PV-SQL-SUB                                          CL**7
00531          FROM 1 BY 1                                                 CL**7
00532          UNTIL (PV-SQL-SUB > PC-MAX-RETRIES                          CL**7
00533                    OR SQLCODE = 0                                    CL**7
00534                    OR SQLCODE = +100)                                CL**7
00535                                                                      CL**7
00536          EXEC SQL                                                    CL**7
00537              OPEN TFGTRST_CURSOR                                     CL**7
00538          END-EXEC                                                    CL**7
00539                                                                      CL**7
00540          EVALUATE TRUE                                               CL**7
00541              WHEN SQLCODE = -904                                     CL**7
00542              WHEN SQLCODE = -911                                     CL**7
00543              WHEN SQLCODE = 0                                        CL**7
00544                  CONTINUE                                            CL**7
00545              WHEN SQLWARN NOT = SPACES                               CL**7
00546              WHEN SQLCODE NOT = ZERO                                 CL**7
00547                  MOVE 'Z500-OPEN-TFGTRST-CURSOR'                     CL**7
00548                                TO  PV-PARAGRAPH-NAME                 CL**7
00549                  MOVE 'OPEN ON CURSOR'                               CL**7
00550                                TO  PV-DB2-OPER-ATTEMPTED             CL**7
00551                  PERFORM Z900-SQL-ABEND                              CL**7
00552          END-EVALUATE                                                CL**7
00553      END-PERFORM.                                                    CL**7
00554 *                                                                    CL**7
00555      IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                           CL**7
00556          MOVE 'Z500-OPEN-TFGTRST-CURSOR'                             CL**7
00557                                TO  PV-PARAGRAPH-NAME                 CL**7
00558          MOVE 'OPEN RETRIES EXCEEDED'                                CL**7
00559                                TO  PV-DB2-OPER-ATTEMPTED             CL**7
00560          PERFORM Z900-SQL-ABEND                                      CL**7
00561      END-IF.                                                         CL**7
00562                                                                      CL**7
00563 *                                                                    CL**7
00564 ******************************************************************   CL**7
00565 * FETCH THE NEXT ROW FROM THE TFGTRST CURSOR                         CL*10
00566 ******************************************************************   CL**7
00567  Z600-FETCH-TFGTRST-ROW.                                             CL**7
00568                                                                      CL**7
00569      EXEC SQL                                                        CL**7
00570          FETCH TFGTRST_CURSOR                                        CL**7
00571          INTO  :FGTRST-TRN-SET-CDE,                                  CL**7
00572                :FGTRST-FUNC-CDE-SEQ-NBR,                             CL**7
00573                :FGTRST-TRN-SET-SEQ-NBR                               CL**7
00574      END-EXEC.                                                       CL**7
00575                                                                      CL**7
00576      IF SQLCODE = +100                                               CL**7
00577          SET PS-NO-MORE-TFGTRST-ROWS  TO TRUE                        CL**7
00578      ELSE                                                            CL**7
00579          IF SQLCODE NOT = 0                                          CL**7
00580               MOVE 'Z600-FETCH-TFGTRST-ROW' TO PV-PARAGRAPH-NAME     CL**7
00581               MOVE 'FETCH ROW FROM TFGTRST CURSOR'                   CL**7
00582                                       TO PV-DB2-OPER-ATTEMPTED       CL**7
00583              PERFORM Z900-SQL-ABEND                                  CL**7
00584          END-IF                                                      CL**7
00585      END-IF.                                                         CL**7
00586 *                                                                    CL**7
00587 ******************************************************************   CL**7
00588 * CLOSE THE TFGTRST CURSOR.                                          CL*10
00589 ******************************************************************   CL**7
00590  Z700-CLOSE-TFGTRST-CURSOR.                                          CL**7
00591                                                                      CL**7
00592      PERFORM                                                         CL**7
00593          WITH TEST AFTER                                             CL**7
00594          VARYING PV-SQL-SUB                                          CL**7
00595          FROM 1 BY 1                                                 CL**7
00596          UNTIL (PV-SQL-SUB > PC-MAX-RETRIES                          CL**7
00597                    OR SQLCODE = 0)                                   CL**7
00598                                                                      CL**7
00599          EXEC SQL                                                    CL**7
00600              CLOSE TFGTRST_CURSOR                                    CL**7
00601          END-EXEC                                                    CL**7
00602                                                                      CL**7
00603          EVALUATE TRUE                                               CL**7
00604              WHEN SQLCODE = -904                                     CL**7
00605              WHEN SQLCODE = -911                                     CL**7
00606              WHEN SQLCODE = 0                                        CL**7
00607                  CONTINUE                                            CL**7
00608              WHEN SQLWARN NOT = SPACES                               CL**7
00609              WHEN SQLCODE NOT = ZERO                                 CL**7
00610                  MOVE 'Z700-CLOSE-TFGTRST-CURSOR'                    CL**7
00611                                TO  PV-PARAGRAPH-NAME                 CL**7
00612                  MOVE 'CLOSE ON TFGTRST CURSOR'                      CL**7
00613                                TO  PV-DB2-OPER-ATTEMPTED             CL**7
00614                  PERFORM Z900-SQL-ABEND                              CL**7
00615          END-EVALUATE                                                CL**7
00616      END-PERFORM.                                                    CL**7
00617 *                                                                    CL**7
00618      IF  PV-SQL-SUB GREATER PC-MAX-RETRIES                           CL**7
00619          MOVE 'Z700-CLOSE-TFGTRST-CURSOR'                            CL**7
00620                                TO  PV-PARAGRAPH-NAME                 CL**7
00621          MOVE 'CLOSE RETRIES EXCEEDED'                               CL**7
00622                                TO  PV-DB2-OPER-ATTEMPTED             CL**7
00623          PERFORM Z900-SQL-ABEND                                      CL**7
00624      END-IF.                                                         CL**7
00625 *                                                                    CL**7
00626 *                                                                 ETKUT025
00627 ******************************************************************   CL**7
00628 * WRITE A RECORD TO THE OUTPUT FILE.                                 CL*10
00629 ******************************************************************   CL**7
00630  Z800-WRITE-TO-BE-DELETED-REC.                                       CL*13
00631                                                                      CL**7
00632      WRITE TO-BE-DELETED-RECORD FROM                                 CL*13
00633            ET035-TRANS-TO-BE-DELETED.                                CL*13
00634 *                                                                    CL**7
00635 ******************************************************************   CL*33
00636 * READ FROM THE TINTERR TABLE.                                       CL*33
00637 ******************************************************************   CL*33
00638  Z825-SELECT-TINTERR.                                                CL*33
00639                                                                      CL*33
00640      EXEC SQL                                                        CL*33
00641          SELECT TP_DKEY                                              CL*33
00642          INTO   :INTERR-TP-DKEY                                      CL*33
00643          FROM   TINTERR                                              CL*33
00644          WHERE TP_DKEY      = :INTTRN-TP-DKEY AND                    CL*34
00645                TP_DKEY_TMST = :INTTRN-TP-DKEY-TMST                   CL*34
00646      END-EXEC.                                                       CL*33
00647                                                                      CL*33
00648      EVALUATE TRUE                                                   CL*33
00649                                                                      CL*33
00650          WHEN SQLCODE = +000                                         CL*33
00651          WHEN SQLCODE = +100                                         CL*33
00652          WHEN SQLCODE = -811                                         CL*33
00653              CONTINUE                                                CL*33
00654          WHEN OTHER                                                  CL*33
00655              MOVE 'Z825-SELECT-TINTERR'     TO                       CL*33
00656                   PV-PARAGRAPH-NAME                                  CL*33
00657                                                                      CL*33
00658              MOVE 'SELECT ROW FROM TINTERR' TO                       CL*33
00659                   PV-DB2-OPER-ATTEMPTED                              CL*33
00660                                                                      CL*33
00661              PERFORM Z900-SQL-ABEND                                  CL*33
00662                                                                      CL*33
00663      END-EVALUATE.                                                   CL*33
00634 *                                                                    CL**7
00635 ******************************************************************   CL*33
00636 * READ FROM THE TTNSTLC TABLE.                                       CL*33
00637 ******************************************************************   CL*33
00638  Z850-SELECT-TTNSTLC.                                                CL*33
00639                                                                      CL*33
00640      EXEC SQL                                                        CL*33
00641          SELECT TP_DKEY                                              CL*33
00642          INTO   :TNSTLC-TP-DKEY                                      CL*33
00643          FROM   TTNSTLC                                              CL*33
00644          WHERE TP_DKEY      = :INTTRN-TP-DKEY AND                    CL*34
00645                TP_DKEY_TMST = :INTTRN-TP-DKEY-TMST                   CL*34
00646      END-EXEC.                                                       CL*33
00647                                                                      CL*33
00648      EVALUATE TRUE                                                   CL*33
00649                                                                      CL*33
00650          WHEN SQLCODE = +000                                         CL*33
00651          WHEN SQLCODE = +100                                         CL*33
00652          WHEN SQLCODE = -811                                         CL*33
00653              CONTINUE                                                CL*33
00654          WHEN OTHER                                                  CL*33
00655              MOVE 'Z825-SELECT-TTNSTLC'     TO                       CL*33
00656                   PV-PARAGRAPH-NAME                                  CL*33
00657                                                                      CL*33
00658              MOVE 'SELECT ROW FROM TTNSTLC' TO                       CL*33
00659                   PV-DB2-OPER-ATTEMPTED                              CL*33
00660                                                                      CL*33
00661              PERFORM Z900-SQL-ABEND                                  CL*33
00662                                                                      CL*33
00663      END-EVALUATE.                                                   CL*33
00664                                                                      CL*33
00665 ******************************************************************ETKUT025
00666 *  STANDARD DB2 ERROR ABEND ROUTINE                               ETKUT025
00667 *  THIS ROUTINE FORCES AN ABEND DUE TO A DB2 PROBLEM.             ETKUT025
00668 ******************************************************************ETKUT025
00669  Z900-SQL-ABEND.                                                  ETKUT025
00670                                                                   ETKUT025
00671      MOVE +4013                 TO ABEND-CODE.                    ETKUT025
00672      DISPLAY '**  ABEND     **'.                                  ETKUT025
00673      DISPLAY '**  PROGRAM   **  =  ETKUT025'.                     ETKUT025
00674      DISPLAY '**  PARAGRAPH **  = ' PV-PARAGRAPH-NAME.            ETKUT025
00675      DISPLAY '**  OPERATION **  = ' PV-DB2-OPER-ATTEMPTED.        ETKUT025
00676                                                                   ETKUT025
00677 *    THE FOLLOWING COPYBOOK UTILIZES THE DB2 ABEND MODULE         ETKUT025
00678 *    DSNTIAR TO CONVERT SQLCA INTO UNDERSTANDABLE VERBAGE.        ETKUT025
00679                                                                   ETKUT025
00680      COPY DPPD004.                                                ETKUT025
00681                                                                   ETKUT025
00682      CALL 'ILBOABN0'  USING ABEND-CODE.                           ETKUT025
