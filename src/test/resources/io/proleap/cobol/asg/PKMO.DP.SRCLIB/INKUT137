       IDENTIFICATION DIVISION.                                         00010000
       PROGRAM-ID.      INKUT137.                                       00020000
       AUTHOR.          JOHN SELWITSCHKA / STRATAGEM.                   00030000
       DATE-WRITTEN.    08/10/06.                                       00040000
      *                                                                 00050000
W33304******************************************************************00060000
W33304* PURPOSE:  CHANGED FOR HILO PROJECT...                           00070000
W33304*   ACTIVATE INVENTORY CYCLES ACCORDING TO THE FOLLOWING:         00080000
W33304*   THE INPUT DATE IS THE RUN DATE. (NOW MANDATORY INPUT).        00090000
W33304*   TDTATTR IS USED AND THE INPUT RUN DATE IS THE KEY WHICH       00100000
W33304*   IS USED TO DETERMINE THE VERY NEXT FISCAL WEEK'S              00110000
W33304*   BEGIN AND END DATE. IF THE TINVPAR.PLND_INV_DTE FOR ANY       00120000
W33304*   LOCATION'S INV_ID OCCURS IN THE NEXT FISCAL WEEK, THEN        00130000
W33304*   THE TINCNTL.ACTV_IND IS UPDATED TO 'Y' FOR THOSE INV_ID'S     00140000
W33304*   AS LONG AS THEY WERE PREVIOUSLY 'N' (INACTIVATED) - SO WE     00150000
W33304*   DO NOT WANT TO ACTIVATE AN ALREADY ACTIVATED INV_ID           00160000
W33304*   BECAUSE AN OUTPUT FILE OF ACTIVATED INV_ID'S IS CREATED       00170000
W33304*   FROM THIS PROCESS.                                            00180000
W33304******************************************************************00190000
W33304*      DB2 TABLES:  TINCNTL (INVENTORY CONTROL)                   00200000
W33304*                   TINVPAR (INVENTORY PARMS)                     00210000
W33304*                   TDTATTR (DATE ATTRIBUTES)                     00220000
      *      DB2 CURSORS: CNTL_CSR (CONTROL CURSOR)                     00230000
W32318*                                                                 00240000
W32318******************** HISTORY OF CHANGES **************************00250000
W32318* CHG ID/                                                        *00260000
W32318* WR/PROJ  DATE        DESCRIPTION OF CHANGES                    *00270000
W32318* -------  ----------  ----------------------------------------  *00280000
W32318* WR32318  03/05/2007  JILL LIN - CHANGE THE REFERENCE OF MONTH  *00290000
W32318*                      END DATE TO ACTIVATE THE INVENTORY CYCLE  *00300000
W32318*                      APPROPRIATELY                             *00310000
W33304* WR33304  06/18/2008  THERESE RAMSEYER - HILO PROJECT           *00320000
W33304*                      HOLD INVENTORY LEDGER OPEN                *00330000
W33304*                      --------------------------                *00340000
W33304*                      THIS PROCESS IS GOING TO BE SCHEDULED     *00350000
W33304*                      TO RUN ON SATURDAYS AND POSSIBLY DURING   *00360000
W33304*                      THE WEEK. THE ACTIVATION CYCLES WILL      *00370000
W33304*                      BE ACTIVATED WEEKLY INSTEAD OF MONTHLY.   *00380000
W33304*                      DETAILS IN THE PURPOSE STATEMENT ABOVE.   *00390000
W33304*                      THE INPUT FILE (RUN DATE) WAS ONCE        *00400000
W33304*                      OPTIONAL, NOW AS TMLCNTL IS REMOVED TOO,  *00410000
W33304*                      THIS INPUT IS MANDATORY.                  *00420000
W33304* WR33304  01/09/2009  THERESE RAMSEYER - HILO PROJECT           *00430000
W33304*                      HOLD INVENTORY LEDGER OPEN                *00440000
W33304*                      --------------------------                *00450000
W33304*                 -->  ADDED OUT02 FILE TO HOLD THE LOCS THAT    *00460000
W33304*                      WERE SOFT DELETED                         *00470000
W33304*                 -->  ADDED OUT03 FILE TO HOLD THE LOCS THAT    *00480000
W33304*                      WERE SOFT DELETED DUE TO UNASSIGNED LOCS  *00490000
W33304*                 -->  ADDED INTERNAL TABLE PT-INV-ID-AREA TO    *00500000
W33304*                      HOLD THE INV-ID'S THAT ARE POSSIBLY       *00510000
W33304*                      BEING ACTICATED DURING THIS RUN IF THEY   *00520000
W33304*                      MEET THE CRITERIA. THIS IS BECAUSE OF ALL *00530000
W33304*                      THE CURSORS THAT NEEDED TO BE ADDED AND   *00540000
W33304*                      FOR COMMIT / UNIT OF WORK SIMPLICITY      *00550000
W33304*                  --> ADDED PRIOR_BD_CSR, SAME_LOC_CSR,         *00560000
W33304*                      STAT_CDE _CSR & UNASSIGN_CSR              *00570000
W33304*                      THESE ARE ALL CHECKS TO                   *00580000
W33304*                      BE CERTAIN A CYCLE CAN  BE ACTIVATED AND  *00590000
W33304*                      HAS AT LEAST ONE LOCATION, ETC.           *00600000
W33304*                  --> ALWAYS SET LAST_DKEY_NBR TO 1 INSTEAD OF  *00610000
W33304*                      INCREMENTING.                             *00620000
W34557* WR34557  09/13/2011  THERESE RAMSEYER - IDC PROJECT            *00630005
W34557*                  --> ADDED WK_IN_MN_NBR & FSCL_MN_END_DTE AND  *00640003
W34557*                      NFM_END_DTE TO THE SELECT IN PARAGRAPH     00650003
W34557*                      2200-GET-NEXT-FISCAL-WEEK TO SET A SWITCH *00660000
W34557*                      PS-DURING-CLOSE-WEEK IF WE ARE RUNNING    *00670000
W34557*                      IN THE FIRST WEEK OF THE MONTH            *00680000
W34557*                  --> ADDED OPN_FSCL_MN_DTE TO STAT_CDE_CSR     *00690000
W34557*                  --> ADDED LOGIC TO 7010-FETCH-STAT-CDE-CSR    *00700000
W34557*                      TO UPDATE FINCL-INV-STAT-CDE TO 'BD' WHEN *00710000
W34557*                      THIS APP IS RUNNING DURING CLOSE WEEK     *00720000
W34557*                  --> ADDED 7200-UPD-STAT-CDE-TO-BD             *00730000
W34557*                  --> ADDED UPDATED SUMMARY STATS & ACCUMULATORS*00740000
W34557*                      TO REFLECT DIFFERENT STAT-CDE-CSR UPDS    *00750000
W34557*                  --> TREATED AS COMMENTS THE ENTIRE PARAGRAPH  *00760000
W34557*                      2300- AND ITS EXECUTION LINE              *00770000
W34557*                  --> CHANGED DECLARE PRIOR_BD_CSR TO REFLECT    00780001
W34557*                      2200- PARA 2300 PARA CHANGE               *00790001
W34557*                  --> ADDED PARA 2250 TO GET INVENTORY ADJUSTMENT00800001
W34557*                      DATE ASSOCIATED WITH THE MONTH FOLLOWING   00810003
W34557*                      CURRENT RUN DATE PLUS 7 DAYS.              00811003
      ******************************************************************00820001
                                                                        00830001
       ENVIRONMENT DIVISION.                                            00840000
                                                                        00850000
       CONFIGURATION SECTION.                                           00860000
                                                                        00870000
       SOURCE-COMPUTER.    IBM-3090.                                    00880000
       OBJECT-COMPUTER.    IBM-3090.                                    00890000
                                                                        00900000
       INPUT-OUTPUT SECTION.                                            00910000
                                                                        00920000
       FILE-CONTROL.                                                    00930000
                                                                        00940000
           SELECT DATE-CNTL-FILE            ASSIGN TO INP01.            00950000
           SELECT CYCLE-ACT-FILE            ASSIGN TO OUT01.            00960000
W33304     SELECT SOFT-DEL-LOC-FILE         ASSIGN TO OUT02.            00970000
W33304     SELECT SOFT-DEL-UNASSIGN-FILE    ASSIGN TO OUT03.            00980000
                                                                        00990000
       DATA DIVISION.                                                   01000000
                                                                        01010000
       FILE SECTION.                                                    01020000
                                                                        01030000
       FD  DATE-CNTL-FILE                                               01040000
           RECORDING MODE IS F                                          01050000
           LABEL RECORDS ARE STANDARD                                   01060000
           BLOCK CONTAINS 0 RECORDS.                                    01070000
       01  DATE-CNTL-REC                    PIC X(80).                  01080000
                                                                        01090000
       FD  CYCLE-ACT-FILE                                               01100000
           RECORDING MODE IS F                                          01110000
           LABEL RECORDS ARE STANDARD                                   01120000
           BLOCK CONTAINS 0 RECORDS.                                    01130000
       01  CYCLE-ACT-REC                    PIC X(80).                  01140000
                                                                        01150000
W33304 FD  SOFT-DEL-LOC-FILE                                            01160000
W33304     RECORDING MODE IS F                                          01170000
W33304     LABEL RECORDS ARE STANDARD                                   01180000
W33304     BLOCK CONTAINS 0 RECORDS.                                    01190000
W33304 01  SOFT-DEL-LOC-REC                 PIC X(80).                  01200000
W33304                                                                  01210000
W33304 FD  SOFT-DEL-UNASSIGN-FILE                                       01220000
W33304     RECORDING MODE IS F                                          01230000
W33304     LABEL RECORDS ARE STANDARD                                   01240000
W33304     BLOCK CONTAINS 0 RECORDS.                                    01250000
W33304 01  SOFT-DEL-UNASSIGN-REC            PIC X(80).                  01260000
                                                                        01270000
       WORKING-STORAGE SECTION.                                         01280000
                                                                        01290000
       01  ABEND-CODE                       PIC S9(04) COMP SYNC        01300000
                                                       VALUE +0.        01310000
W33304 01  PROGRAM-ACCUMULATORS.                                        01320000
W33304     05  PA-TOT-SOFT-DEL-RECS-WRIT    PIC S9(09) COMP-3 VALUE +0. 01330000
W33304     05  PA-TOT-CYCLES-WITHOUT-LOCS   PIC S9(09) COMP-3 VALUE +0. 01340000
W33304     05  PA-TOT-CNTL-CSR-FETCHES      PIC S9(09) COMP-3 VALUE +0. 01350000
W33304     05  PA-TOT-CYCLES-ACTIVATED      PIC S9(09) COMP-3 VALUE +0. 01360000
W33304     05  PA-TOT-COMMITS               PIC S9(09) COMP-3 VALUE +0. 01370000
W33304     05  PA-TOT-BD-CSR-FETCHES        PIC S9(09) COMP-3 VALUE +0. 01380000
W33304     05  PA-TOT-BD-CSR-UPDS           PIC S9(09) COMP-3 VALUE +0. 01390000
W33304     05  PA-TOT-SAME-LOC-FETCHES      PIC S9(09) COMP-3 VALUE +0. 01400000
W33304     05  PA-TOT-SOFT-DEL-UPDS         PIC S9(09) COMP-3 VALUE +0. 01410000
W33304     05  PA-TOT-STAT-CSR-FETCHES      PIC S9(09) COMP-3 VALUE +0. 01420000
W34557     05  PA-TOT-STAT-CSR-UPDS-BK      PIC S9(09) COMP-3 VALUE +0. 01430000
W34557     05  PA-TOT-STAT-CSR-UPDS-BD      PIC S9(09) COMP-3 VALUE +0. 01440000
W33304     05  PA-TOT-UNASSIGN-FETCHES      PIC S9(09) COMP-3 VALUE +0. 01450000
W33304     05  PA-TOT-SOFT-DEL-UN-RECS-WRIT PIC S9(09) COMP-3 VALUE +0. 01460000
                                                                        01470000
       01  PROGRAM-CONSTANTS.                                           01480000
           05  PC-MAX-RETRIES               PIC S9(04) COMP SYNC        01490000
                                                       VALUE +2.        01500000
           05  PC-PROGRAM-NAME              PIC  X(08) VALUE 'INKUT137'.01510000
W33304     05  PC-ACTIVE                    PIC  X(01) VALUE 'Y'.       01520000
W34557     05  PC-1                         PIC  X(01) VALUE '1'.       01530000
W33304     05  PC-INACTIVE                  PIC  X(01) VALUE 'N'.       01540000
W33304     05  PC-INITIAL                   PIC  X(02) VALUE 'IN'.      01550000
W33304     05  PC-BEF-UNIT-BK               PIC  X(02) VALUE 'DB'.      01560000
W33304     05  PC-EXCLUDED                  PIC  X(02) VALUE 'EX'.      01570000
W33304     05  PC-WILL-BOOK                 PIC  X(02) VALUE 'BK'.      01580000
W33304     05  PC-BOOK-DELAYED              PIC  X(02) VALUE 'BD'.      01590000
W33304     05  PC-EMPTY-DATE              PIC  X(10) VALUE '9999-09-09'.01600000
W33304     05  PC-LOC-ALREADY-ACTIVE      PIC  X(25) VALUE              01610000
W33304                              'LOC ALREADY ACTIVE       '.        01620000
W33304     05  PC-LOC-UNASSIGNED          PIC  X(25) VALUE              01630000
W33304                              'LOC UNASSIGNED           '.        01640000
                                                                        01650000
       01  PROGRAM-SWITCHES.                                            01660000
           05  PS-END-OF-INPUT-SW           PIC X      VALUE 'N'.       01670000
               88  PS-END-OF-INPUT                     VALUE 'Y'.       01680000
               88  PS-NOT-END-OF-INPUT                 VALUE 'N'.       01690000
           05  PS-MAX-DKEY-SW               PIC X      VALUE 'N'.       01700000
               88  PS-MAX-DKEY-FOUND                   VALUE 'Y'.       01710000
               88  PS-MAX-DKEY-NOT-FOUND               VALUE 'N'.       01720000
W33304     05  PS-CYCLE-OPEN-LOCS-SW        PIC X      VALUE 'N'.       01730000
W33304         88  PS-CYCLE-HAS-OPEN-LOCS              VALUE 'Y'.       01740000
W33304         88  PS-CYCLE-HAS-NO-OPEN-LOCS           VALUE 'N'.       01750000
W33304     05  PS-PRIOR-BD-CSR-SW           PIC X      VALUE 'N'.       01760000
W33304         88  PS-END-OF-PRIOR-BD-CSR              VALUE 'Y'.       01770000
W33304         88  PS-NOT-END-OF-PRIOR-BD-CSR          VALUE 'N'.       01780000
W33304     05  PS-SAME-LOC-CSR-SW           PIC X      VALUE 'N'.       01790000
W33304         88  PS-END-OF-SAME-LOC-CSR              VALUE 'Y'.       01800000
W33304         88  PS-NOT-END-OF-SAME-LOC-CSR          VALUE 'N'.       01810000
W33304     05  PS-STAT-CDE-CSR-SW           PIC X      VALUE 'N'.       01820000
W33304         88  PS-END-OF-STAT-CDE-CSR              VALUE 'Y'.       01830000
W33304         88  PS-NOT-END-OF-STAT-CDE-CSR          VALUE 'N'.       01840000
W33304     05  PS-CYCLES-TO-ACTIVATE-SW     PIC X      VALUE 'N'.       01850000
W33304         88  PS-CYCLES-TO-ACTIVATE               VALUE 'Y'.       01860000
W33304         88  PS-NO-CYCLES-TO-ACTIVATE            VALUE 'N'.       01870000
W33304     05  PS-UNASSIGN-CSR-SW           PIC X      VALUE 'N'.       01880000
W33304         88  PS-END-OF-UNASSIGN-CSR              VALUE 'Y'.       01890000
W33304         88  PS-NOT-END-OF-UNASSIGN-CSR          VALUE 'N'.       01900000
W03134     05  PS-DURING-CLOSE-WEEK-SW      PIC X      VALUE 'N'.       01910000
W03134         88  PS-DURING-CLOSE-WEEK                VALUE 'Y'.       01920000
W03134         88  PS-NOT-DURING-CLOSE-WEEK            VALUE 'N'.       01930000
                                                                        01940000
       01  PROGRAM-VARIABLES.                                           01950000
           05  PV-DB2-OPER-ATTEMPTED        PIC  X(30) VALUE SPACE.     01960000
           05  PV-PARAGRAPH-NAME            PIC  X(30) VALUE SPACE.     01970000
W33304     05  PV-CUR-INV-ID                PIC S9(09) COMP VALUE +0.   01980000
W33304     05  PV-DUMMY                     PIC S9(07) COMP VALUE +0.   01990000
W34557     05  PV-INV-ADJMT-DTE             PIC  X(10) VALUE SPACES.    02000001
           05  PV-SQL-SUB                   PIC  9(03) VALUE ZERO.      02010000
           05  PV-INV-ID                    PIC ZZZZ9.                  02020000
           05  PV-CYCLE-ACT-REC.                                        02030000
               10  FILLER                   PIC  X(16) VALUE            02040000
                                                     'INVENTORY CYCLE '.02050000
W33304         10  PV-CYCLE-INV-ID          PIC ZZZZZZZZ9  VALUE ZERO.  02060000
               10  FILLER                   PIC  X(10) VALUE            02070000
                                                     ' ACTIVATED'.      02080000
W33304         10  FILLER                   PIC  X(45) VALUE SPACES.    02090000
W33304     05  PV-SOFT-DEL-LOC-REC.                                     02100000
W33304         10  FILLER                   PIC  X(04) VALUE            02110000
W33304                                               'LOC '.            02120000
W33304         10  PV-SD-LOC                PIC ZZZZZZZZ9  VALUE ZERO.  02130000
W33304         10  FILLER                   PIC  X(32) VALUE            02140000
W33304                        ' WAS SOFT DELETED FOR INV CYCLE '.       02150000
W33304         10  PV-SD-CYCLE-INV-ID       PIC ZZZZZZZZ9  VALUE ZERO.  02160000
W33304         10  FILLER                   PIC  X(26) VALUE SPACES.    02170000
W33304                                                                  02180000
           05  PV-RETRY-COUNTER             PIC S9(04)    VALUE +0      02190000
                                                          COMP SYNC.    02200000
                                                                        02210000
008500     05  PV-PROCESS-TMST.                                         02220000
008600         10  PV-PROCESS-DATE          PIC X(10).                  02230000
008600         10  FILLER           REDEFINES PV-PROCESS-DATE.          02240000
008800             15  PV-PROCESS-CCYY      PIC X(04).                  02250000
008900             15  PV-PROCESS-HYPHEN1   PIC X(01).                  02260000
009000             15  PV-PROCESS-MM        PIC X(02).                  02270000
009100             15  PV-PROCESS-HYPHEN2   PIC X(01).                  02280000
009200             15  PV-PROCESS-DD        PIC X(02).                  02290000
009300         10  FILLER                   PIC X(16)                   02300000
009400             VALUE '-00.00.00.000000'.                            02310000
           05  PV-PROC-DATE.                                            02320000
               10  PV-PROC-CCYY             PIC X(04).                  02330000
               10  PV-PROC-MM               PIC X(02).                  02340000
               10  PV-PROC-DD               PIC X(02).                  02350000
           05  PV-PROC-DATE-R REDEFINES PV-PROC-DATE                    02360000
                                            PIC 9(8).                   02370000
           05  PV-PROC-DATE-COMP            PIC 9(4)  COMP   VALUE 0.   02380000
                                                                        02390000
W33304 01  PT-INV-ID-AREA.                                              02400000
W33304     05  PT-INV-ID-TBL      OCCURS 99999 TIMES                    02410000
W33304                            INDEXED BY INV-ID-INDEX.              02420000
W33304         10  PT-INV-ID               PIC S9(9)  COMP VALUE ZEROES.02430000
W33304                                                                  02440000
      ******************************************************************02450000
      *  DATE CONTROL CARD                                              02460000
      ******************************************************************02470000
       01  IN137-CONTROL-RECORD.                                        02480000
           05  IN137-CC-DATE               PIC X(10).                   02490000
           05  FILLER  REDEFINES IN137-CC-DATE.                         02500000
               10  IN137-CC-CCYY           PIC X(4).                    02510000
               10  FILLER                  PIC X.                       02520000
               10  IN137-CC-MM             PIC X(2).                    02530000
               10  FILLER                  PIC X.                       02540000
               10  IN137-CC-DD             PIC X(2).                    02550000
           05  FILLER                      PIC X(70).                   02560000
                                                                        02570000
      ******************************************************************02580000
      *  DB2 FORMATTED MESSAGE AREA                                     02590000
      ******************************************************************02600000
           COPY DPWS004.                                                02610000
                                                                        02620000
      ******************************************************************02630000
      * SQL COMMUNICATIONS WORK AREA                                    02640000
      ******************************************************************02650000
                                                                        02660000
           EXEC SQL                                                     02670000
               INCLUDE SQLCA                                            02680000
           END-EXEC.                                                    02690000
                                                                        02700000
      * DB2 INVENTORY CONTROL TABLE                                     02710000
      ******************************************************************02720000
                                                                        02730000
           EXEC SQL                                                     02740000
               INCLUDE TINCNTL                                          02750000
           END-EXEC.                                                    02760000
                                                                        02770000
W32318******************************************************************02780000
W32318* DB2 DATE ATTR TABLE                                             02790000
W32318******************************************************************02800000
W32318                                                                  02810000
W32318     EXEC SQL                                                     02820000
W32318         INCLUDE TDTATTR                                          02830000
W32318     END-EXEC.                                                    02840000
W32318                                                                  02850000
W32318******************************************************************02860000
W32318                                                                  02870001
W32318******************************************************************02880001
W32318* DB2 INVENTORY PARAMETERS TABLE                                  02890000
W32318******************************************************************02900000
W32318                                                                  02910000
W32318     EXEC SQL                                                     02920000
W32318         INCLUDE TINVPAR                                          02930000
W32318     END-EXEC.                                                    02940000
W32318                                                                  02950000
      ******************************************************************02960000
      * SQL CURSORS                                                     02970000
      ******************************************************************02980000
      *                                                                 02990000
W33304     EXEC SQL                                                     03000000
W33304         DECLARE CNTL_CSR CURSOR FOR                              03010000
W33304            SELECT DISTINCT(B.INV_ID)                             03020000
W33304              FROM TINCNTL A                                      03030000
W33304                  ,TINVPAR B                                      03040000
W33304             WHERE PLND_INV_DTE >= :DTATTR-FSCL-WK-BEG-DTE        03050000
W33304             AND   PLND_INV_DTE <= :DTATTR-FSCL-WK-END-DTE        03060000
W33304             AND   A.INV_ID      = B.INV_ID                       03070000
W33304             AND   A.ACTV_IND    = :PC-INACTIVE                   03080000
W33304             ORDER BY B.INV_ID                                    03090000
W33304     END-EXEC.                                                    03100000
W33304                                                                  03110000
W33304     EXEC SQL                                                     03120000
W33304         DECLARE PRIOR_BD_CSR CURSOR FOR                          03130000
W33304           SELECT LOC_NBR                                         03140000
W33304                , B.INV_ID                                        03150000
W33304             FROM TINCNTL A                                       03160000
W33304                 ,TINVPAR B                                       03170000
W33304            WHERE A.INV_ID           = B.INV_ID                   03180000
W33304              AND A.ACTV_IND         = :PC-ACTIVE                 03190000
W33304              AND A.INV_ID          <> :PV-CUR-INV-ID             03200000
W33304              AND B.PLND_FIN_BK_DTE <= :DTATTR-FSCL-MN-END-DTE    03210002
W34557**W33304                  (DATE(DAYS(:DTATTR-FSCL-MN-END-DTE)+ 7))03220001
W33304              AND LOC_INV_STAT_CDE   = :PC-INITIAL                03230000
W33304              AND ACTL_FIN_BK_DTE    = :PC-EMPTY-DATE             03240000
W33304              AND FINCL_INV_STAT_CDE = :PC-BOOK-DELAYED           03250000
W33304     END-EXEC.                                                    03260000
W33304                                                                  03270000
W33304     EXEC SQL                                                     03280000
W33304         DECLARE SAME_LOC_CSR CURSOR FOR                          03290000
W33304           SELECT B.LOC_NBR                                       03300000
W33304                 ,ACTL_UNIT_BK_DTE                                03310000
W33304             FROM TINCNTL A                                       03320000
W33304                 ,TINVPAR B                                       03330000
W33304            WHERE A.INV_ID           = B.INV_ID                   03340000
W33304              AND A.ACTV_IND         = :PC-INACTIVE               03350000
W33304              AND A.INV_ID           = :PV-CUR-INV-ID             03360000
W33304              AND B.LOC_INV_STAT_CDE   = :PC-INITIAL              03370000
W33304              AND B.ACTL_FIN_BK_DTE    = :PC-EMPTY-DATE           03380000
W33304              AND B.FINCL_INV_STAT_CDE = :PC-INITIAL              03390000
W33304              AND EXISTS                                          03400000
W33304                  (SELECT D.LOC_NBR                               03410000
W33304                     FROM TINCNTL C                               03420000
W33304                        , TINVPAR D                               03430000
W33304                   WHERE C.INV_ID             = D.INV_ID          03440000
W33304                     AND B.LOC_NBR            = D.LOC_NBR         03450000
W33304                     AND C.ACTV_IND           = :PC-ACTIVE        03460000
W33304                     AND D.INV_ID             <> A.INV_ID         03470000
W33304                     AND D.LOC_INV_STAT_CDE   = :PC-INITIAL       03480000
W33304                     AND D.ACTL_FIN_BK_DTE    = :PC-EMPTY-DATE)   03490000
W33304                                                                  03500000
W33304     END-EXEC.                                                    03510000
W33304                                                                  03520000
W33304     EXEC SQL                                                     03530000
W33304         DECLARE STAT_CDE_CSR CURSOR FOR                          03540000
W33304           SELECT LOC_NBR                                         03550000
W34557                 ,OPN_FSCL_MN_DTE                                 03560000
W33304             FROM TINCNTL A                                       03570000
W33304                 ,TINVPAR B                                       03580000
W33304            WHERE A.INV_ID           = B.INV_ID                   03590000
W33304              AND A.ACTV_IND         = :PC-INACTIVE               03600000
W33304              AND A.INV_ID           = :PV-CUR-INV-ID             03610000
W33304              AND LOC_INV_STAT_CDE   = :PC-INITIAL                03620000
W33304              AND ACTL_FIN_BK_DTE    = :PC-EMPTY-DATE             03630000
W33304              AND FINCL_INV_STAT_CDE = :PC-INITIAL                03640000
W33304     END-EXEC.                                                    03650000
W33304                                                                  03660000
W33304     EXEC SQL                                                     03670000
W33304         DECLARE UNASSIGN_CSR CURSOR FOR                          03680000
W33304           SELECT LOC_NBR                                         03690000
W33304             FROM TINCNTL A                                       03700000
W33304                 ,TINVPAR B                                       03710000
W33304            WHERE A.INV_ID           = B.INV_ID                   03720000
W33304              AND A.ACTV_IND         = :PC-INACTIVE               03730000
W33304              AND A.INV_ID           = :PV-CUR-INV-ID             03740000
W33304              AND LOC_INV_STAT_CDE   = :PC-INITIAL                03750000
W33304              AND ACTL_FIN_BK_DTE    = :PC-EMPTY-DATE             03760000
W33304              AND FINCL_INV_STAT_CDE = :PC-INITIAL                03770000
W33304              AND SCHD_PHY_CNT_CDE   = :PC-INITIAL                03780000
W33304     END-EXEC.                                                    03790000
W33304                                                                  03800000
       PROCEDURE DIVISION.                                              03810000
                                                                        03820000
       0000-MAINLINE-PROCESSING.                                        03830000
                                                                        03840000
           PERFORM 1000-INITIALIZATION.                                 03850000
           PERFORM 1500-OPEN-CNTL-CSR.                                  03860000
                                                                        03870000
           PERFORM 2000-FETCH-CNTL-CSR                                  03880000
             UNTIL PS-END-OF-INPUT.                                     03890000
W33304     PERFORM 3000-CLOSE-CNTL-CSR.                                 03900000
W33304                                                                  03910000
W33304     PERFORM 5000-UPD-PRIOR-BK-DELAY-LOCS.                        03920000
W33304                                                                  03930000
W33304     IF PS-CYCLES-TO-ACTIVATE                                     03940000
W33304        SET INV-ID-INDEX TO +1                                    03950000
W33304        PERFORM 2100-CHECKS-BEFORE-ACTIVATION                     03960000
W33304          UNTIL INV-ID-INDEX > PA-TOT-CNTL-CSR-FETCHES            03970000
W33304     END-IF.                                                      03980000
W33304                                                                  03990000
           PERFORM 9000-EOJ-ROUTINE.                                    04000000
                                                                        04010000
           STOP RUN.                                                    04020000
                                                                        04030000
                                                                        04040000
      ******************************************************************04050000
      *  OPEN ALL FILES AND READ THE DATE CONTROL FILE                 *04060000
      ******************************************************************04070000
       1000-INITIALIZATION.                                             04080000
                                                                        04090000
           OPEN INPUT  DATE-CNTL-FILE.                                  04100000
W33304     OPEN OUTPUT CYCLE-ACT-FILE                                   04110000
W33304                 SOFT-DEL-LOC-FILE                                04120000
W33304                 SOFT-DEL-UNASSIGN-FILE.                          04130000
           PERFORM 1100-READ-DATE-CNTL.                                 04140000
                                                                        04150000
           SET PS-NOT-END-OF-INPUT        TO TRUE.                      04160000
           DISPLAY ' '.                                                 04170000
W32318     IF PV-PROCESS-CCYY NOT NUMERIC                               04180000
W32318        OR PV-PROCESS-MM NOT NUMERIC                              04190000
W32318        OR PV-PROCESS-DD NOT NUMERIC                              04200000
W32318        OR PV-PROCESS-HYPHEN1 NOT = '-'                           04210000
W32318        OR PV-PROCESS-HYPHEN2 NOT = '-'                           04220000
W32318        MOVE +4002                 TO ABEND-CODE                  04230000
W32318        DISPLAY '**  ABEND     **'                                04240000
W32318        DISPLAY '**  PROGRAM   **  =  INKUT137'                   04250000
W32318        DISPLAY '**  INVALID PROCESSING DATE '                    04260000
W32318        CALL 'ILBOABN0'  USING ABEND-CODE                         04270000
W32318     ELSE                                                         04280000
W32318         DISPLAY 'INPUT RUN DATE: ' PV-PROCESS-DATE               04290000
W32318         PERFORM 2200-GET-NEXT-FISCAL-WEEK                        04300000
W34557*********PERFORM 2300-GET-FISCAL-MONTH-END                        04310000
W32318     END-IF.                                                      04320000
W32318                                                                  04330000
W33304     MOVE ZEROES TO PT-INV-ID-AREA.                               04340000
W33304     SET INV-ID-INDEX TO +1.                                      04350000
W33304                                                                  04360000
      ******************************************************************04370000
      *    READ THE PROCESS DATE CONTROL CARD FILE                      04380000
      ******************************************************************04390000
       1100-READ-DATE-CNTL.                                             04400000
                                                                        04410000
           READ DATE-CNTL-FILE                                          04420000
               INTO IN137-CONTROL-RECORD                                04430000
               AT END                                                   04440000
                   MOVE +4001                 TO ABEND-CODE             04450000
                   DISPLAY '**  ABEND     **'                           04460000
                   DISPLAY '**  PROGRAM   **  =  INKUT137'              04470000
                   DISPLAY '**  EMPTY DATE CONTROL FILE'                04480000
                   CALL 'ILBOABN0'  USING ABEND-CODE                    04490000
           END-READ.                                                    04500000
                                                                        04510000
      *  REMOVE DASHES FROM DATE AND PUT THE DATE IN A BINARY FIELD.    04520000
           MOVE IN137-CC-DATE              TO PV-PROCESS-DATE.          04530000
           MOVE IN137-CC-CCYY              TO PV-PROC-CCYY.             04540000
           MOVE IN137-CC-MM                TO PV-PROC-MM.               04550000
           MOVE IN137-CC-DD                TO PV-PROC-DD.               04560000
           MOVE PV-PROC-DATE-R             TO PV-PROC-DATE-COMP.        04570000
                                                                        04580000
      ******************************************************************04590000
      *    OPEN INVENTORY CONTROL CURSOR (CNTL_CSR)                     04600000
      ******************************************************************04610000
       1500-OPEN-CNTL-CSR.                                              04620000
                                                                        04630000
           PERFORM                                                      04640000
               WITH TEST AFTER                                          04650000
               VARYING PV-RETRY-COUNTER                                 04660000
               FROM 1 BY 1                                              04670000
               UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               04680000
                         OR (SQLCODE = ZERO))                           04690000
                                                                        04700000
                                                                        04710000
               EXEC SQL                                                 04720000
                   OPEN CNTL_CSR                                        04730000
               END-EXEC                                                 04740000
                                                                        04750000
               EVALUATE TRUE                                            04760000
                 WHEN SQLCODE = ZERO                                    04770000
                     CONTINUE                                           04780000
                 WHEN SQLWARN0 NOT EQUAL SPACE                          04790000
                 WHEN SQLCODE NOT EQUAL ZERO                            04800000
                     DISPLAY '**************************************'   04810000
                     DISPLAY '** ABEND                            **'   04820000
                     DISPLAY '** PROGRAM = INKUT137               **'   04830000
                     DISPLAY '** PARA = 1500-OPEN-CNTL-CSR        **'   04840000
                     DISPLAY '** OPEN CNTL_CSR                    **'   04850000
                     DISPLAY '**************************************'   04860000
                     PERFORM 9999-SQL-ABEND                             04870000
             END-EVALUATE                                               04880000
           END-PERFORM.                                                 04890000
                                                                        04900000
           IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    04910000
               (SQLCODE NOT = ZERO)                                     04920000
               DISPLAY '****************************************'       04930000
               DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       04940000
               DISPLAY '** OPEN CNTL_CSR                      **'       04950000
               DISPLAY '** PARA = 1500-OPEN-CNTL-CSR          **'       04960000
               DISPLAY '****************************************'       04970000
               PERFORM 9999-SQL-ABEND                                   04980000
           END-IF.                                                      04990000
                                                                        05000000
      ******************************************************************05010000
      *  FETCH ROWS. FOR EACH ROW FETCHED, SET ACTV_IND TO 'Y' AND      05020000
W33304*  SET LAST_DKEY_NBR TO +1                                        05030000
      ******************************************************************05040000
       2000-FETCH-CNTL-CSR.                                             05050000
                                                                        05060000
           EXEC SQL                                                     05070000
             FETCH                                                      05080000
               FROM CNTL_CSR                                            05090000
               INTO                                                     05100000
                 :INCNTL-INV-ID                                         05110000
                ,:INCNTL-LAST-DKEY-NBR                                  05120000
                ,:INCNTL-PLND-FIN-BKG-DTE                               05130000
           END-EXEC.                                                    05140000
                                                                        05150000
           EVALUATE TRUE                                                05160000
               WHEN SQLCODE = ZERO                                      05170000
W33304             SET PS-CYCLES-TO-ACTIVATE TO TRUE                    05180000
W33304             MOVE INCNTL-INV-ID TO PT-INV-ID (INV-ID-INDEX)       05190000
W33304             SET INV-ID-INDEX UP BY +1                            05200000
W33304             ADD +1             TO PA-TOT-CNTL-CSR-FETCHES        05210000
                                                                        05220000
               WHEN SQLCODE = +100                                      05230000
W33304             IF PA-TOT-CNTL-CSR-FETCHES = +0                      05240000
W33304                SET PS-NO-CYCLES-TO-ACTIVATE TO TRUE              05250000
W33304             END-IF                                               05260000
W33304             SET PS-END-OF-INPUT         TO TRUE                  05270000
                                                                        05280000
               WHEN SQLWARN0 NOT EQUAL SPACE                            05290000
               WHEN SQLCODE NOT EQUAL ZERO                              05300000
                   DISPLAY '***************************************'    05310000
                   DISPLAY '** ABEND                             **'    05320000
                   DISPLAY '** PROGRAM = INKUT137                **'    05330000
                   DISPLAY '** PARA = 2000-FETCH-CNT-CSR         **'    05340000
                   DISPLAY '**************************************'     05350000
                   PERFORM 9999-SQL-ABEND                               05360000
           END-EVALUATE.                                                05370000
                                                                        05380000
W33304******************************************************************05390000
W33304*                                                                 05400000
W33304*                                                                 05410000
W33304******************************************************************05420000
W33304 2100-CHECKS-BEFORE-ACTIVATION.                                   05430000
W33304                                                                  05440000
W33304     MOVE PT-INV-ID (INV-ID-INDEX) TO PV-CUR-INV-ID.              05450000
W33304                                                                  05460000
W33304     PERFORM 4000-CHECK-FOR-LOC-IN-CYCLE.                         05470000
W33304                                                                  05480000
W33304     IF PS-CYCLE-HAS-OPEN-LOCS                                    05490000
433304        PERFORM 6000-CHECK-FOR-SAME-LOC                           05500000
433304        PERFORM 8000-CHECK-FOR-UNASSIGN-LOC                       05510000
W33304        PERFORM 4000-CHECK-FOR-LOC-IN-CYCLE                       05520000
W33304        IF  PS-CYCLE-HAS-OPEN-LOCS                                05530000
W33304            PERFORM 7000-UPD-FINCL-INV-STAT-CDE                   05540000
W33304            PERFORM 2500-UPDATE-TINCNTL                           05550000
W33304            PERFORM 2600-WRITE-CYCLE-ACT-REC                      05560000
W33304            PERFORM 9000-COMMIT                                   05570000
W33304        ELSE                                                      05580000
W33304            ADD +1 TO PA-TOT-CYCLES-WITHOUT-LOCS                  05590000
W33304     ELSE                                                         05600000
W33304        ADD +1 TO PA-TOT-CYCLES-WITHOUT-LOCS                      05610000
W33304     END-IF.                                                      05620000
W33304                                                                  05630000
W33304     SET INV-ID-INDEX UP BY +1.                                   05640000
W33304                                                                  05650000
W33304******************************************************************05660000
W33304*  GET MAXIMUM LAST DKEY NBR                                      05670000
W33304******************************************************************05680000
W33304*2100-GET-MAX-DKEY.                                               05690000
W33304*                                                                 05700000
W33304*    PERFORM                                                      05710000
W33304*        WITH TEST AFTER                                          05720000
W33304*        VARYING PV-RETRY-COUNTER FROM 1 BY 1                     05730000
W33304*        UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES                05740000
W33304*           OR   SQLCODE = ZERO                                   05750000
W33304*           OR   SQLCODE = +100                                   05760000
W33304*                                                                 05770000
W33304*      EXEC SQL                                                   05780000
W33304*        SELECT MAX(LAST_DKEY_NBR)                                05790000
W33304*          INTO                                                   05800000
W33304*              :INCNTL-LAST-DKEY-NBR                              05810000
W33304*          FROM TINCNTL                                           05820000
W33304*      END-EXEC                                                   05830000
W33304*                                                                 05840000
W33304*      EVALUATE TRUE                                              05850000
W33304*          WHEN SQLWARN0 NOT EQUAL SPACE                          05860000
W33304*          WHEN SQLCODE NOT EQUAL ZERO                            05870000
W33304*              DISPLAY '****************************************' 05880000
W33304*              DISPLAY '** ABEND                              **' 05890000
W33304*              DISPLAY '** PROGRAM = INKUT137                 **' 05900000
W33304*              DISPLAY '** PARAGRAPH = 2100-GET-MAX-DKEY      **' 05910000
W33304*              DISPLAY '** SELECT TINCNTL                     **' 05920000
W33304*              DISPLAY '****************************************' 05930000
W33304*              PERFORM 9999-SQL-ABEND                             05940000
W33304*      END-EVALUATE                                               05950000
W33304*    END-PERFORM.                                                 05960000
W33304*                                                                 05970000
W33304*    IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    05980000
W33304*        SQLCODE NOT = ZERO                                       05990000
W33304*        DISPLAY '****************************************'       06000000
W33304*        DISPLAY '** MAX RETRIES EXCEEDED ON SELECT     **'       06010000
W33304*        DISPLAY '** FROM TINCNTL                       **'       06020000
W33304*        DISPLAY '** PARAGRAPH = 2100-GET-MAX-DKEY      **'       06030000
W33304*        DISPLAY '****************************************'       06040000
W33304*        PERFORM 9999-SQL-ABEND                                   06050000
W33304*    END-IF.                                                      06060000
W33304*                                                                 06070000
W33304******************************************************************06080000
W33304*  GET THE NEXT FISCAL WEEK FROM TDTATTR USING THE INPUT          06090000
W33304*  RUN DATE AS THE KEY.                                           06100000
W33304******************************************************************06110000
W33304 2200-GET-NEXT-FISCAL-WEEK.                                       06120000
W33304                                                                  06130000
W33304     MOVE IN137-CC-DATE    TO DTATTR-KY-DTE.                      06140000
W33304                                                                  06150000
W33304     PERFORM                                                      06160000
W33304         WITH TEST AFTER                                          06170000
W33304         VARYING PV-RETRY-COUNTER FROM 1 BY 1                     06180000
W33304         UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES                06190000
W33304            OR   SQLCODE = ZERO                                   06200000
W33304                                                                  06210000
W33304     EXEC SQL                                                     06220000
W33304         SELECT FSCL_WK_BEG_DTE                                   06230000
W33304               ,FSCL_WK_END_DTE                                   06240000
W34557               ,WK_IN_MN_NBR                                      06250000
W34557               ,FSCL_MN_END_DTE                                   06260000
W34557               ,NFM_END_DTE                                       06261003
W33304         INTO   :DTATTR-FSCL-WK-BEG-DTE                           06270000
W33304               ,:DTATTR-FSCL-WK-END-DTE                           06280000
W34557               ,:DTATTR-WK-IN-MN-NBR                              06290000
W34557               ,:DTATTR-FSCL-MN-END-DTE                           06300000
W34557               ,:DTATTR-NFM-END-DTE                               06301003
W33304         FROM TDTATTR                                             06310000
W33304         WHERE KY_DTE = (DATE(DAYS(:DTATTR-KY-DTE)+ 7))           06320000
W33304     END-EXEC                                                     06330000
W33304                                                                  06340000
W33304       EVALUATE TRUE                                              06350000
W33304         WHEN SQLCODE = ZERO                                      06360000
W33304             DISPLAY 'NEXT FS WK BEG DTE:' DTATTR-FSCL-WK-BEG-DTE 06370000
W33304             DISPLAY 'NEXT FS WK END DTE:' DTATTR-FSCL-WK-END-DTE 06380000
W34557             DISPLAY 'WEEK IN MONTH NBR :' DTATTR-WK-IN-MN-NBR    06390000
W34557             DISPLAY 'INP+7 FS MOEND DTE:' DTATTR-FSCL-MN-END-DTE 06400000
W34557             DISPLAY 'NEXT FS  MOEND DTE:' DTATTR-NFM-END-DTE     06401003
W34557                                                                  06410000
W34557             IF DTATTR-WK-IN-MN-NBR = PC-1                        06420000
W34557                SET PS-DURING-CLOSE-WEEK TO TRUE                  06430000
W34557             END-IF                                               06440000
W34557                                                                  06450000
W34557             PERFORM 2250-GET-NEXT-INVADJ-DATE                    06460001
W34557                                                                  06470001
W33304         WHEN SQLWARN0 NOT EQUAL SPACE                            06480000
W33304         WHEN SQLCODE NOT EQUAL ZERO                              06490000
W33304             DISPLAY '******************************************' 06500000
W33304             DISPLAY '** ABEND                                **' 06510000
W33304             DISPLAY '** PROGRAM = INKUT137                   **' 06520000
W33304             DISPLAY '** PARAGRAPH = 2200-GET-NEXT-FISCAL-WEEK**' 06530000
W33304             DISPLAY '******************************************' 06540000
W33304             PERFORM 9999-SQL-ABEND                               06550000
W33304       END-EVALUATE                                               06560000
W33304     END-PERFORM.                                                 06570000
W33304                                                                  06580000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    06590000
W33304         SQLCODE NOT = ZERO                                       06600000
W33304         DISPLAY '******************************************'     06610000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ON READING      **'     06620000
W33304         DISPLAY '** TDTATTR                              **'     06630000
W33304         DISPLAY '** PARAGRAPH = 2200-GET-NEXT-FISCAL-WEEK**'     06640000
W33304         DISPLAY '******************************************'     06650000
W33304         PERFORM 9999-SQL-ABEND                                   06660000
W33304     END-IF.                                                      06670000
W33304                                                                  06680000
W34557******************************************************************06690001
W34557*  GET THE DATE ASSOCIATED WITH NEXT INVENTORY ADJUSTMENT.        06700001
W34557*  DTATTR-NFM-END-DTE FROM PREVIOUS SELECT IS KEY ALONG WITH 5    06710003
W34557*  AS THE DAY OF THE WEEK AND 1 AS THE FIRST WEEK OF THE MONTH    06720001
W34557******************************************************************06730001
W34557 2250-GET-NEXT-INVADJ-DATE.                                       06740001
W34557                                                                  06750001
W34557     PERFORM                                                      06760001
W34557         WITH TEST AFTER                                          06770001
W34557         VARYING PV-RETRY-COUNTER FROM 1 BY 1                     06780001
W34557         UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES                06790001
W34557            OR   SQLCODE = ZERO                                   06800001
W34557                                                                  06810001
W34557     EXEC SQL                                                     06820001
W34557         SELECT KY_DTE                                            06830001
W34557         INTO   :PV-INV-ADJMT-DTE                                 06840001
W34557         FROM TDTATTR                                             06850001
W34557         WHERE FSCL_MN_END_DTE = :DTATTR-NFM-END-DTE              06860003
W34557           AND DAY_OF_WK_NBR   = '5'                              06870001
W34557           AND WK_IN_MN_NBR    = '1'                              06880001
W34557     END-EXEC                                                     06890001
W34557                                                                  06900001
W34557       EVALUATE TRUE                                              06910001
W34557         WHEN SQLCODE = ZERO                                      06920001
W34557             DISPLAY 'INV ADJUSTMENT DTE:' PV-INV-ADJMT-DTE       06930002
W34557                                                                  06940001
W34557         WHEN SQLWARN0 NOT EQUAL SPACE                            06950001
W34557         WHEN SQLCODE NOT EQUAL ZERO                              06960001
W34557             DISPLAY '******************************************' 06970001
W34557             DISPLAY '** ABEND                                **' 06980001
W34557             DISPLAY '** PROGRAM = INKUT137                   **' 06990001
W34557             DISPLAY '** PARAGRAPH = 2250-GET-NEXT-INVADJ-DATE**' 07000001
W34557             DISPLAY '******************************************' 07010001
W34557             PERFORM 9999-SQL-ABEND                               07020001
W34557       END-EVALUATE                                               07030001
W34557     END-PERFORM.                                                 07040001
W34557                                                                  07050001
W34557     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    07060001
W34557         SQLCODE NOT = ZERO                                       07070001
W34557         DISPLAY '******************************************'     07080001
W34557         DISPLAY '** MAX RETRIES EXCEEDED ON READING      **'     07090001
W34557         DISPLAY '** TDTATTR                              **'     07100001
W34557         DISPLAY '** PARAGRAPH = 2250-GET-NEXT-INVADJ-DATE**'     07110003
W34557         DISPLAY '******************************************'     07120001
W34557         PERFORM 9999-SQL-ABEND                                   07130001
W34557     END-IF.                                                      07140001
W34557                                                                  07150001
W33304******************************************************************07160001
W33304*  GET THE FISCAL MONTH END DATE RELATIVE TO THE INPUT RUN        07170000
W33304*  DATE AS THE KEY.                                               07180000
W33304******************************************************************07190000
W34557*2300-GET-FISCAL-MONTH-END.                                       07200000
W3|304*                                                                 07210000
W3|304*    MOVE IN137-CC-DATE    TO DTATTR-KY-DTE.                      07220000
W3|304*                                                                 07230000
W33304*    PERFORM                                                      07240000
W33304*        WITH TEST AFTER                                          07250000
W33304*        VARYING PV-RETRY-COUNTER FROM 1 BY 1                     07260000
W33304*        UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES                07270000
W33304*           OR   SQLCODE = ZERO                                   07280000
W33304*                                                                 07290000
W33304*    EXEC SQL                                                     07300000
W33304*        SELECT FSCL_MN_END_DTE                                   07310000
W33304*        INTO  :DTATTR-FSCL-MN-END-DTE                            07320000
W33304*        FROM TDTATTR                                             07330000
W33304*        WHERE KY_DTE = :DTATTR-KY-DTE                            07340000
W33304*    END-EXEC                                                     07350000
W33304*                                                                 07360000
W33304*      EVALUATE TRUE                                              07370000
W33304*        WHEN SQLCODE = ZERO                                      07380000
W33304*            DISPLAY 'FS MONTH END DTE  :' DTATTR-FSCL-MN-END-DTE 07390000
W33304*                                                                 07400000
W33304*        WHEN SQLWARN0 NOT EQUAL SPACE                            07410000
W33304*        WHEN SQLCODE NOT EQUAL ZERO                              07420000
W33304*            DISPLAY '******************************************' 07430000
W33304*            DISPLAY '** ABEND                                **' 07440000
W33304*            DISPLAY '** PROGRAM = INKUT137                   **' 07450000
W33304*            DISPLAY '** PARAGRAPH = 2300-GET-FISCAL-MONTH-END**' 07460000
W33304*            DISPLAY '******************************************' 07470000
W33304*            PERFORM 9999-SQL-ABEND                               07480000
W33304*      END-EVALUATE                                               07490000
W33304*    END-PERFORM.                                                 07500000
W33304*                                                                 07510000
W33304*    IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    07520000
W33304*        SQLCODE NOT = ZERO                                       07530000
W33304*        DISPLAY '******************************************'     07540000
W33304*        DISPLAY '** MAX RETRIES EXCEEDED ON READING      **'     07550000
W33304*        DISPLAY '** TDTATTR                              **'     07560000
W33304*        DISPLAY '** PARAGRAPH = 2300-GET-FISCAL-MONTH-END**'     07570000
W3|304*        DISPLAY '******************************************'     07580000
W3|304*        PERFORM 9999-SQL-ABEND                                   07590000
W3|304*    END-IF.                                                      07600000
W34557*                                                                 07610000
      ******************************************************************07620000
      *  UPDATE ACTV_IND AND LAST_DKEY_NBR.                             07630000
      ******************************************************************07640000
       2500-UPDATE-TINCNTL.                                             07650000
                                                                        07660000
W33304     MOVE +1  TO INCNTL-LAST-DKEY-NBR.                            07670000
W33304     MOVE 'Y' TO INCNTL-ACTV-IND.                                 07680000
W33304                                                                  07690000
           PERFORM                                                      07700000
               WITH TEST AFTER                                          07710000
               VARYING PV-RETRY-COUNTER FROM 1 BY 1                     07720000
               UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES                07730000
                  OR   SQLCODE = ZERO                                   07740000
                  OR   SQLCODE = +100                                   07750000
                                                                        07760000
             EXEC SQL                                                   07770000
               UPDATE TINCNTL                                           07780000
                 SET  ACTV_IND      = :INCNTL-ACTV-IND                  07790000
                     ,LAST_DKEY_NBR = :INCNTL-LAST-DKEY-NBR             07800000
                 WHERE INV_ID       = :PV-CUR-INV-ID                    07810000
             END-EXEC                                                   07820000
                                                                        07830000
             EVALUATE TRUE                                              07840000
                 WHEN SQLCODE = ZERO                                    07850000
W33304            DISPLAY 'INVENTORY CYCLE ' PV-CUR-INV-ID ' ACTIVATED' 07860000
W33304            MOVE PV-CUR-INV-ID TO PV-CYCLE-INV-ID                 07870000
W33304            ADD +1 TO PA-TOT-CYCLES-ACTIVATED                     07880000
W33304                                                                  07890000
                 WHEN SQLWARN0 NOT EQUAL SPACE                          07900000
                 WHEN SQLCODE NOT EQUAL ZERO                            07910000
                     DISPLAY '****************************************' 07920000
                     DISPLAY '** ABEND                              **' 07930000
                     DISPLAY '** PROGRAM = INKUT137                 **' 07940000
                     DISPLAY '** PARAGRAPH = 2500-UPDATE-TINCNTL    **' 07950000
                     DISPLAY '** UPDATE TINCNTL                     **' 07960000
                     DISPLAY '****************************************' 07970000
                     PERFORM 9999-SQL-ABEND                             07980000
             END-EVALUATE                                               07990000
           END-PERFORM.                                                 08000000
                                                                        08010000
           IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    08020000
               SQLCODE NOT = ZERO                                       08030000
               DISPLAY '****************************************'       08040000
               DISPLAY '** MAX RETRIES EXCEEDED ON UPDATE     **'       08050000
               DISPLAY '** OF TINCNTL                         **'       08060000
               DISPLAY '** PARAGRAPH = 2500-UPDATE-TINCNTL    **'       08070000
               DISPLAY '****************************************'       08080000
               PERFORM 9999-SQL-ABEND                                   08090000
           END-IF.                                                      08100000
                                                                        08110000
      ******************************************************************08120000
      *  WRITE A RECORD TO THE CYCLES ACTIVATED FILE                    08130000
      ******************************************************************08140000
       2600-WRITE-CYCLE-ACT-REC.                                        08150000
                                                                        08160000
           MOVE PV-CYCLE-ACT-REC TO CYCLE-ACT-REC.                      08170000
           WRITE CYCLE-ACT-REC.                                         08180000
                                                                        08190000
      ******************************************************************08200000
      *    CLOSE INVENTORY CONTROL (CNTL_CSR) CURSOR                    08210000
      ******************************************************************08220000
       3000-CLOSE-CNTL-CSR.                                             08230000
                                                                        08240000
           PERFORM                                                      08250000
               WITH TEST AFTER                                          08260000
               VARYING PV-RETRY-COUNTER                                 08270000
               FROM 1 BY 1                                              08280000
               UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               08290000
                         OR (SQLCODE = ZERO))                           08300000
                                                                        08310000
                                                                        08320000
               EXEC SQL                                                 08330000
                   CLOSE CNTL_CSR                                       08340000
               END-EXEC                                                 08350000
                                                                        08360000
               EVALUATE TRUE                                            08370000
                 WHEN SQLCODE = ZERO                                    08380000
                     CONTINUE                                           08390000
                 WHEN SQLWARN0 NOT EQUAL SPACE                          08400000
                 WHEN SQLCODE NOT EQUAL ZERO                            08410000
                     DISPLAY '**************************************'   08420000
                     DISPLAY '** ABEND                            **'   08430000
                     DISPLAY '** PROGRAM = INKUT137               **'   08440000
                     DISPLAY '** PARA = 3000-CLOSE-CNT-CSR        **'   08450000
                     DISPLAY '** CLOSE CNTL_CSR                   **'   08460000
                     DISPLAY '**************************************'   08470000
                     PERFORM 9999-SQL-ABEND                             08480000
             END-EVALUATE                                               08490000
           END-PERFORM.                                                 08500000
                                                                        08510000
           IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    08520000
               (SQLCODE NOT = ZERO)                                     08530000
               DISPLAY '****************************************'       08540000
               DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       08550000
               DISPLAY '** CLOSE CNTL_CSR                     **'       08560000
               DISPLAY '** PARA   = 3000-CLOSE-CNTL-CSR       **'       08570000
               DISPLAY '****************************************'       08580000
               PERFORM 9999-SQL-ABEND                                   08590000
           END-IF.                                                      08600000
                                                                        08610000
W33304******************************************************************08620000
W33304*    - CHECK TO BE SURE THAT A CYCLE BEING ACTIVATED HAS AT LEAST*08630000
W33304*      ONE OPEN LOC - OTHERWISE THE CYCLE SHOULD NOT BE ACTIVATED*08640000
W33304******************************************************************08650000
W33304 4000-CHECK-FOR-LOC-IN-CYCLE.                                     08660000
W33304                                                                  08670000
W33304     SET PS-CYCLE-HAS-NO-OPEN-LOCS   TO TRUE.                     08680000
W33304                                                                  08690000
W33304     PERFORM                                                      08700000
W33304         WITH TEST AFTER                                          08710000
W33304         VARYING PV-RETRY-COUNTER FROM 1 BY 1                     08720000
W33304         UNTIL   PV-RETRY-COUNTER > PC-MAX-RETRIES                08730000
W33304            OR   SQLCODE = ZERO                                   08740000
W33304            OR   SQLCODE = +100                                   08750000
W33304            OR   SQLCODE = -811                                   08760000
W33304                                                                  08770000
W33304     EXEC SQL                                                     08780000
W33304         SELECT  1                                                08790000
W33304         INTO   :PV-DUMMY                                         08800000
W33304         FROM    TINVPAR                                          08810000
W33304         WHERE   INV_ID             = :PV-CUR-INV-ID              08820000
W33304         AND     ACTL_FIN_BK_DTE    = :PC-EMPTY-DATE              08830000
W33304         AND     LOC_INV_STAT_CDE   = :PC-INITIAL                 08840000
W33304         FETCH FIRST 1 ROWS ONLY                                  08850000
W33304         WITH UR                                                  08860000
W33304     END-EXEC                                                     08870000
W33304                                                                  08880000
W33304       EVALUATE TRUE                                              08890000
W33304         WHEN SQLCODE = ZERO                                      08900000
W33304         WHEN SQLCODE = -811                                      08910000
W33304             SET PS-CYCLE-HAS-OPEN-LOCS  TO TRUE                  08920000
W33304             INITIALIZE INVPAR-LOC-NBR                            08930000
W33304                                                                  08940000
W33304         WHEN SQLCODE = +100                                      08950000
W33304             PERFORM 5000-UPD-PRIOR-BK-DELAY-LOCS                 08960000
W33304                                                                  08970000
W33304         WHEN SQLWARN0 NOT EQUAL SPACE                            08980000
W33304         WHEN SQLCODE NOT EQUAL ZERO                              08990000
W33304         WHEN SQLCODE NOT EQUAL +100                              09000000
W33304         WHEN SQLCODE NOT EQUAL -811                              09010000
W33304             DISPLAY '******************************************' 09020000
W33304             DISPLAY '** ABEND                                **' 09030000
W33304             DISPLAY '** PROGRAM = INKUT137                   **' 09040000
W33304             DISPLAY '** PARAGRAPH = 4000-CHECK-FOR-LOC-IN-CYCLE' 09050000
W33304             DISPLAY '** CNTL INV ID = ' PV-CUR-INV-ID            09060000
W33304             DISPLAY '******************************************' 09070000
W33304             PERFORM 9999-SQL-ABEND                               09080000
W33304       END-EVALUATE                                               09090000
W33304     END-PERFORM.                                                 09100000
W33304                                                                  09110000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    09120000
W33304         SQLCODE NOT = ZERO AND                                   09130000
W33304         SQLCODE NOT = +100 AND                                   09140000
W33304         SQLCODE NOT = -811                                       09150000
W33304         DISPLAY '******************************************'     09160000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ON READING      **'     09170000
W33304         DISPLAY '** TINVPAR                              **'     09180000
W33304         DISPLAY '** PARAGRAPH = 4000-CHECK-FOR-LOC-IN-CYCLE'     09190000
W33304         DISPLAY '** CNTL INV ID = ' PV-CUR-INV-ID                09200000
W33304         DISPLAY '******************************************'     09210000
W33304         PERFORM 9999-SQL-ABEND                                   09220000
W33304     END-IF.                                                      09230000
W33304                                                                  09240000
W33304******************************************************************09250000
W33304* CHECK FOR 'OPEN' LOCS IN A PRIOR ACTIVE CYCLE WHERE THE         09260000
W33304* FINCL_INV_STAT_CDE = BD (BOOK DELAYED), IF PLANNED FINCL BK DTES09270000
W33304* ARE EQUAL, UPDATE EACH LOC'S CDE TO BK (FINANCIALLY BOOKING).   09280000
W33304******************************************************************09290000
W33304 5000-UPD-PRIOR-BK-DELAY-LOCS.                                    09300000
W33304                                                                  09310000
W33304     SET PS-NOT-END-OF-PRIOR-BD-CSR TO TRUE.                      09320000
W33304                                                                  09330000
W33304     PERFORM 5005-OPEN-PRIOR-BD-CSR.                              09340000
W33304     PERFORM 5010-FETCH-PRIOR-BD-CSR                              09350000
W33304       UNTIL PS-END-OF-PRIOR-BD-CSR.                              09360000
W33304     PERFORM 5015-CLOSE-PRIOR-BD-CSR.                             09370000
W33304                                                                  09380000
W33304******************************************************************09390000
W33304*    OPEN PRIOR_BD_CSR CURSOR                                     09400000
W33304******************************************************************09410000
W33304 5005-OPEN-PRIOR-BD-CSR.                                          09420000
W33304                                                                  09430000
W33304     PERFORM                                                      09440000
W33304         WITH TEST AFTER                                          09450000
W33304         VARYING PV-RETRY-COUNTER                                 09460000
W33304         FROM 1 BY 1                                              09470000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               09480000
W33304                   OR (SQLCODE = ZERO))                           09490000
W33304                                                                  09500000
W33304                                                                  09510000
W33304         EXEC SQL                                                 09520000
W33304             OPEN PRIOR_BD_CSR                                    09530000
W33304         END-EXEC                                                 09540000
W33304                                                                  09550000
W33304         EVALUATE TRUE                                            09560000
W33304           WHEN SQLCODE = ZERO                                    09570000
W33304               CONTINUE                                           09580000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          09590000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            09600000
W33304               DISPLAY '**************************************'   09610000
W33304               DISPLAY '** ABEND                            **'   09620000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   09630000
W33304               DISPLAY '** PARA = 5005-OPEN-PRIOR-BD-CSR    **'   09640000
W33304               DISPLAY '** OPEN PRIOR_BD_CSR                **'   09650000
W33304               DISPLAY '**************************************'   09660000
W33304               PERFORM 9999-SQL-ABEND                             09670000
W33304       END-EVALUATE                                               09680000
W33304     END-PERFORM.                                                 09690000
W33304                                                                  09700000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    09710000
W33304         (SQLCODE NOT = ZERO)                                     09720000
W33304         DISPLAY '****************************************'       09730000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       09740000
W33304         DISPLAY '** OPEN PRIOR_BD_CSR                  **'       09750000
W33304         DISPLAY '** PARA = 5005-OPEN-PRIOR-BD-CSR      **'       09760000
W33304         DISPLAY '****************************************'       09770000
W33304         PERFORM 9999-SQL-ABEND                                   09780000
W33304     END-IF.                                                      09790000
W33304                                                                  09800000
W33304******************************************************************09810000
W33304*  FETCH ROWS FOR PRIOR_BD_CSR - FOR EACH HIT,                    09820000
W33304*  UPDATE THE FINCL_INV_STAT_CDE FROM BD TO BK.                   09830000
W33304******************************************************************09840000
W33304 5010-FETCH-PRIOR-BD-CSR.                                         09850000
W33304                                                                  09860000
W33304     PERFORM                                                      09870000
W33304         WITH TEST AFTER                                          09880000
W33304         VARYING PV-RETRY-COUNTER                                 09890000
W33304         FROM 1 BY 1                                              09900000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               09910000
W33304                   OR (SQLCODE = ZERO)                            09920000
W33304                   OR (SQLCODE = +100))                           09930000
W33304                                                                  09940000
W33304        EXEC SQL                                                  09950000
W33304          FETCH                                                   09960000
W33304            FROM PRIOR_BD_CSR                                     09970000
W33304            INTO                                                  09980000
W33304              :INVPAR-LOC-NBR                                     09990000
W33304             ,:INVPAR-INV-ID                                      10000000
W33304        END-EXEC                                                  10010000
W33304                                                                  10020000
W33304        EVALUATE TRUE                                             10030000
W33304            WHEN SQLCODE = ZERO                                   10040000
W33304                PERFORM 5100-UPD-BD-TO-BK-FOR-PRIORS              10050000
W33304                ADD +1 TO PA-TOT-BD-CSR-FETCHES                   10060000
W33304                                                                  10070000
W33304            WHEN SQLCODE = +100                                   10080000
W33304                SET PS-END-OF-PRIOR-BD-CSR TO TRUE                10090000
W33304                                                                  10100000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         10110000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           10120000
W33304                DISPLAY '***************************************' 10130000
W33304                DISPLAY '** ABEND                             **' 10140000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 10150000
W33304                DISPLAY '** PARA = 5010-FETCH-PRIOR-BD-CSR    **' 10160000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         10170000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                10180000
W33304                DISPLAY '**************************************'  10190000
W33304                PERFORM 9999-SQL-ABEND                            10200000
W33304        END-EVALUATE                                              10210000
W33304     END-PERFORM.                                                 10220000
W33304                                                                  10230000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    10240000
W33304         (SQLCODE NOT = ZERO) AND                                 10250000
W33304         (SQLCODE NOT = +100)                                     10260000
W33304         DISPLAY '****************************************'       10270000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       10280000
W33304         DISPLAY '** FETCH PRIOR_BD_CSR                 **'       10290000
W33304         DISPLAY '** PARA = 5010-FETCH-PRIOR-BD-CSR     **'       10300000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                10310000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       10320000
W33304         DISPLAY '****************************************'       10330000
W33304         PERFORM 9999-SQL-ABEND                                   10340000
W33304     END-IF.                                                      10350000
W33304                                                                  10360000
W33304******************************************************************10370000
W33304*    CLOSE PRIOR_BD_CSR CURSOR                                    10380000
W33304******************************************************************10390000
W33304 5015-CLOSE-PRIOR-BD-CSR.                                         10400000
W33304                                                                  10410000
W33304     PERFORM                                                      10420000
W33304         WITH TEST AFTER                                          10430000
W33304         VARYING PV-RETRY-COUNTER                                 10440000
W33304         FROM 1 BY 1                                              10450000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               10460000
W33304                   OR (SQLCODE = ZERO))                           10470000
W33304                                                                  10480000
W33304                                                                  10490000
W33304         EXEC SQL                                                 10500000
W33304             CLOSE PRIOR_BD_CSR                                   10510000
W33304         END-EXEC                                                 10520000
W33304                                                                  10530000
W33304         EVALUATE TRUE                                            10540000
W33304           WHEN SQLCODE = ZERO                                    10550000
W33304               CONTINUE                                           10560000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          10570000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            10580000
W33304               DISPLAY '**************************************'   10590000
W33304               DISPLAY '** ABEND                            **'   10600000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   10610000
W33304               DISPLAY '** PARA = 5015-CLOSE-PRIOR-BD-CSR   **'   10620000
W33304               DISPLAY '** CLOSE PRIOR_BD_CSR               **'   10630000
W33304               DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID          10640000
W33304               DISPLAY '**************************************'   10650000
W33304               PERFORM 9999-SQL-ABEND                             10660000
W33304       END-EVALUATE                                               10670000
W33304     END-PERFORM.                                                 10680000
W33304                                                                  10690000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    10700000
W33304         (SQLCODE NOT = ZERO)                                     10710000
W33304         DISPLAY '****************************************'       10720000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       10730000
W33304         DISPLAY '** CLOSE PRIOR_BD_CSR                 **'       10740000
W33304         DISPLAY '** PARA   = 5015-CLOSE-PRIOR-BD-CSR   **'       10750000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                10760000
W33304         DISPLAY '****************************************'       10770000
W33304         PERFORM 9999-SQL-ABEND                                   10780000
W33304     END-IF.                                                      10790000
W33304                                                                  10800000
W33304******************************************************************10810000
W33304*  UPDATE THE FINCL_INV_STAT_CDE TO BK FOR ANY BD'S THAT WERE PART10820000
W33304*  OF OPEN LOCS FOR PRIOR ACTIVE CYCLES - THE UPDATE USES THE     10830000
W33304*  CYCLE ID THAT WAS BROUGHT BACK BY THE PRIOR_BD_CSR INSTEAD OF  10840000
W33304*  THE INTERNAL TABLE BECAUSE THIS SHOULD ONLY BE EXECUTED WHEN   10850000
W33304*  THERE ARE NO CNTL_CSR FETCHES HENCE NO AVAILABLE CYCLES TO     10860000
W33304*  ACTIVATE.                                                      10870000
W33304******************************************************************10880000
W33304 5100-UPD-BD-TO-BK-FOR-PRIORS.                                    10890000
W33304                                                                  10900000
W33304     PERFORM                                                      10910000
W33304         WITH TEST AFTER                                          10920000
W33304         VARYING PV-RETRY-COUNTER                                 10930000
W33304         FROM 1 BY 1                                              10940000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               10950000
W33304                   OR (SQLCODE = ZERO))                           10960000
W33304                                                                  10970000
W33304        EXEC SQL                                                  10980000
W33304          UPDATE TINVPAR                                          10990000
W33304             SET FINCL_INV_STAT_CDE = :PC-WILL-BOOK               11000000
W33304               , CHG_TMST           =  CURRENT TIMESTAMP          11010000
W33304               , CHG_ID_NBR         = :PC-PROGRAM-NAME            11020000
W33304           WHERE LOC_NBR            = :INVPAR-LOC-NBR             11030000
W33304             AND INV_ID             = :INVPAR-INV-ID              11040000
W33304         END-EXEC                                                 11050000
W33304                                                                  11060000
W33304        EVALUATE TRUE                                             11070000
W33304            WHEN SQLCODE = ZERO                                   11080000
W33304                ADD +1 TO PA-TOT-BD-CSR-UPDS                      11090000
W33304                                                                  11100000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         11110000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           11120000
W33304                DISPLAY '***************************************' 11130000
W33304                DISPLAY '** ABEND                             **' 11140000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 11150000
W33304                DISPLAY '** PARA = 5100-UPD-BD-TO-BK-FOR-PRIORS*' 11160000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         11170000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                11180000
W33304                DISPLAY '**************************************'  11190000
W33304                PERFORM 9999-SQL-ABEND                            11200000
W33304        END-EVALUATE                                              11210000
W33304     END-PERFORM.                                                 11220000
W33304                                                                  11230000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    11240000
W33304         (SQLCODE NOT = ZERO) AND                                 11250000
W33304         (SQLCODE NOT = +100)                                     11260000
W33304         DISPLAY '****************************************'       11270000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       11280000
W33304         DISPLAY '** UPDATE TINVPAR                     **'       11290000
W33304         DISPLAY '** PARA = 5100-UPD-BD-TO-BK-FOR-PRIORS**'       11300000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                11310000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       11320000
W33304         DISPLAY '****************************************'       11330000
W33304         PERFORM 9999-SQL-ABEND                                   11340000
W33304     END-IF.                                                      11350000
W33304                                                                  11360000
W33304******************************************************************11370000
W33304* IF A LOC IN A CYCLE BEING ACTIVATED IS ALREADY OPEN IN          11380000
W33304* ANOTHER ACTIVE CYCLE - THEN SOFT DELETE THE LOC, AND WRITE A    11390000
W33304* RECORD TO OUT02 SO EMAIL ALERTS ARE SENT.                       11400000
W33304******************************************************************11410000
W33304 6000-CHECK-FOR-SAME-LOC.                                         11420000
W33304                                                                  11430000
W33304     SET PS-NOT-END-OF-SAME-LOC-CSR TO TRUE.                      11440000
W33304                                                                  11450000
W33304     PERFORM 6005-OPEN-SAME-LOC-CSR.                              11460000
W33304     PERFORM 6010-FETCH-SAME-LOC-CSR                              11470000
W33304       UNTIL PS-END-OF-SAME-LOC-CSR.                              11480000
W33304     PERFORM 6015-CLOSE-SAME-LOC-CSR.                             11490000
W33304                                                                  11500000
W33304******************************************************************11510000
W33304*    OPEN SAME_LOC_CSR CURSOR                                     11520000
W33304******************************************************************11530000
W33304 6005-OPEN-SAME-LOC-CSR.                                          11540000
W33304                                                                  11550000
W33304     PERFORM                                                      11560000
W33304         WITH TEST AFTER                                          11570000
W33304         VARYING PV-RETRY-COUNTER                                 11580000
W33304         FROM 1 BY 1                                              11590000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               11600000
W33304                   OR (SQLCODE = ZERO))                           11610000
W33304                                                                  11620000
W33304                                                                  11630000
W33304         EXEC SQL                                                 11640000
W33304             OPEN SAME_LOC_CSR                                    11650000
W33304         END-EXEC                                                 11660000
W33304                                                                  11670000
W33304         EVALUATE TRUE                                            11680000
W33304           WHEN SQLCODE = ZERO                                    11690000
W33304               CONTINUE                                           11700000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          11710000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            11720000
W33304               DISPLAY '**************************************'   11730000
W33304               DISPLAY '** ABEND                            **'   11740000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   11750000
W33304               DISPLAY '** PARA = 6005-OPEN-SAME-LOC-CSR    **'   11760000
W33304               DISPLAY '** OPEN SAME_LOC_CSR                **'   11770000
W33304               DISPLAY '**************************************'   11780000
W33304               PERFORM 9999-SQL-ABEND                             11790000
W33304       END-EVALUATE                                               11800000
W33304     END-PERFORM.                                                 11810000
W33304                                                                  11820000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    11830000
W33304         (SQLCODE NOT = ZERO)                                     11840000
W33304         DISPLAY '****************************************'       11850000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       11860000
W33304         DISPLAY '** OPEN SAME_LOC_CSR                  **'       11870000
W33304         DISPLAY '** PARA = 6005-OPEN-SAME-LOC-CSR      **'       11880000
W33304         DISPLAY '****************************************'       11890000
W33304         PERFORM 9999-SQL-ABEND                                   11900000
W33304     END-IF.                                                      11910000
W33304                                                                  11920000
W33304******************************************************************11930000
W33304* ANY LOCS BROUGHT BACK NEED TO BE SOFT DELETED, AND A RECORD     11940000
W33304* NEEDS TO BE WRITTEN TO OUT02 - SO EMAIL ALERTS ARE SENT.        11950000
W33304******************************************************************11960000
W33304 6010-FETCH-SAME-LOC-CSR.                                         11970000
W33304                                                                  11980000
W33304     PERFORM                                                      11990000
W33304         WITH TEST AFTER                                          12000000
W33304         VARYING PV-RETRY-COUNTER                                 12010000
W33304         FROM 1 BY 1                                              12020000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               12030000
W33304                   OR (SQLCODE = ZERO)                            12040000
W33304                   OR (SQLCODE = +100))                           12050000
W33304                                                                  12060000
W33304        EXEC SQL                                                  12070000
W33304          FETCH                                                   12080000
W33304            FROM SAME_LOC_CSR                                     12090000
W33304            INTO                                                  12100000
W33304              :INVPAR-LOC-NBR                                     12110000
W33304             ,:INVPAR-ACTL-UNIT-BK-DTE                            12120000
W33304        END-EXEC                                                  12130000
W33304                                                                  12140000
W33304        EVALUATE TRUE                                             12150000
W33304            WHEN SQLCODE = ZERO                                   12160000
W33304                ADD +1 TO PA-TOT-SAME-LOC-FETCHES                 12170000
W33304                PERFORM 6100-SOFT-DEL-LOCS-IN-PRIORS              12180000
W33304                PERFORM 6200-WRITE-SOFT-DEL-LOC-FILE              12190000
W33304                                                                  12200000
W33304            WHEN SQLCODE = +100                                   12210000
W33304                SET PS-END-OF-SAME-LOC-CSR TO TRUE                12220000
W33304                                                                  12230000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         12240000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           12250000
W33304                DISPLAY '***************************************' 12260000
W33304                DISPLAY '** ABEND                             **' 12270000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 12280000
W33304                DISPLAY '** PARA = 6010-FETCH-SAME-LOC-CSR    **' 12290000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         12300000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                12310000
W33304                DISPLAY '**************************************'  12320000
W33304                PERFORM 9999-SQL-ABEND                            12330000
W33304        END-EVALUATE                                              12340000
W33304     END-PERFORM.                                                 12350000
W33304                                                                  12360000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    12370000
W33304         (SQLCODE NOT = ZERO) AND                                 12380000
W33304         (SQLCODE NOT = +100)                                     12390000
W33304         DISPLAY '****************************************'       12400000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       12410000
W33304         DISPLAY '** FETCH SAME_LOC_CSR                 **'       12420000
W33304         DISPLAY '** PARA = 6010-FETCH-SAME-LOC-CSR     **'       12430000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                12440000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       12450000
W33304         DISPLAY '****************************************'       12460000
W33304         PERFORM 9999-SQL-ABEND                                   12470000
W33304     END-IF.                                                      12480000
W33304                                                                  12490000
W33304******************************************************************12500000
W33304*    CLOSE SAME_LOC_CSR CURSOR                                    12510000
W33304******************************************************************12520000
W33304 6015-CLOSE-SAME-LOC-CSR.                                         12530000
W33304                                                                  12540000
W33304     PERFORM                                                      12550000
W33304         WITH TEST AFTER                                          12560000
W33304         VARYING PV-RETRY-COUNTER                                 12570000
W33304         FROM 1 BY 1                                              12580000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               12590000
W33304                   OR (SQLCODE = ZERO))                           12600000
W33304                                                                  12610000
W33304                                                                  12620000
W33304         EXEC SQL                                                 12630000
W33304             CLOSE SAME_LOC_CSR                                   12640000
W33304         END-EXEC                                                 12650000
W33304                                                                  12660000
W33304         EVALUATE TRUE                                            12670000
W33304           WHEN SQLCODE = ZERO                                    12680000
W33304               CONTINUE                                           12690000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          12700000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            12710000
W33304               DISPLAY '**************************************'   12720000
W33304               DISPLAY '** ABEND                            **'   12730000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   12740000
W33304               DISPLAY '** PARA = 6015-CLOSE-SAME-LOC-CSR   **'   12750000
W33304               DISPLAY '** CLOSE SAME_LOC_CSR               **'   12760000
W33304               DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID          12770000
W33304               DISPLAY '**************************************'   12780000
W33304               PERFORM 9999-SQL-ABEND                             12790000
W33304       END-EVALUATE                                               12800000
W33304     END-PERFORM.                                                 12810000
W33304                                                                  12820000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    12830000
W33304         (SQLCODE NOT = ZERO)                                     12840000
W33304         DISPLAY '****************************************'       12850000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       12860000
W33304         DISPLAY '** CLOSE SAME_LOC_CSR                 **'       12870000
W33304         DISPLAY '** PARA   = 6015-CLOSE-SAME-LOC-CSR   **'       12880000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                12890000
W33304         DISPLAY '****************************************'       12900000
W33304         PERFORM 9999-SQL-ABEND                                   12910000
W33304     END-IF.                                                      12920000
W33304                                                                  12930000
W33304******************************************************************12940000
W33304*  SOFT DELETE LOCS IF OPEN IN ANOTHER ACTIVE CYCLE.              12950000
W33304******************************************************************12960000
W33304 6100-SOFT-DEL-LOCS-IN-PRIORS.                                    12970000
W33304                                                                  12980000
W33304     PERFORM                                                      12990000
W33304         WITH TEST AFTER                                          13000000
W33304         VARYING PV-RETRY-COUNTER                                 13010000
W33304         FROM 1 BY 1                                              13020000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               13030000
W33304                   OR (SQLCODE = ZERO))                           13040000
W33304                                                                  13050000
W33304        EXEC SQL                                                  13060000
W33304          UPDATE TINVPAR                                          13070000
W33304             SET FINCL_INV_STAT_CDE   = :PC-EXCLUDED              13080000
W33304               , UNT_BKG_STAT_CDE     = :PC-EXCLUDED              13090000
W33304               , LOC_INV_STAT_CDE     = :PC-BEF-UNIT-BK           13100000
W33304               , LOC_DEL_RSN_TXT      = :PC-LOC-ALREADY-ACTIVE    13110000
W33304               , LOC_DEL_DTE          =  CURRENT DATE             13120000
W33304               , CHG_TMST             =  CURRENT TIMESTAMP        13130000
W33304               , CHG_ID_NBR           = :PC-PROGRAM-NAME          13140000
W33304             WHERE INV_ID             = :PV-CUR-INV-ID            13150000
W33304               AND LOC_NBR            = :INVPAR-LOC-NBR           13160000
W33304         END-EXEC                                                 13170000
W33304                                                                  13180000
W33304        EVALUATE TRUE                                             13190000
W33304            WHEN SQLCODE = ZERO                                   13200000
W33304                ADD +1 TO PA-TOT-SOFT-DEL-UPDS                    13210000
W33304                                                                  13220000
W33304                MOVE INVPAR-LOC-NBR TO PV-SD-LOC                  13230000
W33304                MOVE PV-CUR-INV-ID TO PV-SD-CYCLE-INV-ID          13240000
W33304                                                                  13250000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         13260000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           13270000
W33304                DISPLAY '***************************************' 13280000
W33304                DISPLAY '** ABEND                             **' 13290000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 13300000
W33304                DISPLAY '** PARA = 6100-SOFT-DEL-LOCS-IN-PRIORS*' 13310000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         13320000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                13330000
W33304                DISPLAY '**************************************'  13340000
W33304                PERFORM 9999-SQL-ABEND                            13350000
W33304        END-EVALUATE                                              13360000
W33304     END-PERFORM.                                                 13370000
W33304                                                                  13380000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    13390000
W33304         (SQLCODE NOT = ZERO) AND                                 13400000
W33304         (SQLCODE NOT = +100)                                     13410000
W33304         DISPLAY '****************************************'       13420000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       13430000
W33304         DISPLAY '** UPDATE TINVPAR                     **'       13440000
W33304         DISPLAY '** PARA = 6100-SOFT-DEL-LOCS-IN-PRIORS**'       13450000
W33304         DISPLAY '** CYCLE INV_ID: ' INCNTL-INV-ID                13460000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       13470000
W33304         DISPLAY '****************************************'       13480000
W33304         PERFORM 9999-SQL-ABEND                                   13490000
W33304     END-IF.                                                      13500000
W33304                                                                  13510000
W33304******************************************************************13520000
W33304*  WRITE TO OUT02 TO SEND EMAIL ALERTS                            13530000
W33304******************************************************************13540000
W33304 6200-WRITE-SOFT-DEL-LOC-FILE.                                    13550000
W33304                                                                  13560000
W33304      WRITE SOFT-DEL-LOC-REC                                      13570000
W33304        FROM PV-SOFT-DEL-LOC-REC.                                 13580000
W33304                                                                  13590000
W33304      DISPLAY 'SAME LOC SOFT DEL:' PV-SOFT-DEL-LOC-REC.           13600000
W33304                                                                  13610000
W33304      ADD +1 TO PA-TOT-SOFT-DEL-RECS-WRIT.                        13620000
W33304                                                                  13630000
W33304      INITIALIZE PV-SD-LOC                                        13640000
W33304                 PV-SD-CYCLE-INV-ID.                              13650000
W33304                                                                  13660000
W33304******************************************************************13670000
W33304* UPDATE FINCL_INV_STAT_CDE FROM IN TO BK FOR ALL LOCS IN         13680000
W33304* THE CURRENT CYCLE BEING ACTIVATED.                              13690000
W33304******************************************************************13700000
W33304 7000-UPD-FINCL-INV-STAT-CDE.                                     13710000
W33304                                                                  13720000
W33304     SET PS-NOT-END-OF-STAT-CDE-CSR TO TRUE.                      13730000
W33304                                                                  13740000
W33304     PERFORM 7005-OPEN-STAT-CDE-CSR.                              13750000
W33304     PERFORM 7010-FETCH-STAT-CDE-CSR                              13760000
W33304       UNTIL PS-END-OF-STAT-CDE-CSR.                              13770000
W33304     PERFORM 7015-CLOSE-STAT-CDE-CSR.                             13780000
W33304                                                                  13790000
W33304******************************************************************13800000
W33304*    OPEN STAT_CDE_CSR CURSOR                                     13810000
W33304******************************************************************13820000
W33304 7005-OPEN-STAT-CDE-CSR.                                          13830000
W33304                                                                  13840000
W33304     PERFORM                                                      13850000
W33304         WITH TEST AFTER                                          13860000
W33304         VARYING PV-RETRY-COUNTER                                 13870000
W33304         FROM 1 BY 1                                              13880000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               13890000
W33304                   OR (SQLCODE = ZERO))                           13900000
W33304                                                                  13910000
W33304                                                                  13920000
W33304         EXEC SQL                                                 13930000
W33304             OPEN STAT_CDE_CSR                                    13940000
W33304         END-EXEC                                                 13950000
W33304                                                                  13960000
W33304         EVALUATE TRUE                                            13970000
W33304           WHEN SQLCODE = ZERO                                    13980000
W33304               CONTINUE                                           13990000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          14000000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            14010000
W33304               DISPLAY '**************************************'   14020000
W33304               DISPLAY '** ABEND                            **'   14030000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   14040000
W33304               DISPLAY '** PARA = 7005-OPEN-STAT-CDE-CSR    **'   14050000
W33304               DISPLAY '** OPEN STAT_CDE_CSR                **'   14060000
W33304               DISPLAY '**************************************'   14070000
W33304               PERFORM 9999-SQL-ABEND                             14080000
W33304       END-EVALUATE                                               14090000
W33304     END-PERFORM.                                                 14100000
W33304                                                                  14110000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    14120000
W33304         (SQLCODE NOT = ZERO)                                     14130000
W33304         DISPLAY '****************************************'       14140000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       14150000
W33304         DISPLAY '** OPEN STAT_CDE_CSR                  **'       14160000
W33304         DISPLAY '** PARA = 7005-OPEN-STAT-CDE-CSR      **'       14170000
W33304         DISPLAY '****************************************'       14180000
W33304         PERFORM 9999-SQL-ABEND                                   14190000
W33304     END-IF.                                                      14200000
W33304                                                                  14210000
W33304******************************************************************14220000
W33304* ALL LOCS IN THE CYCLE CURRENTLY BEING ACTIVATED HAVE THEIR      14230000
W33304* FINCL_INV_STAT_CDE UPDATED FROM IN TO BK.                       14240000
W34557* EXCEPT FOR STORES COUNTING DURING CLOSE WEEK. THEY ARE SET TO   14250000
W34557* BOOKING DELAYED BD BECAUSE THEY CANNOT BOOK IN THE CLOSING MONTH14260000
W34557* THEY MUST BOOK IN COMING MONTH(S).                              14270001
W33304******************************************************************14280000
W33304 7010-FETCH-STAT-CDE-CSR.                                         14290000
W33304                                                                  14300000
W33304     PERFORM                                                      14310000
W33304         WITH TEST AFTER                                          14320000
W33304         VARYING PV-RETRY-COUNTER                                 14330000
W33304         FROM 1 BY 1                                              14340000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               14350000
W33304                   OR (SQLCODE = ZERO)                            14360000
W33304                   OR (SQLCODE = +100))                           14370000
W33304                                                                  14380000
W33304        EXEC SQL                                                  14390000
W33304          FETCH                                                   14400000
W33304            FROM STAT_CDE_CSR                                     14410000
W33304            INTO                                                  14420000
W33304              :INVPAR-LOC-NBR                                     14430000
W34557             ,:INCNTL-OPN-FSCL-MN-DTE                             14440000
W33304        END-EXEC                                                  14450000
W33304                                                                  14460000
W33304        EVALUATE TRUE                                             14470000
W33304            WHEN SQLCODE = ZERO                                   14480000
W33304                ADD +1 TO PA-TOT-STAT-CSR-FETCHES                 14490000
W34557                IF PS-DURING-CLOSE-WEEK                           14500000
W34557                AND INCNTL-OPN-FSCL-MN-DTE =                      14510000
W34557                                   DTATTR-FSCL-MN-END-DTE         14520000
W34557                   PERFORM 7200-UPD-STAT-CDE-TO-BD                14530000
W34557                ELSE                                              14540000
W33304                   PERFORM 7100-UPD-STAT-CDE-TO-BK                14550000
W34557                END-IF                                            14560000
W33304                                                                  14570000
W33304            WHEN SQLCODE = +100                                   14580000
W33304                SET PS-END-OF-STAT-CDE-CSR TO TRUE                14590000
W33304                                                                  14600000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         14610000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           14620000
W33304                DISPLAY '***************************************' 14630000
W33304                DISPLAY '** ABEND                             **' 14640000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 14650000
W33304                DISPLAY '** PARA = 7010-FETCH-STAT-CDE-CSR    **' 14660000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         14670000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                14680000
W33304                DISPLAY '**************************************'  14690000
W33304                PERFORM 9999-SQL-ABEND                            14700000
W33304        END-EVALUATE                                              14710000
W33304     END-PERFORM.                                                 14720000
W33304                                                                  14730000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    14740000
W33304         (SQLCODE NOT = ZERO) AND                                 14750000
W33304         (SQLCODE NOT = +100)                                     14760000
W33304         DISPLAY '****************************************'       14770000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       14780000
W33304         DISPLAY '** FETCH STAT_CDE_CSR                 **'       14790000
W33304         DISPLAY '** PARA = 7010-FETCH-STAT-CDE-CSR     **'       14800000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                14810000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       14820000
W33304         DISPLAY '****************************************'       14830000
W33304         PERFORM 9999-SQL-ABEND                                   14840000
W33304     END-IF.                                                      14850000
W33304                                                                  14860000
W33304******************************************************************14870000
W33304*    CLOSE STAT_CDE_CSR CURSOR                                    14880000
W33304******************************************************************14890000
W33304 7015-CLOSE-STAT-CDE-CSR.                                         14900000
W33304                                                                  14910000
W33304     PERFORM                                                      14920000
W33304         WITH TEST AFTER                                          14930000
W33304         VARYING PV-RETRY-COUNTER                                 14940000
W33304         FROM 1 BY 1                                              14950000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               14960000
W33304                   OR (SQLCODE = ZERO))                           14970000
W33304                                                                  14980000
W33304                                                                  14990000
W33304         EXEC SQL                                                 15000000
W33304             CLOSE STAT_CDE_CSR                                   15010000
W33304         END-EXEC                                                 15020000
W33304                                                                  15030000
W33304         EVALUATE TRUE                                            15040000
W33304           WHEN SQLCODE = ZERO                                    15050000
W33304               CONTINUE                                           15060000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          15070000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            15080000
W33304               DISPLAY '**************************************'   15090000
W33304               DISPLAY '** ABEND                            **'   15100000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   15110000
W33304               DISPLAY '** PARA = 7015-CLOSE-STAT-CDE-CSR   **'   15120000
W33304               DISPLAY '** CLOSE STAT_CDE_CSR               **'   15130000
W33304               DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID          15140000
W33304               DISPLAY '**************************************'   15150000
W33304               PERFORM 9999-SQL-ABEND                             15160000
W33304       END-EVALUATE                                               15170000
W33304     END-PERFORM.                                                 15180000
W33304                                                                  15190000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    15200000
W33304         (SQLCODE NOT = ZERO)                                     15210000
W33304         DISPLAY '****************************************'       15220000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       15230000
W33304         DISPLAY '** CLOSE STAT_CDE_CSR                 **'       15240000
W33304         DISPLAY '** PARA   = 7015-CLOSE-STAT-CDE-CSR   **'       15250000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                15260000
W33304         DISPLAY '****************************************'       15270000
W33304         PERFORM 9999-SQL-ABEND                                   15280000
W33304     END-IF.                                                      15290000
W33304                                                                  15300000
W33304******************************************************************15310000
W33304*  UPDATE FINCL_INV_STAT_CDE FOR ALL LOCS WITHIN THE CYCLE BEING  15320000
W33304*  ACTIVATED.                                                     15330000
W33304******************************************************************15340000
W33304 7100-UPD-STAT-CDE-TO-BK.                                         15350000
W33304                                                                  15360000
W33304     PERFORM                                                      15370000
W33304         WITH TEST AFTER                                          15380000
W33304         VARYING PV-RETRY-COUNTER                                 15390000
W33304         FROM 1 BY 1                                              15400000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               15410000
W33304                   OR (SQLCODE = ZERO))                           15420000
W33304                                                                  15430000
W33304        EXEC SQL                                                  15440000
W33304          UPDATE TINVPAR                                          15450000
W33304             SET FINCL_INV_STAT_CDE = :PC-WILL-BOOK               15460000
W33304               , CHG_TMST           =  CURRENT TIMESTAMP          15470000
W33304               , CHG_ID_NBR         = :PC-PROGRAM-NAME            15480000
W33304          WHERE INV_ID              = :PV-CUR-INV-ID              15490000
W33304            AND LOC_NBR             = :INVPAR-LOC-NBR             15500000
W33304         END-EXEC                                                 15510000
W33304                                                                  15520000
W33304        EVALUATE TRUE                                             15530000
W33304            WHEN SQLCODE = ZERO                                   15540000
W34557                ADD +1 TO PA-TOT-STAT-CSR-UPDS-BK                 15550000
W33304                                                                  15560000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         15570000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           15580000
W33304                DISPLAY '***************************************' 15590000
W33304                DISPLAY '** ABEND                             **' 15600000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 15610000
W33304                DISPLAY '** PARA = 7100-UPD-STAT-CDE-TO-BK    **' 15620000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         15630000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                15640000
W33304                DISPLAY '**************************************'  15650000
W33304                PERFORM 9999-SQL-ABEND                            15660000
W33304        END-EVALUATE                                              15670000
W33304     END-PERFORM.                                                 15680000
W33304                                                                  15690000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    15700000
W33304         (SQLCODE NOT = ZERO) AND                                 15710000
W33304         (SQLCODE NOT = +100)                                     15720000
W33304         DISPLAY '****************************************'       15730000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       15740000
W33304         DISPLAY '** UPDATE TINVPAR                     **'       15750000
W33304         DISPLAY '** PARA = 7100-UPD-STAT-CDE-TO-BK     **'       15760000
W33304         DISPLAY '** CYCLE INV_ID: ' INCNTL-INV-ID                15770000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       15780000
W33304         DISPLAY '****************************************'       15790000
W33304         PERFORM 9999-SQL-ABEND                                   15800000
W33304     END-IF.                                                      15810000
W33304                                                                  15820000
W34557******************************************************************15830000
W34557*  UPDATE FINCL_INV_STAT_CDE FOR ALL LOCS WITHIN THE CYCLE BEING  15840000
W34557*  ACTIVATED TO BD IF THESE ARE COUNTING DURING CLOSE WEEK AND    15850000
W34557*  WILL NEED TO FINANCIALLY BOOK DURING THE NEXT FISCAL MONTH     15860000
W34557******************************************************************15870000
W34557 7200-UPD-STAT-CDE-TO-BD.                                         15880000
W34557                                                                  15890000
W34557     PERFORM                                                      15900000
W34557         WITH TEST AFTER                                          15910000
W34557         VARYING PV-RETRY-COUNTER                                 15920000
W34557         FROM 1 BY 1                                              15930000
W34557         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               15940000
W34557                   OR (SQLCODE = ZERO))                           15950000
W34557                                                                  15960000
W34557        EXEC SQL                                                  15970000
W34557          UPDATE TINVPAR                                          15980000
W34557             SET FINCL_INV_STAT_CDE = :PC-BOOK-DELAYED            15990000
W34557               , PLND_FIN_BK_DTE    = :PV-INV-ADJMT-DTE           16000001
W34557               , CHG_TMST           =  CURRENT TIMESTAMP          16010001
W34557               , CHG_ID_NBR         = :PC-PROGRAM-NAME            16020001
W34557          WHERE INV_ID              = :PV-CUR-INV-ID              16030001
W34557            AND LOC_NBR             = :INVPAR-LOC-NBR             16040001
W34557         END-EXEC                                                 16050001
W34557                                                                  16060001
W34557        EVALUATE TRUE                                             16070001
W34557            WHEN SQLCODE = ZERO                                   16080001
W34557                ADD +1 TO PA-TOT-STAT-CSR-UPDS-BD                 16090001
W34557                                                                  16100001
W34557            WHEN SQLWARN0 NOT EQUAL SPACE                         16110001
W34557            WHEN SQLCODE NOT EQUAL ZERO                           16120001
W34557                DISPLAY '***************************************' 16130001
W34557                DISPLAY '** ABEND                             **' 16140001
W34557                DISPLAY '** PROGRAM = INKUT137                **' 16150001
W34557                DISPLAY '** PARA = 7200-UPD-STAT-CDE-TO-BD    **' 16160001
W34557                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         16170001
W34557                DISPLAY '** LOC  :' INVPAR-LOC-NBR                16180001
W34557                DISPLAY '**************************************'  16190001
W34557                PERFORM 9999-SQL-ABEND                            16200001
W34557        END-EVALUATE                                              16210001
W34557     END-PERFORM.                                                 16220001
W34557                                                                  16230001
W34557     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    16240001
W34557         (SQLCODE NOT = ZERO) AND                                 16250001
W34557         (SQLCODE NOT = +100)                                     16260001
W34557         DISPLAY '****************************************'       16270001
W34557         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       16280001
W34557         DISPLAY '** UPDATE TINVPAR                     **'       16290001
W34557         DISPLAY '** PARA = 7200-UPD-STAT-CDE-TO-BD     **'       16300001
W34557         DISPLAY '** CYCLE INV_ID: ' INCNTL-INV-ID                16310001
W34557         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       16320001
W34557         DISPLAY '****************************************'       16330001
W34557         PERFORM 9999-SQL-ABEND                                   16340001
W34557     END-IF.                                                      16350001
W34557                                                                  16360001
W33304******************************************************************16370000
W33304* IF A LOC IN A CYCLE BEING ACTIVATED IS UNASSIGNED ('IN' FOR     16380000
W33304* SCHD_PHY_CNT_CDE - THEN SOFT DELETE THE LOC, AND WRITE A        16390000
W33304* RECORD TO OUT03 SO EMAIL ALERTS ARE SENT.                       16400000
W33304******************************************************************16410000
W33304 8000-CHECK-FOR-UNASSIGN-LOC.                                     16420000
W33304                                                                  16430000
W33304     SET PS-NOT-END-OF-UNASSIGN-CSR TO TRUE.                      16440000
W33304                                                                  16450000
W33304     PERFORM 8005-OPEN-UNASSIGN-CSR.                              16460000
W33304     PERFORM 8010-FETCH-UNASSIGN-CSR                              16470000
W33304       UNTIL PS-END-OF-UNASSIGN-CSR.                              16480000
W33304     PERFORM 8015-CLOSE-UNASSIGN-CSR.                             16490000
W33304                                                                  16500000
W33304******************************************************************16510000
W33304*    OPEN UNASSIGN_CSR CURSOR                                     16520000
W33304******************************************************************16530000
W33304 8005-OPEN-UNASSIGN-CSR.                                          16540000
W33304                                                                  16550000
W33304     PERFORM                                                      16560000
W33304         WITH TEST AFTER                                          16570000
W33304         VARYING PV-RETRY-COUNTER                                 16580000
W33304         FROM 1 BY 1                                              16590000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               16600000
W33304                   OR (SQLCODE = ZERO))                           16610000
W33304                                                                  16620000
W33304                                                                  16630000
W33304         EXEC SQL                                                 16640000
W33304             OPEN UNASSIGN_CSR                                    16650000
W33304         END-EXEC                                                 16660000
W33304                                                                  16670000
W33304         EVALUATE TRUE                                            16680000
W33304           WHEN SQLCODE = ZERO                                    16690000
W33304               CONTINUE                                           16700000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          16710000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            16720000
W33304               DISPLAY '**************************************'   16730000
W33304               DISPLAY '** ABEND                            **'   16740000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   16750000
W33304               DISPLAY '** PARA = 8005-OPEN-UNASSIGN-CSR    **'   16760000
W33304               DISPLAY '** OPEN UNASSIGN_CSR                **'   16770000
W33304               DISPLAY '**************************************'   16780000
W33304               PERFORM 9999-SQL-ABEND                             16790000
W33304       END-EVALUATE                                               16800000
W33304     END-PERFORM.                                                 16810000
W33304                                                                  16820000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    16830000
W33304         (SQLCODE NOT = ZERO)                                     16840000
W33304         DISPLAY '****************************************'       16850000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       16860000
W33304         DISPLAY '** OPEN UNASSIGN_CSR                  **'       16870000
W33304         DISPLAY '** PARA = 8005-OPEN-UNASSIGN-CSR      **'       16880000
W33304         DISPLAY '****************************************'       16890000
W33304         PERFORM 9999-SQL-ABEND                                   16900000
W33304     END-IF.                                                      16910000
W33304                                                                  16920000
W33304******************************************************************16930000
W33304* ANY LOCS BROUGHT BACK NEED TO BE SOFT DELETED, AND A RECORD     16940000
W33304* NEEDS TO BE WRITTEN TO OUT03 - SO EMAIL ALERTS ARE SENT.        16950000
W33304******************************************************************16960000
W33304 8010-FETCH-UNASSIGN-CSR.                                         16970000
W33304                                                                  16980000
W33304     PERFORM                                                      16990000
W33304         WITH TEST AFTER                                          17000000
W33304         VARYING PV-RETRY-COUNTER                                 17010000
W33304         FROM 1 BY 1                                              17020000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               17030000
W33304                   OR (SQLCODE = ZERO)                            17040000
W33304                   OR (SQLCODE = +100))                           17050000
W33304                                                                  17060000
W33304        EXEC SQL                                                  17070000
W33304          FETCH                                                   17080000
W33304            FROM UNASSIGN_CSR                                     17090000
W33304            INTO                                                  17100000
W33304              :INVPAR-LOC-NBR                                     17110000
W33304        END-EXEC                                                  17120000
W33304                                                                  17130000
W33304        EVALUATE TRUE                                             17140000
W33304            WHEN SQLCODE = ZERO                                   17150000
W33304                ADD +1 TO PA-TOT-UNASSIGN-FETCHES                 17160000
W33304                PERFORM 8100-SOFT-DEL-UNASSIGN-LOCS               17170000
W33304                PERFORM 8200-WRITE-UNASSIGN-LOC-FILE              17180000
W33304                                                                  17190000
W33304            WHEN SQLCODE = +100                                   17200000
W33304                SET PS-END-OF-UNASSIGN-CSR TO TRUE                17210000
W33304                                                                  17220000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         17230000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           17240000
W33304                DISPLAY '***************************************' 17250000
W33304                DISPLAY '** ABEND                             **' 17260000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 17270000
W33304                DISPLAY '** PARA = 8010-FETCH-UNASSIGN-CSR    **' 17280000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         17290000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                17300000
W33304                DISPLAY '**************************************'  17310000
W33304                PERFORM 9999-SQL-ABEND                            17320000
W33304        END-EVALUATE                                              17330000
W33304     END-PERFORM.                                                 17340000
W33304                                                                  17350000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    17360000
W33304         (SQLCODE NOT = ZERO) AND                                 17370000
W33304         (SQLCODE NOT = +100)                                     17380000
W33304         DISPLAY '****************************************'       17390000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       17400000
W33304         DISPLAY '** FETCH UNASSIGN_CSR                 **'       17410000
W33304         DISPLAY '** PARA = 8010-FETCH-UNASSIGN-CSR     **'       17420000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                17430000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       17440000
W33304         DISPLAY '****************************************'       17450000
W33304         PERFORM 9999-SQL-ABEND                                   17460000
W33304     END-IF.                                                      17470000
W33304                                                                  17480000
W33304******************************************************************17490000
W33304*    CLOSE UNASSIGN_CSR CURSOR                                    17500000
W33304******************************************************************17510000
W33304 8015-CLOSE-UNASSIGN-CSR.                                         17520000
W33304                                                                  17530000
W33304     PERFORM                                                      17540000
W33304         WITH TEST AFTER                                          17550000
W33304         VARYING PV-RETRY-COUNTER                                 17560000
W33304         FROM 1 BY 1                                              17570000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               17580000
W33304                   OR (SQLCODE = ZERO))                           17590000
W33304                                                                  17600000
W33304                                                                  17610000
W33304         EXEC SQL                                                 17620000
W33304             CLOSE UNASSIGN_CSR                                   17630000
W33304         END-EXEC                                                 17640000
W33304                                                                  17650000
W33304         EVALUATE TRUE                                            17660000
W33304           WHEN SQLCODE = ZERO                                    17670000
W33304               CONTINUE                                           17680000
W33304           WHEN SQLWARN0 NOT EQUAL SPACE                          17690000
W33304           WHEN SQLCODE NOT EQUAL ZERO                            17700000
W33304               DISPLAY '**************************************'   17710000
W33304               DISPLAY '** ABEND                            **'   17720000
W33304               DISPLAY '** PROGRAM = INKUT137               **'   17730000
W33304               DISPLAY '** PARA = 8015-CLOSE-UNASSIGN-CSR   **'   17740000
W33304               DISPLAY '** CLOSE UNASSIGN_CSR               **'   17750000
W33304               DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID          17760000
W33304               DISPLAY '**************************************'   17770000
W33304               PERFORM 9999-SQL-ABEND                             17780000
W33304       END-EVALUATE                                               17790000
W33304     END-PERFORM.                                                 17800000
W33304                                                                  17810000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    17820000
W33304         (SQLCODE NOT = ZERO)                                     17830000
W33304         DISPLAY '****************************************'       17840000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       17850000
W33304         DISPLAY '** CLOSE UNASSIGN_CSR                 **'       17860000
W33304         DISPLAY '** PARA   = 8015-CLOSE-UNASSIGN-CSR   **'       17870000
W33304         DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID                17880000
W33304         DISPLAY '****************************************'       17890000
W33304         PERFORM 9999-SQL-ABEND                                   17900000
W33304     END-IF.                                                      17910000
W33304                                                                  17920000
W33304******************************************************************17930000
W33304*  SOFT DELETE LOCS IF UNASSIGNED (SCHD_PHY_CDT_CDE = 'IN')       17940000
W33304******************************************************************17950000
W33304 8100-SOFT-DEL-UNASSIGN-LOCS.                                     17960000
W33304                                                                  17970000
W33304     PERFORM                                                      17980000
W33304         WITH TEST AFTER                                          17990000
W33304         VARYING PV-RETRY-COUNTER                                 18000000
W33304         FROM 1 BY 1                                              18010000
W33304         UNTIL ((PV-RETRY-COUNTER > PC-MAX-RETRIES)               18020000
W33304                   OR (SQLCODE = ZERO))                           18030000
W33304                                                                  18040000
W33304        EXEC SQL                                                  18050000
W33304          UPDATE TINVPAR                                          18060000
W33304             SET FINCL_INV_STAT_CDE   = :PC-EXCLUDED              18070000
W33304               , UNT_BKG_STAT_CDE     = :PC-EXCLUDED              18080000
W33304               , LOC_INV_STAT_CDE     = :PC-BEF-UNIT-BK           18090000
W33304               , LOC_DEL_RSN_TXT      = :PC-LOC-UNASSIGNED        18100000
W33304               , LOC_DEL_DTE          =  CURRENT DATE             18110000
W33304               , CHG_TMST             =  CURRENT TIMESTAMP        18120000
W33304               , CHG_ID_NBR           = :PC-PROGRAM-NAME          18130000
W33304             WHERE INV_ID             = :PV-CUR-INV-ID            18140000
W33304               AND LOC_NBR            = :INVPAR-LOC-NBR           18150000
W33304         END-EXEC                                                 18160000
W33304                                                                  18170000
W33304        EVALUATE TRUE                                             18180000
W33304            WHEN SQLCODE = ZERO                                   18190000
W33304                ADD +1 TO PA-TOT-SOFT-DEL-UPDS                    18200000
W33304                                                                  18210000
W33304                MOVE INVPAR-LOC-NBR TO PV-SD-LOC                  18220000
W33304                MOVE PV-CUR-INV-ID TO PV-SD-CYCLE-INV-ID          18230000
W33304                                                                  18240000
W33304            WHEN SQLWARN0 NOT EQUAL SPACE                         18250000
W33304            WHEN SQLCODE NOT EQUAL ZERO                           18260000
W33304                DISPLAY '***************************************' 18270000
W33304                DISPLAY '** ABEND                             **' 18280000
W33304                DISPLAY '** PROGRAM = INKUT137                **' 18290000
W33304                DISPLAY '** PARA = 8100-SOFT-DEL-UNASSIGN-LOCS**' 18300000
W33304                DISPLAY '** CYCLE INV_ID: ' PV-CUR-INV-ID         18310000
W33304                DISPLAY '** LOC  :' INVPAR-LOC-NBR                18320000
W33304                DISPLAY '**************************************'  18330000
W33304                PERFORM 9999-SQL-ABEND                            18340000
W33304        END-EVALUATE                                              18350000
W33304     END-PERFORM.                                                 18360000
W33304                                                                  18370000
W33304     IF  PV-RETRY-COUNTER > PC-MAX-RETRIES AND                    18380000
W33304         (SQLCODE NOT = ZERO) AND                                 18390000
W33304         (SQLCODE NOT = +100)                                     18400000
W33304         DISPLAY '****************************************'       18410000
W33304         DISPLAY '** MAX RETRIES EXCEEDED ATTEMPTING TO **'       18420000
W33304         DISPLAY '** UPDATE TINVPAR                     **'       18430000
W33304         DISPLAY '** PARA = 8100-SOFT-DEL-UNASSIGN-LOCS **'       18440000
W33304         DISPLAY '** CYCLE INV_ID: ' INCNTL-INV-ID                18450000
W33304         DISPLAY '** LOC  :' INVPAR-LOC-NBR                       18460000
W33304         DISPLAY '****************************************'       18470000
W33304         PERFORM 9999-SQL-ABEND                                   18480000
W33304     END-IF.                                                      18490000
W33304                                                                  18500000
W33304******************************************************************18510000
W33304*  WRITE TO OUT03 TO SEND EMAIL ALERTS                            18520000
W33304******************************************************************18530000
W33304 8200-WRITE-UNASSIGN-LOC-FILE.                                    18540000
W33304                                                                  18550000
W33304      WRITE SOFT-DEL-UNASSIGN-REC                                 18560000
W33304        FROM PV-SOFT-DEL-LOC-REC.                                 18570000
W33304                                                                  18580000
W33304      DISPLAY 'UNASSIGN LOC SOFT DEL:' PV-SOFT-DEL-LOC-REC.       18590000
W33304                                                                  18600000
W33304      ADD +1 TO PA-TOT-SOFT-DEL-UN-RECS-WRIT.                     18610000
W33304                                                                  18620000
W33304      INITIALIZE PV-SD-LOC                                        18630000
W33304                 PV-SD-CYCLE-INV-ID.                              18640000
W33304                                                                  18650000
W33304******************************************************************18660000
W33304* COMMIT THE UNIT OF WORK WHICH IS ALL UPDATES ASSOCIATED WITH    18670000
W33304* EACH CYCLE ID BEING ACTIVATED (HIT ON THE CNTL_CSR).            18680000
W33304******************************************************************18690000
W33304 9000-COMMIT.                                                     18700000
W33304                                                                  18710000
W33304     EXEC SQL                                                     18720000
W33304         COMMIT                                                   18730000
W33304     END-EXEC.                                                    18740000
W33304                                                                  18750000
W33304     ADD +1 TO PA-TOT-COMMITS.                                    18760000
W33304                                                                  18770000
      ******************************************************************18780000
      *    - CLOSE THE FILES PROCESSED BY PROGRAM                      *18790000
      *    - DISPLAY OUTPUT RECORD COUNTS                              *18800000
      ******************************************************************18810000
       9000-EOJ-ROUTINE.                                                18820000
                                                                        18830000
           CLOSE DATE-CNTL-FILE                                         18840000
W33304           CYCLE-ACT-FILE                                         18850000
W33304           SOFT-DEL-LOC-FILE                                      18860000
W33304           SOFT-DEL-UNASSIGN-FILE.                                18870000
                                                                        18880000
           DISPLAY SPACE.                                               18890000
W33304     DISPLAY '*********************************************'      18900000
W33304     DISPLAY '***      INKUT137 SUMMARY STATISTICS      ***'      18910000
W33304     DISPLAY '*********************************************'      18920000
W33304     DISPLAY '*********************************************'      18930000
W33304     DISPLAY 'SOFT DEL SAME LOC RECS WRIT...:'                    18940000
W33304                                      PA-TOT-SOFT-DEL-RECS-WRIT   18950000
W33304     DISPLAY 'SOFT DEL UNASSIGN RECS WRIT...:'                    18960000
W33304                                      PA-TOT-SOFT-DEL-UN-RECS-WRIT18970000
W33304     DISPLAY 'CYCLES W/O LOCATIONS..:' PA-TOT-CYCLES-WITHOUT-LOCS 18980000
W33304     DISPLAY 'CYCLES ACTIVATED......:' PA-TOT-CYCLES-ACTIVATED    18990000
W33304     DISPLAY 'TOTAL COMMITS.........:' PA-TOT-COMMITS             19000000
W33304     DISPLAY 'CNTL CSR FETCHES......:' PA-TOT-CNTL-CSR-FETCHES    19010000
W33304     DISPLAY 'BD CSR FETCHES........:' PA-TOT-BD-CSR-FETCHES      19020000
W33304     DISPLAY 'BD CSR UPDATES........:' PA-TOT-BD-CSR-UPDS         19030000
W33304     DISPLAY 'SAME LOC FETCHES......:' PA-TOT-SAME-LOC-FETCHES    19040000
W33304     DISPLAY 'UNASSIGN LOC FETCHES..:' PA-TOT-UNASSIGN-FETCHES    19050000
W33304     DISPLAY 'SOFT DELETE UPDATES...:' PA-TOT-SOFT-DEL-UPDS       19060000
W33304     DISPLAY 'STAT CSR FETCHES......:' PA-TOT-STAT-CSR-FETCHES    19070000
W34557     DISPLAY 'STAT CSR UPDATES..BK..:' PA-TOT-STAT-CSR-UPDS-BK    19080000
W34557     DISPLAY 'STAT CSR UPDATES..BD..:' PA-TOT-STAT-CSR-UPDS-BD    19090000
W33304     DISPLAY '*********************************************'.     19100000
W33304                                                                  19110000
           DISPLAY SPACE.                                               19120000
                                                                        19130000
      ******************************************************************19140000
      * ABEND THE PROGRAM IN THE EVENT THAT AN SQL ERROR OR WARNING     19150000
      * CODE OCCURS.                                                    19160000
      ******************************************************************19170000
       9999-SQL-ABEND.                                                  19180000
                                                                        19190000
           DISPLAY '** ABEND     **'.                                   19200000
           DISPLAY '** PROGRAM   ** = ' PC-PROGRAM-NAME.                19210000
           DISPLAY '** PARAGRAPH ** = ' PV-PARAGRAPH-NAME.              19220000
           DISPLAY '** OPERATION ** = ' PV-DB2-OPER-ATTEMPTED.          19230000
                                                                        19240000
      *--------------------------------------------------------------*  19250000
      * THIS COPY BOOK MEMBER CONTAINS THE PROCEDURE DIVISION STATE-    19260000
      * MENTS THAT ARE REQUIRED TO UTILIZE THE DB2 ABEND MODULE         19270000
      * 'DSNTIAR' AND CONVERT THE SQLCA INFORMATION INTO A READABLE     19280000
      * FORMAT.                                                         19290000
      *--------------------------------------------------------------*  19300000
                                                                        19310000
           COPY DPPD004.                                                19320000
                                                                        19330000
           MOVE +4013 TO ABEND-CODE.                                    19340000
           CALL 'ILBOABN0' USING ABEND-CODE.                            19350000
                                                                        19360000
